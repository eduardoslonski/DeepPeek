[
  "# The set of languages for which implicit dependencies are needed:\nset(CMAKE_DEPENDS_LANGUAGES\n  \"CXX\"\n  )\n# The set of files for implicit dependencies of each language:\nset(CMAKE_DEPENDS_CHECK_CXX\n  \"/home/felix/Workspaces/Playground/Cpp/hello_cpp/src/main.cpp\" \"/home/felix/Workspaces/Playground/Cpp/hello_cpp/cmake-build-debug/CMakeFiles/hello_cpp.dir/src/main.cpp.o\"\n  )\nset(CMAKE_CXX_COMPILER_ID \"GNU\")\n\n# The include file search paths:\nset(CMAKE_CXX_TARGET_INCLUDE_PATH\n  )\n\n# Targets to which this target links.\nset(CMAKE_TARGET_LINKED_INFO_FILES\n  )\n\n# Fortran module output directory.\nset(CMAKE_Fortran_TARGET_MODULE_DIR \"\")\n",
  "<?php\n/**\n * This file is part of the Zimbra API in PHP library.\n *\n * \u00a9 Nguyen Van Nguyen <nguyennv1981@gmail.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Zimbra\\Admin\\Request;\n\nuse Zimbra\\Enum\\GalMode;\nuse Zimbra\\Struct\\AccountSelector as Account;\n\n/**\n * AddGalSyncDataSource request class\n * Add a GalSync data source\n *\n * @package    Zimbra\n * @subpackage Admin\n * @category   Request\n * @author     Nguyen Van Nguyen - nguyennv1981@gmail.com\n * @copyright  Copyright \u00a9 2013 by Nguyen Van Nguyen.\n */\nclass AddGalSyncDataSource extends BaseAttr\n{\n    /**\n     * Name of the data source\n     * @var string\n     */\n    private $_name;\n\n    /**\n     * Name of pre-existing domain\n     * @var string\n     */\n    private $_domain;\n\n    /**\n     * GalMode type\n     * @var GalMode\n     */\n    private $_type;\n\n    /**\n     * Contact folder name\n     * @var string\n     */\n    private $_folder;\n\n    /**\n     * The account\n     * @var Account\n     */\n    private $_account;\n\n    /**\n     * Constructor method for AddGalSyncDataSource\n     * @param string $name\n     * @param string $domain\n     * @param GalMode $type\n     * @param string $folder\n     * @param Account $account\n     * @return self\n     */\n    public function __construct(\n        Account $account,\n        $name,\n        $domain,\n        GalMode $type,\n        $folder = null,\n        array $attrs = [])\n    {\n        parent::__construct($attrs);\n        $this->setChild('account', $account);\n        $this->setProperty('name', trim($name));\n        $this->setProperty('domain', trim($domain));\n        $this->setProperty('type', $type);\n        if(null!== $folder)\n        {\n            $this->setProperty('folder', trim($folder));\n        }\n    }\n\n    /**\n     * Gets the account.\n     *\n     * @return Account\n     */\n    public function getAccount()\n    {\n        return $this->getChild('account');\n    }\n\n    /**\n     * Sets the account.\n     *\n     * @param  Account $account\n     * @return self\n     */\n    public function setAccount(Account $account)\n    {\n        return $this->setChild('account', $account);\n    }\n\n    /**\n     * Gets name\n     *\n     * @return string\n     */\n    public function getName()\n    {\n        return $this->getProperty('name');\n    }\n\n    /**\n     * Sets name\n     *\n     * @param  string $name\n     * @return self\n     */\n    public function setName($name)\n    {\n        return $this->setProperty('name', trim($name));\n    }\n\n    /**\n     * Gets domain\n     *\n     * @return string\n     */\n    public function getDomain()\n    {\n        return $this->getProperty('domain');\n    }\n\n    /**\n     * Sets domain\n     *\n     * @param  string $domain\n     * @return self\n     */\n    public function setDomain($domain)\n    {\n        return $this->setProperty('domain', trim($domain));\n    }\n\n    /**\n     * Gets type\n     *\n     * @return GalMode\n     */\n    public function getType()\n    {\n        return $this->getProperty('type');\n    }\n\n    /**\n     * Sets type\n     *\n     * @param  GalMode $type\n     * @return self\n     */\n    public function setType(GalMode $type)\n    {\n        return $this->setProperty('type', $type);\n    }\n\n    /**\n     * Gets folder\n     *\n     * @return string\n     */\n    public function getFolder()\n    {\n        return $this->getProperty('folder');\n    }\n\n    /**\n     * Sets folder\n     *\n     * @param  string $folder\n     * @return self\n     */\n    public function setFolder($folder)\n    {\n        return $this->setProperty('folder', trim($folder));\n    }\n}\n",
  "/*******************************************************************************\n * Copyright (c) 2011, 2016 Eurotech and/or its affiliates\n *\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     Eurotech\n *******************************************************************************/\n/**\n * \n */\n/**\n * Provides services to manage interfaces and their priorities in the static routing table.\n *\n */\npackage org.eclipse.kura.net.route;",
  "<?php\n\n/**\n * DO NOT EDIT!\n * This file was automatically generated via bin/generate-validator-spec.php.\n */\n\nnamespace AmpProject\\Validator\\Spec\\Tag;\n\nuse AmpProject\\Format;\nuse AmpProject\\Tag as Element;\nuse AmpProject\\Validator\\Spec\\AttributeList;\nuse AmpProject\\Validator\\Spec\\Identifiable;\nuse AmpProject\\Validator\\Spec\\SpecRule;\nuse AmpProject\\Validator\\Spec\\Tag;\n\n/**\n * Tag class Femerge.\n *\n * @package ampproject/amp-toolbox.\n *\n * @property-read string $tagName\n * @property-read array<string> $attrLists\n * @property-read string $specUrl\n * @property-read string $mandatoryAncestor\n * @property-read array<string> $htmlFormat\n */\nfinal class Femerge extends Tag implements Identifiable\n{\n    /**\n     * ID of the tag.\n     *\n     * @var string\n     */\n    const ID = 'FEMERGE';\n\n    /**\n     * Array of spec rules.\n     *\n     * @var array\n     */\n    const SPEC = [\n        SpecRule::TAG_NAME => Element::FEMERGE,\n        SpecRule::ATTR_LISTS => [\n            AttributeList\\SvgCoreAttributes::ID,\n            AttributeList\\SvgFilterPrimitiveAttributes::ID,\n            AttributeList\\SvgPresentationAttributes::ID,\n            AttributeList\\SvgStyleAttr::ID,\n        ],\n        SpecRule::SPEC_URL => 'https://amp.dev/documentation/guides-and-tutorials/learn/spec/amphtml/#svg',\n        SpecRule::MANDATORY_ANCESTOR => Element::SVG,\n        SpecRule::HTML_FORMAT => [\n            Format::AMP,\n            Format::AMP4ADS,\n        ],\n    ];\n}\n",
  "package amf.semantic\n\nimport amf.apicontract.client.scala.model.domain.api.Api\nimport amf.apicontract.client.scala.{AMFConfiguration, APIConfiguration, RAMLConfiguration}\nimport amf.core.client.scala.config.RenderOptions\nimport amf.core.client.scala.errorhandling.UnhandledErrorHandler\nimport amf.core.client.scala.model.document.Document\nimport org.scalatest.funsuite.AsyncFunSuite\nimport org.scalatest.matchers.should.Matchers\n\nimport scala.concurrent.{ExecutionContext, Future}\n\nclass SemanticExtensionOnTraitsTest extends AsyncFunSuite with Matchers {\n\n  override implicit def executionContext: ExecutionContext = ExecutionContext.Implicits.global\n\n  private val basePath: String = \"file://amf-cli/shared/src/test/resources/semantic/traits_and_rt/\"\n\n  test(\"Semantic Extensions should be parsed when applying a Resource Type or Trait\") {\n    for {\n      config <- getConfig(\"dialect.yaml\", RAMLConfiguration.RAML10())\n      client <- Future.successful(config.baseUnitClient())\n      parsed <- client.parse(basePath + \"api.raml\")\n      unit   <- Future.successful(client.transform(parsed.baseUnit).baseUnit)\n    } yield {\n      val endpoints = unit.asInstanceOf[Document].encodes.asInstanceOf[Api].endPoints\n      endpoints.head.operations.head.responses.head.graph\n       .containsProperty(\"http://a.ml/vocab#pagination\") shouldBe true\n      endpoints(1).operations.head.responses.head.graph.containsProperty(\"http://a.ml/vocab#pagination\") shouldBe true\n    }\n  }\n\n  private def getConfig(\n      dialect: String,\n      baseConfig: AMFConfiguration = APIConfiguration.API()\n  ): Future[AMFConfiguration] = {\n    baseConfig\n     .withRenderOptions(RenderOptions().withPrettyPrint.withCompactUris)\n     .withErrorHandlerProvider(() => UnhandledErrorHandler)\n     .withDialect(s\"$basePath\" + dialect)\n  }\n}\n",
  "import Icon from './Icon'\n\nconst OverdueClockIcon = () => (\n  <Icon fill>\n    <svg viewBox=\"0 0 32 32\">\n      <g>\n        <path\n          d=\"M12.7,3.3c0,0.3,0.3,0.7,0.7,0.7h1.7v2.3c0,0.3,0.3,0.7,0.7,0.7s0.7-0.3,0.7-0.7V3.9h1.7\n    c0.3,0,0.7-0.3,0.7-0.7s-0.3-0.7-0.7-0.7h-4.8C13,2.6,12.7,2.9,12.7,3.3z\"\n        />\n        <path\n          d=\"M17.7,18.8c0-0.7-0.4-1.3-1-1.7l-0.1-0.1v-4.7c0-0.3-0.3-0.7-0.7-0.7s-0.7,0.3-0.7,0.7v4.7l-0.1,0.1\n    c-0.7,0.4-1,1-1,1.7c0,1,0.8,1.8,1.8,1.8S17.7,19.8,17.7,18.8z\"\n        />\n        <path\n          d=\"M26.6,18.7c0-2.6-1-5.2-2.8-7.1l-0.2-0.2l1.6-1.6c0.1-0.1,0.2-0.3,0.2-0.5s-0.1-0.3-0.2-0.5\n    c-0.3-0.3-0.7-0.3-0.9,0l-1.6,1.6l-0.2-0.1c-1.8-1.5-4.1-2.3-6.5-2.3C10,8.1,5.2,12.9,5.2,18.7S10,29.4,15.9,29.4\n    C21.8,29.4,26.6,24.6,26.6,18.7z M15.9,28.1c-5.1,0-9.3-4.2-9.3-9.3c0-5.1,4.2-9.3,9.3-9.3c5.1,0,9.3,4.2,9.3,9.3\n    C25.2,23.9,21,28.1,15.9,28.1z\"\n        />\n      </g>\n    </svg>\n  </Icon>\n)\n\nexport default OverdueClockIcon\n",
  "//\n// For the brave souls who get this far: You are the chosen ones,\n// the valiant knights of programming who toil away, without rest,\n// fixing our most awful code.  To you, true saviors, kings of men,\n// I say this: never gonna give you up, never gonna let you down,\n// never gonna run around and desert you.  Never gonna make you cry,\n// never gonna say goodbye.  Never gonna tell a lie and hurt you.\n//\n\npackage voicegateway\n\nimport (\n\t\"context\"\n\t\"strings\"\n\t\"sync\"\n\t\"time\"\n\n\t\"github.com/diamondburned/arikawa/discord\"\n\t\"github.com/diamondburned/arikawa/utils/json\"\n\t\"github.com/diamondburned/arikawa/utils/moreatomic\"\n\t\"github.com/diamondburned/arikawa/utils/wsutil\"\n\t\"github.com/pkg/errors\"\n)\n\nconst (\n\t// Version represents the current version of the Discord Gateway Gateway this package uses.\n\tVersion = \"4\"\n)\n\nvar (\n\tErrNoSessionID = errors.New(\"no sessionID was received\")\n\tErrNoEndpoint  = errors.New(\"no endpoint was received\")\n)\n\n// State contains state information of a voice gateway.\ntype State struct {\n\tGuildID   discord.Snowflake\n\tChannelID discord.Snowflake\n\tUserID    discord.Snowflake\n\n\tSessionID string\n\tToken     string\n\tEndpoint  string\n}\n\n// Gateway represents a Discord Gateway Gateway connection.\ntype Gateway struct {\n\tstate State // constant\n\n\tmutex sync.RWMutex\n\tready ReadyEvent\n\n\tws *wsutil.Websocket\n\n\tTimeout   time.Duration\n\treconnect moreatomic.Bool\n\n\tEventLoop *wsutil.PacemakerLoop\n\n\t// ErrorLog will be called when an error occurs (defaults to log.Println)\n\tErrorLog func(err error)\n\t// AfterClose is called after each close. Error can be non-nil, as this is\n\t// called even when the Gateway is gracefully closed. It's used mainly for\n\t// reconnections or any type of connection interruptions. (defaults to noop)\n\tAfterClose func(err error)\n\n\t// Filled by methods, internal use\n\twaitGroup *sync.WaitGroup\n}\n\nfunc New(state State) *Gateway {\n\treturn &Gateway{\n\t\tstate:      state,\n\t\tTimeout:    wsutil.WSTimeout,\n\t\tErrorLog:   wsutil.WSError,\n\t\tAfterClose: func(error) {},\n\t}\n}\n\n// TODO: get rid of\nfunc (c *Gateway) Ready() ReadyEvent {\n\tc.mutex.RLock()\n\tdefer c.mutex.RUnlock()\n\n\treturn c.ready\n}\n\n// Open shouldn't be used, but JoinServer instead.\nfunc (c *Gateway) Open() error {\n\t// https://discordapp.com/developers/docs/topics/voice-connections#establishing-a-voice-websocket-connection\n\tvar endpoint = \"wss://\" + strings.TrimSuffix(c.state.Endpoint, \":80\") + \"/?v=\" + Version\n\n\twsutil.WSDebug(\"Connecting to voice endpoint (endpoint=\" + endpoint + \")\")\n\tc.ws = wsutil.New(endpoint)\n\n\t// Create a new context with a timeout for the connection.\n\tctx, cancel := context.WithTimeout(context.Background(), c.Timeout)\n\tdefer cancel()\n\n\t// Connect to the Gateway Gateway.\n\tif err := c.ws.Dial(ctx); err!= nil {\n\t\treturn errors.Wrap(err, \"failed to connect to voice gateway\")\n\t}\n\n\twsutil.WSDebug(\"Trying to start...\")\n\n\t// Try to start or resume the connection.\n\tif err := c.start(); err!= nil {\n\t\treturn err\n\t}\n\n\treturn nil\n}\n\n// Start.\nfunc (c *Gateway) start() error {\n\tif err := c.__start(); err!= nil {\n\t\twsutil.WSDebug(\"Start failed: \", err)\n\n\t\t// Close can be called with the mutex still acquired here, as the\n\t\t// pacemaker hasn't started yet.\n\t\tif err := c.Close(); err!= nil {\n\t\t\twsutil.WSDebug(\"Failed to close after start fail: \", err)\n\t\t}\n\t\treturn err\n\t}\n\n\treturn nil\n}\n\n// this function blocks until READY.\nfunc (c *Gateway) __start() error {\n\t// Make a new WaitGroup for use in background loops:\n\tc.waitGroup = new(sync.WaitGroup)\n\n\tch := c.ws.Listen()\n\n\t// Wait for hello.\n\twsutil.WSDebug(\"Waiting for Hello..\")\n\n\tvar hello *HelloEvent\n\t_, err := wsutil.AssertEvent(<-ch, HelloOP, &hello)\n\tif err!= nil {\n\t\treturn errors.Wrap(err, \"error at Hello\")\n\t}\n\n\twsutil.WSDebug(\"Received Hello\")\n\n\t// https://discordapp.com/developers/docs/topics/voice-connections#establishing-a-voice-websocket-connection\n\t// Turns out Hello is sent right away on connection start.\n\tif!c.reconnect.Get() {\n\t\tif err := c.Identify(); err!= nil {\n\t\t\treturn errors.Wrap(err, \"failed to identify\")\n\t\t}\n\t} else {\n\t\tif err := c.Resume(); err!= nil {\n\t\t\treturn errors.Wrap(err, \"failed to resume\")\n\t\t}\n\t}\n\t// This bool is because we should only try and Resume once.\n\tc.reconnect.Set(false)\n\n\t// Wait for either Ready or Resumed.\n\terr = wsutil.WaitForEvent(c, ch, func(op *wsutil.OP) bool {\n\t\treturn op.Code == ReadyOP || op.Code == ResumedOP\n\t})\n\tif err!= nil {\n\t\treturn errors.Wrap(err, \"failed to wait for Ready or Resumed\")\n\t}\n\n\t// Create an event loop executor.\n\tc.EventLoop = wsutil.NewLoop(hello.HeartbeatInterval.Duration(), ch, c)\n\n\t// Start the event handler, which also handles the pacemaker death signal.\n\tc.waitGroup.Add(1)\n\n\tc.EventLoop.RunAsync(func(err error) {\n\t\tc.waitGroup.Done() // mark so Close() can exit.\n\t\twsutil.WSDebug(\"Event loop stopped.\")\n\n\t\tif err!= nil {\n\t\t\tc.ErrorLog(err)\n\t\t\tc.Reconnect()\n\t\t\t// Reconnect should spawn another eventLoop in its Start function.\n\t\t}\n\t})\n\n\twsutil.WSDebug(\"Started successfully.\")\n\n\treturn nil\n}\n\n// Close.\nfunc (c *Gateway) Close() error {\n\t// Check if the WS is already closed:\n\tif c.waitGroup == nil && c.EventLoop.Stopped() {\n\t\twsutil.WSDebug(\"Gateway is already closed.\")\n\n\t\tc.AfterClose(nil)\n\t\treturn nil\n\t}\n\n\t// If the pacemaker is running:\n\tif!c.EventLoop.Stopped() {\n\t\twsutil.WSDebug(\"Stopping pacemaker...\")\n\n\t\t// Stop the pacemaker and the event handler\n\t\tc.EventLoop.Stop()\n\n\t\twsutil.WSDebug(\"Stopped pacemaker.\")\n\t}\n\n\twsutil.WSDebug(\"Waiting for WaitGroup to be done.\")\n\n\t// This should work, since Pacemaker should signal its loop to stop, which\n\t// would also exit our event loop. Both would be 2.\n\tc.waitGroup.Wait()\n\n\t// Mark g.waitGroup as empty:\n\tc.waitGroup = nil\n\n\twsutil.WSDebug(\"WaitGroup is done. Closing the websocket.\")\n\n\terr := c.ws.Close()\n\tc.AfterClose(err)\n\treturn err\n}\n\nfunc (c *Gateway) Reconnect() error {\n\twsutil.WSDebug(\"Reconnecting...\")\n\n\t// Guarantee the gateway is already closed. Ignore its error, as we're\n\t// redialing anyway.\n\tc.Close()\n\n\tc.reconnect.Set(true)\n\n\t// Condition: err == ErrInvalidSession:\n\t// If the connection is rate limited (documented behavior):\n\t// https://discordapp.com/developers/docs/topics/gateway#rate-limiting\n\n\tif err := c.Open(); err!= nil {\n\t\treturn errors.Wrap(err, \"failed",
  "\n---\nlayout: \"intersight\"\npage_title: \"Intersight: intersight_iaas_device_status\"\nsidebar_current: \"docs-intersight-data-source-iaas-device-status\"\ndescription: |-\nList of infra accounts managed by UCSD.\n---\n\n# Data Source: intersight_iaas._device_status\nList of infra accounts managed by UCSD.\n## Argument Reference\nThe following arguments can be used to get data of already created objects in Intersight appliance:\n* `account_name`:(string) The UCSD infra account name. Account Name is created when UCSD admin adds any new infra account (Physical/Virtual/Compute/Network) to be managed by UCSD. \n* `account_type`:(string) The UCSD Infra Account type. \n* `category`:(string) The UCSD Infra Account category. \n* `claim_status`:(string) Describes if the device is claimed in Intersight or not.* `Unknown` - If UCS Director managed account claim status information is unknown.* `Yes` - If UCS Director managed account is claimed in Intersight.* `No` - If UCS Director managed account is not claimed in Intersight.* `Not Applicable` - If UCS Director managed account is not capable of providing claim status information. \n* `class_id`:(string) The fully-qualified name of the instantiated, concrete type.This property is used as a discriminator to identify the type of the payloadwhen marshaling and unmarshaling data.The enum values provides the list of concrete types that can be instantiated from this abstract type. \n* `connection_status`:(string) Describes about the connection status between the UCSD and the actual end device. \n* `device_model`:(string) Describes about the device model. \n* `device_vendor`:(string) Describes about the device vendor/manufacturer of the device. \n* `device_version`:(string) Describes about the current firmware version running on the device. \n* `ip_address`:(string) The IPAddress of the device. \n* `moid`:(string) The unique identifier of this Managed Object instance. \n* `object_type`:(string) The fully-qualified name of the instantiated, concrete type.The value should be the same as the 'ClassId' property.The enum values provides the list of concrete types that can be instantiated from this abstract type. \n* `pod`:(string) Describes about the pod to which this device belongs to in UCSD. \n* `pod_type`:(string) Describes about the podType of Pod to which this device belongs to in UCSD. \n",
  "<?php\n\nnamespace RectorPrefix20210919;\n\nif (\\interface_exists('Tx_Extbase_Persistence_QOM_EquiJoinConditionInterface')) {\n    return;\n}\ninterface Tx_Extbase_Persistence_QOM_EquiJoinConditionInterface\n{\n}\n\\class_alias('Tx_Extbase_Persistence_QOM_EquiJoinConditionInterface', 'Tx_Extbase_Persistence_QOM_EquiJoinConditionInterface', \\false);\n",
  "import boto3\n\n\nclass IntelligentAssistantService:\n    def __init__(self, assistant_name):\n        self.client = boto3.client('lex-runtime')\n        self.assistant_name = assistant_name\n\n    def send_user_text(self, user_id, input_text):\n        response = self.client.post_text(\n            botName = self.assistant_name,\n            botAlias = 'Production',\n            userId = user_id,\n            inputText = input_text\n        )\n\n        return response['message']\n",
  "//=====================================================================\n// Copyright (c) 2007-2014    Advanced Micro Devices, Inc. All rights reserved.\n// Copyright (c) 2004-2006    ATI Technologies Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files(the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions :\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//=====================================================================\n\n#ifndef COMMON_H\n#define COMMON_H\n\n#ifndef NO_LEGACY_BEHAVIOR\n#include \"UseDefinitions.h\"\n#endif\n#include \"Compressonator.h\"\n\n#include <stdio.h>\n#include <assert.h>\n#include <math.h>\n#include <float.h>\n#include <string>\n#include <cstring>\n\n#pragma warning( push )\n#pragma warning(disable:4244)\n#include <half.h>\n#pragma warning( pop )\n\n#ifndef CMP_MAKEFOURCC\n#define CMP_MAKEFOURCC(ch0, ch1, ch2, ch3)                              \\\n   ((CMP_DWORD)(CMP_BYTE)(ch0) | ((CMP_DWORD)(CMP_BYTE)(ch1) << 8) |   \\\n   ((CMP_DWORD)(CMP_BYTE)(ch2) << 16) | ((CMP_DWORD)(CMP_BYTE)(ch3) << 24 ))\n#endif\n\ntypedef half                 CMP_HALF;   ///< A 16-bit floating point number class\n\n#define QT_KEY_SPACE        0x20        // Qt::Key_Space = 0x20\n#define QT_KEY_M            0x4d        // Qt::Key_M = 0x4d\n\n#define UNREFERENCED_PARAMETER(P) (P)\n\ntypedef struct\n{\n    double    SSIM;            // Structural Similarity Index: Average of RGB Channels\n    double    SSIM_Red;\n    double    SSIM_Green;\n    double    SSIM_Blue;\n\n    double    PSNR;            // Peak Signal to Noise Ratio: Average of RGB Channels\n    double    PSNR_Red;\n    double    PSNR_Green;\n    double    PSNR_Blue;\n\n    double    MSE;             // Mean Square Error\n\n} CMP_ANALYSIS_DATA;\n\n\nstruct CMP_CMIPS\n{\n    // User Configurable Print lines \n    int m_infolevel = 1;\n    void PrintError(const char* Format,... );\n    void(*PrintLine)(char *) = nullptr;\n    void Print(const char* Format,...);\n\n    CMP_MipLevel* GetMipLevel(const CMP_MipSet* pMipSet, CMP_INT nMipLevel, CMP_INT nFaceOrSlice=0);\n\n    int  GetMaxMipLevels(CMP_INT nWidth, CMP_INT nHeight, CMP_INT nDepth);\n\n    bool AllocateMipLevelTable(CMP_MipLevelTable** ppMipLevelTable, CMP_INT nMaxMipLevels, CMP_TextureType textureType, CMP_INT nDepth, CMP_INT& nLevelsToAllocate);\n\n    bool AllocateAllMipLevels(CMP_MipLevelTable* pMipLevelTable, CMP_TextureType /*textureType*/, CMP_INT nLevelsToAllocate);\n\n    bool AllocateMipSet(CMP_MipSet* pMipSet, CMP_ChannelFormat channelFormat, CMP_TextureDataType textureDataType, CMP_TextureType textureType, CMP_INT nWidth, CMP_INT nHeight, CMP_INT nDepth);\n\n    bool AllocateMipLevelData(CMP_MipLevel* pMipLevel, CMP_INT nWidth, CMP_INT nHeight, CMP_ChannelFormat channelFormat, CMP_TextureDataType textureDataType);\n    bool AllocateCompressedMipLevelData(CMP_MipLevel* pMipLevel, CMP_INT nWidth, CMP_INT nHeight, CMP_DWORD dwSize);\n\n    void FreeMipSet(CMP_MipSet* pMipSet);\n\n    bool AllocateCompressedDestBuffer(CMP_MipSet *SourceTexture, CMP_FORMAT format, CMP_MipSet *DestTexture);\n\n    // Progress\n    bool m_canceled = false;\n    void(*SetProgressValue)(unsigned int, bool *canceled) = nullptr;\n    void SetProgress(unsigned int value);\n\n};\n\n#define MAX_MIPLEVEL_SUPPORTED 20\n#define MIPSET_PIN_DATA_ID     \"69AEBDB3-5F67-436D-82C2-724FDC4972DA\"\n\ntypedef CMP_CMIPS   CMIPS;\n\n\nextern void(*PrintStatusLine)(char *);\nextern void PrintInfo(const char* Format,...);\n\n#define MINIMUM_WEIGHT_VALUE 0.01f\n\n#define AMD_CODEC_QUALITY_DEFAULT 0.05f  ///< This is the default value set for all Codecs (Gives fast Processing and lowest Quality)\n#define AMD_CODEC_EXPOSURE_DEFAULT 0     ///< This is the default value set for exposure value of hdr/exr input image\n#define AMD_CODEC_DEFOG_DEFAULT 0        ///< This is the default value set for defog value of hdr/exr input image\n#define AMD_CODEC_KNEELOW_DEFAULT 0      ///< This is the default value set for kneelow value of hdr/exr input image\n#define AMD_CODEC_KNEEHIGH_DEFAULT 5     ///< This is the default value set for kneehigh value of hdr/exr input image\n#define AMD_CODEC_GAMMA_DEFAULT 2.2f     ///< This is the default value set for gamma value of hdr/exr input image\n\n#define CMP_MESH_COMP_LEVEL 7         ///< This is the default value set for draco compress level for mesh compression\n#define CMP_MESH_POS_BITS 14          ///< This is the default value set for draco position quantization bits for mesh compression\n#define CMP_MESH_TEXC_BITS 12         ///< This is the default value set for draco texture coordinate quantization bits for mesh compression\n#define CMP_MESH_NORMAL_BITS 10       ///< This is the default value set for draco normal quantization bits for mesh compression\n#define CMP_MESH_GENERIC_BITS 8       ///< This is the default value set for draco generic quantization bits for mesh compression\n\n#ifdef USE_3DMESH_OPTIMIZE\n#define CMP_MESH_VCACHE_SIZE_DEFAULT 16       ///< This is the default value set for vertices cache size for mesh optimization\n#define CMP_MESH_VCACHEFIFO_SIZE_DEFAULT 0    ///< This is the default value set for vertices FIFO cache size for mesh optimization\n#define CMP_MESH_OVERDRAW_ACMR_DEFAULT 1.05f  ///< This is the default value set for ACMR(average cache miss ratio) for mesh overdraw optimization\n#define CMP_MESH_SIMPLIFYMESH_LOD_DEFAULT 0   ///< This is the default value set for LOD(level of details) for mesh simplication.\n#define CMP_MESH_OPTVFETCH_DEFAULT 1          ///< This is the default boolean value set for vertices fetch mesh optimization.\n#endif\n\n#define CMP_MIPSET_MAX_DEPTHS            6       ///< Maximum Depth (CubeMap Frames) for each MipSet\n\nstruct CMP_MAP_BYTES_SET\n{\n    CMP_BYTE B0;\n    CMP_BYTE B1;\n    CMP_BYTE B2;\n    CMP_BYTE B3;\n};\n\ntypedef enum _",
  "# paperNER\n\n![](https://img.shields.io/badge/Status-Done-brightgreen.svg)\n\nNamed Entity Recognition for Scientific Paper(PDF)\n\n# Extractor/Algorithm\n\nBERT + BiLSTM + CRF\n\nBERT is based on [SCIBERT](https://github.com/allenai/scibert)\n\nDataset is [SCIERC](http://nlp.cs.washington.edu/sciIE/) which is taken from 12 AI conference/workshop proceedings in four AI communities, from the semantic scholar corpus.\n\n## Files\n\n- main.py: Users input pdf file path then it will generate NER outputs.\n- toolkit\n  - pdf_parser: pdf2xml\n- save: BERT model for NER(**User should add their own model file to here such as.h5 files.**)\n \n## Requirements (python packages)\n\n- Python 3.6+\n- tensorflow<2.0\n- [kashgari](https://github.com/BrikerMan/Kashgari)\n\n\nVersions need to be compatible with each other.\n\n```bash\npip install tensorflow<2.0\npip install kashgari>=1.0.0,<2.0.0\n```\n\n## API(optional)\npaperNERapi.py\n\n- fastapi\n- uvicorn\n- pydantic\n\n\n## Result Preview\n\n![](NER-json.png)\n\n\n```bash\n\"C:\\Program Files\\Python36\\python.exe\" C:/Users/xy644/Desktop/scibert-project/paperNER/main.py\ninput file path: ELG.pdf\n--------------------------------\ntext: In order to discover the evolutionary patterns and logics of events, we propose an eventcentric knowledge graph \u2014 Event Logic Graph (ELG) and the framework to construct ELG.\nlabels [{'entity': 'OtherScientificTerm','start': 5, 'end': 6, 'value': 'evolutionary patterns'}, {'entity': 'OtherScientificTerm','start': 8, 'end': 8, 'value': 'logics'}, {'entity': 'OtherScientificTerm','start': 10, 'end': 10, 'value': 'events,'}, {'entity': 'Method','start': 14, 'end': 16, 'value': 'eventcentric knowledge graph'}, {'entity': 'Method','start': 18, 'end': 18, 'value': 'Event'}]\n\tvalue: evolutionary patterns \t OtherScientificTerm\n\tvalue: logics \t OtherScientificTerm\n\tvalue: events, \t OtherScientificTerm\n\tvalue: eventcentric knowledge graph \t Method\n\tvalue: Event \t Method\n--------------------------------\ntext: ELG is a directed cyclic graph, whose nodes are events, and edges stand for the sequential (the same meaning with \u201ctemporal\u201d), causal, conditional or hypernym-hyponym (\u201cis-a\u201d) relations between events.\nlabels [{'entity': 'OtherScientificTerm','start': 3, 'end': 3, 'value': 'directed'}, {'entity': 'Method','start': 4, 'end': 5, 'value': 'cyclic graph,'}, {'entity': 'OtherScientificTerm','start': 7, 'end': 7, 'value': 'nodes'}, {'entity': 'OtherScientificTerm','start': 9, 'end': 9, 'value': 'events,'}, {'entity': 'OtherScientificTerm','start': 15, 'end': 15, 'value':'sequential'}]\n\tvalue: directed \t OtherScientificTerm\n\tvalue: cyclic graph, \t Method\n\tvalue: nodes \t OtherScientificTerm\n\tvalue: events, \t OtherScientificTerm\n\tvalue: sequential \t OtherScientificTerm\n--------------------------------\ntext: Essentially, ELG is an event logic knowledge base, which can reveal evolutionary patterns and development logics of real world events.\nlabels [{'entity': 'Method','start': 1, 'end': 1, 'value': 'ELG'}, {'entity': 'Method','start': 4, 'end': 7, 'value': 'event logic knowledge base,'}, {'entity': 'OtherScientificTerm','start': 11, 'end': 12, 'value': 'evolutionary patterns'}, {'entity': 'OtherScientificTerm','start': 14, 'end': 15, 'value': 'development logics'}]\n\tvalue: ELG \t Method\n\tvalue: event logic knowledge base, \t Method\n\tvalue: evolutionary patterns \t OtherScientificTerm\n\tvalue: development logics \t OtherScientificTerm\n--------------------------------\ntext: ELG is a directed cyclic graph, whose nodes are events, and edges stand for the sequential, causal, conditional or hypernym-hyponym relations between events.\nlabels [{'entity': 'OtherScientificTerm','start': 3, 'end': 5, 'value': 'directed cyclic graph,'}, {'entity': 'OtherScientificTerm','start': 7, 'end': 7, 'value': 'nodes'}, {'entity': 'OtherScientificTerm','start': 9, 'end': 9, 'value': 'events,'}, {'entity': 'OtherScientificTerm','start': 15, 'end': 18, 'value':'sequential, causal, conditional or'}]\n\tvalue: directed cyclic graph, \t OtherScientificTerm\n\tvalue: nodes \t OtherScientificTerm\n\tvalue: events, \t OtherScientificTerm\n\tvalue: sequential, causal, conditional or \t OtherScientificTerm\n--------------------------------\ntext: While (go, somewhere), (do, the things) and (eat) are unreasonable or incomplete event representations, as their semantics are too vague to be understood.\nlabels [{'entity': 'Method','start': 1, 'end': 2, 'value': '(go, somewhere),'}, {'entity': 'Method','start': 5, 'end': 5, 'value': 'things)'}, {'entity': 'OtherScientificTerm','start': 6, 'end': 7, 'value': 'and (eat)'}, {'entity': 'OtherScientificTerm','start': 9, 'end': 12, 'value': 'unreasonable or incomplete event'}, {'entity': 'OtherScientificTerm','start': 16, 'end': 16, 'value':'semantics'}]\n\tvalue: (go, somewhere), \t Method\n\tvalue: things) \t Method\n\tvalue: and (eat) \t OtherScientificTerm\n\tvalue: unreasonable or incomplete event \t OtherScientificTerm\n\tvalue: semantics \t OtherScientificTerm\n--------------------------------\ntext: \u201d (have, lunch), (pay, the bill) and (leave the restaurant) compose a sequential event chain.\nlabels [{'entity': 'OtherScientificTerm','start': 5, 'end': 5, 'value': 'bill)'}, {'entity': 'OtherScientificTerm','start': 9, 'end': 9, 'value':'restaurant)'}, {'entity': 'OtherScientificTerm','start': 12, 'end': 13, 'value':'sequential event'}]\n\tvalue: bill) \t OtherScientificTerm\n\tvalue: restaurant) \t OtherScientificTerm\n\tvalue: sequential event \t OtherScientificTerm\n--------------------------------\ntext: binations between frequency-based features may provide extra information that is useful for sequential relation and direction classification, shown in Table 2 (R1 to R11).\nlabels [{'entity': 'OtherScientificTerm','start': 0, 'end': 0, 'value': 'binations'}, {'entity': 'OtherScientificTerm','start': 2, 'end': 3, 'value': 'frequency-based features'}, {'entity': 'OtherScientificTerm','start': 12, 'end': 13, 'value':'sequential relation'}, {'entity': 'OtherScientificTerm','start': 15, 'end': 16, 'value': 'direction classification,'}]\n\tvalue: binations \t OtherScientificTerm\n\tvalue: frequency-based features \t OtherScientificTerm\n\tvalue: sequential relation \t OtherScientificTerm\n\tvalue: direction classification, \t OtherScientificTerm\n--------------------------------\ninput file path: \n```\n",
  "from maskit.datasets import load_data\n\n\nclass TestLoadData:\n    def test_iris_basic(self):\n        num_classes = 3\n        data = load_data(\n            \"iris\",\n            train_size=120,\n            test_size=30,\n            target_length=num_classes,  # num of classes\n        )\n\n        assert len(data.train_data) == 120\n        assert len(data.train_target) == 120\n        assert len(data.test_data) == 30\n        assert len(data.test_target) == 30\n\n        assert len(data.train_data[0]) == 4\n        assert len(data.train_target[0]) == num_classes\n        assert len(data.test_data[0]) == 4\n        assert len(data.test_target[0]) == num_classes\n\n    def test_iris_empty_test(self):\n        data = load_data(\n            \"iris\",\n            train_size=150,\n        )\n\n        assert len(data.train_data) == 150\n        assert len(data.train_target) == 150\n        assert len(data.test_data) == 0\n        assert len(data.test_target) == 0\n        assert data.train_target.shape[1] == 16\n        assert data.test_target.shape[1] == 16\n\n    def test_circles_basic(self):\n        data = load_data(\"circles\", train_size=150, test_size=50, target_length=2)\n\n        assert len(data.train_data) == 150\n        assert len(data.train_target) == 150\n        assert len(data.test_data) == 50\n        assert len(data.test_target) == 50\n\n        assert len(data.train_data[0]) == 2\n        assert len(data.train_target[0]) == 2\n        assert len(data.test_data[0]) == 2\n        assert len(data.test_target[0]) == 2\n\n    def test_mnist_basic(self):\n        classes = (6, 7, 8)\n        data = load_data(\n            \"mnist\",\n            wires=5,\n            classes=classes,\n            train_size=150,\n            test_size=50,\n            target_length=len(classes),\n        )\n\n        assert len(data.train_data) == 150\n        assert len(data.train_target) == 150\n        assert len(data.test_data) == 50\n        assert len(data.test_target) == 50\n\n        assert len(data.train_data[0]) == 5\n        assert len(data.train_target[0]) == len(classes)\n        assert len(data.test_data[0]) == 5\n        assert len(data.test_target[0]) == len(classes)\n",
  "---\ntimestamp: \"2022-02-23 00:40:24 UTC Wed\"\nmeshery-component: meshery-istio\nmeshery-component-version: edge\nmeshery-server-version: \"v0.6.0-rc-5a\"\nk8s-distro: minikube\nk8s-version: \"v1.20.1\"\nservice-mesh: istio\nservice-mesh-version: \"1.11.7\"\ntests:\n  istiod: \"Running\"\n  istio-egressgateway: \"Running\"\n  istio-ingressgateway:  \"Running\"\noverall-status: \"passing\"\n---\n",
  "class GraduationRequirements < ActiveRecord::Migration\n  def change\n    create_table :courses do |t|\n      t.string :name, null: false\n      t.index :name, unique: true\n      t.timestamps null: false\n    end\n\n    execute \"insert into courses (name, created_at, updated_at) values ('Fullstack', now(), now())\"\n\n    add_column :cohorts, :course_id, :integer\n    add_index :cohorts, :course_id\n\n    execute \"update cohorts set course_id = (select id from courses limit 1)\"\n\n    change_column_null :cohorts, :course_id, false\n\n    create_table :graduation_requirements do |t|\n      t.belongs_to :course, null: false\n      t.string :name, null: false\n      t.index [:course_id, :name], unique: true\n      t.string :description\n      t.integer :position, null: false\n      t.timestamps null: false\n    end\n  end\nend\n",
  "@extends('layouts.boutique')\n@extends('admin.sections')\n\n\n@section('content')\n<section class=\"content\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"box\">\n        <div class=\"box-header with-border\">\n          <h3 class=\"box-title\"><b>ORDERS</b></h3>\n\n          <div class=\"box-tools\">\n            <div class=\"input-group input-group-sm\" style=\"width: 150px;\">\n              <input type=\"text\" name=\"table_search\" class=\"form-control pull-right\" placeholder=\"Search\">\n\n              <div class=\"input-group-btn\">\n                <button type=\"submit\" class=\"btn btn-default\"><i class=\"fa fa-search\"></i></button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <!-- /.box-header -->\n        <div class=\"box-body\">\n          <table class=\"table table-hover\" id=\"orders-table\">\n            <thead>\n            <tr>\n              <th class=\"align-center\">Order ID</th>\n              <th>Order Type</th>\n              <th>Boutique Name</th>\n              <th class=\"align-center\">Status</th>\n              <th class=\"align-center\">Total</th>\n              <th></th>\n              <!-- <th></th> -->\n            </tr>\n            </thead>\n            @foreach($orders as $order)\n            <tr>\n              <td class=\"align-center\">{{$order['id']}}</td>\n              @if($order['cartID']!= null)\n              <td><b>PURCHASE</b></td>\n              @elseif($order['rentID']!= null)\n              <td><b>RENT</b></td>\n              @elseif($order['mtoID']!= null)\n              <td><b>MTO</b></td>\n              @elseif($order['biddingID']!= null)\n              <td><b>BIDDING</b></td>\n              @endif\n              <td>{{$order->boutique['boutiqueName']}}</td>\n              <td class=\"align-center\">\n                <span class=\"label label-success\">{{$order['status']}}</span>\n              </td>\n              <td class=\"align-center\">P{{$order['total']}}</td>\n              <td><a href=\"{{url('admin-forpickups/'.$order['id'])}}\" class=\"btn btn-default btn-sm\">View Order</a></td>\n            </tr>\n            @endforeach\n          </table>\n        </div>\n        <div class=\"box-footer\" style=\"text-align: right;\">\n        </div>\n      </div>\n      <!-- /.box -->\n    </div>\n  </div>\n</section>\n\n<style type=\"text/css\">\n  \n.align-center{text-align: center;}\n.align-right{text-align: right;}\n\n</style>\n      \n@endsection\n\n@section('scripts')\n<script type=\"text/javascript\">\n\n$('.orders').addClass(\"active\");\n$('.archives').addClass(\"active\");  \n\n$(function () {\n  $('#orders-table').DataTable({\n    'paging'      : true,\n    'lengthChange': true,\n   'searching'   : false,\n    'ordering'    : true,\n    'info'        : true,\n    'autoWidth'   : false\n  })\n});\n\n</script>\n\n@endsection",
  "package algorithmTool.formula.exception;\n\n/**\n * \u8fd0\u7b97\u5f0f\u5f02\u5e38\u7c7b\n * @description \u63d0\u4f9b\u51e0\u4e2a\u542b\u6709\u4e0d\u540c\u7684\u8fd0\u7b97\u5f0f\u5f02\u5e38\u4fe1\u606f\u7684\u5f02\u5e38\u5bf9\u8c61\n * @author BlazingPhoenix\n *\n */\npublic class FormulaException extends Exception {\n\n\t//\u9664\u96f6\u5f02\u5e38\n\tprivate static FormulaException divideByZeroException = new FormulaException(\"\u9664\u96f6\u5f02\u5e38\uff1a\u7b97\u5f0f\u4e2d\u67d0\u4e2a\u9664\u6cd5\u8fd0\u7b97\u7684\u9664\u6570\u4e3a0\uff0c\u8bf7\u68c0\u67e5\uff01\");\n\t//\u5b9a\u4e49\u57df\u5f02\u5e38\n\tprivate static FormulaException definitionDomainException = new FormulaException(\"\u5b9a\u4e49\u57df\u8d8a\u754c\uff1a\u8bf7\u68c0\u67e5\u6839\u53f7\u6216\u6b21\u65b9\u8fd0\u7b97\u7b49\u662f\u5426\u6b63\u786e\uff01\");\n\t//\u8fd0\u7b97\u7b26\u5f02\u5e38\uff0c\u67d0\u4e2a\u8fd0\u7b97\u7b26\u540e\u7d27\u63a5\u7740\u4e58\u9664\u53f7\u6216\u8fd0\u7b97\u5f0f\u5f00\u5934\u4e3a\u4e58\u9664\u53f7\n\tprivate static FormulaException characterException = new FormulaException(\"\u8fd0\u7b97\u7b26\u4f7f\u7528\u9519\u8bef\uff0c\u8bf7\u68c0\u67e5\uff01\");\n\t//\u8fd0\u7b97\u5f0f\u4e2d\u5b58\u5728\u65e0\u6cd5\u8bc6\u522b\u7684\u7b26\u53f7\uff0c\u6216\u6570\u5b57\u4e2d\u5b58\u5728\u591a\u4e2a\u5c0f\u6570\u70b9\uff0c\u6700\u7ec8\u5bfc\u81f4\u6570\u5b57\u5b57\u7b26\u4e32\u65e0\u6cd5\u8f6c\u5316\u4e3a\u6570\u5b57\n\tprivate static FormulaException figureException = new FormulaException(\"\u8fd0\u7b97\u5f0f\u9519\u8bef\uff1a\u5b58\u5728\u65e0\u6cd5\u8bc6\u522b\u7684\u7b26\u53f7\uff01\");\n\t//\u5de6\u53f3\u62ec\u53f7\u4e0d\u5339\u914d\n\tprivate static FormulaException bracketMismatchException = new FormulaException(\"\u5de6\u53f3\u62ec\u53f7\u4e0d\u5339\u914d\uff0c\u8bf7\u68c0\u67e5\uff01\"); \n\t//\u4e0d\u660e\u539f\u56e0\u7684\u5f02\u5e38\uff0c\u6700\u53ef\u80fd\u662f\u56e0\u4e3a\u5de6\u53f3\u62ec\u53f7\u4e0d\u5339\u914d\n\tprivate static FormulaException unKnowException = new FormulaException(\"\u8fd0\u7b97\u5f0f\u4e0d\u660e\u9519\u8bef\uff1a\u53ef\u80fd\u662f\u5de6\u53f3\u62ec\u53f7\u4e0d\u5339\u914d\uff01\");\n\t\n\t/*\u65e0\u53c2\u6784\u9020\u51fd\u6570*/\n\tprivate FormulaException(){\n\t\tsuper();\n\t}   \n\t\n\t//\u7528\u8be6\u7ec6\u4fe1\u606f\u6307\u5b9a\u4e00\u4e2a\u5f02\u5e38\n\tprivate FormulaException(String message){\n\t\tsuper(message);\n\t}\n\t    \n\t\n\t//\u7528\u6307\u5b9a\u7684\u8be6\u7ec6\u4fe1\u606f\u548c\u539f\u56e0\u6784\u9020\u4e00\u4e2a\u65b0\u7684\u5f02\u5e38\n\tprivate FormulaException(String message, Throwable cause){\n\t\tsuper(message,cause);\n\t}\n\t    \n\t//\u7528\u6307\u5b9a\u539f\u56e0\u6784\u9020\u4e00\u4e2a\u65b0\u7684\u5f02\u5e38\n\tprivate FormulaException(Throwable cause) {\n\t\tsuper(cause);\n\t}\n\t\n\t/**\n\t * \u9664\u96f6\u5f02\u5e38\n\t * @return \u5e26\u6709\u9664\u96f6\u5f02\u5e38\u63d0\u793a\u4fe1\u606f\u7684\u5bf9\u8c61\n\t */\n\tpublic static FormulaException getDivideByZeroException()\n\t{\n\t\treturn divideByZeroException;\n\t}\n\t    \n\t/**\n\t * \u5b9a\u4e49\u57df\u5f02\u5e38\n\t * @return \u5e26\u6709\u5b9a\u4e49\u57df\u5f02\u5e38\u63d0\u793a\u4fe1\u606f\u7684\u5bf9\u8c61\n\t */\n\tpublic static FormulaException getDefinitionDomainException()\n\t{\n\t\treturn definitionDomainException;\n\t}\n\t\n\t/**\n\t * \u8fd0\u7b97\u7b26\u5f02\u5e38\n\t * @return \u5e26\u6709\u8fd0\u7b97\u7b26\u4f7f\u7528\u9519\u8bef\u4fe1\u606f\u7684\u5bf9\u8c61\n\t */\n\tpublic static FormulaException getCharacterException()\n\t{\n\t\treturn characterException;\n\t}\n\t\n\t/**\n\t * \u6570\u5b57\u5f02\u5e38\n\t * @return \u5e26\u6709\u5f15\u53d1\u8be5\u5f02\u5e38\u539f\u56e0\u7684\u63d0\u793a\u4fe1\u606f\u7684\u5bf9\u8c61\n\t */\n\tpublic static FormulaException getFigureException()\n\t{\n\t\treturn figureException;\n\t}\n\t\n\t/**\n\t * \u4e0d\u660e\u5f02\u5e38\n\t * @return \u5e26\u6709\u5f02\u5e38\u63d0\u793a\u4fe1\u606f\u7684\u5bf9\u8c61\n\t */\n\tpublic static FormulaException getUnKnowException()\n\t{\n\t\treturn unKnowException;\n\t}\n\t\n\t/**\n\t * \u62ec\u53f7\u5339\u914d\u5f02\u5e38\n\t * @return \u5e26\u6709\u62ec\u53f7\u5339\u914d\u9519\u8bef\u4fe1\u606f\u7684\u5bf9\u8c61\n\t */\n\tpublic static FormulaException getBracketMismatchException()\n\t{\n\t\treturn bracketMismatchException;\n\t}\n\t\n}\n",
  "# -*- coding: utf-8 -*-\n# @Time   : 2021-04-07 12:23\n# @Author : Lodge\nfrom base64 import (\n    b16encode, b32encode, b64encode, b85encode,\n    b16decode, b32decode, b64decode, b85decode)\n\n__ALL__ = ['get_b64e', 'get_b64d']\n\n\ndef get_b64e(s: str, mode: int = 64, encoding='utf-8', to_bin: bool = False) -> str:\n    \"\"\"\n    \u7528baseXX\u52a0\u5bc6\u5b57\u7b26\u4e32\n    :param s: \u4f20\u5165\u7684\u5b57\u7b26\u4e32\n    :param mode: \u52a0\u5bc6\u6a21\u5f0f\u9ed8\u8ba4base64  \u53ef\u9009\u53c2\u6570: 16 32 64 85.\n    :param encoding: \u5b57\u7b26\u4e32\u89e3\u6790\u9ed8\u8ba4utf-8\n    :param to_bin: \u662f\u5426\u8fd4\u56de\u5b57\u8282\u4e32 \u9ed8\u8ba4\u4e0d\u8f6c\u6362 \u8fd4\u56de\u5b57\u7b26\u4e32\u5185\u5bb9\n    :return: \u52a0\u5bc6\u540e\u7684\u503c\n    \"\"\"\n    if mode in [16, 32, 64, 85]:\n        encoder = eval(f\"b{mode}encode('{s}'.encode('{encoding}'))\")\n        if to_bin is False:\n            try:\n                encoder = encoder.decode(encoding)\n            except Exception as e:\n                return f\"\u4f20\u5165\u5185\u5bb9\u5f02\u5e38: {e}\"\n        return encoder\n    else:\n        print('SUPPORT: b16encode b32encode b64encode b85encode // only need inputting: 16 32 64 85')\n        return \"\"\n\n\ndef get_b64d(s: str, mode: int = 64, encoding='utf-8') -> str:\n    \"\"\"\n    \u7528baseXX\u8fdb\u884c\u89e3\u5bc6\u5bf9\u5e94\u7684\u5185\u5bb9\n    :param s: \u4f20\u5165\u7684\u5b57\u7b26\u4e32\n    :param mode: \u89e3\u5bc6\u6a21\u5f0f\u9ed8\u8ba4base64  \u53ef\u9009\u53c2\u6570: 16 32 64 85.\n    :param encoding: \u5b57\u7b26\u4e32\u89e3\u6790\u9ed8\u8ba4utf-8\n    :return: \u89e3\u5bc6\u540e\u7684\u5b57\u7b26\u4e32\u5185\u5bb9\n    \"\"\"\n    if mode in [16, 32, 64, 85]:\n        try:\n            decoder = eval(f'b{mode}decode(\"{s}\")')\n            return decoder.decode(encoding)\n        except Exception as e:\n            return f\"\u4f20\u5165\u503c\u89e3\u6790\u9519\u8bef: {e}\"\n    else:\n        print('SUPPORT: b16decode b32decode b64decode b85decode // only need inputting: 16 32 64 85')\n        return \"\"\n",
  "package keystoneml.nodes.images\n\nimport keystoneml.utils.{ImageUtils, Image}\nimport keystoneml.workflow.Transformer\n\n/**\n  * Crop an input image to the given bounding box described by\n  * (startX, startY, endX, endY).\n  *\n  * Wrapper for `ImageUtils.crop()`\n  *\n  * @param startX x-position (inclusive) to describe upper left corner of BB\n  * @param startY y-position (inclusive) to describe upper left corner of BB\n  * @param endX x-position (exclusive) to describe lower right corner of BB\n  * @param endY y-position (exclusive) to describe lower right corner of BB\n  * @return new image of size (endX - startX, endY - startY)\n  */\ncase class Cropper(startX: Int, startY: Int, endX: Int, endY: Int) extends Transformer[Image,Image] {\n  def apply(in: Image): Image = {\n    ImageUtils.crop(in, startX, startY, endX, endY)\n  }\n}",
  "class SimulationBehaviors:\tpass",
  "/*\n * Copyright 2019 TWO SIGMA OPEN SOURCE, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function openApiParameterToApiParameter(openApiParameter) {\n    const name = openApiParameter.name + (openApiParameter.required? '*' : '')\n    const type = openApiParameter.type\n    const description = [...openApiParameter.description,\n       ...availableValuesDescription(openApiParameter),\n       ...defaultValueDescription(openApiParameter)]\n\n    return {name, type, description}\n}\n\n\nfunction availableValuesDescription(parameter) {\n    if (!parameter.items ||!parameter.items.enum) {\n        return []\n    }\n\n    return [\n        {\n            type: 'Paragraph', content: [\n                {type: 'Emphasis', content: [{type: 'SimpleText', text: 'Available values: '}]},\n                {type: 'SimpleText', text: parameter.items.enum.join(', ')}\n            ]\n        }\n    ]\n}\n\nfunction defaultValueDescription(parameter) {\n    if (!parameter.items ||!parameter.items.default) {\n        return []\n    }\n\n    return [\n        {\n            type: 'Paragraph', content: [\n\n                {type: 'Emphasis', content: [{type: 'SimpleText', text: 'Default value: '}]},\n                {type: 'SimpleText', text: parameter.items.default}\n            ]\n        }\n    ]\n}",
  "/*\n * Copyright (c) 2018-2022 Leon Linhart,\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its contributors\n *    may be used to endorse or promote products derived from this software\n *    without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\npackage com.osmerion.quitte.internal.binding;\n\nimport java.util.ArrayDeque;\nimport java.util.ArrayList;\nimport java.util.Deque;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.function.Function;\n\nimport com.osmerion.quitte.InvalidationListener;\nimport com.osmerion.quitte.WeakInvalidationListener;\nimport com.osmerion.quitte.collections.CollectionChangeListener;\nimport com.osmerion.quitte.collections.ObservableList;\nimport com.osmerion.quitte.collections.WeakCollectionChangeListener;\n\n/**\n * A specialized {@link List} binding.\n *\n * @author  Leon Linhart\n */\npublic final class ListBinding<S, E> implements Binding {\n\n    private final Deque<ObservableList.Change<? extends S>> changes = new ArrayDeque<>();\n\n    private final ObservableList<S> source;\n\n    private final InvalidationListener invalidationListener;\n    private final CollectionChangeListener<ObservableList.Change<? extends S>> changeListener;\n\n    private final Function<? super S, E> transform;\n\n    public ListBinding(Runnable invalidator, ObservableList<S> source, Function<? super S, E> transform) {\n        this.source = source;\n        this.transform = transform;\n\n        this.source.addListener(new WeakInvalidationListener(this.invalidationListener = (observable) -> invalidator.run()));\n        this.source.addListener(new WeakCollectionChangeListener<>(this.changeListener = this.changes::addLast));\n    }\n\n    @SuppressWarnings(\"deprecation\")\n    public List<ObservableList.Change<E>> getChanges() {\n        List<ObservableList.Change<E>> changes = new ArrayList<>(this.changes.size());\n        Iterator<ObservableList.Change<? extends S>> changeItr = this.changes.iterator();\n\n        while (changeItr.hasNext()) {\n            ObservableList.Change<? extends S> change = changeItr.next();\n            changes.add(change.copy(this.transform));\n            changeItr.remove();\n        }\n\n        return changes;\n    }\n\n    @Override\n    public void release() {\n        this.source.removeListener(this.invalidationListener);\n        this.source.removeListener(this.changeListener);\n    }\n\n}",
  "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"it\"><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/><link rel=\"stylesheet\" href=\"../../jacoco-resources/report.css\" type=\"text/css\"/><link rel=\"shortcut icon\" href=\"../../jacoco-resources/report.gif\" type=\"image/gif\"/><title>WASManagedRuntime.java</title><link rel=\"stylesheet\" href=\"../../jacoco-resources/prettify.css\" type=\"text/css\"/><script type=\"text/javascript\" src=\"../../jacoco-resources/prettify.js\"></script></head><body onload=\"window['PR_TAB_WIDTH']=4;prettyPrint()\"><div class=\"breadcrumb\" id=\"breadcrumb\"><span class=\"info\"><a href=\"../../jacoco-sessions.html\" class=\"el_session\">Sessions</a></span><a href=\"../../index.html\" class=\"el_report\">Tests</a> &gt; <a href=\"../index.html\" class=\"el_bundle\">openjpa-kernel</a> &gt; <a href=\"index.source.html\" class=\"el_package\">org.apache.openjpa.ee</a> &gt; <span class=\"el_source\">WASManagedRuntime.java</span></div><h1>WASManagedRuntime.java</h1><pre class=\"source lang-java linenums\">/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * &quot;License&quot;); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\npackage org.apache.openjpa.ee;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.lang.reflect.Method;\n\nimport javax.naming.Context;\nimport javax.naming.InitialContext;\nimport javax.transaction.HeuristicMixedException;\nimport javax.transaction.HeuristicRollbackException;\nimport javax.transaction.InvalidTransactionException;\nimport javax.transaction.NotSupportedException;\nimport javax.transaction.RollbackException;\nimport javax.transaction.Status;\nimport javax.transaction.Synchronization;\nimport javax.transaction.SystemException;\nimport javax.transaction.Transaction;\nimport javax.transaction.xa.XAResource;\n\nimport org.apache.openjpa.conf.OpenJPAConfiguration;\nimport org.apache.openjpa.enhance.AsmAdaptor;\nimport org.apache.openjpa.lib.conf.Configurable;\nimport org.apache.openjpa.lib.conf.Configuration;\nimport org.apache.openjpa.lib.log.Log;\nimport org.apache.openjpa.lib.util.Localizer;\nimport org.apache.openjpa.util.InvalidStateException;\nimport org.apache.openjpa.util.NoTransactionException;\n\nimport serp.bytecode.BCClass;\nimport serp.bytecode.Project;\n\n/**\n * {@link ManagedRuntime} implementation that allows synchronization with a\n * WebSphere managed transaction.\n *\n * &lt;P&gt;\n * WebSphere Application Server does not expose the TransactionManager to an\n * application. Instead it provides a proprietary interface to register for\n * synchronization and obtain transaction ids.\n *\n * &lt;P&gt;\n * WASManagedRuntime provides the wrapper classes needed to interact with the\n * WAS proprietary interface and the OpenJPA kernel.\n *\n * @author Kevin Sutter\n */\n<span class=\"nc\" id=\"L65\">public class WASManagedRuntime extends AbstractManagedRuntime</span>\n        implements ManagedRuntime, Configurable {\n\n<span class=\"nc\" id=\"L68\">    private static final Localizer _loc =</span>\n<span class=\"nc\" id=\"L69\">        Localizer.forPackage(WASManagedRuntime.class);</span>\n\n<span class=\"nc\" id=\"L71\">    private Object _extendedTransaction = null;</span>\n<span class=\"nc\" id=\"L72\">    private Method _getGlobalId = null;</span>\n<span class=\"nc\" id=\"L73\">    private Method _registerSync = null;</span>\n<span class=\"nc\" id=\"L74\">    private OpenJPAConfiguration _conf = null;</span>\n<span class=\"nc\" id=\"L75\">    private Log _log = null;</span>\n\n    /**\n     * Gets an extendedJTATransaction from JNDI and creates a transaction\n     * wrapper\n     */\n    @Override\n    public javax.transaction.TransactionManager getTransactionManager()\n        throws Exception {\n<span class=\"nc\" id=\"L84\">        return new WASTransaction();</span>\n    }\n\n    /**\n     * Transaction wrapper for WebSphere. WebSphere exposes a subset of the\n     * Transaction and TransactionManager interfaces to the customer. Any\n     * methods which are not exposed by WebSphere will throw an\n     * IllegalStateException to the caller.\n     *\n     * &lt;P&gt;\n     * Methods supported by WAS are\n     * &lt;UL&gt;\n     * &lt;LI&gt;RegisterSynchronization &lt;/LI&gt;\n     * &lt;LI&gt;GetStatus&lt;/LI&gt;\n     * &lt;/UL&gt;\n     */\n<span class=\"nc\" id=\"L100\">    class WASTransaction implements javax.transaction.TransactionManager,</span>\n        javax.transaction.Transaction {\n\n        @Override\n        public int getStatus() throws SystemException {\n            int rval;\n            try {\n<span class=\"nc bnc\" id=\"L107\" title=\"All 2 branches missed.\">                if (getGlobalId()!= null) {</span>\n<span class=\"nc\" id=\"L108\">                    rval = Status.STATUS_ACTIVE;</span>\n                } else {\n<span class=\"nc\" id=\"L110\">                    rval = Status.STATUS_NO_TRANSACTION;</span>\n                }\n<span class=\"nc\" id=\"L112\">            } catch (Exception e) {</span>\n<span class=\"nc\" id=\"L113\">                throw new NoTransactionException(_loc</span>\n<span class=\"nc\" id=\"L114\">                       .get(&quot;was-transaction-id-exception&quot;)).setCause(e);</span>\n<span class=\"nc\" id=\"L115\">            }</span>\n<span class=\"nc\" id=\"L116\">            return rval;</span>\n        }\n\n        /**\n         * Provides a Transaction wrapper. The transaction wrapper mayb only be\n         * used to determine the status of the current transaction. WebSphere\n         * does not allow direct control of container transactions.\n         *\n         * @return A WebSphere transaction wrapper.\n         */\n        @Override\n        public Transaction getTransaction() throws SystemException {\n<span class=\"nc\" id=\"L128\">            return this;</span>\n        }\n\n        /**\n         * Register for synchronization with a WebSphere managed transaction via\n         * the extendedJTATransaction interface.\n         */\n        @Override\n        public void registerSynchronization(Synchronization arg0)\n            throws IllegalStateException, RollbackException, SystemException {\n<span class=\"nc bnc\" id=\"L138\" title=\"All 2 branches missed.\">            if (_extendedTransaction!= null) {</span>\n                try {\n<span class=\"nc\" id=\"L140\">                    _registerSync.invoke(_extendedTransaction,</span>\n                        new Object[] { new WASSynchronization(arg0) });\n<span class=\"nc\" id=\"L142\">                } catch (Exception e) {</span>\n<span class=\"nc\" id=\"L143\">                    throw new InvalidStateException(_loc</span>\n<span class=\"nc\" id=\"L144\">                       .get(&quot;was-reflection-exception&quot",
  "package org.etnaframework.core.util;\n\nimport java.lang.reflect.Field;\nimport java.lang.reflect.Method;\nimport java.util.Collection;\nimport java.util.LinkedHashMap;\nimport java.util.LinkedHashSet;\nimport java.util.LinkedList;\nimport java.util.Map;\nimport java.util.Set;\nimport org.springframework.aop.framework.Advised;\nimport org.springframework.beans.factory.BeanInitializationException;\nimport org.springframework.util.ReflectionUtils;\nimport org.springframework.util.ReflectionUtils.FieldFilter;\nimport org.springframework.util.ReflectionUtils.MethodFilter;\nimport javassist.ClassClassPath;\nimport javassist.ClassPool;\nimport javassist.CtClass;\nimport javassist.CtField;\nimport javassist.CtMethod;\nimport javassist.NotFoundException;\nimport javassist.bytecode.Descriptor;\n\n/**\n * \u63d0\u4f9bJava\u53cd\u5c04\u76f8\u5173\u7684\u5de5\u5177\u7c7b\n *\n * @author BlackCat\n * @since 2013-12-8\n */\npublic class ReflectionTools {\n\n    /**\n     * \u83b7\u53d6\u65b9\u6cd5\u7b7e\u540d\u5b57\u7b26\u4e32\uff0c\u53ef\u7528\u4e8e\u552f\u4e00\u8868\u793a\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5305\u62ec\u7c7b\u540d\u3001\u65b9\u6cd5\u540d\u3001\u53c2\u6570\u7c7b\u578b\uff08\u7531\u4e8ejava\u4e0d\u5141\u8bb8\u4ec5\u8fd4\u56de\u503c\u4e0d\u540c\u7684\uff0c\u6545\u4e0d\u5305\u542b\u8fd4\u56de\u7c7b\u578b\u4fe1\u606f\uff09\n     */\n    public static String getMethodSingature(Method m) {\n        StringBuilder sb = new StringBuilder(m.getDeclaringClass().getName());\n        sb.append(\".\").append(m.getName()).append('(');\n        Class<?>[] params = m.getParameterTypes();\n        for (int j = 0; j < params.length; j++) {\n            sb.append(params[j].getName());\n            if (j < (params.length - 1)) {\n                sb.append(',');\n            }\n        }\n        sb.append(')');\n        return sb.toString();\n    }\n\n    /**\n     * \u5217\u4e3e\u6307\u5b9a\u7c7b\u7684\u6240\u6709\u7684\u63a5\u53e3\u7c7b\u5217\u8868\uff0c\u4f1a\u8fdb\u884c\u53bb\u91cd\u5904\u7406\n     */\n    public static Set<Class<?>> getAllInterfaces(Class<?> clazz) {\n        Set<Class<?>> list = new LinkedHashSet<Class<?>>();\n        for (Class<?> intf : clazz.getInterfaces()) {\n            list.add(intf);\n            if (intf.getInterfaces().length > 0) {\n                list.addAll(getAllInterfaces(intf));\n            }\n        }\n        return list;\n    }\n\n    /**\n     * \u6839\u636e\u4f20\u5165\u7684field\u83b7\u53d6\u5176set\u65b9\u6cd5\u540d\uff08\u5e03\u5c14\u7c7b\u578b\u662fis\uff09\n     */\n    public static String getSetMethodNameOfField(Field field) {\n        return \"set\" + StringTools.headLetterToUpperCase(field.getName());\n    }\n\n    /**\n     * \u6839\u636e\u4f20\u5165\u7684field\u83b7\u53d6\u5176get\u65b9\u6cd5\u540d\n     */\n    public static String getGetMethodNameOfField(Field field) {\n        if (boolean.class.equals(field.getType()) || Boolean.class.equals(field.getType())) {\n            return \"is\" + StringTools.headLetterToUpperCase(field.getName());\n        }\n        return \"get\" + StringTools.headLetterToUpperCase(field.getName());\n    }\n\n    /**\n     * \u6839\u636e\u4f20\u5165\u7684getMethod\u83b7\u53d6\u5176\u5bf9\u5e94\u7684field\u540d\uff0c\u5982\u679c\u4e0d\u80fd\u53d6\u5f97\u5c31\u4f1a\u8fd4\u56denull\n     */\n    public static String getFieldNameFromGetMethod(Method method) {\n        if (void.class.equals(method.getReturnType())) { // get\u65b9\u6cd5\u5fc5\u987b\u8981\u6709\u8fd4\u56de\u503c\n            return null;\n        }\n        if (method.getParameterTypes().length > 0) { // get\u65b9\u6cd5\u5fc5\u987b\u65e0\u53c2\n            return null;\n        }\n        String name = method.getName();\n        if (boolean.class.equals(method.getReturnType()) || Boolean.class.equals(method.getReturnType())) {\n            if (name.length() > 2 && name.startsWith(\"is\")) {\n                return StringTools.headLetterToLowerCase(name.substring(2));\n            }\n        }\n        if (name.length() > 3 && name.startsWith(\"get\")) {\n            return StringTools.headLetterToLowerCase(name.substring(3));\n        }\n        return null;\n    }\n\n    /**\n     * \u6839\u636e\u4f20\u5165\u7684setMethod\u83b7\u53d6\u5176\u5bf9\u5e94\u7684field\u540d\uff0c\u5982\u679c\u4e0d\u80fd\u53d6\u5f97\u5c31\u4f1a\u8fd4\u56denull\n     */\n    public static String getFieldNameFromSetMethod(Method method) {\n        if (method.getParameterTypes().length!= 1) { // set\u65b9\u6cd5\u53ea\u80fd\u6709\u4e00\u4e2a\u53c2\u6570\n            return null;\n        }\n        String name = method.getName();\n        if (name.length() > 3 && name.startsWith(\"set\")) {\n            return StringTools.headLetterToLowerCase(name.substring(3));\n        }\n        return null;\n    }\n\n    /**\n     * \u83b7\u53d6javassist\u5bf9\u5e94\u7684CtClass\uff0c\u5982\u679c\u83b7\u53d6\u5931\u8d25\u8fd4\u56denull\n     */\n    public static CtClass getCtClass(Class<?> clazz) {\n        try {\n            ClassPool pool = ClassPool.getDefault();\n            CtClass cc = pool.getOrNull(clazz.getName());\n            if (null == cc) { // \u6309\u6b63\u5e38\u7684\u6d41\u7a0b\u6765\u8d70\uff0c\u4e0d\u5e94\u5f53\u4f1a\u6709\u83b7\u53d6\u4e0d\u5230\u7684\u60c5\u51b5\uff0c\u4f46\u5728\u67d0\u4e9b\u5bb9\u5668\u4e2d\u542f\u52a8\u65f6\u7531\u4e8e\u662fSystemClassLoader\u5e76\u4e0d\u662f\u5e94\u7528\u7684\uff0c\u5bfc\u81f4\u52a0\u8f7d\u4e0d\u5230\u8fd9\u4e2aclass\uff0c\u6240\u4ee5\u9700\u8981\u624b\u5de5\u6dfb\u52a0\u4e00\u4e0b\n                pool.insertClassPath(new ClassClassPath(clazz));\n                cc = pool.get(clazz.getName());\n            }\n            return cc;\n        } catch (NotFoundException e) {\n        }\n        return null;\n    }\n\n    /**\n     * \u6309\u6e90\u7801\u4e2d\u7684\u987a\u5e8f\uff08\u6ce8\u610f\uff1ajava\u7684\u53cd\u5c04\u673a\u5236\u65e0\u6cd5\u4fdd\u8bc1\u8fd4\u56de\u7684\u987a\u5e8f\uff09\u8fd4\u56de\u7c7b\u4e2d\u7684\u6240\u6709\u7b26\u5408\u7b5b\u9009\u6761\u4ef6\u7684\u5b57\u6bb5\uff0c\u5305\u542b\u6240\u6709\u975epublic\u7684\u5b57\u6bb5\u4f46\u4e0d\u5305\u62ec\u88ab\u7ee7\u627f\u7684\u5b57\u6bb5\uff08\u8fd4\u56de\u5185\u5bb9\u548cjava\u53cd\u5c04\u7684getDeclaredFields\u4e00\u6837\uff09\n     *\n     * @param clazz \u9700\u8981\u88ab\u89e3\u6790\u7684\u7c7b\n     */\n    public static Collection<Field> getDeclaredFieldsInSourceCodeOrder(Class<?> clazz) {\n        return getDeclaredFieldsInSourceCodeOrder(clazz, null);\n    }\n\n    /**\n     * \u6309\u6e90\u7801\u4e2d\u7684\u987a\u5e8f\uff08\u6ce8\u610f\uff1ajava\u7684\u53cd\u5c04\u673a\u5236\u65e0\u6cd5\u4fdd\u8bc1\u8fd4\u56de\u7684\u987a\u5e8f\uff09\u8fd4\u56de\u7c7b\u4e2d\u7684\u6240\u6709\u7b26\u5408\u7b5b\u9009\u6761\u4ef6\u7684\u5b57\u6bb5\uff0c\u5305\u542b\u6240\u6709\u975epublic\u7684\u5b57\u6bb5\u4f46\u4e0d\u5305\u62ec\u88ab\u7ee7\u627f\u7684\u5b57\u6bb5\uff08\u8fd4\u56de\u5185\u5bb9\u548cjava\u53cd\u5c04\u7684getDeclaredFields\u4e00\u6837\uff09\n     *\n     * @param clazz \u9700\u8981\u88ab\u89e3\u6790\u7684\u7c7b\n     * @param filter \u5982\u679c\u9700\u8981\u8fdb\u884c\u7b5b\u9009\uff0c\u53ef\u6307\u5b9a\u7b5b\u9009\u6761\u4ef6\n     */\n    public static Collection<Field> getDeclaredFieldsInSourceCodeOrder(Class<?> clazz, FieldFilter filter) {\n        Map<String, Field> map = new LinkedHashMap<String, Field>();\n        for (Field f : clazz.getDeclaredFields()) {\n            if (null == filter || filter.matches(f)) {\n                map.put(f.getName(), f); // \u5efa\u7acb\u5b57\u6bb5\u540d\u548c\u5b57\u6bb5\u7684\u6620\u5c04\n            }\n        }\n        Set<Field> result = new LinkedHashSet<Field>(map.size());\n        try {\n            CtClass cc = getCtClass(clazz);\n            if (null!= cc) {\n                for (CtField cf : cc.getDeclaredFields()) {\n                    Field me = map.get(cf.getName());\n                    if (null!= me) {\n                        result.add(me);\n                    }\n                }\n            } else {\n                result.addAll(map.values());\n            }\n        } catch (Throwable ex) { // \u4e0a\u9762\u7684\u6d41\u7a0b\u90fd\u8d70\u8fc7\u4e86\uff0c\u6b64\u5904\u5e94\u5f53\u4e0d\u53ef\u80fd\u629b\u6b64\u5f02\u5e38\u7684\uff0c\u5b9e\u5728\u6709\u95ee\u9898\uff0c\u5c31\u7528\u9ed8\u8ba4\u7684\u65b9\u6cd5",
  "/* eslint-disable */\n/////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                     //\n//!!! DO NOT EDIT THIS FILE!!!                                                       //\n//                                                                                     //\n// This file is auto-generated by scripts/generate-web-api-types.sh in the repository. //\n// Please refer to the script code to learn how to update the source data.             //\n//                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////\n\nimport { WebAPICallResult } from '../WebClient';\nexport type AdminTeamsSettingsInfoResponse = WebAPICallResult & {\n  ok?:       boolean;\n  team?:     Team;\n  error?:    string;\n  needed?:   string;\n  provided?: string;\n};\n\nexport interface Team {\n  id?:                string;\n  name?:              string;\n  domain?:            string;\n  email_domain?:      string;\n  icon?:              Icon;\n  enterprise_id?:     string;\n  enterprise_name?:   string;\n  default_channels?:  string[];\n  is_verified?:       boolean;\n  enterprise_domain?: string;\n}\n\nexport interface Icon {\n  image_34?:       string;\n  image_44?:       string;\n  image_68?:       string;\n  image_88?:       string;\n  image_102?:      string;\n  image_132?:      string;\n  image_230?:      string;\n  image_original?: string;\n}\n",
  "<?php\nuse yii\\helpers\\Html;\nuse yii\\bootstrap\\ActiveForm;\n\n/* @var $this yii\\web\\View */\n/* @var $form yii\\bootstrap\\ActiveForm */\n/* @var $model \\common\\models\\LoginForm */\n\n$this->title = Yii::t('app', '\u0e40\u0e02\u0e49\u0e32\u0e2a\u0e39\u0e48\u0e23\u0e30\u0e1a\u0e1a');\n$this->params['breadcrumbs'][] = $this->title;\n?>\n<div class=\"site-login\">\n\n    <h1><?= Html::encode($this->title)?></h1>\n\n    <div class=\"col-lg-5 well bs-component\">\n\n        <p><?= Yii::t('app', '\u0e01\u0e23\u0e38\u0e13\u0e32\u0e01\u0e23\u0e2d\u0e01\u0e0a\u0e37\u0e48\u0e2d\u0e1c\u0e39\u0e49\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19\u0e41\u0e25\u0e30\u0e23\u0e2b\u0e31\u0e2a\u0e1c\u0e48\u0e32\u0e19\u0e01\u0e48\u0e2d\u0e19\u0e40\u0e02\u0e49\u0e32\u0e2a\u0e39\u0e48\u0e23\u0e30\u0e1a\u0e1a :')?></p>\n\n        <?php $form = ActiveForm::begin(['id' => 'login-form']);?>\n\n        <?php //-- use email or username field depending on model scenario --//?>\n        <?php if ($model->scenario === 'lwe'):?>\n            <?= $form->field($model, 'email')?>        \n        <?php else:?>\n            <?= $form->field($model, 'username')?>\n        <?php endif?>\n\n        <?= $form->field($model, 'password')->passwordInput()?>\n        <?= $form->field($model,'rememberMe')->checkbox()?>\n\n        <div style=\"color:#999;margin:1em 0\">\n            <?= Yii::t('app', '\u0e2b\u0e32\u0e01\u0e25\u0e37\u0e21\u0e23\u0e2b\u0e31\u0e2a\u0e1c\u0e48\u0e32\u0e19\u0e04\u0e38\u0e13\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e23\u0e35\u0e40\u0e0b\u0e47\u0e15\u0e44\u0e14\u0e49 >>>')?>\n            <?= Html::a(Yii::t('app', '\u0e23\u0e35\u0e40\u0e0b\u0e47\u0e15\u0e23\u0e2b\u0e31\u0e2a\u0e1c\u0e48\u0e32\u0e19'), ['site/request-password-reset'])?>.\n        </div>\n\n        <div class=\"form-group\">\n            <?= Html::submitButton(Yii::t('app', 'Login'), ['class' => 'btn btn-primary', 'name' => 'login-button'])?>\n            \n        </div>\n            <?= Html::a(Yii::t('app', '\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e40\u0e08\u0e49\u0e32\u0e40\u0e08\u0e49\u0e32\u0e17\u0e35\u0e48'), ['backend/site/login'])?>.\n        <?php ActiveForm::end();?>\n\n    </div>\n  \n</div>\n",
  "---\ntitle: Reinforcement Learning Introduction\npermalink: /docs/2017-12-01-DL-2x01/\n---\n\nSource: [\ubaa8\ub450\ub97c \uc704\ud55c \uba38\uc2e0\ub7ec\ub2dd\uacfc \ub525\ub7ec\ub2dd \uac15\uc758](http://hunkim.github.io/ml/)\n<script>\n\tembedPDF({url:'https://hunkim.github.io/ml/RL/rl01.pdf', height:'624px'});\n</script>\n<br/>\n<div class=\"youtube-container\">\n    <iframe frameborder=\"0\" allowfullscreen src=\"https://www.youtube.com/embed/dZ4vw6v3LcA\"></iframe>\n</div>",
  "package lxdops\n\nimport (\n\t\"bytes\"\n\t\"errors\"\n\t\"fmt\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"strconv\"\n\t\"strings\"\n\n\tlxd \"github.com/lxc/lxd/client\"\n\t\"melato.org/lxdops/lxdutil\"\n\t\"melato.org/lxdops/password\"\n\t\"melato.org/lxdops/util\"\n\t\"melato.org/script\"\n)\n\ntype Configurer struct {\n\tClient *lxdutil.LxdClient `name:\"-\"`\n\tConfigOptions\n\tTrace      bool     `name:\"trace,t\" usage:\"print exec arguments\"`\n\tDryRun     bool     `name:\"dry-run\" usage:\"show the commands to run, but do not change anything\"`\n\tComponents []string `name:\"components\" usage:\"which components to configure: packages, scripts, users\"`\n\tAll        bool     `name:\"all\" usage:\"If true, configure all parts, except those that are mentioned explicitly, otherwise configure only parts that are mentioned\"`\n\tPackages   bool     `name:\"packages\" usage:\"whether to install packages\"`\n\tScripts    bool     `name:\"scripts\" usage:\"whether to run scripts\"`\n\tFiles      bool     `name:\"files\" usage:\"whether to copy files\"`\n\tUsers      bool     `name:\"users\" usage:\"whether to create users and change passwords\"`\n}\n\nfunc (t *Configurer) Init() error {\n\treturn t.ConfigOptions.Init()\n}\n\nfunc (t *Configurer) Configured() error {\n\treturn t.ConfigOptions.Configured()\n}\n\nfunc (t *Configurer) NewScript() *script.Script {\n\treturn &script.Script{Trace: t.Trace, DryRun: t.DryRun}\n}\n\nfunc (t *Configurer) NewExec(project string, name string) *execRunner {\n\tserver, err := t.Client.ProjectServer(project)\n\tex := &execRunner{Server: server, Container: name, Error: err}\n\tex.Trace = t.Trace\n\tex.DryRun = t.DryRun\n\treturn ex\n}\n\nfunc (t *Configurer) runScriptLines(project string, name string, lines []string) error {\n\tcontent := strings.Join(lines, \"\\n\")\n\treturn t.runScript(project, name, content)\n}\n\nfunc (t *Configurer) runScript(project string, name string, content string) error {\n\treturn t.NewExec(project, name).Run(content, \"sh\")\n}\n\nfunc (t *Configurer) installPackages(config *Config, name string) error {\n\tif len(config.Packages) == 0 {\n\t\treturn nil\n\t}\n\n\tvar lines []string\n\tfor _, pkg := range config.Packages {\n\t\tlines = append(lines, config.OS.Type().InstallPackageCommand(pkg))\n\t}\n\treturn t.runScriptLines(config.Project, name, lines)\n}\n\nfunc (t *Configurer) pushAuthorizedKeys(config *Config, container string) error {\n\thostHome, homeExists := os.LookupEnv(\"HOME\")\n\tif!homeExists {\n\t\treturn errors.New(\"host $HOME doesn't exist\")\n\t}\n\thostFile := filepath.Join(hostHome, \".ssh\", \"authorized_keys\")\n\tauthorizedKeys, err := os.ReadFile(hostFile)\n\tif err!= nil {\n\t\treturn err\n\t}\n\tserver, err := t.Client.ProjectServer(config.Project)\n\tif err!= nil {\n\t\treturn err\n\t}\n\tfor _, user := range config.Users {\n\t\tuser = user.EffectiveUser()\n\t\tif!user.Ssh {\n\t\t\tcontinue\n\t\t}\n\t\thome := user.HomeDir()\n\t\tguestFile := filepath.Join(home, \".ssh\", \"authorized_keys\")\n\t\tif!lxdutil.FileExists(server, container, guestFile) {\n\t\t\tif t.Trace {\n\t\t\t\tfmt.Printf(\"creating %s\\n\", guestFile)\n\t\t\t}\n\t\t\tfile := lxd.ContainerFileArgs{Content: bytes.NewReader(authorizedKeys), Mode: 0600}\n\t\t\terr := server.CreateContainerFile(container, guestFile, file)\n\t\t\tif err!= nil {\n\t\t\t\treturn lxdutil.AnnotateLXDError(guestFile, err)\n\t\t\t}\n\t\t\terr = t.NewExec(config.Project, container).Run(\"\", \"chown\", user.Name+\":\"+user.Name, guestFile)\n\t\t\tif err!= nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t}\n\t}\n\treturn nil\n}\n\ntype Sudo struct {\n\tdidSudoers bool\n}\n\nfunc (t *Sudo) Configure(user string) []string {\n\tvar lines []string\n\tif!t.didSudoers {\n\t\tt.didSudoers = true\n\t\tlines = append(lines, \"mkdir -p /etc/sudoers.d\")\n\t}\n\tsudoerFile := \"/etc/sudoers.d/\" + user\n\tlines = append(lines, \"echo '\"+user+\" ALL=(ALL) NOPASSWD:ALL' > \"+sudoerFile)\n\tlines = append(lines, \"chmod 440 \"+sudoerFile)\n\treturn lines\n}\n\ntype Doas struct {\n\tdidSudoers bool\n}\n\nfunc (t *Doas) Configure(user string) []string {\n\tvar lines []string\n\tlines = append(lines,\n\t\tfmt.Sprintf(`if [ -f /etc/doas.conf ]; then  grep \"^permit nopass %s$\" /etc/doas.conf  || echo \"permit nopass %s\" >> /etc/doas.conf; fi`,\n\t\t\tuser, user))\n\treturn lines\n}\n\nfunc (t *Configurer) createUsers(config *Config, name string) error {\n\tif config.Users == nil {\n\t\treturn nil\n\t}\n\tvar err error\n\tvar sudo Sudo\n\tvar doas Doas\n\tvar lines []string\n\thasSsh := false\n\tfor _, user := range config.Users {\n\t\tuser = user.EffectiveUser()\n\t\tif user.Name == \"\" {\n\t\t\treturn errors.New(\"missing user name\")\n\t\t}\n\t\tvar homeDir = user.HomeDir()\n\t\tif user.Name!= \"root\" && user.Home!= \"\" {\n\t\t\tparent := filepath.Dir(homeDir)\n\t\t\tif parent!= \"\" {\n\t\t\t\tlines = append(lines, \"mkdir -p \"+parent)\n\t\t\t}\n\t\t}\n\t\tif user.Name!= \"root\" {\n\t\t\t// do not create a \"root\" user\n\t\t\t// but setup password and authorized_keys later\n\t\t\targs := config.OS.Type().AddUserCommand(user)\n\t\t\tif len(args) == 0 {\n\t\t\t\treturn errors.New(\"create users is not supported for this os\")\n\t\t\t}\n\t\t\tlines = append(lines, util.EscapeShell(args...))\n\t\t\tfor _, group := range user.Groups {\n\t\t\t\tlines = append(lines, \"adduser \"+user.Name+\" \"+group)\n\t\t\t}\n\t\t\tif user.Sudo {\n\t\t\t\tlines = append(lines, sudo.Configure(user.Name)...)\n\t\t\t\tif config.OS.IsAlpine() {\n\t\t\t\t\tlines = append(lines, doas.Configure(user.Name)...)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif user.Ssh {\n\t\t\thasSsh = true\n\t\t\tsshDir := homeDir + \"/.ssh\"\n\t\t\tlines = append(lines, \"mkdir -p \"+sshDir)\n\t\t\tlines = append(lines, \"chown -R \"+user.Name+\":\"+user.Name+\" \"+sshDir)\n\t\t\tlines = append(lines, \"\") // this is needed for some reason.\n\t\t}\n\t}\n\tcontent := strings.Join(lines, \"\\n\")\n\terr = t.runScript(config.Project, name, content)\n\tif err!= nil {\n\t\treturn err\n\t}\n\tif hasSsh {\n\t\terr = t.pushAuthorizedKeys(config, name)\n\t\tif err!= nil {\n\t\t\treturn err\n\t\t}\n\t}\n\treturn nil\n}\n\nfunc (t *Configurer) chpasswdInput(pass string, users []string) string {\n\tvar lines []string\n\tfor _, user := range users {\n\t\tlines = append(lines, user+\":\"+pass)\n\t}\n\treturn strings.Join(lines, \"\\n\")\n}\n\nfunc (t *Configurer) changePasswords(config *Config, name string, users []string) error {\n\tif!config.OS.Type().NeedPasswords() {\n\t\treturn",
  "# Libraries\n\nThis chapter will tell you how to make your library installable through Poetry.\n\n\n## Versioning\n\nWhile Poetry does not enforce any convention regarding package versioning,\nit **strongly** recommends to follow [semantic versioning](https://semver.org).\n\nThis has many advantages for the end users and allows them to set appropriate\n[version constraints](/docs/dependency-specification/#version-constraints).\n\n## Lock file\n\nFor your library, you may commit the `poetry.lock` file if you want to.\nThis can help your team to always test against the same dependency versions.\nHowever, this lock file will not have any effect on other projects that depend on it.\nIt only has an effect on the main project.\n\nIf you do not want to commit the lock file and you are using git, add it to the `.gitignore`.\n\n## Packaging\n\nBefore you can actually publish your library, you will need to package it.\n\n```bash\npoetry build\n```\n\nThis command will package your library in two different formats: `sdist` which is\nthe source format, and `wheel` which is a `compiled` package.\n\nOnce that's done you are ready to publish your library\n\n## Publishing to PyPI\n\nAlright, so now you can publish packages.\n\nPoetry will publish to [PyPI](https://pypi.org) by default. Anything that is published to PyPI\nis available automatically through Poetry. Since [pendulum](https://pypi.org/project/pendulum/)\nis on PyPI we can depend on it without having to specify any additional repositories.\n\nIf we wanted to share `poetry-demo` with the Python community, we would publish on PyPI as well.\nDoing so is really easy.\n\n```bash\npoetry publish\n```\n\nThis will package and publish the library to PyPI, at the condition that you are a registered user\nand you have [configured your credentials](/docs/repositories/#adding-credentials) properly.\n\n!!!note\n\n    The `publish` command does not execute `build` by default.\n\n    If you want to build and publish your packages together,\n    just pass the `--build` option.\n\nOnce this is done, your library will be available to anyone.\n\n\n## Publishing to a private repository\n\nSometimes, you may want to keep your library private but also being accessible to your team.\n\nIn this case, you will need to use a private repository.\n\nIn order to publish to a private repository, you will need to add it to your\nglobal list of repositories. See [Adding a repository](/docs/repositories/#adding-a-repository)\nfor more information.\n\nOnce this is done, you can actually publish to it like so:\n\n```bash\npoetry publish -r my-repository\n```\n",
  "<?php\nnamespace App\\Message;\n\nclass BackupMessage extends AbstractMessage\n{\n    /** @var string|null The absolute or relative path of the backup file. */\n    public?string $path;\n\n    /** @var string|null The path to log output of the Backup command to. */\n    public?string $outputPath = null;\n\n    /** @var bool Whether to exclude media, producing a much more compact backup. */\n    public bool $excludeMedia = false;\n}\n",
  "/*-\n * Copyright (c) 1992, 1993, 1994 Henry Spencer.\n * Copyright (c) 1992, 1993, 1994\n *\tThe Regents of the University of California.  All rights reserved.\n *\n * This code is derived from software contributed to Berkeley by\n * Henry Spencer.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n * 3. All advertising materials mentioning features or use of this software\n *    must display the following acknowledgement:\n *\tThis product includes software developed by the University of\n *\tCalifornia, Berkeley and its contributors.\n * 4. Neither the name of the University nor the names of its contributors\n *    may be used to endorse or promote products derived from this software\n *    without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n *\n *\t@(#)regex2.h\t8.4 (Berkeley) 3/20/94\n */\n\n/*\n * First, the stuff that ends up in the outside-world include file\n = typedef off_t regoff_t;\n = typedef struct {\n = \tint re_magic;\n = \tsize_t re_nsub;\t\t// number of parenthesized subexpressions\n = \tconst char *re_endp;\t// end pointer for REG_PEND\n = \tstruct re_guts *re_g;\t// none of your business :-)\n = } regex_t;\n = typedef struct {\n = \tregoff_t rm_so;\t\t// start of match\n = \tregoff_t rm_eo;\t\t// end of match\n = } regmatch_t;\n */\n/*\n * internals of regex_t\n */\n#define\tMAGIC1\t((('r'^0200)<<8) | 'e')\n\n/*\n * The internal representation is a *strip*, a sequence of\n * operators ending with an endmarker.  (Some terminology etc. is a\n * historical relic of earlier versions which used multiple strips.)\n * Certain oddities in the representation are there to permit running\n * the machinery backwards; in particular, any deviation from sequential\n * flow must be marked at both its source and its destination.  Some\n * fine points:\n *\n * - OPLUS_ and O_PLUS are *inside* the loop they create.\n * - OQUEST_ and O_QUEST are *outside* the bypass they create.\n * - OCH_ and O_CH are *outside* the multi-way branch they create, while\n *   OOR1 and OOR2 are respectively the end and the beginning of one of\n *   the branches.  Note that there is an implicit OOR2 following OCH_\n *   and an implicit OOR1 preceding O_CH.\n *\n * In state representations, an operator's bit is on to signify a state\n * immediately *preceding* \"execution\" of that operator.\n */\ntypedef unsigned long sop;\t/* strip operator */\ntypedef long sopno;\n#define\tOPRMASK\t0xf8000000\n#define\tOPDMASK\t0x07ffffff\n#define\tOPSHIFT\t((unsigned)27)\n#define\tOP(n)\t((n)&OPRMASK)\n#define\tOPND(n)\t((n)&OPDMASK)\n#define\tSOP(op, opnd)\t((op)|(opnd))\n/* operators\t\t\t   meaning\toperand\t\t\t*/\n/*\t\t\t\t\t\t(back, fwd are offsets)\t*/\n#define\tOEND\t(1<<OPSHIFT)\t/* endmarker\t-\t\t\t*/\n#define\tOCHAR\t(2<<OPSHIFT)\t/* character\tunsigned char\t\t*/\n#define\tOBOL\t(3<<OPSHIFT)\t/* left anchor\t-\t\t\t*/\n#define\tOEOL\t(4<<OPSHIFT)\t/* right anchor\t-\t\t\t*/\n#define\tOANY\t(5<<OPSHIFT)\t/*.\t\t-\t\t\t*/\n#define\tOANYOF\t(6<<OPSHIFT)\t/* [...]\tset number\t\t*/\n#define\tOBACK_\t(7<<OPSHIFT)\t/* begin \\d\tparen number\t\t*/\n#define\tO_BACK\t(8<<OPSHIFT)\t/* end \\d\tparen number\t\t*/\n#define\tOPLUS_\t(9<<OPSHIFT)\t/* + prefix\tfwd to suffix\t\t*/\n#define\tO_PLUS\t(10<<OPSHIFT)\t/* + suffix\tback to prefix\t\t*/\n#define\tOQUEST_\t(11<<OPSHIFT)\t/*? prefix\tfwd to suffix\t\t*/\n#define\tO_QUEST\t(12<<OPSHIFT)\t/*? suffix\tback to prefix\t\t*/\n#define\tOLPAREN\t(13<<OPSHIFT)\t/* (\t\tfwd to )\t\t*/\n#define\tORPAREN\t(14<<OPSHIFT)\t/* )\t\tback to (\t\t*/\n#define\tOCH_\t(15<<OPSHIFT)\t/* begin choice\tfwd to OOR2\t\t*/\n#define\tOOR1\t(16<<OPSHIFT)\t/* | pt. 1\tback to OOR1 or OCH_\t*/\n#define\tOOR2\t(17<<OPSHIFT)\t/* | pt. 2\tfwd to OOR2 or O_CH\t*/\n#define\tO_CH\t(18<<OPSHIFT)\t/* end choice\tback to OOR1\t\t*/\n#define\tOBOW\t(19<<OPSHIFT)\t/* begin word\t-\t\t\t*/\n#define\tOEOW\t(20<<OPSHIFT)\t/* end word\t-\t\t\t*/\n\n/*\n * Structure for [] character-set representation.  Character sets are\n * done as bit vectors, grouped 8 to a byte vector for compactness.\n * The individual set therefore has both a pointer to the byte vector\n * and a mask to pick out the relevant bit of each byte.  A hash code\n * simplifies testing whether two sets could be identical.\n *\n * This will get trickier for multicharacter collating elements.  As\n * preliminary hooks for dealing with such things, we also carry along\n * a string of multi-character elements, and decide the size of the\n * vectors at run time.\n */\ntypedef struct {\n\tuch *ptr;\t\t/* -> uch [csetsize] */\n\tuch mask;\t\t/* bit within array */\n\tuch hash;\t\t/* hash code */\n\tsize_t smultis;\n\tchar *multis;\t\t/* -> char[smulti]  ab\\0cd\\0ef\\0\\0 */\n} cset;\n/* note that CHadd and CHsub are unsafe, and CHIN doesn't yield 0/1 */\n#define\tCHadd(cs, c)\t((cs)->ptr[(uch)(c)] |= (cs)->mask, (cs)->hash += (c))\n#define\tCHsub(cs, c)\t((cs)->ptr[(uch)(c)] &= ~(cs)->mask, (cs)->hash -= (c))\n#define\tCHIN(cs, c)\t((cs)->ptr[(uch)(c)] & (cs)->mask)\n#define\tMCadd(p, cs, cp)\tmcadd(p, cs, cp)\t/* regcomp() internal fns */\n#define\tMCsub(p, cs, cp)\tmcsub(p, cs, cp)\n#define\tMCin(p, cs, cp)\tmcin(p, cs, cp)\n\n/* stuff for character categories */\ntypedef unsigned char cat_t;\n\n/*\n * main compiled-expression structure\n */\nstruct re_guts {\n\tint magic;\n#\t\tdefine\tMAGIC2\t((('R'^0200)<<8)|'E')\n\tsop *strip;\t\t/* malloced area for strip */\n\tint cset",
  "<!-- <section class=\"new-task\">\n    <p class=\"task-description\">Task Description</p>\n    <input type=\"text\" class=\"task-field\" ng-model=\"description\" placeholder=\"Enter new description\">\n    <button class=\"submit\" ng-click=\"task.addTask(description)\">Add Task</button>\n</section>\n\n<section class=\"task-content\">\n  <div class=\"task-list\" ng-repeat=\"task in complete.tasks\">\n    <button class=\"ion-checkmark-circled\" ng-click=\"complete.removeTask(task)\"></button>\n    <p class=\"task-description\">{{ task.description }}</p>\n  </div>\n</section> -->\n",
  "### `/setSpeedProfile (int)motorID (float)acc (float)dec (float)maxSpeed`\n#### Argument\n|Argument|Range|Description|\n|---|---|---|\n|motorID|1-4/1-8, 255|motor ID|\n|acc|14.55 - 59590 [step/s/s]|acceleration|\n|dec|14.55 - 59590 [step/s/s]|deceleration|\n|maxSpeed|15.25 - 15610 [step/s]|maximum speed|\n\n#### Executable timing\nwhen the motor is stopped\n\n#### Description\nSets the acc, dec, and maxSpeed of the speed profile together.\n\n#### Initial value\n|Argument|Initial value|Description|\n|---|---|---|\n|acc|2000|acceleration|\n|dcc|2000|deceleration|\n|maxSpeed|620|maximum speed|\n\n### `/getSpeedProfile (int)motorID`\n#### Argument\n|Argument|Range|Description|\n|---|---|---|\n|motorID|1-4/1-8, 255|motor ID|\n\n#### Executable timing\nAlways\n\n#### Description\nGets the acc, dec, and maxSpeed of the speed profile together.\n\n#### Response\n`\n/speedProfile (int)motorID (float)acc (float)dec (float)maxSpeed\n`\n\n|Argument|Range|Description|\n|---|---|---|\n|motorID|1-4/1-8, 255|motor ID|\n|acc|14.55 - 59590 [step/s/s]|acceleration|\n|dec|14.55 - 59590 [step/s/s]|deceleration|\n|maxSpeed|15.25 - 15610 [step/s]|maximum speed|\n\n### `/setFullstepSpeed (int)motorID (float)fullstepSpeed`\n#### Argument\n|Argument|Range|Description|\n|---|---|---|\n|motorID|1-4/1-8, 255|motor ID|\n|fullstepSpeed|7.63-15625 [step/s]|threshold|\n\n#### Executable timing\nAlways\n\n#### Description\nSets the threshold at which the microstepping mode automatically switches to full-step mode.\n\n#### Initial value\n15625 [steps/s]\n\n### `/getFullstepSpeed (int)motorID`\n#### Argument\n\n| Argument|Range|Description|\n|---|---|---|\n|motorID|1-4/1-8, 255|Motor ID|\n\n#### Executable timing\nAlways\n\n#### Description\nGets the threshold at which the microstepping mode automatically switches to full-step mode.\n\n#### Response\n```\n/fullstepSpeed (int)motorID (float)fullstepSpeed\n```\n\n| Argument|Range|Description|\n|---|---|---|\n|motorID|1-4|Motor ID|\n|fullstepSpeed|7.63-15625 [step/s]|Threshold|\n\n### `/setMaxSpeed (int)motorID (float)maxSpeed`\n#### Argument\n|Argument|Range|Description|\n|---|---|---|\n|motorID|1-4/1-8, 255|Motor ID|\n|maxSpeed|15.25 - 15610 [step/s]|maximum speed|\n\n#### Executable timing\nAlways\n\n#### Description\nSet the maximum speed of the speed profile\n\n#### Initial value\n620[step/s]\n\n### `/setAcc (int)motorID (float)acc`\n#### Argument\n|Argument|Range|Description|\n|---|---|---|\n|motorID|1-4/1-8, 255|motor ID|\n|acc|14.55 - 59590 [step/s/s]|acceleration|\n\n#### Executable timing\nWhen the motor is stopped\n\n#### Description\nSets the acceleration of the speed profile.\n\n#### Initial value\n2000[steps/s/s]\n\n### `/setDec (int)motorID (float)dec`\n#### Argument\n|Argument|Range|Description|\n|---|---|---|\n|motorID|1-4/1-8, 255|motor ID|\n|dec|14.55 - 59590 [step/s/s]|deceleration|\n\n#### Executable timing\nWhen the motor is stopped\n\n#### Description\nSets the deceleration of the speed profile.\n\n#### Initial value\n2000[step/s/s]\n\n### `/setMinSpeed (int)motorID (float)minSpeed`\n#### Argument\n|Argument|Range|Description|\n|---|---|---|\n|motorID|1-4/1-8, 255|motor ID|\n|minSpeed|0.0 - 976.3 [step/s]|Minimum speed|\n\n#### Executable timing\nWhen the motor is stopped\n\n#### Description\nSet the speed profile minimum speed. This value is also used for the motor speed of [`/releaseSw`](https://ponoor.com/en/docs/step-series/osc-command-reference/homing/#releasesw_intmotorid_boolact_booldir). When\n[Low speed optimization](https://ponoor.com/en/docs/step-series/osc-command-reference/motor-driver-settings/#enablelowspeedoptimize_intmotorid_boolenable) is enabled, the minimum speed of the speed profile is set to zero.\n\n#### Initial value\n0[step/s]\n\n### `/getMinSpeed (int)motorID`\n#### Argument\n|Argument|Range|Description|\n|---|---|---|\n|motorID|1-4/1-8, 255|motor ID|\n\n#### Executable timing\nAlways\n\n#### Description\nReturn the speed profile minimum speed.\n\n#### Response\n```\n/minSpeed (int)motorID (float)minSpeed\n```\n\n|Argument|Range|Description|\n|---|---|---|\n|motorID|1-4/1-8|motor ID|\n|minSpeed|0.0 - 976.3 [step/s]|Minimum speed|\n\n### `/getSpeed (int)motorID`\n#### Argument\n\n| Argument|Range|Description|\n|---|---|---|\n|motorID|1-4/1-8, 255|Motor ID|\n\n#### Executable timing\nAlways\n\n#### Description\nReturns the current motor speed.\n\n#### Response\n```\n/speed (int)motorID (float)speed\n```\n\n| Argument|range|Description|\n|---|---|---|\n|motorID|1-4/1-8|Motor ID|\n|speed|-15625 - 15625 [step/s]|Current speed|",
  "import React, { Component } from'react';\nimport { Router, browserHistory, Route, IndexRoute, withRouter } from'react-router'\nimport Login from './containers/login/Login';\nimport Welcome from './containers/home/Welcome';\nimport NotFoundPage from './components/NotFoundPage';\n\nexport default class App extends Component {\n\n  render() {\n    return (\n      <Router history={browserHistory}>\n        <Route path=\"/\" component={Login}>\n            <IndexRoute to=\"/login\"/>\n        </Route>\n        <Route path=\"/login/welcome/\" component={withRouter(Welcome)}/>\n        <Route path=\"*\" component={NotFoundPage}/>\n      </Router>\n    );\n  }\n}\n",
  "var express = require('express');\n\nvar MarvelApi = require('../lib/marvelApi');\nvar router = express.Router();\n\nvar marvelApi = new MarvelApi();\n\n/* GET users listing. */\nrouter.get('/characters', function(req, res, next) {\n  marvelApi.fetchCharacters(req.query.text).then((resp) => {\n    return res.json(resp.data);\n  }).catch((err) => {\n    return res.json(err);\n  })\n});\n\n/* GET users listing. */\nrouter.get('/comics/:comicId', function(req, res, next) {\n  var comicId = req.params.comicId;\n\n  if (!comicId) {\n    return res.json({\n      err: 'no comicId given'\n    })\n  }\n\n  marvelApi.fetchComicInfo(comicId).then((resp) => {\n    return res.json(resp.data);\n  }).catch((err) => {\n    return res.json(err);\n  })\n});\n\n\nmodule.exports = router;",
  "package com.yin.product.entity;\n\nimport com.baomidou.mybatisplus.annotation.TableId;\nimport com.baomidou.mybatisplus.annotation.TableName;\n\nimport java.io.Serializable;\n\nimport lombok.Data;\n\n/**\n * \u5c5e\u6027\u5206\u7ec4\n *\n * @author yyf\n * @email 1769498362@qq.com\n * @date 2021-05-26 15:28:23\n */\n@Data\n@TableName(\"pms_attr_group\")\npublic class AttrGroupEntity implements Serializable {\n    private static final long serialVersionUID = 1L;\n\n    /**\n     * \u5206\u7ec4id\n     */\n    @TableId\n    private Long attrGroupId;\n    /**\n     * \u7ec4\u540d\n     */\n    private String attrGroupName;\n    /**\n     * \u6392\u5e8f\n     */\n    private Integer sort;\n    /**\n     * \u63cf\u8ff0\n     */\n    private String descript;\n    /**\n     * \u7ec4\u56fe\u6807\n     */\n    private String icon;\n    /**\n     * \u6240\u5c5e\u5206\u7c7bid\n     */\n    private Long catelogId;\n\n}\n",
  "from fsl.data import cifti\nimport os.path as op\nimport numpy as np\nimport nibabel as nib\nfrom numpy import testing\nimport tests\nfrom nibabel.cifti2 import cifti2_axes\n\n\ndef volumetric_brain_model():\n    mask = np.random.randint(2, size=(10, 10, 10)) > 0\n    return cifti2_axes.BrainModelAxis.from_mask(mask, affine=np.eye(4))\n\n\ndef surface_brain_model():\n    mask = np.random.randint(2, size=100) > 0\n    return cifti2_axes.BrainModelAxis.from_mask(mask, name='cortex')\n\n\ndef volumetric_parcels(return_mask=False):\n    mask = np.random.randint(5, size=(10, 10, 10))\n    axis = cifti2_axes.ParcelsAxis(\n        [f'vol_{idx}' for idx in range(1, 5)],\n        voxels=[np.stack(np.where(mask == idx), axis=-1) for idx in range(1, 5)],\n        vertices=[{} for _ in range(1, 5)],\n        volume_shape=mask.shape,\n        affine=np.eye(4),\n    )\n    if return_mask:\n        return axis, mask\n    else:\n        return axis\n\n\ndef surface_parcels(return_mask=False):\n    mask = np.random.randint(5, size=100)\n    axis = cifti2_axes.ParcelsAxis(\n        [f'surf_{idx}' for idx in range(1, 5)],\n        voxels=[np.zeros((0, 3), dtype=int) for _ in range(1, 5)],\n        vertices=[{'CIFTI_STRUCTURE_CORTEX': np.where(mask == idx)[0]} for idx in range(1, 5)],\n        nvertices={'CIFTI_STRUCTURE_CORTEX': 100},\n    )\n    if return_mask:\n        return axis, mask\n    else:\n        return axis\n\n\ndef gen_data(axes):\n    return np.random.randn(*(5 if ax is None else len(ax) for ax in axes))\n\n\ndef test_read_gifti():\n    testdir = op.join(op.dirname(__file__), 'testdata')\n\n    shapefile = op.join(testdir, 'example.shape.gii')\n    ref_data = nib.load(shapefile).darrays[0].data\n\n    data = cifti.load(shapefile)\n    assert isinstance(data, cifti.DenseCifti)\n    assert data.arr.shape == (642, )\n    testing.assert_equal(data.arr, ref_data)\n    testing.assert_equal(data.brain_model_axis.vertex, np.arange(642))\n    assert len(data.brain_model_axis.nvertices) == 1\n    assert data.brain_model_axis.nvertices['CIFTI_STRUCTURE_OTHER'] == 642\n\n    data = cifti.load(shapefile, mask_values=(ref_data[0], ))\n    assert isinstance(data, cifti.DenseCifti)\n    assert data.arr.shape == (np.sum(ref_data!= ref_data[0]), )\n    testing.assert_equal(data.arr, ref_data[ref_data!= ref_data[0]])\n    testing.assert_equal(data.brain_model_axis.vertex, np.where(ref_data!= ref_data[0])[0])\n    assert len(data.brain_model_axis.nvertices) == 1\n    assert data.brain_model_axis.nvertices['CIFTI_STRUCTURE_OTHER'] == 642\n\n    cifti.load(op.join(testdir, 'example'))\n\n\ndef test_read_nifti():\n    mask = np.random.randint(2, size=(10, 10, 10)) > 0\n    values = np.random.randn(10, 10, 10)\n    for mask_val in (0, np.nan):\n        values[~mask] = mask_val\n        affine = np.concatenate((np.random.randn(3, 4), np.array([0, 0, 0, 1])[None, :]), axis=0)\n        with tests.testdir():\n            nib.Nifti1Image(values, affine).to_filename(\"masked_image.nii.gz\")\n            data = cifti.load(\"masked_image\")\n            assert isinstance(data, cifti.DenseCifti)\n            testing.assert_equal(data.arr, values[mask])\n            testing.assert_allclose(data.brain_model_axis.affine, affine)\n            assert len(data.brain_model_axis.nvertices) == 0\n\n\ndef check_io(data: cifti.Cifti, extension):\n    with tests.testdir():\n        data.save(\"test\")\n        assert op.isfile(f'test.{extension}.nii')\n        loaded = cifti.load(\"test\")\n        if data.arr.ndim == 1:\n            testing.assert_equal(data.arr, loaded.arr[0])\n            assert data.axes == loaded.axes[1:]\n        else:\n            testing.assert_equal(data.arr, loaded.arr)\n            assert data.axes == loaded.axes\n\n\ndef test_io_cifti():\n    for cifti_class, cifti_type, main_axis_options in (\n        (cifti.DenseCifti, 'd', (volumetric_brain_model(), surface_brain_model(),\n                                 volumetric_brain_model() + surface_brain_model())),\n        (cifti.ParcelCifti, 'p', (volumetric_parcels(), surface_parcels(),\n                                  volumetric_parcels() + surface_parcels())),\n    ):\n        for main_axis in main_axis_options:\n            with tests.testdir():\n                data_1d = cifti_class(gen_data([main_axis]), [main_axis])\n                check_io(data_1d, f'{cifti_type}scalar')\n\n                connectome = cifti_class(gen_data([main_axis, main_axis]), (main_axis, main_axis))\n                check_io(connectome, f'{cifti_type}conn')\n\n                scalar_axis = cifti2_axes.ScalarAxis(['A', 'B', 'C'])\n                scalar = cifti_class(gen_data([scalar_axis, main_axis]), (scalar_axis, main_axis))\n                check_io(scalar, f'{cifti_type}scalar')\n\n                label_axis = cifti2_axes.LabelAxis(['A', 'B', 'C'], {1: ('some parcel', (1, 0, 0, 1))})\n                label = cifti_class(gen_data([label_axis, main_axis]), (label_axis, main_axis))\n                check_io(label, f'{cifti_type}label')\n\n                series_axis = cifti2_axes.SeriesAxis(10, 3, 50, unit='HERTZ')\n                series = cifti_class(gen_data([series_axis, main_axis]), (series_axis, main_axis))\n                check_io(series, f'{cifti_type}tseries')\n\n                if cifti_type == 'd':\n                    parcel_axis = surface_parcels()\n                    dpconn = cifti_class(gen_data([parcel_axis, main_axis]), (parcel_axis, main_axis))\n                    check_io(dpconn, 'dpconn')\n                else:\n                    dense_axis = surface_brain_model()\n                    pdconn = cifti_class(gen_data([dense_axis, main_axis]), (dense_axis, main_axis))\n                    check_io(pdconn, 'pdconn')\n\n\ndef test_extract_dense():\n    vol_bm = volumetric_brain_model()\n    surf_bm = surface_brain_model()\n    for bm in (vol_bm + surf_bm, surf_bm + vol_bm):\n        for ndim, no_other_axis in ((1, True), (2, False), (2, True)):\n            if ndim == 1:\n                data = cifti.DenseCifti(",
  "<html>\n  <head>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" charset=\"UTF-8\">\n    <title>addGroupIntoMesh</title>\n<link href=\"../../../../../../images/logo-icon.svg\" rel=\"icon\" type=\"image/svg\"><script>var pathToRoot = \"../../../\";</script><script type=\"text/javascript\" src=\"../../../scripts/sourceset_dependencies.js\" async=\"async\"></script><link href=\"../../../styles/style.css\" rel=\"Stylesheet\"><link href=\"../../../styles/logo-styles.css\" rel=\"Stylesheet\"><link href=\"../../../styles/jetbrains-mono.css\" rel=\"Stylesheet\"><link href=\"../../../styles/main.css\" rel=\"Stylesheet\"><script type=\"text/javascript\" src=\"../../../scripts/clipboard.js\" async=\"async\"></script><script type=\"text/javascript\" src=\"../../../scripts/navigation-loader.js\" async=\"async\"></script><script type=\"text/javascript\" src=\"../../../scripts/platform-content-handler.js\" async=\"async\"></script><script type=\"text/javascript\" src=\"../../../scripts/main.js\" async=\"async\"></script>  </head>\n  <body>\n    <div id=\"container\">\n      <div id=\"leftColumn\"><a href=\"../../../index.html\">\n          <div id=\"logo\"></div>\n        </a>\n        <div id=\"paneSearch\"></div>\n        <div id=\"sideMenu\"></div>\n      </div>\n      <div id=\"main\">\n        <div id=\"leftToggler\"><span class=\"icon-toggler\"></span></div>\n<script type=\"text/javascript\" src=\"../../../scripts/main.js\"></script>        <div class=\"main-content\" id=\"content\" pageIds=\"HomeSDK_Android::com.tuya.smart.sdk.api.cache/ISmartCacheManager/addGroupIntoMesh/#java.lang.String#java.lang.String.../PointingToDeclaration//1977906868\">\n          <div class=\"navigation-wrapper\" id=\"navigation-wrapper\">\n            <div class=\"breadcrumbs\"><a href=\"../../../index.html\">HomeSDK_Android</a>/<a href=\"../index.html\">com.tuya.smart.sdk.api.cache</a>/<a href=\"index.html\">ISmartCacheManager</a>/<a href=\"add-group-into-mesh.html\">addGroupIntoMesh</a></div>\n            <div class=\"pull-right d-flex\">\n              <div id=\"searchBar\"></div>\n            </div>\n          </div>\n          <div class=\"cover \">\n            <h1 class=\"cover\"><span>add</span><wbr></wbr><span>Group</span><wbr></wbr><span>Into</span><wbr></wbr><span>Mesh</span></h1>\n          </div>\n<div class=\"divergent-group\" data-filterable-current=\"/home/ops/gitlab/scan_repo/e629c23a84b5fd5f344bd02df77a4fff/home-sdk-scenelib/scenelib-api/main\" data-filterable-set=\"/home/ops/gitlab/scan_repo/e629c23a84b5fd5f344bd02df77a4fff/home-sdk-scenelib/scenelib-api/main\"><div class=\"with-platform-tags\"><span class=\"pull-right\"></span></div>\n\n  <div>\n    <div class=\"platform-hinted \" data-platform-hinted=\"data-platform-hinted\"><div class=\"content sourceset-depenent-content\" data-active=\"\" data-togglable=\"/home/ops/gitlab/scan_repo/e629c23a84b5fd5f344bd02df77a4fff/home-sdk-scenelib/scenelib-api/main\"><div class=\"symbol monospace\">abstract fun <a href=\"add-group-into-mesh.html\">addGroupIntoMesh</a>(meshId: <span data-unresolved-link=\"java.lang/String///PointingToDeclaration/\">String</span>, groupId: <span data-unresolved-link=\"kotlin/Array///PointingToDeclaration/\">Array</span>&lt;<span data-unresolved-link=\"java.lang/String///PointingToDeclaration/\">String</span>&gt;): <span data-unresolved-link=\"kotlin/Boolean///PointingToDeclaration/\">Boolean</span><span class=\"top-right-position\"><span class=\"copy-icon\"></span><div class=\"copy-popup-wrapper popup-to-left\"><span class=\"copy-popup-icon\"></span><span>Content copied to clipboard</span></div></span></div></div></div>\n  </div>\n</div>\n        </div>\n        <div class=\"footer\"><span class=\"go-to-top-icon\"><a href=\"#content\"></a></span><span>\u00a9 2021 Tuya Inc.</span><span class=\"pull-right\"><span>Generated by </span><a href=\"https://github.com/Kotlin/dokka\"><span>dokka</span><span class=\"padded-icon\"></span></a></span></div>\n      </div>\n    </div>\n  </body>\n</html>\n\n",
  "<template>\n  \n  <require from=\"./abt-card-columns.css\"></require>\n  \n  <div class=\"card-columns ${class}\" css=\"${style}\">\n\n    <slot></slot>\n  </div>\n</template>\n",
  "#pragma once\n#include \"ps/app.h\"\n#include \"proto/param.pb.h\"\n#include \"dmlc/io.h\"\nnamespace ps {\n\nclass KVStore : public Customer {\n public:\n  KVStore(int id) : Customer(id) { }\n  virtual ~KVStore() { }\n\n  // load and save\n  virtual void Load(dmlc::Stream *fi) = 0;\n  virtual void Save(dmlc::Stream *fo) const = 0;\n  virtual void Clear() = 0;\n\n  // handle system call\n  void ProcessRequest(Message* request) {\n    const auto& call = request->task.param();\n    Message* response = nullptr;\n    bool push = call.push();\n    if (!push) {\n      // a pull request, need to reply with the value\n      response = new Message(*request);\n    }\n\n    if (call.replica()) {\n      // a replication request\n      if (push) {\n        SetReplica(request);\n      } else {\n        GetReplica(response);\n      }\n    } else {\n      // a normal request\n      if (push) {\n        HandlePush(request);\n      } else {\n        HandlePull(response);\n      }\n    }\n\n    if (response) Reply(request, response);\n  }\n\n protected:\n  /// User-defineded functions ////\n\n  /// @brief Fill \"msg\" with the values it requests, e.g.,\n  ///   msg->value(0)[0] = my_val_[msg->key[0]];\n  virtual void HandlePull(Message* msg) = 0;\n\n  /// @brief Set the values in \"msg\" into into my data strcuture, e.g..\n  ///  my_val_[msg->key[0]] = msg->value(0)[0];\n  virtual void HandlePush(const Message* msg) = 0;\n\n  /// @brief the message contains the backup KV pairs sent by the master node of the key\n  /// segment to its replica node. merge these pairs into my replica, say\n  /// replica_[msg->sender] =...\n  virtual void SetReplica(const Message* msg) { }\n\n  /// @brief retrieve the replica. a new server node replacing a dead server will first\n  /// ask for the dead's replica node for the data\n  virtual void GetReplica(Message* msg) { }\n\n  /// @brief a new server node fill its own datastructure via the the replica data from\n  /// the dead's replica node\n  virtual void Recover(Message* msg) { }\n};\n\n}  // namespace ps\n",
  "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/xhtml;charset=UTF-8\"/>\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=9\"/>\n<meta name=\"generator\" content=\"Doxygen 1.8.14\"/>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n<title>Mozilla Iris: iris.api.core.firefox_ui.location_bar.LocationBar Class Reference</title>\n<link href=\"tabs.css\" rel=\"stylesheet\" type=\"text/css\"/>\n<script type=\"text/javascript\" src=\"jquery.js\"></script>\n<script type=\"text/javascript\" src=\"dynsections.js\"></script>\n<link href=\"navtree.css\" rel=\"stylesheet\" type=\"text/css\"/>\n<script type=\"text/javascript\" src=\"resize.js\"></script>\n<script type=\"text/javascript\" src=\"navtreedata.js\"></script>\n<script type=\"text/javascript\" src=\"navtree.js\"></script>\n<script type=\"text/javascript\">\n/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */\n  $(document).ready(initResizable);\n/* @license-end */</script>\n<link href=\"search/search.css\" rel=\"stylesheet\" type=\"text/css\"/>\n<script type=\"text/javascript\" src=\"search/searchdata.js\"></script>\n<script type=\"text/javascript\" src=\"search/search.js\"></script>\n<link href=\"doxygen.css\" rel=\"stylesheet\" type=\"text/css\" />\n</head>\n<body>\n<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n<div id=\"titlearea\">\n<table cellspacing=\"0\" cellpadding=\"0\">\n <tbody>\n <tr style=\"height: 56px;\">\n  <td id=\"projectalign\" style=\"padding-left: 0.5em;\">\n   <div id=\"projectname\">Mozilla Iris\n   &#160;<span id=\"projectnumber\">1.0</span>\n   </div>\n   <div id=\"projectbrief\">A visual test suite for Firefox</div>\n  </td>\n </tr>\n </tbody>\n</table>\n</div>\n<!-- end header part -->\n<!-- Generated by Doxygen 1.8.14 -->\n<script type=\"text/javascript\">\n/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */\nvar searchBox = new SearchBox(\"searchBox\", \"search\",false,'Search');\n/* @license-end */\n</script>\n<script type=\"text/javascript\" src=\"menudata.js\"></script>\n<script type=\"text/javascript\" src=\"menu.js\"></script>\n<script type=\"text/javascript\">\n/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */\n$(function() {\n  initMenu('',true,false,'search.php','Search');\n  $(document).ready(function() { init_search(); });\n});\n/* @license-end */</script>\n<div id=\"main-nav\"></div>\n</div><!-- top -->\n<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n  <div id=\"nav-tree\">\n    <div id=\"nav-tree-contents\">\n      <div id=\"nav-sync\" class=\"sync\"></div>\n    </div>\n  </div>\n  <div id=\"splitbar\" style=\"-moz-user-select:none;\" \n       class=\"ui-resizable-handle\">\n  </div>\n</div>\n<script type=\"text/javascript\">\n/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */\n$(document).ready(function(){initNavTree('classiris_1_1api_1_1core_1_1firefox__ui_1_1location__bar_1_1_location_bar.html','');});\n/* @license-end */\n</script>\n<div id=\"doc-content\">\n<!-- window showing the filter options -->\n<div id=\"MSearchSelectWindow\"\n     onmouseover=\"return searchBox.OnSearchSelectShow()\"\n     onmouseout=\"return searchBox.OnSearchSelectHide()\"\n     onkeydown=\"return searchBox.OnSearchSelectKey(event)\">\n</div>\n\n<!-- iframe showing the search results (closed by default) -->\n<div id=\"MSearchResultsWindow\">\n<iframe src=\"javascript:void(0)\" frameborder=\"0\" \n        name=\"MSearchResults\" id=\"MSearchResults\">\n</iframe>\n</div>\n\n<div class=\"header\">\n  <div class=\"summary\">\n<a href=\"#pub-static-attribs\">Static Public Attributes</a> &#124;\n<a href=\"classiris_1_1api_1_1core_1_1firefox__ui_1_1location__bar_1_1_location_bar-members.html\">List of all members</a>  </div>\n  <div class=\"headertitle\">\n<div class=\"title\">iris.api.core.firefox_ui.location_bar.LocationBar Class Reference</div>  </div>\n</div><!--header-->\n<div class=\"contents\">\n\n<p>Inherits object.</p>\n<table class=\"memberdecls\">\n<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-static-attribs\"></a>\nStatic Public Attributes</h2></td></tr>\n<tr class=\"memitem:a3c458c3fd5cf53e80c75a3e057c69152\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classiris_1_1api_1_1core_1_1firefox__ui_1_1location__bar_1_1_location_bar.html#a3c458c3fd5cf53e80c75a3e057c69152\">IDENTITY_ICON</a> = <a class=\"el\" href=\"classiris_1_1api_1_1core_1_1pattern_1_1_pattern.html\">Pattern</a>('identity_icon.png')</td></tr>\n<tr class=\"separator:a3c458c3fd5cf53e80c75a3e057c69152\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:aabdd975c58b71e94e0e306b7e098166d\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" valign=\"bottom\"><a class=\"el\" href=\"classiris_1_1api_1_1core_1_1firefox__ui_1_1location__bar_1_1_location_bar.html#aabdd975c58b71e94e0e306b7e098166d\">HISTORY_DROPMARKER</a> = <a class=\"el\" href=\"classiris_1_1api_1_1core_1_1pattern_1_1_pattern.html\">Pattern</a>('historydropmarker.png')</td></tr>\n<tr class=\"separator:aabdd975c58b71e94e0e306b7e098166d\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n<tr class=\"memitem:a4f7a5a3b5e027db73f309d90802b75d0\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" valign",
  "<?php\n/**\n * phpblog Validation.php.\n * Initial Version by: Em\n * Creation Date: 4/15/2021\n */\n\nnamespace app\\core;\n\n/**\n * Validation class\n *\n * @author M Aslam <aslam4webz@gmail.com>\n * @package  app\\core;\n */\n\nclass Validation\n{\n\n    public $patterns = [\n        'uri'           => '[A-Za-z0-9-\\/_?&=]+',\n        'url'           => '[A-Za-z0-9-:.\\/_?&=#]+',\n        'alpha'         => '[\\p{L}]+',\n        'words'         => '[\\p{L}\\s]+',\n        'alphanum'      => '[\\p{L}0-9]+',\n        'int'           => '[0-9]+',\n        'float'         => '[0-9\\.,]+',\n        'tel'           => '[0-9+\\s()-]+',\n        'text'          => '[\\p{L}0-9\\s-.,;:!\"%&()?+\\'\u00b0#\\/@]+',\n        'file'          => '[\\p{L}\\s0-9-_!%&()=\\[\\]#@,.;+]+\\.[A-Za-z0-9]{2,4}',\n        'folder'        => '[\\p{L}\\s0-9-_!%&()=\\[\\]#@,.;+]+',\n        'address'       => '[\\p{L}0-9\\s.,()\u00b0-]+',\n        'date_dmy'      => '[0-9]{1,2}\\-[0-9]{1,2}\\-[0-9]{4}',\n        'date_ymd'      => '[0-9]{4}\\-[0-9]{1,2}\\-[0-9]{1,2}',\n        'email'         => '[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+[.]+[a-z-A-Z]'\n    ];\n\n    public $errors = [];\n\n    public function name($name)\n    {\n        $this->name = $name;\n        return $this;\n    }\n\n    public function value($value)\n    {\n        $this->value = $value;\n        return $this;\n    }\n\n    public function file($value)\n    {\n        $this->file = $value;\n        return $this;\n    }\n\n    public function pattern($name)\n    {\n\n        if ($name == 'array') {\n\n            if (!is_array($this->value)) {\n                $this->errors[$this->name] =  $this->name.'not valid.';\n            }\n        } else {\n\n            $regex = '/^('. $this->patterns[$name]. ')$/u';\n            if ($this->value!= '' &&!preg_match($regex, $this->value)) {\n                $this->errors[$this->name] =  $this->name.'not valid.';\n            }\n        }\n        return $this;\n    }\n\n    public function customPattern($pattern)\n    {\n\n        $regex = '/^('. $pattern. ')$/u';\n        if ($this->value!= '' &&!preg_match($regex, $this->value)) {\n            $this->errors[$this->name] = $this->name.'not valid.';\n        }\n        return $this;\n    }\n\n    public function required()\n    {\n        if ((isset($this->file) && $this->file['error'] == 4) || ($this->value == '' || $this->value == null)) {\n            $this->errors[$this->name] = $this->name.'is required.';\n        }\n        return $this;\n    }\n\n    public function min($length)\n    {\n\n        if (is_string($this->value)) {\n\n            if (strlen($this->value) < $length) {\n                $this->errors[$this->name] ='Min length of this field must be '. $length;\n            }\n        } else {\n\n            if ($this->value < $length) {\n                $this->errors[$this->name] ='Min length of this field must be '. $length;\n            }\n        }\n        return $this;\n    }\n\n    public function max($length)\n    {\n        if (is_string($this->value)) {\n            if (strlen($this->value) > $length) {\n                $this->errors[$this->name] = 'Max length of this field must be'. $length;\n            }\n        } else {\n            if ($this->value > $length) {\n                $this->errors[$this->name] = 'Max length of this field must be'. $length;\n            }\n        }\n        return $this;\n    }\n\n    public function equal($value)\n    {\n\n        if ($this->value!= $value ) {\n            $this->errors[$this->name] = 'The passwords must be the same';\n        }\n        return $this;\n    }\n\n    public function isSuccess()\n    {\n        if (empty($this->errors)) return true;\n    }\n\n    public function getErrors()\n    {\n        if (!$this->isSuccess()) return $this->errors;\n    }\n\n    public function displayErrors()\n    {\n\n        $html = '<ul>';\n        foreach ($this->getErrors() as $error) {\n            $html.= '<li>'. $error. '</li>';\n        }\n        $html.= '</ul>';\n\n        return $html;\n    }\n\n    public function result()\n    {\n\n        if (!$this->isSuccess()) {\n\n            foreach ($this->getErrors() as $error) {\n                echo \"$error\\n\";\n            }\n            exit;\n        } else {\n            return true;\n        }\n    }\n\n    public static function is_int($value)\n    {\n        if (filter_var($value, FILTER_VALIDATE_INT)) return true;\n    }\n\n    public static function is_float($value)\n    {\n        if (filter_var($value, FILTER_VALIDATE_FLOAT)) return true;\n    }\n\n    public static function is_alpha($value)\n    {\n        if (filter_var($value, FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => \"/^[a-zA-Z]+$/\")))) return true;\n    }\n\n    public static function is_alphanum($value)\n    {\n        if (filter_var($value, FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => \"/^[a-zA-Z0-9]+$/\")))) return true;\n    }\n\n    public static function is_url($value)\n    {\n        if (filter_var($value, FILTER_VALIDATE_URL)) return true;\n    }\n\n    public static function is_uri($value)\n    {\n        if (filter_var($value, FILTER_VALIDATE_REGEXP, array('options' => array('regexp' => \"/^[A-Za-z0-9-\\/_]+$/\")))) return true;\n    }\n\n    public static function is_bool($value)\n    {\n        if (is_bool(filter_var($value, FILTER_VALIDATE_BOOLEAN, FILTER_NULL_ON_FAILURE))) return true;\n    }\n\n    public function is_email($value)\n    {\n        if($value!= ''){\n            if (!filter_var($value, FILTER_VALIDATE_EMAIL)) {\n                $this->errors[$this->name] = 'Email is not valid';\n            };\n        }\n\n        return $this;\n    }\n\n    //Checks for duplicate values on selected table\n    public function uniqueValOnDb($value, $db, $tableName){\n        $statement = $db->prepare(\"SELECT * FROM $tableName WHERE $this->name = :$value\");\n        $statement->bindValue(\":$value\", $value);\n        $statement->execute();\n        $record = $statement->fetchObject();\n        if($record){\n            $this->errors[$this->name] = 'is already exists';\n        }else{\n            return $this;\n        }\n    }\n}\n\n\n",
  "<!DOCTYPE html>\n<html class=\"\" lang=\"en-US\" prefix=\"og: http://ogp.me/ns# fb: http://ogp.me/ns/fb#\">\n<head>\n  \n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width\">\n  <title>\n      \n          \n              Provisioning Errors\n          \n      \n  </title>\n\n  <link rel=\"icon\" type=\"image/png\" href=\"/docs/img/favicon.png\">\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"http://jijeesh.github.io/docs/sass/app.min.css?1585318203\"/>\n\n  \n  \n  \n  \n  \n  \n  \n  \n\n  \n  <script charset=\"utf-8\" type=\"text/javascript\" src=\"http://jijeesh.github.io/docs/js/vendor.min.js?1585318203\"></script>\n\n \n  <script defer charset=\"utf-8\" type=\"text/javascript\" src=\"http://jijeesh.github.io/docs/js/instantsearch.min.js?1585318203\"></script>\n\n  \n  \n    \n  <script charset=\"utf-8\" type=\"text/javascript\" src=\"http://jijeesh.github.io/docs/js/app.min.js?1585318203\"></script>\n\n  \n  \n\n  <link href=\"http://jijeesh.github.io/docs/rke/latest/en/troubleshooting/provisioning-errors/index.xml\" rel=\"alternate\" type=\"application/rss+xml\" title=\"Provisioning Errors\" />\n\n  \n    <meta name=\"description\" content=\"Failed to get job complete status Most common reason for this error is that a node is having issues that block the deploy job from completing successfully. See Get node conditions how to check node conditions.\nYou can also retrieve the log from the job to see if it has an indication of the error, make sure you replace rke-network-plugin-deploy-job with the job name from the error:\nExample command to get logs for error Failed to get job complete status for job rke-network-plugin-deploy-job:\"/>\n  \n\n  \n  <meta name=\"twitter:card\" content=\"summary_large_image\" />\n  <meta name=\"twitter:description\" content=\"\" />\n  <meta name=\"twitter:title\" content=\"Provisioning Errors\" />\n  <meta name=\"twitter:site\" content=\"\" />\n  <meta name=\"twitter:creator\" content=\"\" />\n\n  \n  <meta property=\"og:locale\" content=\"en_US\" />\n  <meta property=\"og:type\" content=\"website\" />\n  <meta property=\"og:title\" content=\"Provisioning Errors\">\n  <meta property=\"og:description\" content=\"\">\n  <meta property=\"og:url\" content=\"http://jijeesh.github.io/docs/rke/latest/en/troubleshooting/provisioning-errors/\" />\n  <meta property=\"og:site_name\" content=\"Rancher Labs\" />\n  <meta property=\"og:image\" content=\"http://jijeesh.github.io/docs/img/logo-square.png\" />\n  \n  \n\n\n\n  \n  <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\n    new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],\n    j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\n    'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);\n    })(window,document,'script','dataLayer','GTM-57KS2MW');</script>\n  \n\n  \n  <script>\n  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n\n  ga('create', 'UA-56382716-3', 'auto');\n  ga('set', 'anonymizeIp', true);\n  ga('send', 'pageview');\n\n  </script>\n  \n</head>\n<body lang=\"en\" class=\"rke\">\n    \n    <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-57KS2MW\"\n    height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n    \n  <a name=\"top\"></a>\n\n\n<div class=\"main\"> \n    <header>\n        <nav>\n            <div class=\"mobile-header-container\">\n                <div class=\"mobile-nav-header\">\n                    <div class=\"logo\">\n                        <a href=\"/\"><img class=\"logo-image\" src=\"/imgs/rancher-logo-horiz-color.png\" alt=\"The Logo of Rancher: an Open Source Kubernetes Multi Cluster Management Platform\"></a>\n                    </div>\n\n                    <div class=\"mobile-search\"><a href=\"#\" class=\"search-open\" data-launch-id=\"open-search\"><img class=\"icon\" src=\"/imgs/icon-search-mobile.svg\" alt=\"Gray Search Icon\"></a></div>\n\n                    <div class=\"mobile-menu-opener\">\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                    </div>\n                </div>\n\n                <div class=\"nav-mobile-menus jquery-accordion-menu\">\n                    <ul class=\"mobile-menus-wrap\">\n                        <li class=\"mobile-menu-item\">\n                            <a class=\"mobile-menu\" href=\"#\">Why Rancher?</a>\n\n                            <ul class=\"submenu submenus-wrap\">\n                                <li class=\"\"><a href=\"/what-is-rancher/overview/\">Why Rancher?</a></li>\n                                <li class=\"\"><a href=\"/kubernetes/\">Why Kubernetes?</a></li>\n                                <li class=\"\"><a href=\"/what-is-rancher/what-rancher-adds-to-kubernetes/\">What Rancher Adds to Kubernetes</a></li>\n                                <li class=\"\"><a href=\"/what-is-rancher/how-is-rancher-different/\">The Rancher Difference</a></li>\n                            </ul>\n                        </li>\n                        <li class=\"mobile-menu-item\">\n                            <a class=\"mobile-menu\" href=\"#\">Products</a>\n\n                            <ul class=\"submenu submenus-wrap\">\n                                <li><a href=\"/products/\">Overview</a></li>\n                                <li><a href=\"/products/rancher/\">Rancher</a></li>\n                                <li><a href=\"https://k3s.io\" target=\"_blank\">k3s</a></li>\n                                <li><a href=\"https://rio.io\" target=\"_blank\">Rio</a></li>\n                                <li><a href=\"/request-a-demo/\">Request a demo</a></li>\n                            </ul>\n                        </li>\n                        <li class=\"mobile-menu-item\">\n                            <a class=\"mobile-menu\" href=\"#\">Customers</a>\n\n                            <ul class=\"submenu submenus-wrap\">\n                                <li><a href=\"/customers/illumina/\">Illumina</a></li>\n                                <li><a href=\"/customers/sling/\">Sling TV</a></li>\n                                <li><a href=\"/customers/eoc/\">EOC</a></li>\n                                <li><a href=\"/customers/deutsche-bahn/\">Deutsche Bahn</a></li>\n                                <li><a href=\"/customers/\">See All Customer Stories</a></li>\n                            </ul>\n                        </li>\n                        <li class=\"mobile-menu-item\">\n                            <a class=\"mobile-menu\" href=\"#\">Community</a>",
  "angular\n   .module('citizenos')\n   .factory('VoteDelegation', ['$log', '$resource','sLocation', function ($log, $resource, sLocation) {\n        $log.debug('citizenos.factory.VoteDelegation');\n\n        var VoteDelegation = $resource(\n            sLocation.getAbsoluteUrlApi('/api/users/self/topics/:topicId/votes/:voteId/delegations'),\n            {topicId: '@topicId', voteId: '@voteId'},\n            {\n                save: {\n                    method: 'POST',\n                    transformResponse: function (data) {\n                        if (status > 0 && status < 400) {\n                            return angular.fromJson(data).data;\n                        } else {\n                            return angular.fromJson(data);\n                        }\n                    }\n                },\n                delete: {\n                    method: 'DELETE'\n                }\n            }\n        );\n\n        return VoteDelegation;\n    }]);\n",
  "<?php\n\nnamespace ApiBundle\\Repository;\n\nuse ApiBundle\\Entity\\Device;\nuse Doctrine\\ORM\\EntityRepository;\n\n/**\n * DeviceRepository\n *\n * This class was generated by the Doctrine ORM. Add your own custom\n * repository methods below.\n */\nclass DeviceRepository extends EntityRepository\n{\n    public function save(Device $entity)\n    {\n        $this->_em->persist($entity);\n        $this->_em->flush();\n    }\n\n    public function update(Device $entity)\n    {\n        $this->_em->merge($entity);\n        $this->_em->flush();\n    }\n\n    public function remove(Device $entity)\n    {\n        $this->_em->remove($entity);\n        $this->_em->flush();\n    }\n\n    public function getAllAcceptedDevices()\n    {\n        return $this->findBy(['accepted' => 1]);\n    }\n}\n",
  "import { Component, Input, HostBinding, ViewChild, AfterViewInit, OnDestroy, ElementRef, ChangeDetectionStrategy } from '@angular/core';\nimport { CdkScrollable } from '@angular/cdk/scrolling';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable, Subject, BehaviorSubject, Subscription, SubscriptionLike } from 'rxjs';\nimport { map, tap, throttleTime } from 'rxjs/operators';\nimport { SmoothScroll, SmoothScrollEaseFunc } from '../smooth-scroll/smooth-scroll';\n\ninterface NgScrollbarState {\n  viewStyle?: {\n    width?: string;\n    height?: string;\n    paddingRight?: string;\n    paddingBottom?: string;\n  };\n  displayX?: boolean;\n  displayY?: boolean;\n}\n\nconst defaultState: NgScrollbarState = {\n  viewStyle: {\n    paddingRight: '0',\n    paddingBottom: '0',\n  },\n  displayX: false,\n  displayY: false\n};\n\n@Component({\n  selector: 'ng-scrollbar',\n  templateUrl: 'ng-scrollbar.html',\n  styleUrls: ['ng-scrollbar.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgScrollbar implements AfterViewInit, OnDestroy {\n\n  /** Horizontal custom scrollbar */\n  @Input() trackX = false;\n  /** Vertical custom Scrollbar */\n  @Input() trackY = true;\n  /** Auto hide scrollbars on mouse leave */\n  @Input() autoHide = false;\n  /** Auto update scrollbars on content changes (Mutation Observer) */\n  @Input() autoUpdate = true;\n  /** Viewport class */\n  @Input() viewClass: string;\n  /** Scrollbars class */\n  @Input() barClass: string;\n  /** Scrollbars thumbnails class */\n  @Input() thumbClass: string;\n  /** The smooth scroll duration when a scrollbar is clicked */\n  @Input() scrollToDuration = 400;\n  /** Use overlay scrollbars */\n  @Input() overlay: boolean;\n  /** Disable custom scrollbars on specific breakpoints */\n  @Input() disableOnBreakpoints = [\n    Breakpoints.HandsetLandscape,\n    Breakpoints.HandsetPortrait\n  ];\n\n  /** Disable custom scrollbars and switch back to native scrollbars */\n  @Input('disabled') set disableScrollbars(disable: boolean) {\n    disable? this.disable() : this.enable();\n  }\n\n  disabled = false;\n\n  @ViewChild(CdkScrollable) scrollable: CdkScrollable;\n  @ViewChild(SmoothScroll) smoothScroll: SmoothScroll;\n  @ViewChild('vertical', {read: ElementRef}) verticalScrollbar: ElementRef;\n  @ViewChild('horizontal', {read: ElementRef}) horizontalScrollbar: ElementRef;\n\n  @HostBinding('class.ng-scrollbar-auto-hide') get autoHideClass() {\n    return this.autoHide;\n  }\n\n  /** Native scrollbar size */\n  private _nativeScrollbarSize: string;\n\n  /** Scrollbar state */\n  private _state = new BehaviorSubject<NgScrollbarState>(defaultState);\n  viewStyle: Observable<any> = this._state.pipe(map((state: NgScrollbarState) => state.viewStyle));\n  displayX: Observable<boolean> = this._state.pipe(map((state: NgScrollbarState) => state.displayX));\n  displayY: Observable<boolean> = this._state.pipe(map((state: NgScrollbarState) => state.displayY));\n\n  /** Mutation observer subscription */\n  private _updateObserverSub$: SubscriptionLike = Subscription.EMPTY;\n  /** CDK breakpoint subscription */\n  private _breakpointSub$: SubscriptionLike = Subscription.EMPTY;\n  /** Viewport Element */\n  view: HTMLElement;\n  /** Observe content changes */\n  private _observer: MutationObserver;\n\n  /** Steam that emits when scrollbar thumbnail needs to update (for internal uses) */\n  private _updateObserver = new Subject();\n  updateObserver = this._updateObserver.asObservable();\n\n  constructor(private breakpointObserver: BreakpointObserver) {\n  }\n\n  ngAfterViewInit() {\n    this.view = this.scrollable.getElementRef().nativeElement;\n\n    if (this.disableOnBreakpoints) {\n      // Enable/Disable custom scrollbar on breakpoints (Used to disable scrollbars on mobile phones)\n      this._breakpointSub$ = this.breakpointObserver.observe(this.disableOnBreakpoints).pipe(\n        // filter(() => this.viewInitialized),\n        tap((result: BreakpointState) => result.matches? this.disable() : this.enable())\n      ).subscribe();\n    } else {\n      this.enable();\n    }\n\n    // Update state on content changes\n    this._updateObserverSub$ = this.updateObserver.pipe(\n      throttleTime(200),\n      tap(() => this.updateState())\n    ).subscribe();\n  }\n\n  ngOnDestroy() {\n    this._breakpointSub$.unsubscribe();\n    this._updateObserverSub$.unsubscribe();\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n  }\n\n  /**\n   * Update scrollbar thumbnail position\n   */\n  update() {\n    if (!this.disabled) {\n      this._updateObserver.next();\n    }\n  }\n\n  /**\n   * Enable custom scrollbar\n   */\n  enable() {\n    if (this.view) {\n      this.disabled = false;\n      // Hide native scrollbars\n      this._nativeScrollbarSize = `${this.view.offsetWidth - this.view.clientWidth + 1}px`;\n      this.updateState();\n\n      if (this.autoUpdate) {\n        // Observe content changes\n        this._observer = new MutationObserver(() => this.update());\n        this._observer.observe(this.view, {subtree: true, childList: true, characterData: true});\n      }\n    }\n  }\n\n  /**\n   * Disable custom scrollbar\n   */\n  disable() {\n    this.disabled = true;\n    // Show Native Scrollbars\n    this.resetState();\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n  }\n\n  scrollTo(options: ScrollToOptions): Observable<void> {\n    return this.smoothScroll.scrollTo(options);\n  }\n\n  scrollToElement(selector: string, offset = 0, duration?: number, easeFunc?: SmoothScrollEaseFunc): Observable<void> {\n    return this.smoothScroll.scrollToElement(selector, offset, duration, easeFunc);\n  }\n\n  scrollXTo(to: number, duration?: number, easeFunc?: SmoothScrollEaseFunc): Observable<void> {\n    return this.smoothScroll.scrollXTo(to, duration, easeFunc);\n  }\n\n  scrollYTo(to: number, duration?: number, easeFunc?: SmoothScrollEaseFunc): Observable<void> {\n    return this.smoothScroll.scrollYTo(to, duration, easeFunc);\n  }\n\n  scrollToTop(duration?: number, easeFunc?: SmoothScrollEaseFunc): Observable<void> {\n    return this.smoothScroll.scrollToTop(duration, easeFunc);\n  }\n\n  scrollToBottom(duration?: number, easeFunc?: SmoothScrollEaseFunc): Observable<void> {\n    return this.smoothScroll.scrollToBottom(duration, easeFunc);\n  }\n\n  scrollToRight(duration?: number, easeFunc?: SmoothScrollEaseFunc): Observable<void> {\n    return this.smoothScroll.scrollToRight(duration, easeFunc);\n  }\n\n  scrollToLeft(duration?: number, easeFunc?: SmoothScrollEaseFunc): Observable<void> {\n    return this.smoothScroll.scrollToLeft(duration, easeFunc);\n  }\n\n  private updateState() {\n    let paddingBottom = '0', paddingRight = '0', displayY = false, displayX = false;\n    const size = `calc(100% + ${this._nativeScrollbarSize})`;\n    if (this.trackY) {\n      // Check if vertical scrollbar should be displayed\n      if (this.view.scrollHeight > this.view.clientHeight) {\n        displayY = true;\n        paddingRight = this.overlay? '0' : this._nativeScrollbarSize;\n      }\n    }\n    if (this.trackX) {\n      // Check if horizontal scrollbar should be displayed\n      if (this.view.scrollWidth > this.view.clientWidth) {\n        displayX = true;\n        padding",
  "FROM node:lts-alpine\n\nENV NODE_ENV=development\n\nCOPY..\n\nRUN yarn install\n\nCMD [ \"yarn\", \"start\" ]",
  "/* WHEN MAKING A NEW THEME, DO NOT CHANGE ANYTHING IN HERE */\n/* ^ Actually, that's a lie ^ */\n/*test*/\nbody {\n  margin: 0;\n}\n\nbutton {\n  font-size: 24px;\n}\n\n.center {\n  text-align: center;\n}\n\n#content {\n  margin-bottom: 80px;\n  margin-left: 1%;\n  margin-top: 80px;\n}\n\n#content button {\n  margin-left: 32px;\n}\n\nheader {\n  font-size: 48px;\n  padding-left: 1%;\n  position: fixed;\n  top: 0;\n  width: 100%;\n}\n\nheader button {\n  font-size: 24px;\n  height: 48px;\n  margin-top: -24px;\n  padding-bottom: 4px;\n  position: absolute;\n  top: 50%;\n}\n\nheader.right {\n  float: right;\n  right: 2%;\n}\n\n.msg {\n  word-break: break-all;\n  font-size: 20px;\n}\n\n#msgForm {\n  bottom: 0;\n  margin-bottom: 16px;\n  padding: 4px 0px;\n  position: fixed;\n  width: 100%;\n}\n\n#msgForm button {\n  margin-left: 0;\n}\n\n#msgSender {\n  border-radius: 20px;\n  font-size: 20px;\n  margin-right:.5%;\n  padding: 4px 8px;\n  width: 90%;\n}\n\n/* Stuff for the fancy menu */\n.sidenav {\n  height: 100%;\n  overflow-x: hidden;\n  position: fixed;\n  padding-top: 60px;\n  top: 0;\n  transition: 0.5s;\n  width: 250px;\n  z-index: 1;\n  font-size: 25px;\n}\n\n.sidenav * {\n  margin-left: 32px;\n}\n\n.sidenav a {\n  padding: 8px 8px 8px 16px;\n  font-size: 25px;\n  display: block;\n  transition: 0.3s;\n}\n\n.sidenav.backbtn {\n  position: absolute;\n  top: 0;\n  left: -16px;\n  font-size: 36px;\n  margin-left: 50px;\n}\n\n.sidenav.closebtn {\n  position: absolute;\n  top: 0;\n  right: 25px;\n  font-size: 36px;\n  margin-left: 50px;\n}\n\n.sidenav div {\n  margin-bottom: 64px;\n  margin-left: 0px;\n}\n\n.sidenav-left {\n  left: -250px;\n}\n\n.sidenav-right {\n  right: -250px;\n}\n",
  "\ufeffusing LionFire.Results;\nusing System.Threading.Tasks;\n\nnamespace LionFire.Resolves\n{\n    public interface IPuts<in T>\n    {\n        /// <summary>\n        /// Set the current Value to value, and initiate a Put to the underlying data store with that value.\n        /// </summary>\n        /// <param name=\"value\"></param>\n        /// <returns></returns>\n        Task<ISuccessResult> Put(T value);\n    }\n}\n",
  "# -*- coding: utf-8 -*-\n# This Source Code Form is subject to the terms of the Mozilla Public\n# License, v. 2.0. If a copy of the MPL was not distributed with this\n# file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\nimport asyncio\nimport datetime\nimport sys\n\nimport aioamqp\nimport flask\nimport kombu\n\nimport tooltool_api.lib.dockerflow\nimport tooltool_api.lib.log\n\nlogger = tooltool_api.lib.log.get_logger(__name__)\n\nDEFAULT_CONFIG = dict(PULSE_HOST=\"pulse.mozilla.org\", PULSE_PORT=5671, PULSE_VIRTUAL_HOST=\"/\", PULSE_USE_SSL=True, PULSE_CONNECTION_TIMEOUT=5)\n\n\nasync def _create_consumer(user, password, exchange, topic, callback):\n    \"\"\"\n    Create an async consumer for Mozilla pulse queues\n    Inspired by : https://github.com/mozilla-releng/fennec-aurora-task-creator/blob/master/fennec_aurora_task_creator/worker.py  # noqa\n    \"\"\"\n    assert isinstance(user, str)\n    assert isinstance(password, str)\n    assert isinstance(exchange, str)\n    assert isinstance(topic, str)\n\n    host = \"pulse.mozilla.org\"\n    port = 5671\n\n    transport, protocol = await aioamqp.connect(host=host, login=user, password=password, ssl=True, port=port, login_method=\"PLAIN\")\n\n    channel = await protocol.channel()\n    await channel.basic_qos(prefetch_count=1, prefetch_size=0, connection_global=False)\n\n    # get exchange name out from full exchange name\n    exchange_name = exchange\n    if exchange.startswith(f\"exchange/{user}/\"):\n        exchange_name = exchange[len(f\"exchange/{user}/\") :]\n    elif exchange.startswith(f\"exchange/\"):\n        exchange_name = exchange[len(f\"exchange/\") :]\n\n    # full exchange name should start with \"exchange/\"\n    if not exchange.startswith(\"exchange/\"):\n        exchange = f\"exchange/{exchange}\"\n\n    # queue is required to:\n    # - start with \"queue/\"\n    # - user should follow the \"queue/\"\n    # - after that \"exchange/\" should follow, this is not requirement from\n    #   pulse but something we started doing in release services\n    queue = f\"queue/{user}/exchange/{exchange_name}\"\n\n    await channel.queue_declare(queue_name=queue, durable=True)\n\n    # in case we are going to listen to an exchange that is specific for this\n    # user, we need to ensure that exchange exists before first message is\n    # sent (this is what creates exchange)\n    if exchange.startswith(f\"exchange/{user}/\"):\n        await channel.exchange_declare(exchange_name=exchange, type_name=\"topic\", durable=True)\n\n    logger.info(\"Connected\", queue=queue, topic=topic, exchange=exchange)\n\n    await channel.queue_bind(exchange_name=exchange, queue_name=queue, routing_key=topic)\n    await channel.basic_consume(callback, queue_name=queue)\n\n    logger.info(\"Worker starts consuming messages\")\n    logger.info(\"Starting loop to ensure connection is open\")\n    while True:\n        await asyncio.sleep(10)\n        try:\n            await protocol.ensure_open()\n        # raise AmqpClosedConnection in case the connection is closed.\n        except Exception:\n            await protocol.close()\n            transport.close()\n            raise\n\n\nasync def create_consumer(user, password, exchange, topic, callback):\n    while True:\n        try:\n            return await _create_consumer(user, password, exchange, topic, callback)\n        except (aioamqp.AmqpClosedConnection, OSError):\n            logger.exception(\"Reconnecting in 10 seconds\")\n            await asyncio.sleep(10)\n\n\ndef run_consumer(consumer):\n    \"\"\"\n    Helper to run indefinitely an asyncio consumer\n    \"\"\"\n    event_loop = asyncio.get_event_loop()\n\n    try:\n        event_loop.run_until_complete(consumer)\n        event_loop.run_forever()\n    except KeyboardInterrupt:\n        # TODO: make better shutdown\n        logger.exception(\"KeyboardInterrupt registered, exiting.\")\n        event_loop.stop()\n        while event_loop.is_running():\n            pass\n        event_loop.close()\n        sys.exit()\n\n\nclass Pulse(object):\n    \"\"\" Documentation about Pulse\n\n        https://wiki.mozilla.org/Auto-tools/Projects/Pulse\n        https://wiki.mozilla.org/Auto-tools/Projects/Pulse/Exchanges\n    \"\"\"\n\n    def __init__(self, host, port, user, password, virtual_host=\"/\", ssl=True, connect_timeout=5):\n        self.connection = kombu.Connection(\n            hostname=host, port=port, userid=user, password=password, virtual_host=virtual_host, ssl=ssl, connect_timeout=connect_timeout\n        )\n\n    def ping(self):\n        with self.connection as connection:\n            if connection.connected:\n                connection.close()\n                connection.connect()\n            else:\n                connection.connect()\n                connection.close()\n\n    def publish(self, exchange_name, routing_key, payload):\n        with self.connection as connection:\n            if not connection.connected:\n                connection.connect()\n\n            exchange = kombu.Exchange(exchange_name, type=\"topic\")\n            message = {\n                \"payload\": payload,\n                \"_meta\": {\"exchange\": exchange_name, \"routing_key\": routing_key, \"serializer\": \"json\", \"sent\": datetime.datetime.utcnow().isoformat()},\n            }\n\n            producer = connection.Producer(exchange=exchange, routing_key=routing_key, serializer=\"json\")\n            producer.publish(message)\n            connection.close()\n\n\ndef init_app(app):\n    return Pulse(\n        app.config.get(\"PULSE_HOST\", DEFAULT_CONFIG[\"PULSE_HOST\"]),\n        app.config.get(\"PULSE_PORT\", DEFAULT_CONFIG[\"PULSE_PORT\"]),\n        app.config.get(\"PULSE_USER\"),\n        app.config.get(\"PULSE_PASSWORD\"),\n        app.config.get(\"PULSE_VIRTUAL_HOST\", DEFAULT_CONFIG[\"PULSE_VIRTUAL_HOST\"]),\n        app.config.get(\"PULSE_USE_SSL\", DEFAULT_CONFIG[\"PULSE_USE_SSL\"]),\n        app.config.get(\"PULSE_CONNECTION_TIMEOUT\", DEFAULT_CONFIG[\"PULSE_CONNECTION_TIMEOUT\"]),\n    )\n\n\ndef app_heartbeat():\n    try:\n        flask.current_app.pulse.ping()\n    except Exception as e:\n        logger.exception(e)\n        raise tooltool_api.lib.dockerflow.HeartbeatException(\"Cannot connect to pulse the service.\")\n",
  "from termcolor import colored\nimport colorama, sys\n\n\nclass Logger(object):\n    def __init__(self, prefix=\"\"):\n        \"\"\"\n        Creates a logger that will print coloured output to stderr\n        \"\"\"\n        colorama.init()\n        self.prefix = prefix\n\n    def action(self, output, newline=True):\n        \"\"\"\n        Prints information about an action that is being performed\n        \"\"\"\n        self._print(\"green\", output, newline)\n\n    def error(self, output, newline=False):\n        \"\"\"\n        Prints information about an error that has occurred\n        \"\"\"\n        self._print(\"red\", output, newline)\n\n    def info(self, output, newline=True):\n        \"\"\"\n        Prints information that does not pertain to an action or an error\n        \"\"\"\n        self._print(\"green\", output, newline)\n\n    def warning(self, output, newline=True):\n        \"\"\"\n        Prints a warning (something that is not an error as of today, but might break in future releases)\n        \"\"\"\n        self._print(\"yellow\", output, newline)\n\n    def _print(self, colour, output, newline):\n        whitespace = \"\\n\" if newline == True else \"\"\n        print(colored(whitespace + self.prefix + output, color=colour), file=sys.stderr)\n",
  "/*\n * Copyright (c) 2021 Huawei Device Co., Ltd.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage ohos.samples.customlayout.slice;\n\nimport ohos.aafwk.ability.AbilitySlice;\nimport ohos.aafwk.content.Intent;\nimport ohos.agp.colors.RgbColor;\nimport ohos.agp.components.Button;\nimport ohos.agp.components.Component;\nimport ohos.agp.components.DirectionalLayout;\nimport ohos.agp.components.element.ShapeElement;\nimport ohos.agp.utils.Color;\nimport ohos.samples.customlayout.ResourceTable;\nimport ohos.samples.customlayout.component.CustomLayout;\n\n/**\n * MainAbilitySlice\n *\n * @since 2021-07-03\n */\npublic class MainAbilitySlice extends AbilitySlice {\n    private static final int COMPONENT_COUNT = 15;\n\n    @Override\n    public void onStart(Intent intent) {\n        super.onStart(intent);\n        DirectionalLayout directionalLayout = new DirectionalLayout(getContext());\n        directionalLayout.setPadding(32, 32, 32, 32);\n        DirectionalLayout.LayoutConfig config = new DirectionalLayout.LayoutConfig(\n            DirectionalLayout.LayoutConfig.MATCH_PARENT, DirectionalLayout.LayoutConfig.MATCH_PARENT);\n        directionalLayout.setLayoutConfig(config);\n\n        CustomLayout customLayout = new CustomLayout(this, null);\n        for (int index = 0; index < COMPONENT_COUNT; index++) {\n            customLayout.addComponent(getComponent(index + 1));\n        }\n        ShapeElement shapeElement = new ShapeElement();\n        shapeElement.setRgbColor(new RgbColor(100, 100, 100));\n        customLayout.setBackground(shapeElement);\n        DirectionalLayout.LayoutConfig layoutConfig = new DirectionalLayout.LayoutConfig(\n            DirectionalLayout.LayoutConfig.MATCH_PARENT, DirectionalLayout.LayoutConfig.MATCH_CONTENT);\n        customLayout.setLayoutConfig(layoutConfig);\n        directionalLayout.addComponent(customLayout);\n        super.setUIContent(directionalLayout);\n    }\n\n    private Component getComponent(int index) {\n        Button button = new Button(getContext());\n        ShapeElement shapeElement = new ShapeElement();\n        shapeElement.setRgbColor(new RgbColor(200, 200, 200));\n        button.setBackground(shapeElement);\n        button.setTextColor(Color.WHITE);\n        DirectionalLayout.LayoutConfig layoutConfig = new DirectionalLayout.LayoutConfig(300, 100);\n        if (index == 1) {\n            layoutConfig = new DirectionalLayout.LayoutConfig(1080, 200);\n            button.setText(ResourceTable.String_size01);\n        } else if (index == 6) {\n            layoutConfig = new DirectionalLayout.LayoutConfig(500, 100);\n            button.setText(ResourceTable.String_size02);\n        } else if (index == 8) {\n            layoutConfig = new DirectionalLayout.LayoutConfig(600, 600);\n            button.setText(ResourceTable.String_size03);\n        } else {\n            button.setText(\"Item\" + index);\n        }\n        layoutConfig.setMargins(10, 10, 10, 10);\n        button.setLayoutConfig(layoutConfig);\n        return button;\n    }\n}",
  "package test\n\nimport (\n\t\"bufio\"\n\t\"bytes\"\n\t\"fmt\"\n\t\"io\"\n\t\"os\"\n\t\"os/exec\"\n\t\"path/filepath\"\n\t\"reflect\"\n\t\"sort\"\n\t\"strings\"\n\t\"testing\"\n\n\tmetav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\t\"k8s.io/apimachinery/pkg/labels\"\n\tk8sYaml \"k8s.io/apimachinery/pkg/util/yaml\"\n\t\"sigs.k8s.io/yaml\"\n)\n\nconst (\n\tmanifestDir     = \"../\"\n\tnecoAppsRepoURL = \"https://github.com/cybozu-go/neco-apps.git\"\n)\n\nvar (\n\texcludeDirs = []string{\n\t\tfilepath.Join(manifestDir, \"bin\"),\n\t\tfilepath.Join(manifestDir, \"docs\"),\n\t\tfilepath.Join(manifestDir, \"test\"),\n\t}\n)\n\nfunc isKustomizationFile(name string) bool {\n\tif name == \"kustomization.yaml\" || name == \"kustomization.yml\" || name == \"Kustomization\" {\n\t\treturn true\n\t}\n\treturn false\n}\n\nfunc kustomizeBuild(dir string) ([]byte, []byte, error) {\n\toutBuf := new(bytes.Buffer)\n\terrBuf := new(bytes.Buffer)\n\tworkdir, err := os.Getwd()\n\tif err!= nil {\n\t\treturn nil, nil, err\n\t}\n\tcmd := exec.Command(filepath.Join(workdir, \"bin\", \"kustomize\"), \"build\", dir)\n\tcmd.Stdout = outBuf\n\tcmd.Stderr = errBuf\n\terr = cmd.Run()\n\treturn outBuf.Bytes(), errBuf.Bytes(), err\n}\n\nfunc testNamespaceResources(t *testing.T) {\n\tt.Parallel()\n\n\t// All namespaces defined in neco-apps should have the `team` label.\n\t// Exceptionally, `sandbox` ns should not have the `team` label.\n\tdoCheckKustomizedYaml(t, func(t *testing.T, data []byte) {\n\t\tvar meta struct {\n\t\t\tmetav1.TypeMeta   `json:\",inline\"`\n\t\t\tmetav1.ObjectMeta `json:\"metadata,omitempty\"`\n\t\t}\n\t\terr := yaml.Unmarshal(data, &meta)\n\t\tif err!= nil {\n\t\t\tt.Fatal(err)\n\t\t}\n\t\tif meta.Kind!= \"Namespace\" {\n\t\t\treturn\n\t\t}\n\n\t\t// `sandbox` and `init-template` namespaces should not have a team label.\n\t\tif meta.Name == \"sandbox\" || meta.Name == \"init-template\" {\n\t\t\tif _, ok := meta.Labels[\"team\"]; ok {\n\t\t\t\tt.Errorf(\"%s ns has team label: value=%s\", meta.Name, meta.Labels[\"team\"])\n\t\t\t}\n\t\t\treturn\n\t\t}\n\n\t\t// other namespace should have a team label.\n\t\tif meta.Labels[\"team\"] == \"\" {\n\t\t\tt.Errorf(\"%s ns doesn't have team label\", meta.Name)\n\t\t}\n\t})\n}\n\nfunc testApplicationResources(t *testing.T) {\n\tsyncWaves := map[string]string{\n\t\t\"namespaces\":             \"1\",\n\t\t\"argocd\":                 \"2\",\n\t\t\"coil\":                   \"3\",\n\t\t\"local-pv-provisioner\":   \"3\",\n\t\t\"sealed-secrets\":         \"3\",\n\t\t\"secrets\":                \"3\",\n\t\t\"cert-manager\":           \"3\",\n\t\t\"external-dns\":           \"3\",\n\t\t\"metallb\":                \"3\",\n\t\t\"ingress\":                \"4\",\n\t\t\"neco-admission\":         \"4\",\n\t\t\"pod-security-admission\": \"4\",\n\t\t\"topolvm\":                \"4\",\n\t\t\"unbound\":                \"5\",\n\t\t\"argocd-ingress\":         \"5\",\n\t\t\"bmc-reverse-proxy\":      \"5\",\n\t\t\"customer-egress\":        \"5\",\n\t\t\"elastic\":                \"5\",\n\t\t\"moco\":                   \"5\",\n\t\t\"rook\":                   \"5\",\n\t\t\"sandbox\":                \"5\",\n\t\t\"accurate\":               \"6\",\n\t\t\"init-template\":          \"6\",\n\t\t\"logging\":                \"6\",\n\t\t\"monitoring\":             \"6\",\n\t\t\"session-log\":            \"6\",\n\t\t\"teleport\":               \"6\",\n\t\t\"kube-metrics-adapter\":   \"7\",\n\t\t\"prometheus-adapter\":     \"7\",\n\t\t\"pvc-autoresizer\":        \"7\",\n\t\t\"meows\":                  \"7\",\n\t\t\"team-management\":        \"7\",\n\t\t\"network-policy\":         \"8\",\n\t}\n\ttenantSyncWave := \"9\"\n\n\ttargetRevisions := map[string]string{\n\t\t\"gcp\":      \"release\",\n\t\t\"neco-dev\": \"release\",\n\t\t\"osaka0\":   \"release\",\n\t\t\"stage0\":   \"stage\",\n\t\t\"tokyo0\":   \"release\",\n\t}\n\n\t// List overlays\n\tvar overlays []string\n\tentries, err := os.ReadDir(filepath.Join(manifestDir, \"argocd-config/overlays\"))\n\tif err!= nil {\n\t\tt.Fatal(err)\n\t}\n\tfor _, ent := range entries {\n\t\tinfo, err := ent.Info()\n\t\tif err!= nil ||!info.IsDir() {\n\t\t\tt.Fatal(err)\n\t\t}\n\t\toverlays = append(overlays, info.Name())\n\t}\n\n\tt.Parallel()\n\tfor _, overlay := range overlays {\n\t\ttargetDir := filepath.Join(manifestDir, \"argocd-config/overlays\", overlay)\n\t\tt.Run(overlay, func(t *testing.T) {\n\t\t\tstdout, stderr, err := kustomizeBuild(targetDir)\n\t\t\tif err!= nil {\n\t\t\t\tt.Errorf(\"kustomize build failed. path: %s, stderr: %s, err: %v\", targetDir, stderr, err)\n\t\t\t}\n\n\t\t\ty := k8sYaml.NewYAMLReader(bufio.NewReader(bytes.NewReader(stdout)))\n\t\t\tfor {\n\t\t\t\tdata, err := y.Read()\n\t\t\t\tif err == io.EOF {\n\t\t\t\t\tbreak\n\t\t\t\t} else if err!= nil {\n\t\t\t\t\tt.Error(err)\n\t\t\t\t}\n\n\t\t\t\tvar app Application\n\t\t\t\terr = yaml.Unmarshal(data, &app)\n\t\t\t\tif err!= nil {\n\t\t\t\t\tt.Error(err)\n\t\t\t\t}\n\n\t\t\t\tif app.Name == \"argocd-config\" {\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\n\t\t\t\t// Check the sync wave\n\t\t\t\tvar expectedWave string\n\t\t\t\tif app.GetLabels()[\"is-tenant\"] == \"true\" {\n\t\t\t\t\texpectedWave = tenantSyncWave\n\t\t\t\t} else {\n\t\t\t\t\tif syncWaves[app.Name] == \"\" {\n\t\t\t\t\t\tt.Errorf(\"expected sync-wave should be defined. application: %s\", app.Name)\n\t\t\t\t\t}\n\t\t\t\t\texpectedWave = syncWaves[app.Name]\n\t\t\t\t}\n\t\t\t\tif app.GetAnnotations()[\"argocd.argoproj.io/sync-wave\"]!= expectedWave {\n\t\t\t\t\tt.Errorf(\"invalid sync-wave. application: %s, sync-wave: %s (should be %s)\", app.Name, app.GetAnnotations()[\"argocd.argoproj.io/sync-wave\"], expectedWave)\n\t\t\t\t}\n\n\t\t\t\t// Skip when the application provides from helm chart.\n\t\t\t\tif app.Spec.Source.RepoURL!= necoAppsRepoURL {\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\n\t\t\t\t// Check the targetRevision\n\t\t\t\texpectedTargetRevision := targetRevisions[overlay]\n\n\t\t\t\tif expectedTargetRevision == \"\" {\n\t\t\t\t\tt.Errorf(\"expected targetRevision should be defined. application: %s, overlay: %s\", app.Name, overlay)\n\t\t\t\t}\n\t\t\t\tif app.Spec.Source.TargetRevision!= expectedTargetRevision {\n\t\t\t\t\tt.Errorf(\"invalid targetRevision. application: %s, targetRevision: %s (should be %s)\", app.Name, app.Spec.Source.TargetRevision, expectedTargetRevision)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n}\n\n// Use to check the existence of the status field in manifest files for CRDs.\n// `apiextensionsv1beta1.CustomResourceDefinition` cannot be used because the status field always exists in the struct.\ntype crdValidation struct {\n\tKind     string `json",
  "# Rapid7VmConsole::PolicyGroup\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**assets** | [**AssetPolicyAssessment**](AssetPolicyAssessment.md) | A summary of asset compliance. | [optional] \n**benchmark** | [**PolicyBenchmark**](PolicyBenchmark.md) | Information about the policy benchmark. | [optional] \n**description** | **String** | A description of the policy group. | [optional] \n**id** | **String** | The textual representation of the policy group identifier. | [optional] \n**links** | [**Array&lt;Link&gt;**](Link.md) | Hypermedia links to corresponding or related resources. | [optional] \n**name** | **String** | The name of the policy group. | [optional] \n**policy** | [**PolicyMetadataResource**](PolicyMetadataResource.md) | Information about the policy. | [optional] \n**scope** | **String** | The textual representation of the policy group scope. Policy groups that are automatically available have &#x60;\\&quot;Built-in\\&quot;&#x60; scope, whereas policy groups created by users have scope as &#x60;\\&quot;Custom\\&quot;&#x60;. | [optional] \n**status** | **String** | The overall compliance status of the policy group. | [optional] \n**surrogate_id** | **Integer** | The identifier of the policy group. | [optional] \n**title** | **String** | The title of the policy group as visible to the user. | [optional] \n\n\n",
  "/*\n * Copyright (C) 2014 Indeed Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\n package com.indeed.imhotep.sql.ast2;\n\nimport com.indeed.imhotep.sql.ast.Expression;\nimport com.indeed.imhotep.sql.ast.ValueObject;\n\nimport java.io.Serializable;\n\n/**\n * @author vladimir\n */\n\npublic class WhereClause extends ValueObject implements Serializable {\n    private final Expression expression;\n\n    public WhereClause(Expression expression) {\n        this.expression = expression;\n    }\n\n    public Expression getExpression() {\n        return expression;\n    }\n}\n",
  "from django.contrib import admin\n\nfrom cineart.movies.models import Movie\nfrom cineart.subtitles.models import Subtitle\n\n\nclass SubtitleInline(admin.StackedInline):\n    model = Subtitle\n    extra = 0\n\n\n@admin.register(Movie)\nclass MovieAdmin(admin.ModelAdmin):\n    list_display = [\"title\", \"created_at\"]\n    list_display_links = [\"title\", \"created_at\"]\n    search_fields = [\"title\", \"created_at\"]\n    list_per_page = 20\n    inlines = [SubtitleInline]\n",
  "cd /storage/home/users/pjt6/phy/orthofinder\npython /storage/home/users/pjt6/misc_python/BLAST_output_parsing/Blast_RBH_two_fasta_file_evalue.py  --threads 2  -o../GCA_003287315.1_Pcac_10300_v1_cds_from_genomi.fa_GCA_000509505.1_Phyt_para_CHvinca01_V1_cds_from_genomi.fa GCA_003287315.1_Pcac_10300_v1_cds_from_genomi.fa GCA_000509505.1_Phyt_para_CHvinca01_V1_cds_from_genomi.fa",
  "package tk.themcbros.uselessmod.machine;\n\nimport com.google.common.collect.Maps;\nimport net.minecraft.nbt.CompoundNBT;\nimport net.minecraft.nbt.ListNBT;\nimport net.minecraft.util.Direction;\nimport net.minecraftforge.common.util.INBTSerializable;\nimport tk.themcbros.uselessmod.energy.ConnectionType;\n\nimport java.util.Map;\n\n/**\n * @author TheMCLoveMan\n */\npublic class SideConfig implements INBTSerializable<ListNBT> {\n\n\tprivate final Map<Direction, ConnectionType> sides = Maps.newHashMap();\n\n\t/**\n\t * @param side The side from the machine\n\t * @return Type of configuration\n\t */\n\tpublic ConnectionType getConnection(Direction side) {\n\t\treturn sides.getOrDefault(side, ConnectionType.NONE);\n\t}\n\n\tpublic void setConnectionType(Direction side, ConnectionType type) {\n\t\tthis.sides.put(side, type);\n\t}\n\n\t@Override\n\tpublic ListNBT serializeNBT() {\n\t\tListNBT sideList = new ListNBT();\n\t\tthis.sides.forEach((side, type) -> {\n\t\t\tif (type == ConnectionType.NONE) return;\n\t\t\tCompoundNBT tag = new CompoundNBT();\n\t\t\ttag.putString(\"Side\", side.getName2());\n\t\t\ttag.putString(\"Type\", type.getName());\n\t\t\tsideList.add(tag);\n\t\t});\n\t\treturn sideList;\n\t}\n\n\t@Override\n\tpublic void deserializeNBT(ListNBT sideList) {\n\t\tsideList.forEach(nbt -> {\n\t\t\tif (!(nbt instanceof CompoundNBT)) return;\n\t\t\tCompoundNBT tag = (CompoundNBT) nbt;\n\t\t\tDirection side = Direction.byName(tag.getString(\"Side\"));\n\t\t\tConnectionType type = ConnectionType.byName(tag.getString(\"Type\"));\n\t\t\tSideConfig.this.setConnectionType(side, type);\n\t\t});\n\t}\n\n\tpublic static SideConfig fromNBT(ListNBT sideList) {\n\t\tSideConfig sideConfig = new SideConfig();\n\t\tsideList.forEach(nbt -> {\n\t\t\tif (!(nbt instanceof CompoundNBT)) return;\n\t\t\tCompoundNBT tag = (CompoundNBT) nbt;\n\t\t\tDirection side = Direction.byName(tag.getString(\"Side\"));\n\t\t\tConnectionType type = ConnectionType.byName(tag.getString(\"Type\"));\n\t\t\tsideConfig.setConnectionType(side, type);\n\t\t});\n\t\treturn sideConfig;\n\t}\n\n}\n",
  "<?php\nnamespace Ciebit\\Bidding\\Persons\\Storages;\n\nuse Ciebit\\Bidding\\Persons\\Collection;\n\ninterface Storage\n{\n    public function addFilterById(string $operator, string...$id): self;\n\n    public function find(): Collection;\n}\n",
  "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>JSDoc: Source: ObjLoader.js</title>\n\n    <script src=\"scripts/prettify/prettify.js\"> </script>\n    <script src=\"scripts/prettify/lang-css.js\"> </script>\n    <!--[if lt IE 9]>\n      <script src=\"//html5shiv.googlecode.com/svn/trunk/html5.js\"></script>\n    <![endif]-->\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"styles/prettify-tomorrow.css\">\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"styles/jsdoc-default.css\">\n</head>\n\n<body>\n\n<div id=\"main\">\n\n    <h1 class=\"page-title\">Source: ObjLoader.js</h1>\n\n    \n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * Created by Primoz on 17.3.2016.\n * Source: Three.js\n */\n\n/**\n * Used for loading the.obj files.\n * @param manager   LoadingManager that will act as the loader observer\n * @constructor     Creates new OBJLoader object. If the manager is undefined the default LoadingManager will be used.\n * @name OBJLoader\n */\nOBJLoader = function (manager) {\n\n    this.manager = ( manager!== undefined )? manager : new LoadingManager();\n\n};\n\nOBJLoader.prototype = {\n\n    constructor: OBJLoader,\n\n    /**\n     * Loads the.obj file via XHRLoader, parses the received file and calls onLoad function with parsed objects loaded from.obj file as a parameter.\n     * @param {string} url URL/PATH to.obj file\n     * @param {function} onLoad Will be called when the.obj file finishes loading. Function will be called with parsed objects as parameters\n     * @param {function} onProgress Will forward the progress calls of XHRLoader\n     * @param {function} onError Will forward the error calls of XHRLoader\n     */\n    load: function (url, onLoad, onProgress, onError) {\n        var scope = this;\n\n        var loader = new XHRLoader(scope.manager);\n        loader.setPath(this.path);\n        loader.load(url, function (text) {\n\n            onLoad(scope.parse(text));\n\n        }, onProgress, onError);\n    },\n\n    /**\n     * This should be called to set the.obj file PATH/URL in advance\n     * @param {string} path Request path\n     */\n    setPath: function (path) {\n        this.path = path;\n    },\n\n    /**\n     * Parses the received text and returns the array of objects. Each object has geometry, material and name property.\n     * The geometry property holds the arrays of normals, uvs and vertices. The material property holds the name of the\n     * object material and smooth shading flag.\n     * @param {string} text Text in Wavefront OBJ geometry format.\n     * @returns {Array} Array of objects parsed from the passed text\n     */\n    parse: function (text) {\n        console.time('OBJLoader');\n\n        var objects = [];\n        var object;\n        var foundObjects = false;\n        var vertices = [];\n        var normals = [];\n        var uvs = [];\n\n        function addObject(name) {\n            var geometry = {\n                vertices: [],\n                normals: [],\n                uvs: []\n            };\n\n            var material = {\n                name: '',\n                smooth: true\n            };\n\n            object = {\n                name: name,\n                geometry: geometry,\n                material: material\n            };\n\n            objects.push(object);\n        }\n\n        function parseVertexIndex(value) {\n            var index = parseInt(value);\n\n            return ( index >= 0? index - 1 : index + vertices.length / 3 ) * 3;\n        }\n\n        function parseNormalIndex(value) {\n            var index = parseInt(value);\n\n            return ( index >= 0? index - 1 : index + normals.length / 3 ) * 3;\n        }\n\n        function parseUVIndex(value) {\n            var index = parseInt(value);\n\n            return ( index >= 0? index - 1 : index + uvs.length / 2 ) * 2;\n        }\n\n        function addVertex(a, b, c) {\n            object.geometry.vertices.push(\n                vertices[a], vertices[a + 1], vertices[a + 2],\n                vertices[b], vertices[b + 1], vertices[b + 2],\n                vertices[c], vertices[c + 1], vertices[c + 2]\n            );\n        }\n\n        function addNormal(a, b, c) {\n            object.geometry.normals.push(\n                normals[a], normals[a + 1], normals[a + 2],\n                normals[b], normals[b + 1], normals[b + 2],\n                normals[c], normals[c + 1], normals[c + 2]\n            );\n        }\n\n        function addUV(a, b, c) {\n            object.geometry.uvs.push(\n                uvs[a], uvs[a + 1],\n                uvs[b], uvs[b + 1],\n                uvs[c], uvs[c + 1]\n            );\n        }\n\n        function addFace(a, b, c, d, ua, ub, uc, ud, na, nb, nc, nd) {\n            var ia = parseVertexIndex(a);\n            var ib = parseVertexIndex(b);\n            var ic = parseVertexIndex(c);\n            var id;\n\n            if (d === undefined) {\n                addVertex(ia, ib, ic);\n            }\n            else {\n                id = parseVertexIndex(d);\n                addVertex(ia, ib, id);\n                addVertex(ib, ic, id);\n            }\n\n            if (ua!== undefined) {\n                ia = parseUVIndex(ua);\n                ib = parseUVIndex(ub);\n                ic = parseUVIndex(uc);\n\n                if (d === undefined) {\n                    addUV(ia, ib, ic);\n                }\n                else {\n                    id = parseUVIndex(ud);\n                    addUV(ia, ib, id);\n                    addUV(ib, ic, id);\n                }\n            }\n\n            if (na!== undefined) {\n                ia = parseNormalIndex(na);\n                ib = parseNormalIndex(nb);\n                ic = parseNormalIndex(nc);\n\n                if (d === undefined) {\n                    addNormal(ia, ib, ic);\n                }\n                else {\n                    id = parseNormalIndex(nd);\n\n                    addNormal(ia, ib, id);\n                    addNormal(ib, ic, id);\n                }\n            }\n        }\n\n        addObject('');\n\n        // v float float float\n        var vertex_pattern = /^v\\s+([\\d|\\.|\\+|\\-|e|E]+)\\s+([\\d|\\.|\\+|\\-|e|E]+)\\s+([\\d|\\.|\\+|\\-|e|E]+)/;\n\n        // vn float float float\n        var normal_pattern = /^vn\\s+([\\d|\\.|\\+|\\-|e|E]+)\\s+([\\d|\\.|\\+|\\-|e|E]+)\\s+([\\d|\\.|\\+|\\-|e|E]+)/;\n\n        // vt float float\n        var uv_pattern = /^vt\\s+([\\d|\\.|\\+|\\-|e|E]+)\\s+([\\d|\\.|\\+|\\-|e|E]+)/;\n\n        // f vertex vertex vertex...\n        var face_pattern1 = /^f\\s+(-?\\d+)\\s+(-?\\d+)\\s+(-?\\d+)(?:\\s+(-?\\d+))?/;\n\n        // f vertex/uv vertex/uv vertex/uv...\n        var face_pattern2 = /^f\\s+((-?\\d+)\\/(-?\\d+))\\s+((-?\\d+)\\/(-?\\d+))\\s+((-?\\d+)\\/(-?\\d+))(?:\\s+((-?\\d+)\\/(-?\\d+)))?/;\n\n        // f vertex/uv/normal vertex/uv/normal vertex/uv/normal...\n        var face_pattern3 = /^f\\s+((-?\\d+)\\/(-?\\d+)\\/(-?\\d+))\\s+((-?\\d+)\\/(-?\\d+)\\",
  "const Koa = require('koa') // \u6846\u67b6 express koa \u5c0f\u578b\u7b80\u5355 egg \u4f01\u4e1a\u7ea7\u6bd4\u8f83\u590d\u6742\nconst Router = require('koa-router') // koa \u6846\u67b6\u751f\u6001\u4f53\u7cfb\u4e2d\u7684\u8def\u7531\u4e2d\u95f4\u4ef6\nconst server = require('koa-static') // \u670d\u52a1\u5668\u4e0a\u7684\u9759\u6001\u670d\u52a1\u5668\nconst koaBody = require('koa-body')  // \u540e\u7aef\u4e2d\u95f4\u4ef6\uff0c\u628a\u4e8c\u8fdb\u5236\u6570\u636e\u5305\u6536\u96c6\u8d77\u6765\nconst path = require('path')\nconst fs = require('fs')\nconst tinify = require('tinify') // \u538b\u7f29\nlet app = new Koa()\n\nconst home = server(path.join(__dirname) + '/public/')\napp.use(home)\n\napp.use(koaBody({\n    multipart: true, // \u9644\u4ef6\n    formidable: {\n        maxFieldsSize: 2000*1024*1024\n    }\n}))\n\nlet router = new Router() //\u540e\u7aef\u8def\u7531   \u524d\u7aef\u8def\u7531\uff08BrowserRouter|Hashrouter\uff09\nrouter.post('/uploadPic', async (ctx) => {\n    // \u540e\u7aef\u9700\u8981\u4e00\u4e2a\u4e2d\u95f4\u4ef6\uff0c\u628a\u4e8c\u8fdb\u5236\u6570\u636e\u5305\u6536\u96c6\u8d77\u6765\n    const file = ctx.request.files.file\n    // console.log(file);\n    const reader = fs.createReadStream(file.path) // \u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u8bfb\u53d6\u6d41\n    console.log('\u524d\u7aef\u8def\u5f84',file.path );\n    const myDate = new Date()\n    const newFilename = myDate.getTime() + '.' + file.name.split('.')[1]\n    // console.log(newFilename);\n    const targetPath = path.join(__dirname, './public/images/') + newFilename\n    console.log('\u540e\u7aef\u8def\u5f84',targetPath);\n    const upStream = fs.createWriteStream(targetPath)\n    reader.pipe(upStream)\n    ctx.body = '\u4e0a\u4f20\u6210\u529f'\n})\nrouter.get('/zipimg', async (ctx) => {\n    \n    ctx.body = '\u538b\u7f29\u6210\u529f'\n})\n\napp\n   .use(router.routes())  // app.\u6267\u884c\u4e4b\u540e\u8fd8\u662f\u4e00\u4e2aapp\n   .use(router.allowedMethods())\n\napp.listen(6300, () => {\n    console.log('\u670d\u52a1\u5668\u8fd0\u884c\u4e2d');\n})",
  "num = 0\nnum = 1\nnum = 2\n\n\nnum5 = 5\nnum6 = 50\n",
  "import React from \"react\"\nimport { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport Logo from \"./logo.js\"\nimport Navigation from \"./navigation\"\n\nconst HeaderContainer = styled.div`\n  background: #009624;\n  margin: 0;\n  padding: 0;\n  @supports (display: grid) {\n    grid-column: 1/-1;\n    grid-row: 1;\n  }\n`\n\nconst HeaderInner = styled.header`\n  max-width: 960px;\n  padding: 0 10px;\n  margin: 0 auto;\n  display: flex;\n  flex-grow: 1;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n .home {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  a {\n    text-decoration: none;\n  }\n  h1 {\n    /* font-weight: 700; */\n    margin: 0;\n    margin-left: 10px;\n    color: white;\n    transition: color 0.3s ease;\n    &:hover {\n      color: white;\n    }\n  }\n`\n\nconst Header = ({ siteTitle }) => (\n  <HeaderContainer>\n    <HeaderInner>\n      <Link to=\"/\">\n        <div className=\"home\">\n          <Logo size=\"48\" color=\"white\" opacity=\"0.85\" />\n          {/* <h1>{siteTitle}</h1> */}\n        </div>\n      </Link>\n      <Navigation />\n    </HeaderInner>\n  </HeaderContainer>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n",
  "define(['mout/string/insert'], function(insert){\n\n    describe('string/insert', function(){\n\n        it('should add a substring', function(){\n            expect( insert('bcde', 0, 'a') ).toBe('abcde');\n            expect( insert('abc', 10, 'd') ).toBe('abcd');\n            expect( insert('abc', 3, 'd') ).toBe('abcd');\n            expect( insert('abde', 2, 'c') ).toBe('abcde');\n            expect( insert('this is a sentence', 10,'short ') ).toBe('this is a short sentence');\n        });\n\n        it('should accept negative indexes', function() {\n            expect( insert('abd', -1, 'c') ).toBe('abcd');\n            expect( insert('cdef', -10, 'ab') ).toBe('abcdef');\n        });\n\n        it('should treat null as empty string', function(){\n            expect( insert(null, 0, '') ).toBe('');\n        });\n\n        it('should treat undefined as empty string', function(){\n            expect( insert(void 0, 0, '') ).toBe('');\n        });\n    });\n\n});\n",
  "/*\n *                   GridGain Community Edition Licensing\n *                   Copyright 2019 GridGain Systems, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\") modified with Commons Clause\n * Restriction; you may not use this file except in compliance with the License. You may obtain a\n * copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n *\n * Commons Clause Restriction\n *\n * The Software is provided to you by the Licensor under the License, as defined below, subject to\n * the following condition.\n *\n * Without limiting other conditions in the License, the grant of rights under the License will not\n * include, and the License does not grant to you, the right to Sell the Software.\n * For purposes of the foregoing, \u201cSell\u201d means practicing any or all of the rights granted to you\n * under the License to provide to third parties, for a fee or other consideration (including without\n * limitation fees for hosting or consulting/ support services related to the Software), a product or\n * service whose value derives, entirely or substantially, from the functionality of the Software.\n * Any license notice or attribution required by the License must also include this Commons Clause\n * License Condition notice.\n *\n * For purposes of the clause above, the \u201cLicensor\u201d is Copyright 2019 GridGain Systems, Inc.,\n * the \u201cLicense\u201d is the Apache License, Version 2.0, and the Software is the GridGain Community\n * Edition software provided with this notice.\n */\n\npackage org.apache.ignite.testsuites;\n\nimport junit.framework.JUnit4TestAdapter;\nimport junit.framework.TestSuite;\nimport org.apache.ignite.internal.binary.BinaryArrayIdentityResolverSelfTest;\nimport org.apache.ignite.internal.binary.BinaryBasicIdMapperSelfTest;\nimport org.apache.ignite.internal.binary.BinaryBasicNameMapperSelfTest;\nimport org.apache.ignite.internal.binary.BinaryConfigurationConsistencySelfTest;\nimport org.apache.ignite.internal.binary.BinaryConfigurationCustomSerializerSelfTest;\nimport org.apache.ignite.internal.binary.BinaryEnumsSelfTest;\nimport org.apache.ignite.internal.binary.BinaryFieldExtractionSelfTest;\nimport org.apache.ignite.internal.binary.BinaryFieldsHeapSelfTest;\nimport org.apache.ignite.internal.binary.BinaryFieldsOffheapSelfTest;\nimport org.apache.ignite.internal.binary.BinaryFooterOffsetsHeapSelfTest;\nimport org.apache.ignite.internal.binary.BinaryFooterOffsetsOffheapSelfTest;\nimport org.apache.ignite.internal.binary.BinaryMarshallerSelfTest;\nimport org.apache.ignite.internal.binary.BinaryObjectBuilderAdditionalSelfTest;\nimport org.apache.ignite.internal.binary.BinaryObjectBuilderDefaultMappersSelfTest;\nimport org.apache.ignite.internal.binary.BinaryObjectBuilderSimpleNameLowerCaseMappersSelfTest;\nimport org.apache.ignite.internal.binary.BinaryObjectExceptionSelfTest;\nimport org.apache.ignite.internal.binary.BinaryObjectToStringSelfTest;\nimport org.apache.ignite.internal.binary.BinaryObjectTypeCompatibilityTest;\nimport org.apache.ignite.internal.binary.BinarySerialiedFieldComparatorSelfTest;\nimport org.apache.ignite.internal.binary.BinarySimpleNameTestPropertySelfTest;\nimport org.apache.ignite.internal.binary.BinaryTreeSelfTest;\nimport org.apache.ignite.internal.binary.GridBinaryAffinityKeySelfTest;\nimport org.apache.ignite.internal.binary.GridBinaryMarshallerCtxDisabledSelfTest;\nimport org.apache.ignite.internal.binary.GridBinaryWildcardsSelfTest;\nimport org.apache.ignite.internal.binary.GridDefaultBinaryMappersBinaryMetaDataSelfTest;\nimport org.apache.ignite.internal.binary.GridSimpleLowerCaseBinaryMappersBinaryMetaDataSelfTest;\nimport org.apache.ignite.internal.binary.noncompact.BinaryFieldsHeapNonCompactSelfTest;\nimport org.apache.ignite.internal.binary.noncompact.BinaryFieldsOffheapNonCompactSelfTest;\nimport org.apache.ignite.internal.binary.noncompact.BinaryFooterOffsetsHeapNonCompactSelfTest;\nimport org.apache.ignite.internal.binary.noncompact.BinaryFooterOffsetsOffheapNonCompactSelfTest;\nimport org.apache.ignite.internal.binary.noncompact.BinaryMarshallerNonCompactSelfTest;\nimport org.apache.ignite.internal.binary.noncompact.BinaryObjectBuilderAdditionalNonCompactSelfTest;\nimport org.apache.ignite.internal.binary.noncompact.BinaryObjectBuilderNonCompactDefaultMappersSelfTest;\nimport org.apache.ignite.internal.binary.noncompact.BinaryObjectBuilderNonCompactSimpleNameLowerCaseMappersSelfTest;\nimport org.apache.ignite.internal.binary.streams.BinaryAbstractOutputStreamTest;\nimport org.apache.ignite.internal.binary.streams.BinaryHeapStreamByteOrderSelfTest;\nimport org.apache.ignite.internal.binary.streams.BinaryOffheapStreamByteOrderSelfTest;\nimport org.apache.ignite.internal.processors.cache.binary.BinaryAtomicCacheLocalEntriesSelfTest;\nimport org.apache.ignite.internal.processors.cache.binary.BinaryMetadataUpdatesFlowTest;\nimport org.apache.ignite.internal.processors.cache.binary.BinaryTxCacheLocalEntriesSelfTest;\nimport org.apache.ignite.internal.processors.cache.binary.GridCacheBinaryObjectMetadataExchangeMultinodeTest;\nimport org.apache.ignite.internal.processors.cache.binary.GridCacheBinaryObjectUserClassloaderSelfTest;\nimport org.apache.ignite.internal.processors.cache.binary.GridCacheBinaryStoreBinariesDefaultMappersSelfTest;\nimport org.apache.ignite.internal.processors.cache.binary.GridCacheBinaryStoreBinariesSimpleNameMappersSelfTest;\nimport org.apache.ignite.internal.processors.cache.binary.GridCacheBinaryStoreObjectsSelfTest;\nimport org.apache.ignite.internal.processors.cache.binary.GridCacheClientNodeBinaryObjectMetadataMultinodeTest;\nimport org.apache.ignite.internal.processors.cache.binary.GridCacheClientNodeBinaryObjectMetadataTest;\nimport org.apache.ignite.internal.processors.cache.binary.distributed.dht.GridCacheBinaryObjectsAtomicNearDisabledOnheapSelfTest;\nimport org.apache.ignite.internal.processors.cache.binary.distributed.dht.GridCacheBinaryObjectsAtomicNearDisabledSelfTest;\nimport org.apache.ignite.internal.processors.cache.binary.distributed.dht.GridCacheBinaryObjectsAtomicOnheapSelfTest;\nimport org.apache.ignite.internal.processors.cache.binary.distributed.dht.GridCacheBinaryObjectsAtomicSelfTest;\nimport org.apache.ignite.internal.processors.cache.binary.distributed.dht.GridCacheBinaryObjectsPartitionedNearDisabledOnheapSelfTest;\nimport org.apache.ignite.internal.processors.cache.binary.distributed.dht.GridCacheBinaryObjectsPartitionedNearDisabledSelfTest;\nimport org.apache.ignite.internal.processors.cache.binary.distributed.dht.GridCacheBinaryObjectsPartitionedOnheapSelfTest;\nimport org.apache.ignite.internal.processors.cache.binary.distributed.dht.GridCacheBinaryObjectsPartitionedSelfTest;\nimport org.apache.ignite.internal.processors.cache.binary.distributed.replicated.GridCacheBinaryObjectsReplicatedSelfTest;\nimport org.apache.ignite.internal.processors.cache.binary.local.GridCacheBinaryObjectsAtomicLocalSelfTest;\nimport org.apache.ignite.internal.processors.cache.binary.local.GridCacheBinaryObjectsLocalOnheapSelfTest;\nimport org.apache.ignite.internal.processors.cache.binary.local.GridCacheBinaryObjectsLocalSelfTest;\nimport org.apache.ignite.internal.processors.cache.distributed.IgniteBinaryMetadataUpdateChangingTopologySelfTest;\nimport org.junit.runner.RunWith;\nimport org.junit.runners.AllTests;\n\n/**\n * Test for binary objects stored in cache.\n */\n@RunWith(AllTests.class)\npublic class IgniteBinaryObjectsTestSuite {\n    ",
  "import registerModule from '~/core/module';\nimport { UnloaderContext } from '~/core/module-loader';\n\nimport { createElement, insertCss, waitForOne } from '~/utils/dom';\nimport log from '~/utils/log';\nimport { fetchApi } from '~/utils/fetch';\n\nimport {\n  addProgressDialogListener,\n  getOpenCourseId,\n  getActiveMarkingPeriodId,\n  sanitizeAssignmentTitle,\n  assignmentHasRubric,\n  getAssignmentDataFromRow,\n  observeCoursesBar,\n} from '~/shared/progress';\nimport { getTableRowColumnContent } from '~/shared/table';\n\nimport style from './style.css';\n\nconst selectors = {\n  label: style.locals.label,\n};\n\n// Get all assignments from course\nasync function getAssignments(courseId: string) {\n  const markingPeriodId = await getActiveMarkingPeriodId();\n  const endpoint = '/api/datadirect/GradeBookPerformanceAssignmentStudentList/';\n  const query = `?sectionId=${courseId}&markingPeriodId=${markingPeriodId}&studentUserId=4109775`;\n  return fetchApi(endpoint + query);\n}\n\n// Assigned and due are stored as MM/DD/YY HH:MM PM/AM, displayed as MM/DD\nfunction isEqualDate(longDate: string, shortDate: string) {\n  return longDate.startsWith(shortDate);\n}\n\nasync function getAssignmentPoints(assignmentRow: HTMLElement, assignments: any[]): Promise<number[] | void> {\n  const rubric = assignmentHasRubric(assignmentRow);\n\n  if (rubric) {\n    const assignmentData = await getAssignmentDataFromRow(assignmentRow);\n    if (!assignmentData) {\n      return log(\n        'error',\n        'Cannot match assignment data in letter-grade-points',\n        assignmentRow,\n      );\n    }\n    const { rubricPoints, maxPoints } = assignmentData;\n    // return\n    // if (rubricPoints) {\n    //   percentage = computeGradePercentage(rubricPoints, maxPoints);\n    // } else {\n    //   percentage = letterGradeToPercentage(earned);\n    // }\n  } else {\n    const name = getTableRowColumnContent(assignmentRow, 'Assignment');\n    const assigned = getTableRowColumnContent(assignmentRow, 'Assigned');\n    const due = getTableRowColumnContent(assignmentRow, 'Due');\n\n    const assignmentData = assignments.find(assignment => {\n      console.log(sanitizeAssignmentTitle(assignment.AssignmentShortDescription), name);\n      return sanitizeAssignmentTitle(assignment.AssignmentShortDescription) === name\n        && isEqualDate(assignment.DateAssigned, assigned)\n        && isEqualDate(assignment.DateDue, due);\n    });\n\n    if (!assignmentData) {\n      return log(\n        'error',\n        'Cannot match assignment data in letter-grade-points',\n        assignmentRow,\n      );\n    }\n\n    const max = assignmentData.MaxPoints;\n    const earned = (max * assignmentData.AssignmentPercentage) / 100;\n    return [max, earned];\n  }\n}\n\nasync function generatePointsLabel(earned: number, max: number) {\n  const label = (\n    <span className={selectors.label}>\n      ({earned}/{max})\n    </span>\n  );\n\n  return label;\n\n}\n\nfunction isLetterGrade(gradeElem: HTMLElement) {\n  const grade = gradeElem.firstChild.textContent;\n  return!!grade.toLowerCase().match(/[a-z]/);\n}\n\nconst domQuery = () => document.querySelectorAll('[data-heading=\"Points\"] h4');\n\nasync function insertPoints(unloaderContext: UnloaderContext) {\n  console.log('inserting');\n  const gradeElems = await waitForOne(domQuery);\n  const letterGradeElems = Array.from(gradeElems)\n   .filter(isLetterGrade);\n\n  if (!letterGradeElems.length) {\n    return;\n  }\n\n  const allRubric = Array.from(gradeElems).every(gradeElem => {\n    const row = gradeElem.closest('tr');\n    return assignmentHasRubric(row);\n  });\n\n  if (!allRubric) {\n    const openCourseId = getOpenCourseId();\n    const assignments = await getAssignments(openCourseId);\n\n    for (const gradeElem of letterGradeElems) {\n      const row = gradeElem.closest('tr');\n      if (!assignmentHasRubric(row)) {\n        const points = await getAssignmentPoints(row, assignments);\n        if (!points) {\n          continue;\n        }\n        const [earned, max] = points;\n        const label = await generatePointsLabel(earned, max);\n        gradeElem.appendChild(label);\n        unloaderContext.addRemovable(label);\n      } else {\n        // const label = await generatePointsLabel(earned, max);\n      }\n    }\n  }\n\n\n}\n\nasync function letterGradePointsMain(opts: void, unloaderContext: UnloaderContext) {\n  const styles = insertCss(style.toString());\n  unloaderContext.addRemovable(styles);\n\n  addProgressDialogListener(() => {\n    insertPoints(unloaderContext);\n  }, unloaderContext);\n}\n\nexport default registerModule('{e8c4fe63-4ca7-4a1b-ac96-3675aa16d3db}', {\n  name: 'Letter Grade Points',\n  description: 'See the earned and total amount of points on a letter graded assignment',\n  main: letterGradePointsMain,\n});\n",
  "package com.main.entities;\n\nimport org.bson.types.ObjectId;\nimport org.springframework.data.annotation.Id;\nimport org.springframework.data.mongodb.core.mapping.Document;\n\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\n\n@Data\n@NoArgsConstructor\n@Document\npublic class Loai {\n\t@Id\n\tprivate ObjectId idLoai;\n\t\n\tprivate String tenLoai;\n\n\tpublic Loai(String tenLoai) {\n\t\tsuper();\n\t\tthis.tenLoai = tenLoai;\n\t}\n\n\t\n}\n",
  "// Copyright IBM Corp. 2017, 2021 All Rights Reserved.\n// Licensed under the Mozilla Public License v2.0\n\npackage ibm\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"testing\"\n\n\t\"github.com/hashicorp/terraform-plugin-sdk/v2/helper/acctest\"\n\t\"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource\"\n)\n\nfunc TestAccFunctionTriggerDataSourceBasic(t *testing.T) {\n\tname := fmt.Sprintf(\"terraform_trigger_%d\", acctest.RandIntRange(10, 100))\n\tnamespace := os.Getenv(\"IBM_FUNCTION_NAMESPACE\")\n\n\tresource.Test(t, resource.TestCase{\n\t\tPreCheck:  func() { testAccPreCheck(t) },\n\t\tProviders: testAccProviders,\n\t\tSteps: []resource.TestStep{\n\n\t\t\tresource.TestStep{\n\t\t\t\tConfig: testAccCheckFunctionTriggerDataSource(name, namespace),\n\t\t\t\tCheck: resource.ComposeAggregateTestCheckFunc(\n\t\t\t\t\tresource.TestCheckResourceAttr(\"ibm_function_trigger.trigger\", \"name\", name),\n\t\t\t\t\tresource.TestCheckResourceAttr(\"ibm_function_trigger.trigger\", \"namespace\", namespace),\n\t\t\t\t\tresource.TestCheckResourceAttr(\"ibm_function_trigger.trigger\", \"version\", \"0.0.1\"),\n\t\t\t\t\tresource.TestCheckResourceAttr(\"ibm_function_trigger.trigger\", \"publish\", \"false\"),\n\t\t\t\t\tresource.TestCheckResourceAttr(\"data.ibm_function_trigger.datatrigger\", \"name\", name),\n\t\t\t\t),\n\t\t\t},\n\t\t},\n\t})\n}\n\nfunc testAccCheckFunctionTriggerDataSource(name, namespace string) string {\n\treturn fmt.Sprintf(`\n\t\nresource \"ibm_function_trigger\" \"trigger\" {\n\tname      = \"%s\"\t\t  \n\tnamespace = \"%s\"\n}\n\ndata \"ibm_function_trigger\" \"datatrigger\" {\n\tname      = ibm_function_trigger.trigger.name\n\tnamespace = ibm_function_trigger.trigger.namespace\n}\n`, name, namespace)\n\n}\n",
  "#include \"CppUnitTest.h\"\n#include \"../TaxCalculatorApplication/ShoppingBasketFromTextReader.h\"\n#include \"../TaxCalculatorApplication/ItemsTaxFileReader.h\"\n\nusing namespace Microsoft::VisualStudio::CppUnitTestFramework;\n\nnamespace TaxCalculatorTest\n{\n\tTEST_CLASS(ShoppingBasketFromTextReaderTest)\n\t{\n\tpublic:\n\t\tTEST_METHOD(GetShoppingBasketName)\n\t\t{\n\t\t\tstd::unique_ptr<ItemsTaxReader> itemsTaxFileReader = std::make_unique<ItemsTaxFileReader>();\n\t\t\tShoppingBasketFromTextReader s(itemsTaxFileReader, \"../TaxCalculatorApplication/input1.txt\");\n\t\t\tAssert::AreEqual(s.getShoppingBasketName(), std::string(\"../TaxCalculatorApplication/input1.txt\"));\n\t\t}\n\n\t\tTEST_METHOD(ReadShoppingBasketInput1)\n\t\t{\n\t\t\tShoppingBasket items{ Item(1, \"book\", false, 12.49, 0.0),\n\t\t\t\t\t\t\t\t  Item(1, \"music CD\", false, 14.99, 10.0),\n\t\t\t\t\t\t\t\t  Item(1, \"chocolate bar\", false, 0.85, 0.0) };\n\t\t\tstd::unique_ptr<ItemsTaxReader> itemsTaxFileReader = std::make_unique<ItemsTaxFileReader>(std::vector<std::string>\n\t\t\t{ \"../TaxCalculatorApplication/book.res\", \"../TaxCalculatorApplication/food.res\", \"../TaxCalculatorApplication/medical.res\" });\n\t\t\tShoppingBasketFromTextReader s(itemsTaxFileReader, \"../TaxCalculatorApplication/input1.txt\");\n\t\t\tfor (size_t i = 0; i < 3; ++i)\n\t\t\t{\n\t\t\t\tAssert::AreEqual(s.readShoppingBasket()->at(i).amount(), items[i].amount());\n\t\t\t\tAssert::AreEqual(s.readShoppingBasket()->at(i).name(), items[i].name());\n\t\t\t\tAssert::AreEqual(s.readShoppingBasket()->at(i).imported(), items[i].imported());\n\t\t\t\tAssert::AreEqual(s.readShoppingBasket()->at(i).netPrice(), items[i].netPrice());\n\t\t\t\tAssert::AreEqual(s.readShoppingBasket()->at(i).grossPrice(), items[i].grossPrice());\n\t\t\t}\n\t\t}\n\n\t\tTEST_METHOD(ReadShoppingBasketInput3)\n\t\t{\n\t\t\tShoppingBasket items{ Item(1, \"bottle of perfume\", true, 27.99, 15.0), Item(1, \"bottle of perfume\", false, 18.99, 10.0),\n\t\t\t\t\t\t\t\t  Item(1, \"packet of headache pills\", false, 9.75, 0.0),\n\t\t\t\t\t\t\t\t  Item(1, \"box of chocolates\", true, 11.25, 5.0) };\n\t\t\tstd::unique_ptr<ItemsTaxReader> itemsTaxFileReader = std::make_unique<ItemsTaxFileReader>(std::vector<std::string>\n\t\t\t{ \"../TaxCalculatorApplication/book.res\", \"../TaxCalculatorApplication/food.res\", \"../TaxCalculatorApplication/medical.res\" });\n\t\t\tShoppingBasketFromTextReader s(itemsTaxFileReader, \"../TaxCalculatorApplication/input3.txt\");\n\t\t\tfor (size_t i = 0; i < 4; ++i)\n\t\t\t{\n\t\t\t\tAssert::AreEqual(s.readShoppingBasket()->at(i).amount(), items[i].amount());\n\t\t\t\tAssert::AreEqual(s.readShoppingBasket()->at(i).name(), items[i].name());\n\t\t\t\tAssert::AreEqual(s.readShoppingBasket()->at(i).imported(), items[i].imported());\n\t\t\t\tAssert::AreEqual(s.readShoppingBasket()->at(i).netPrice(), items[i].netPrice());\n\t\t\t\tAssert::AreEqual(s.readShoppingBasket()->at(i).grossPrice(), items[i].grossPrice());\n\t\t\t}\n\t\t}\n\t};\n}",
  "package com.mdbank.config;\n\npublic final class Profiles {\n    public static final String DEV = \"DEV\";\n\n    public static final String PROD = \"PROD\";\n}\n",
  "package datatable\n\nimport (\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/assert\"\n)\n\nfunc TestSerieFactory(t *testing.T) {\n\ttyps := ColumnTypes()\n\tfor _, typ := range typs {\n\t\tassert.NotPanics(t, func() { newColumnSerie(typ, ColumnOptions{}) }, typ)\n\t}\n}\n",
  "use azure_core::prelude::*;\nuse azure_storage::blob::prelude::*;\nuse azure_storage::core::prelude::*;\nuse chrono::{Duration, Utc};\nuse std::error::Error;\n\nfn main() {\n    env_logger::init();\n    code().unwrap();\n}\n\nfn code() -> Result<(), Box<dyn Error>> {\n    // First we retrieve the account name and master key from environment variables.\n    let account =\n        std::env::var(\"STORAGE_ACCOUNT\").expect(\"Set env variable STORAGE_ACCOUNT first!\");\n    let master_key =\n        std::env::var(\"STORAGE_MASTER_KEY\").expect(\"Set env variable STORAGE_MASTER_KEY first!\");\n\n    let container_name = std::env::args()\n       .nth(1)\n       .expect(\"please specify container name as command line parameter\");\n    let blob_name = std::env::args()\n       .nth(2)\n       .expect(\"please specify blob name as command line parameter\");\n\n    let client = client::with_access_key(&account, &master_key);\n\n    let now = Utc::now();\n    let later = now + Duration::hours(1);\n    let sas = client\n       .shared_access_signature()\n       .with_resource(SasResource::Blob)\n       .with_resource_type(SasResourceType::Object)\n       .with_start(now)\n       .with_expiry(later)\n       .with_permissions(SasPermissions::Read)\n       .with_protocol(SasProtocol::HttpHttps)\n       .finalize();\n    println!(\"token: '{}'\", sas.token());\n\n    let url = client\n       .generate_signed_blob_url()\n       .with_container_name(&container_name)\n       .with_blob_name(&blob_name)\n       .with_shared_access_signature(&sas)\n       .finalize();\n    println!(\"url: '{}'\", url);\n\n    Ok(())\n}\n",
  "#pragma once\r\n#include <stdint.h>\r\n\r\n//Sound ids\r\nenum SOUNDID\r\n{\r\n\tSOUNDID_NULL,\r\n\tSOUNDID_JUMP,\r\n\tSOUNDID_ROLL,\r\n\tSOUNDID_SKID,\r\n\t\r\n\tSOUNDID_SPINDASH_REV,\r\n\tSOUNDID_SPINDASH_REV_0,\r\n\tSOUNDID_SPINDASH_REV_1,\r\n\tSOUNDID_SPINDASH_REV_2,\r\n\tSOUNDID_SPINDASH_REV_3,\r\n\tSOUNDID_SPINDASH_REV_4,\r\n\tSOUNDID_SPINDASH_REV_5,\r\n\tSOUNDID_SPINDASH_REV_6,\r\n\tSOUNDID_SPINDASH_REV_7,\r\n\tSOUNDID_SPINDASH_REV_8,\r\n\tSOUNDID_SPINDASH_REV_9,\r\n\tSOUNDID_SPINDASH_REV_10,\r\n\t\r\n\tSOUNDID_CD_CHARGE,\r\n\tSOUNDID_DROPDASH,\r\n\tSOUNDID_SPINDASH_RELEASE,\r\n\t\r\n\tSOUNDID_HURT,\r\n\tSOUNDID_SPIKE_HURT,\r\n\t\r\n\tSOUNDID_RING,\r\n\tSOUNDID_RING_LEFT,\r\n\tSOUNDID_RING_RIGHT,\r\n\t\r\n\tSOUNDID_RING_LOSS,\r\n\t\r\n\tSOUNDID_POP,\r\n\tSOUNDID_GOALPOST_SPIN,\r\n\tSOUNDID_SPRING,\r\n\tSOUNDID_COLLAPSE,\r\n\tSOUNDID_WALL_SMASH,\r\n\t\r\n\tSOUNDID_WATERFALL,\r\n\tSOUNDID_WATERFALL_1,\r\n\tSOUNDID_WATERFALL_2,\r\n\t\r\n\tSOUNDID_GET_BLUE_BARRIER,\r\n\tSOUNDID_GET_FLAME_BARRIER,\r\n\tSOUNDID_GET_LIGHTNING_BARRIER,\r\n\tSOUNDID_GET_AQUA_BARRIER,\r\n\t\r\n\tSOUNDID_DOUBLE_SPIN_ATTACK,\r\n\tSOUNDID_USE_FLAME_BARRIER,\r\n\tSOUNDID_USE_LIGHTNING_BARRIER,\r\n\tSOUNDID_USE_AQUA_BARRIER,\r\n\t\r\n\tSOUNDID_SUPER_TRANSFORM,\r\n\t\r\n\tSOUNDID_SPLASHJINGLE,\r\n\tSOUNDID_MAX,\r\n};\r\n\r\n//Definitions\r\nenum SOUNDCHANNEL\r\n{\r\n\tSOUNDCHANNEL_PSG0\t= 1 << 0,\r\n\tSOUNDCHANNEL_PSG1\t= 1 << 1,\r\n\tSOUNDCHANNEL_PSG2\t= 1 << 2,\r\n\tSOUNDCHANNEL_PSG3\t= 1 << 3,\r\n\tSOUNDCHANNEL_FM0\t= 1 << 4,\r\n\tSOUNDCHANNEL_FM1\t= 1 << 5,\r\n\tSOUNDCHANNEL_FM2\t= 1 << 6,\r\n\tSOUNDCHANNEL_FM3\t= 1 << 7,\r\n\tSOUNDCHANNEL_FM4\t= 1 << 8,\r\n\tSOUNDCHANNEL_FM5\t= 1 << 9,\r\n\tSOUNDCHANNEL_DAC\t= 1 << 10,\r\n};\r\n#define SOUNDCHANNEL_TYPE\tuint16_t\r\n\r\nstruct SOUNDDEFINITION\r\n{\r\n\tSOUNDCHANNEL_TYPE channel;\r\n\tconst char *path;\r\n\tSOUNDID parent;\r\n};\r\n\r\n//Sound functions\r\nvoid PlaySound(SOUNDID id);\r\nvoid StopSound(SOUNDID id);\r\nvoid StopChannel(SOUNDCHANNEL_TYPE channel);\r\n\r\n//Audio subsystem functions\r\nbool InitializeAudio();\r\nvoid QuitAudio();\r\n",
  "<?php\n\nclass OverviewGuru extends CI_Controller {\n    public function __construct()\n    {\n\t\tparent::__construct();\n\t\t$this->load->helper('url');\n\t\t$this->load->model('Login_model');\n\t\t$this->load->model('Guru_model');\n        $this->load->model('Siswa_model');\n\n\t\t// //anti bypass\n        if ($this->session->userdata('level') == \"1\") {\n            redirect('/admin/overview');\n        } elseif ($this->session->userdata('level') == \"3\") {\n            redirect('/siswa/overviewsiswa');\n        } elseif (!$this->session->userdata('level')) {\n            redirect('/login');\n        }\n\t}\n\n\tpublic function index()\n\t{\n\n        if($this->session->userdata('isLogin') == FALSE)\n\n\t\t{\n\n\t\t\tredirect('login/login');\n\n\t\t}else\n\n\t\t{\n\n\t\t\t$this->load->model('Login_model');\n\n\t\t\t$user = $this->session->userdata('username');\n\n\t\t\t$data['level'] = $this->session->userdata('level');\n\n\t\t\t\n\n\t\t\t$this->load->view('guru/headerGuru', $data);\n\t\t\t$this->load->view('guru/overviewGuru', $data);\n\t\t}\n\t}\n}",
  "<!DOCTYPE html>\n<html lang=\"en\">\n  <!-- Beautiful Jekyll | MIT license | Copyright Dean Attali 2016 -->\n  <head>\n  <meta charset=\"utf-8\" />\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0\">\n\n  <title>Kinect Energy\u5229\u7528\u673a\u5668\u5b66\u4e60\u5e76\u4f7f\u7528Amazon SageMaker\u53bb\u9884\u6d4b\u80fd\u6e90\u4ef7\u683c</title>\n\n  <meta name=\"author\" content=\"shawnxiao105\" />\n\n  \n\n  <link rel=\"alternate\" type=\"application/rss+xml\" title=\"\u5927\u7f8ade\u5b66\u4e60\u7a7a\u95f4 - ML-BigData-DR\" href=\"/feed.xml\" />\n\n  \n    <!-- Google Tag Manager -->\n    <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\n    new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],\n    j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\n    'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);\n    })(window,document,'script','dataLayer','GTM-T7HRBRG');</script>\n    <!-- End Google Tag Manager -->\n\n\n  \n    \n      \n  <link rel=\"stylesheet\" href=\"//maxcdn.bootstrapcdn.com/font-awesome/4.6.0/css/font-awesome.min.css\" />\n\n    \n  \n\n  \n    \n      <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\" />\n    \n      <link rel=\"stylesheet\" href=\"/css/bootstrap-social.css\" />\n    \n      <link rel=\"stylesheet\" href=\"/css/main.css\" />\n    \n  \n\n  \n    \n      <link rel=\"stylesheet\" href=\"//fonts.googleapis.com/css?family=Lora:400,700,400italic,700italic\" />\n    \n      <link rel=\"stylesheet\" href=\"//fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,700italic,800italic,400,300,600,700,800\" />\n    \n  \n\n  \n\n  \n\n  \n\n    <!-- Facebook OpenGraph tags -->\n  \n\n  \n  <meta property=\"og:title\" content=\"Kinect Energy\u5229\u7528\u673a\u5668\u5b66\u4e60\u5e76\u4f7f\u7528Amazon SageMaker\u53bb\u9884\u6d4b\u80fd\u6e90\u4ef7\u683c\" />\n  \n\n   \n  <meta property=\"og:description\" content=\"Amazon ML \u89e3\u51b3\u65b9\u6848\u5b9e\u9a8c\u5ba4\u6700\u8fd1\u4e0e Kinect Energy \u4e00\u8d77\u5408\u4f5c\u6784\u5efa\u4e86\u4e00\u4e2a\u7ba1\u9053\u670d\u52a1\uff0c\u7528\u673a\u5668\u5b66\u4e60\u9884\u6d4b\u80fd\u6e90\u672a\u6765\u4ef7\u683c\u3002\u6211\u4eec\u4f7f\u7528 Amazon SageMaker \u548c AWS Step Functions\u521b\u5efa\u81ea\u52a8\u5316\u7684\u6570\u636e\u62bd\u53d6\u548c\u6570\u636e\u63a8\u7406\u7684\u7ba1\u9053\u670d\u52a1\uff0c\u8be5\u670d\u52a1\u53ef\u4ee5\u81ea\u52a8\u8c03\u5ea6\u53bb\u9884\u6d4b\u80fd\u6e90\u4ef7\u683c\u3002 \u6700\u7279\u522b\u7684\u662f\u8fd9\u4e2a\u6d41\u7a0b\u5229\u7528\u4e86Amazon SageMaker DeepAR \u9884\u6d4b\u7b97\u6cd5\u3002 \u4f7f\u7528\u5168\u65b0\u7684\u6df1\u5ea6\u5b66\u4e60\u9884\u6d4b\u6a21\u578b\u53bb\u66ff\u6362\u5f53\u524d\u624b\u5de5\u6d41\u7a0b\uff0c\u6211\u4eec\u4e0d\u4ec5\u8282\u7ea6\u65f6\u95f4\uff0c\u8fd8\u63a8\u52a8Kinect Energy\u5185\u90e8\u4e00\u81f4\u4f7f\u7528\u6570\u636e\u9a71\u52a8\u65b9\u6cd5\u8bba\u3002 \u4e0b\u56fe\u663e\u793a\u4e86\u7aef\u5230\u7aef\u7684\u89e3\u51b3\u65b9\u6848 \u7f16\u6392\u4e00\u4e2astep function\u6765\u5b9e\u73b0\u6570\u636e\u62bd\u53d6\u6d41\u7a0b\uff0c\u5373\u6bcf\u5929\u52a0\u8f7d\u548c\u5904\u7406\u6570\u636e\uff0c\u5e76\u5c06\u6570\u636e\u5b58\u5165Amazon S3 \u6570\u636e\u6e56\u3002 \u4e4b\u540e\u6570\u636e\u4f20\u5165Amazon SageMaker\uff0c\u7cfb\u7edf\u901a\u8fc7Batch Transform\u8c03\u7528\u53bb\u89e6\u53d1\u6267\u884c\u63a8\u7406\u6a21\u578b\u7ba1\u9053\u670d\u52a1\u6765\u751f\u6210\u63a8\u7406 (Inference). \u9879\u76ee\u52a8\u673a \u81ea\u7136\u80fd\u6e90\u5e02\u573a\u4f9d\u8d56\u4e00\u7cfb\u5217\u4ea7\u54c1\u6765\u6ee1\u8db3\u5e02\u573a\u9700\u6c42\uff0c\u5982\u98ce\u80fd\u3001\u6c34\u5229\u53d1\u7535\u3001\u6838\u80fd\u3001\u7164\u4ee5\u53ca\u77f3\u6cb9\u5929\u7136\u6c14\u3002\u771f\u6b63\u51b3\u5b9a\u5404\u4e2a\u80fd\u6e90\u6240\u5360\u5e02\u573a\u6bd4\u5217\u53d6\u51b3\u4e8e\u5f53\u5929\u5404\u4e2a\u80fd\u6e90\u7684\u5e02\u573a\u4ef7\u683c\u3002\u8fd9\u4e2a\u4ef7\u683c\u53d6\u51b3\u4e8e\u90a3\u5929\u7684\u7535\u529b\u9700\u6c42\u3002\u6295\u8d44\u8005\u53ef\u4ee5\u5728\u516c\u5f00\u5e02\u573a\u7ade\u4ef7\u4ea4\u6613\u7535\u529b\u3002 Kinect Energy \u5411\u5ba2\u6237\u4e70\u5356\u80fd\u6e90\uff0c\u5176\u5546\u4e1a\u6a21\u5f0f\u4e2d\u91cd\u8981\u7684\u4e00\u90e8\u5206\u6d89\u53ca\u4ea4\u6613\u80fd\u6e90\u4ef7\u683c\u884d\u751f\u7684\u91d1\u878d\u5408\u540c\u3002 \u8fd9\u9700\u8981\u5bf9\u80fd\u6e90\u4ef7\u683c\u8fdb\u884c\u51c6\u786e\u7684\u9884\u6d4b\u3002 Kinect Energy \u5e0c\u671b\u901a\u8fc7\u4f7f\u7528 ML \u6765\u6539\u8fdb\u548c\u81ea\u52a8\u5316\u9884\u6d4b\u8fc7\u7a0b(\u4ee5\u524d\u662f\u624b\u52a8\u5b8c\u6210\u7684)\u3002\u73b0\u8d27\u4ef7\u683c\u662f\u5f53\u524d\u5546\u54c1\u4ef7\u683c,\u800c\u4e0d\u662f\u672a\u6765\u6216\u8fdc\u671f\u6267\u884c\u4ef7\u683c, \u5373\u5546\u54c1\u5728\u5c06\u6765\u4ea4\u5272\u65f6\u53ef\u4ee5\u4e70\u5165\u6216\u5356\u51fa\u7684\u4ef7\u683c\u3002\u901a\u8fc7\u6bd4\u8f83\u9884\u6d4b\u7684\u73b0\u8d27\u4ef7\u683c\u548c\u8fdc\u671f\u6267\u884c\u4ef7\u683c\uff0cKinect Energy\u56e2\u961f\u6709\u673a\u4f1a\u6839\u636e\u5f53\u4e0b\u7684\u9884\u6d4b\u5bf9\u51b2\u672a\u6765\u4ef7\u683c\u53d8\u52a8\u3002 \u6570\u636e\u9700\u6c42 \u5728\u6b64\u89e3\u51b3\u65b9\u6848\u4e2d\u6211\u4eec\u5e0c\u671b\u9884\u6d4b\u4ee5\u5c0f\u65f6\u4e3a\u95f4\u9694\u7684\u672a\u6765\u56db\u5468\u7684\u73b0\u8d27\u4ef7\u683c\u3002\u9879\u76ee\u9762\u4e34\u7684\u4e3b\u8981\u6311\u6218\u4e4b\u4e00\u662f\u642d\u5efa\u4e00\u4e2a\u7cfb\u7edf\u6765\u81ea\u52a8\u6536\u96c6\u548c\u5904\u7406\u6240\u9700\u7684\u6570\u636e\u3002\u8be5\u7ba1\u9053\u670d\u52a1\u9700\u8981\u4ee5\u4e0b\u4e24\u79cd\u6570\u636e\uff1a \u5386\u53f2\u73b0\u8d27\u4ef7\u683c \u80fd\u6e90\u751f\u4ea7\u548c\u6d88\u8d39\u7387\u4ee5\u53ca\u5176\u4ed6\u5f71\u54cd\u73b0\u8d27\u4ef7\u683c\u7684\u5916\u90e8\u56e0\u7d20 \uff08\u6211\u4eec\u5c06\u751f\u4ea7\u548c\u6d88\u8d39\u7387\u79f0\u4e3a\u5916\u90e8\u6570\u636e\u3002\uff09 \u4e3a\u4e86\u6784\u5efa\u4e00\u4e2a\u5f3a\u5927\u7684\u9884\u6d4b\u6a21\u578b,\u6211\u4eec\u5fc5\u987b\u6536\u96c6\u8db3\u591f\u7684\u5386\u53f2\u6570\u636e\u6765\u8bad\u7ec3\u6a21\u578b,\u6700\u597d\u662f\u8de8\u8d8a\u591a\u5e74\u7684\u6570\u636e\u3002\u6211\u4eec\u8fd8\u4e0d\u5f97\u4e0d\u6bcf\u5929\u5728\u5e02\u573a\u4ea7\u751f\u65b0\u4fe1\u606f\u65f6\u66f4\u65b0\u6570\u636e\u3002\u8be5\u6a21\u578b\u8fd8\u9700\u8981\u80fd\u591f\u8bbf\u95ee\u653e\u7f6e\u9884\u6d4b\u540e\u7684\u7ed3\u679c\u6570\u636e\u7684\u5916\u90e8\u6570\u636e\u6e90\u3002 \u4f9b\u5e94\u5546\u6bcf\u5929\u5c06\u6bcf\u5c0f\u65f6\u73b0\u8d27\u4ef7\u683c\u66f4\u65b0\u5230\u5916\u90e8\u6570\u636e\u9988\u9001\u3002\u591a\u5bb6\u5b9e\u4f53\u63d0\u4f9b\u751f\u4ea7\u548c\u6d88\u8d39\u7387\u7684\u6570\u636e, \u5e76\u4e14\u53d1\u5e03\u6570\u636e\u7684\u65f6\u95f4\u5468\u671f\u4e5f\u5404\u6709\u4e0d\u540c\u3002 Kinect Energy...\">\n  \n\n\n  <meta property=\"og:type\" content=\"website\" />\n\n  \n  <meta property=\"og:url\" content=\"http://localhost:4000/2019-08-09-Kinect-Energy-Uses-Amazon-Sagemaker-to-Forecast-Energy-Prices-With-Machine-Learning/\" />\n  <link rel=\"canonical\" href=\"http://localhost:4000/2019-08-09-Kinect-Energy-Uses-Amazon-Sagemaker-to-Forecast-Energy-Prices-With-Machine-Learning/\" />\n  \n\n  \n  <meta property=\"og:image\" content=\"http://localhost:4000/img/avatar-icon.jpeg\" />\n  \n\n\n  <!-- Twitter summary cards -->\n  <meta name=\"twitter:card\" content=\"summary\" />\n  <meta name=\"twitter:site\" content=\"@\" />\n  <meta name=\"twitter:creator\" content=\"@\" />\n\n  \n  <meta name=\"twitter:title\" content=\"Kinect Energy\u5229\u7528\u673a\u5668\u5b66\u4e60\u5e76\u4f7f\u7528Amazon SageMaker\u53bb\u9884\u6d4b\u80fd\u6e90\u4ef7\u683c\" />\n  \n\n  \n  <meta name=\"twitter:description\" content=\"Amazon ML \u89e3\u51b3\u65b9\u6848\u5b9e\u9a8c\u5ba4\u6700\u8fd1\u4e0e Kinect Energy \u4e00\u8d77\u5408\u4f5c\u6784\u5efa\u4e86\u4e00\u4e2a\u7ba1\u9053",
  "package com.moqi.java.a06;\n\nimport java.util.HashSet;\nimport java.util.Set;\n\n// \u91cd\u6784\u4e4b\u540e\u7b80\u5316\u4e86\u7684\u7d20\u6570\u5224\u5b9a\u7a0b\u5e8f\n// BEGIN java_prime_beta\npublic class A0619PrimeBeta extends A0617FactorsBeta {\n    public A0619PrimeBeta(int number) {\n        super(number);\n    }\n\n    public boolean isPrime() {\n        Set<Integer> primeSet = new HashSet<Integer>() {{\n            add(1);\n            add(number);\n        }};\n        return getFactors().equals(primeSet);\n    }\n\n}\n// END java_prime_beta\n",
  "package main\r\n\r\nimport \"net/http\"\r\n\r\nfunc addYandexDialogsRoutes(router *http.ServeMux) {\r\n\thandleDedicatedRoute(router, routeYandexDialogsTales, http.HandlerFunc(yandexDialogsTales))\r\n}\r\n",
  "package org.quisl.framework.java.algorithms;",
  "// @ts-nocheck\nimport Editor from '@monaco-editor/react'\nimport jsonFormat from 'json-format'\n// import debounce from 'lodash.debounce'\nimport { useSnackbar } from 'notistack'\nimport { useState, useEffect } from'react'\nimport { useSelector } from'react-redux'\nimport { selectSpellById, useSaveSpellMutation } from '../../state/api/spells'\nimport {\n  selectGameStateBySpellId,\n  // updateGameState,\n} from '../../state/gameState'\nimport Window from '../../components/Window/Window'\n\nimport '../thoth.module.css'\nimport { RootState } from '../../state/store'\nimport WindowMessage from '../components/WindowMessage'\n\nconst StateManager = ({ tab,...props }) => {\n  // const dispatch = useDispatch()\n  const [saveSpell] = useSaveSpellMutation()\n  const gameState = useSelector((state: RootState) => {\n    return selectGameStateBySpellId(state.gameState, tab.spell)\n  })\n  const spell = useSelector(state => selectSpellById(state, tab.spell))\n\n  const { enqueueSnackbar } = useSnackbar()\n  const [typing, setTyping] = useState<boolean>(false)\n  const [code, setCode] = useState('{}')\n  const [height, setHeight] = useState<number>()\n\n  const bottomHeight = 50\n\n  const editorOptions = {\n    lineNumbers: false,\n    minimap: {\n      enabled: false,\n    },\n    fontSize: 14,\n    suggest: {\n      preview: false,\n    },\n  }\n\n  const handleEditorWillMount = monaco => {\n    monaco.editor.defineTheme('sds-dark', {\n      base: 'vs-dark',\n      inherit: true,\n      rules: [],\n      colors: {\n        'editor.background': '#272727',\n      },\n    })\n  }\n\n  useEffect(() => {\n    if (props?.node?.rect?.height)\n      setHeight((props.node.rect.height - bottomHeight) as number)\n\n    // this is to dynamically set the appriopriate height so that Monaco editor doesnt break flexbox when resizing\n    props.node.setEventListener('resize', data => {\n      setTimeout(() => setHeight(data.rect.height - bottomHeight), 0)\n    })\n  }, [props.node])\n\n  useEffect(() => {\n    if (!typing) return\n\n    const delayDebounceFn = setTimeout(() => {\n      // Send Axios request here\n      onSave()\n      setTyping(false)\n    }, 1000)\n\n    return () => clearTimeout(delayDebounceFn)\n  }, [code])\n\n  // update code when game state changes\n  useEffect(() => {\n    if (!gameState) return\n    setCode(jsonFormat(gameState.state))\n  }, [gameState])\n\n  const onClear = () => {\n    const reset = `{}`\n    setCode(reset)\n  }\n\n  const onChange = code => {\n    setCode(code)\n    setTyping(true)\n  }\n\n  const onSave = async () => {\n    if (!gameState) return\n    const parsedState = JSON.parse(code)\n    const spellUpdate = {\n     ...spell,\n      gameState: parsedState,\n    }\n    const res = await saveSpell(spellUpdate)\n    if ('error' in res) return\n    res.data.gameState && setCode(JSON.stringify(res.data.gameState?.state))\n\n    enqueueSnackbar('State saved', {\n      preventDuplicate: true,\n      variant:'success',\n    })\n  }\n\n  const toolbar = (\n    <>\n      <button className=\"small\" onClick={onSave}>\n        Save\n      </button>\n      <button className=\"small\" onClick={onClear}>\n        Clear\n      </button>\n    </>\n  )\n\n  if (tab.type ==='module')\n    return <WindowMessage content=\"Modules do not support game state\" />\n\n  return (\n    <Window toolbar={toolbar}>\n      <Editor\n        theme=\"sds-dark\"\n        height={height}\n        defaultLanguage=\"json\"\n        value={code}\n        options={editorOptions}\n        defaultValue={code}\n        onChange={onChange}\n        beforeMount={handleEditorWillMount}\n      />\n    </Window>\n  )\n}\n\nexport default StateManager\n",
  "<?php\n\nnamespace common\\models;\n\nuse yii\\db\\ActiveRecord;\n\nclass Role extends ActiveRecord\n{\n    const ROLE_ADMIN = 'admin';\n    const ROLE_MODERATOR ='moderator';\n    const ROLE_USER = 'user';\n\n    /**\n     * {@inheritdoc}\n     */\n    public static function tableName()\n    {\n        return 'role';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function rules()\n    {\n        return [\n            [['name', 'code'],'required'],\n            [['name', 'code'],'string'],\n            [['name'], 'unique'],\n            [['code'], 'unique']\n        ];\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function attributeLabels()\n    {\n        return [\n            'id' => 'ID',\n            'name' => '\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435',\n            'code' => '\u041a\u043e\u0434',\n        ];\n    }\n\n    public static function getRoleByCode(string $roleCode):?Role\n    {\n        return self::find()->where(['code' => $roleCode])->one();\n    }\n}",
  "import { AxiosResponse, AxiosError } from 'axios';\nimport { DataRows } from '../quasar_tables/state';\n\nexport interface RootState {\n  gtmID: string;\n  httpTimeout: number;\n  currentYear: number | null;\n  message: AlertInterface;\n  tokenRefreshTime: number;\n  darkMode: boolean;\n  isOffline: boolean;\n  apiPort: string;\n  apiVersion: string;\n  apiProtocol: string;\n  apiHost: string;\n}\n\nexport interface AlertInterface {\n  type: string;\n  content: string;\n  status: number | null;\n  statusText: string;\n  activity: string;\n}\n\nexport enum RootMutationTypes {\n  SET_DARK_MODE = 'SET_DARK_MODE',\n}\n\nexport type LoginData = {\n  username: string;\n  password: string;\n  remember_me: boolean;\n};\n\nexport interface IDNameInterface {\n  id: string | number | undefined | null;\n  name: string;\n}\n\nexport interface StringIDNameInterface extends IDNameInterface {\n  id: string;\n}\n\nexport enum ROLES {\n  SUPERADMIN = 'SuperAdmin',\n  SUPER_EDITOR = 'SuperEditor',\n  SUPER_VIEWER = 'SuperViewer',\n  DEVELOPER = 'Developer',\n  COMPANY_ADMIN = 'CompanyAdmin',\n  COMPANY_EDITOR = 'CompanyEditor',\n  COMPANY_STAFF = 'CompanyStaff',\n}\n\nexport type ROLES_VALUES =\n  | ROLES.SUPERADMIN\n  | ROLES.SUPER_EDITOR\n  | ROLES.SUPER_VIEWER\n  | ROLES.DEVELOPER\n  | ROLES.COMPANY_ADMIN\n  | ROLES.COMPANY_EDITOR\n  | ROLES.COMPANY_STAFF;\n\nexport interface RoleInterface extends StringIDNameInterface {\n  name: ROLES_VALUES;\n}\n\nexport interface NumberIDNameInterface extends IDNameInterface {\n  id: number | null;\n}\n\nexport interface CompanySizeInterface extends IDNameInterface {\n  id: number;\n  size: string;\n}\n\ntype Token = {\n  token: string;\n  type: string;\n};\n\nexport interface ResponseData {\n  message?: string;\n  status?: number;\n  statusText?: string;\n  stack?: string;\n  data: ResponseData & PaginatedData & ArrayBuffer;\n  errors?: Array<{ rule: string; field: string; message: string }>;\n}\n\nexport type PaginatedData = {\n  data?: DataRows;\n  meta: {\n    current_page: number;\n    first_page: number;\n    first_page_url: string;\n    last_page: number;\n    last_page_url: string;\n    next_page_url: string;\n    per_page: number;\n    previous_page_url: string;\n    total: number;\n  };\n};\n\nexport interface LoginResponseData {\n  token: Token;\n  data: LoginUserData;\n  message?: string;\n}\n\ninterface IDEntity {\n  id: string;\n}\n\nexport interface LoginUserDataInterface {\n  companies: StringIDNameInterface[];\n  profile: UserProfileSummary;\n  role: RoleInterface;\n  passwordHistories: Array<{ created_at: string; user_id: string }>;\n}\n\nexport type LoginUserData = LoginUserSummary & LoginUserDataInterface;\n\nexport type StateUserData = UserSummary & LoginUserDataInterface;\n\nexport interface UserSummary extends IDEntity {\n  email: string;\n  is_account_activated: boolean;\n  is_email_verified: boolean;\n  login_status: boolean;\n}\n\nexport interface LoginUserSummary extends IDEntity {\n  email: string;\n  is_account_activated: number;\n  is_email_verified: number;\n  login_status: number;\n}\n\nexport interface UserProfileSummary extends IDEntity {\n  first_name: string;\n  last_name: string;\n  profilePictureFile: FileMultiFormats;\n}\n\nexport interface LoginHttpResponse extends AxiosResponse {\n  data: LoginResponseData;\n}\n\nexport interface HttpResponse extends AxiosResponse {\n  data: ResponseData & string;\n  message?: string;\n  code?: string;\n  stack?: string;\n  headers: Record<string, string>;\n}\n\nexport interface HttpError extends AxiosError {\n  response?: HttpResponse;\n}\n\ninterface SelectOptionBase {\n  label: string | undefined;\n  icon?: string;\n  description?: string;\n}\n\nexport interface SelectOption extends SelectOptionBase {\n  value: string | boolean | number | null | undefined;\n}\n\nexport interface SelectOptionNumber extends SelectOptionBase {\n  value: number | undefined;\n}\n\nexport interface SelectOptionString extends SelectOptionBase {\n  value: string | undefined;\n}\n\nexport interface StringSelectOption extends SelectOption {\n  label: string;\n  value: string;\n  icon?: string;\n  description?: string;\n}\n\nexport type CurrentlyViewedUser = {\n  profile: {\n    first_name: string;\n    last_name: string;\n    middle_name: string;\n    phone_number: string;\n    address: string;\n    city: string;\n    profilePictureFile: FileMultiFormats;\n    userState?: NumberIDNameInterface;\n    userCountry?: NumberIDNameInterface;\n  };\n  email: string;\n  login_status: boolean;\n  role: StringIDNameInterface;\n};\n\nexport interface UsersIndexResultInterface {\n  account_activated_at: string | null;\n  created_at: string;\n  email: string;\n  email_verified_at: string | null;\n  first_name: string;\n  id: string;\n  is_account_activated: number;\n  is_email_verified: number;\n  last_login_time: null;\n  last_name: string;\n  lifetime_login: number;\n  login_status: number;\n  password_change_required: number;\n  role: ROLES_VALUES;\n  updated_at: string;\n  profile_picture_url: string | null;\n  profile_picture_formats: string | null;\n}\n\nexport type CurrentlyViewedCompany = {\n  id: string;\n  name: string;\n  phone_number: string;\n  email: string;\n  address?: string;\n  city?: string;\n  companySize?: CompanySizeInterface;\n  state?: NumberIDNameInterface;\n  country?: NumberIDNameInterface;\n  website?: string;\n  type: 'personal' | 'corporate';\n  approved_at: string;\n  created_at: string;\n  updated_at: string;\n  slug: string;\n  is_approved: string;\n  company_logo: FileMultiFormats;\n};\n\ninterface CurrentCustomerBaseInterface {\n  first_name: string | undefined;\n  last_name: string | undefined;\n  middle_name: string | undefined;\n  email: string | undefined;\n  phone_number: string | undefined;\n  is_corporate: boolean;\n  corporate_has_rep: boolean;\n  company_name: string | undefined;\n  company_phone: string | undefined;\n  company_email: string | undefined;\n}\n\nexport interface CurrentlyViewedCustomer extends CurrentCustomerBaseInterface {\n  title?: {\n    id: number | undefined;\n    name: string | undefined;\n  };\n}\n\nexport type CustomerAddressType =\n  | 'billing_address'\n  |'shipping_address'\n  | 'both';\n\nexport interface CurrentlyViewedAddress {\n  id: string;\n  address_type: CustomerAddressType;\n  city: string;\n  created_at: string;\n  postal_code: string;\n  street_address: string;\n  updated_at: string;\n  addressCountry: {\n    id: number;\n    name: string;\n  };\n  addressState: {\n    id: number;\n    name: string;\n  };\n}\n\nexport interface CustomerAddressInterfaceContract {\n  [key: string]:\n    | boolean\n    | number\n    | SelectOption\n    | SelectOptionNumber\n    | string\n    | null\n    | undefined;\n  address: string;\n  lga: string | null;\n  postal_code: string | null;\n}\n\nexport interface CustomerAddressInterfaceRaw\n  extends CustomerAddressInterfaceContract {",
  "package process\n\nimport (\n\t\"git.oschina.net/cloudzone/smartgo/stgclient/consumer\"\n\t\"git.oschina.net/cloudzone/smartgo/stgcommon/message\"\n)\n\ntype PullResultExt struct {\n\t*consumer.PullResult\n\tsuggestWhichBrokerId int64\n\tmessageBinary        [] byte\n}\n\nfunc NewPullResultExt(pullStatus consumer.PullStatus, nextBeginOffset int64, minOffset int64, maxOffset int64,\nmsgFoundList []*message.MessageExt, suggestWhichBrokerId int64, messageBinary [] byte) *PullResultExt {\n\tpullResult := &consumer.PullResult{PullStatus:pullStatus, NextBeginOffset:nextBeginOffset,\n\t\tMinOffset:minOffset, MaxOffset:maxOffset, MsgFoundList:msgFoundList}\n\treturn &PullResultExt{PullResult:pullResult, suggestWhichBrokerId:suggestWhichBrokerId, messageBinary:messageBinary}\n}",
  "// Copyright 2019 Tad Lebeck\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\npackage util\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n\t\"strings\"\n\t\"time\"\n\n\t\"github.com/Nuvoloso/kontroller/pkg/autogen/models\"\n\tcom \"github.com/Nuvoloso/kontroller/pkg/common\"\n)\n\nvar errInvalidValueTypeKind = fmt.Errorf(\"invalid value type Kind\")\nvar errInvalidValueTypeValue = fmt.Errorf(\"invalid value type Value\")\n\n// ValueTypeDuration parses a models.ValueType DURATION\nfunc ValueTypeDuration(vt models.ValueType) (time.Duration, error) {\n\tif vt.Kind!= com.ValueTypeDuration {\n\t\treturn 0, errInvalidValueTypeKind\n\t}\n\tposSuffix := strings.IndexAny(vt.Value, \"dhmsu\u00b5\")\n\tif posSuffix < 1 {\n\t\treturn 0, errInvalidValueTypeValue\n\t}\n\tif string(vt.Value[posSuffix:]) == \"d\" {\n\t\tstr := string(vt.Value[0:posSuffix]) + \"h\"\n\t\tdur, err := time.ParseDuration(str)\n\t\tif err == nil {\n\t\t\treturn 24 * dur, nil\n\t\t}\n\t\treturn 0, errInvalidValueTypeValue\n\t}\n\td, err := time.ParseDuration(vt.Value)\n\tif err!= nil {\n\t\treturn 0, errInvalidValueTypeValue\n\t}\n\treturn d, nil\n}\n\n// ValueTypeInt parses a models.ValueType INT\nfunc ValueTypeInt(vt models.ValueType) (int64, error) {\n\tif vt.Kind!= com.ValueTypeInt {\n\t\treturn 0, errInvalidValueTypeKind\n\t}\n\tn, err := strconv.ParseInt(vt.Value, 0, 64)\n\tif err!= nil {\n\t\treturn 0, errInvalidValueTypeValue\n\t}\n\treturn n, nil\n}\n\n// ValueTypePercentage parses a models.ValueType PERCENTAGE\nfunc ValueTypePercentage(vt models.ValueType) (float64, error) {\n\tif vt.Kind!= com.ValueTypePercentage {\n\t\treturn 0, errInvalidValueTypeKind\n\t}\n\tvar f float64\n\tif n, err := fmt.Sscanf(vt.Value, \"%f%%\", &f); err!= nil || n!= 1 {\n\t\treturn 0, errInvalidValueTypeValue\n\t}\n\treturn f, nil\n}\n\n// ValueTypeString parses a models.ValueType STRING or SECRET\nfunc ValueTypeString(vt models.ValueType) (string, error) {\n\tif!(vt.Kind == com.ValueTypeString || vt.Kind == com.ValueTypeSecret) {\n\t\treturn \"\", errInvalidValueTypeKind\n\t}\n\treturn vt.Value, nil\n}\n\n// ParseValueType parses a models.ValueType\nfunc ParseValueType(vt models.ValueType, expKind string, defaultValue interface{}) interface{} {\n\tif vt.Kind!= expKind {\n\t\treturn defaultValue\n\t}\n\tvar v interface{}\n\tvar err error\n\tswitch vt.Kind {\n\tcase com.ValueTypeDuration:\n\t\tv, err = ValueTypeDuration(vt)\n\tcase com.ValueTypeInt:\n\t\tv, err = ValueTypeInt(vt)\n\tcase com.ValueTypePercentage:\n\t\tv, err = ValueTypePercentage(vt)\n\tcase com.ValueTypeSecret:\n\t\tv, err = ValueTypeString(vt)\n\tcase com.ValueTypeString:\n\t\tv, err = ValueTypeString(vt)\n\tdefault:\n\t\terr = errInvalidValueTypeKind\n\t}\n\tif err!= nil {\n\t\treturn defaultValue\n\t}\n\treturn v\n}\n",
  "// @(#)root/netx:$Id$\n// Author: A. Peters, G. Ganis   7/2/2007\n\n/*************************************************************************\n * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers.               *\n * All rights reserved.                                                  *\n *                                                                       *\n * For the licensing terms see $ROOTSYS/LICENSE.                         *\n * For the list of contributors see $ROOTSYS/README/CREDITS.             *\n *************************************************************************/\n\n#ifndef ROOT_TXNetFileStager\n#define ROOT_TXNetFileStager\n\n//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// TXNetFileStager                                                      //\n//                                                                      //\n// Interface to the 'XRD' staging capabilities.                         //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n#include \"TFileStager.h\"\n\nclass TCollection;\nclass TXNetSystem;\nclass TFileCollection;\n\nclass TXNetFileStager : public TFileStager {\n\nprivate:\n   TString        fPrefix; // prefix to prepend to requests\n   TXNetSystem   *fSystem; // instance of the admin interface\n\n   static void    GetPrefix(const char *url, TString &pfx);\n\npublic:\n   TXNetFileStager(const char *stager = \"\");\n   virtual ~TXNetFileStager();\n\n   Bool_t  IsStaged(const char *path);\n   Int_t   Locate(const char *path, TString &endpath);\n   Int_t   LocateCollection(TFileCollection *fc, Bool_t addDummyUrl = kFALSE);\n   Bool_t  Matches(const char *s);\n   Bool_t  Stage(const char *path, Option_t *opt = 0);\n   Bool_t  Stage(TCollection *pathlist, Option_t *opt = 0);\n\n   Bool_t  IsValid() const { return (fSystem? kTRUE : kFALSE); }\n\n   void    Print(Option_t *option = \"\") const;\n\n   ClassDef(TXNetFileStager,0)  // Interface to a 'XRD' staging\n};\n\n#endif\n",
  "import Vuex from 'vuex'\nimport * as bookStore from '@/store/book'\nimport { createLocalVue } from '@vue/test-utils'\nimport axios from 'axios'\nimport clonedeep from 'lodash.clonedeep'\n\nconst localVue = createLocalVue()\nlocalVue.use(Vuex)\n\njest.mock('axios')\n\ndescribe('store/book.js', () => {\n  let store\n  let book\n\n  beforeEach(() => {\n    store = new Vuex.Store(clonedeep(bookStore))\n    book = clonedeep({\n      book_id: 1,\n      user_id: 1,\n      book_title: '\u30e2\u30c3\u30af\u7528\u306e\u554f\u984c\u96c6\u306e\u30bf\u30a4\u30c8\u30eb\u3067\u3059',\n      book_desc: '\u30e2\u30c3\u30af\u7528\u306e\u554f\u984c\u96c6\u306e\u8aac\u660e\u6587\u3067\u3059\u3002',\n      book_is_publish: true,\n      book_username_created_by:'mockuser',\n      book_is_favorite: false,\n      book_favorite_count: 10,\n      book_created_at: '2020-03-07 13:43:01',\n      book_updated_at: '2020-03-07 13:43:01'\n    })\n  })\n\n  describe('mutations', () => {\n    test('setBooks \u3092 commit \u3059\u308b\u3068 books \u30b9\u30c6\u30fc\u30c8\u306b books \u304c\u30bb\u30c3\u30c8\u3055\u308c\u308b', () => {\n      expect(store.state.books).toEqual([])\n      store.commit('setBooks', [book])\n      expect(store.state.books).toEqual([book])\n    })\n\n    test('addBooks \u3092 commit \u3059\u308b\u3068 books \u30b9\u30c6\u30fc\u30c8\u306b books \u304c\u8ffd\u52a0\u3055\u308c\u308b', () => {\n      expect(store.state.books).toEqual([])\n      store.commit('addBooks', [book])\n      expect(store.state.books).toEqual([book])\n      store.commit('addBooks', [book])\n      expect(store.state.books).toEqual([book, book])\n      store.commit('addBooks', [book])\n      expect(store.state.books).toEqual([book, book, book])\n    })\n\n    test('setPage \u3092 commit \u3059\u308b\u3068 currentPage \u3068 lastPage \u30b9\u30c6\u30fc\u30c8\u306b page \u304c\u30bb\u30c3\u30c8\u3055\u308c\u308b', () => {\n      expect(store.state.currentPage).toEqual(0)\n      expect(store.state.lastPage).toEqual(null)\n      store.commit('setPage', { currentPage: 1, lastPage: 8 })\n      expect(store.state.currentPage).toEqual(1)\n      expect(store.state.lastPage).toEqual(8)\n    })\n\n    test('setBook \u3092 commit \u3059\u308b\u3068 book \u30b9\u30c6\u30fc\u30c8\u306b book \u304c\u30bb\u30c3\u30c8\u3055\u308c\u308b', () => {\n      expect(store.state.book).toEqual(null)\n      store.commit('setBook', book)\n      expect(store.state.book).toEqual(book)\n    })\n\n    test('setFavorite \u3092 commit \u3059\u308b\u3068\u6307\u5b9a\u3057\u305f book \u306e favorite \u304c true \u306b\u306a\u308b', () => {\n      const book1 = clonedeep(book)\n      const book2 = clonedeep(book)\n      const book3 = clonedeep(book)\n      book1.book_id = 1\n      book2.book_id = 2\n      book3.book_id = 3\n      store.commit('setBooks', [book1, book2, book3])\n      expect(store.state.books).toEqual([book1, book2, book3])\n      const target = store.state.books.find(book => book.book_id === 2)\n      expect(target.book_is_favorite).toEqual(false)\n      store.commit('setFavorite', { bookId: 2, wiiBeFavorite: true })\n      expect(target.book_is_favorite).toEqual(true)\n    })\n\n    test('setFavorite \u3092 commit \u3059\u308b\u3068\u6307\u5b9a\u3057\u305f book \u306e favorite_count \u304c +1 \u306b\u306a\u308b', () => {\n      const book1 = clonedeep(book)\n      const book2 = clonedeep(book)\n      const book3 = clonedeep(book)\n      book1.book_id = 1\n      book2.book_id = 2\n      book3.book_id = 3\n      store.commit('setBooks', [book1, book2, book3])\n      expect(store.state.books).toEqual([book1, book2, book3])\n      const target = store.state.books.find(book => book.book_id === 2)\n      expect(target.book_favorite_count).toEqual(10)\n      store.commit('setFavorite', { bookId: 2, wiiBeFavorite: true })\n      expect(target.book_favorite_count).toEqual(11)\n    })\n\n    test('setFavorite \u3092 commit \u3059\u308b\u3068 book \u30b9\u30c6\u30fc\u30c8\u306e favorite \u304c true \u306b\u306a\u308b', () => {\n      store.commit('setBook', book)\n      expect(store.state.book.book_is_favorite).toEqual(false)\n      store.commit('setFavorite', { bookId: 1, wiiBeFavorite: true })\n      expect(store.state.book.book_is_favorite).toEqual(true)\n    })\n  })\n\n  describe('actions', () => {\n    beforeEach(() => {\n      store.$axios = axios\n    })\n\n    describe('fetchBooks \u3092 dispatch \u3059\u308b', () => {\n      beforeEach(() => {\n        const response = {\n          status: 200,\n          data: {\n            data: [book, book, book],\n            current_page: 1,\n            last_page: 9\n          }\n        }\n        axios.get.mockResolvedValue(response)\n      })\n\n      test('books \u30b9\u30c6\u30fc\u30c8\u306b books \u304c\u30bb\u30c3\u30c8\u3055\u308c\u308b', async () => {\n        expect(store.state.books).toEqual([])\n        await store.dispatch('fetchBooks', { group:'mines', s: 'keyword' })\n        expect(store.state.books).toEqual([book, book, book])\n      })\n\n      test('currentPage \u3068 lastPage \u30b9\u30c6\u30fc\u30c8\u306b \u5404 page \u304c\u30bb\u30c3\u30c8\u3055\u308c\u308b', async () => {\n        expect(store.state.currentPage).toEqual(0)\n        expect(store.state.lastPage).toEqual(null)\n        await store.dispatch('fetchBooks', { group:'mines', s: 'keyword' })\n        expect(store.state.currentPage).toEqual(1)\n        expect(store.state.lastPage).toEqual(9)\n      })\n\n      test('status code 200 \u304c return \u3055\u308c\u308b', async () => {\n        const returnStatus = await store.dispatch('fetchBooks', { group:'mines', s: 'keyword' })\n        expect(returnStatus).toEqual(200)\n      })\n    })\n\n    describe('fetchBook \u3092 dispatch \u3059\u308b', () => {\n      beforeEach(() => {\n        const response = {\n          status: 200,\n          data: { book: book }\n        }\n        axios.get.mockResolvedValue(response)\n\n        const cardMockStore = {\n          namespaced: true,\n          state: { cards: [], card: null },\n          mutations: {\n            setCards: (state, cards) => state.cards = cards,\n            setCard: (state, card) => state.card = card\n          }\n        }\n        store.registerModule('card', cardMockStore)\n      })\n\n      test('book \u30b9\u30c6\u30fc\u30c8\u306b book \u304c\u30bb\u30c3\u30c8\u3055\u308c\u308b', async () => {\n        expect(store.state.book).toEqual(null)\n        await store.dispatch('fetchBook', { bookId: 1 })\n        expect(store.state.book).toEqual(book)\n      })\n\n      test('status code 200 \u304c return \u3055\u308c\u308b', async () => {\n        const returnStatus = await store.dispatch('fetchBook', { bookId: 1 })\n        expect(returnStatus).toEqual(200)\n      })\n    })\n\n    describe('storeBook \u3092 dispatch \u3059\u308b', () => {\n      beforeEach(() => {\n        const response = {\n          status: 200,\n          data: { book: book }\n        }\n        axios.post.mockResolvedValue(response)\n      })\n\n      test('book \u30b9\u30c6\u30fc\u30c8\u306b book \u304c\u30bb\u30c3\u30c8\u3055\u308c\u308b', async () => {\n        expect(store.state.book).toEqual(null)\n        await store.dispatch('storeBook', {",
  "<footer class=\"m-grid__item\t\tm-footer \">\n\t<div class=\"m-container m-container--fluid m-container--full-height m-page__container\">\n\t\t<div class=\"m-stack m-stack--flex-tablet-and-mobile m-stack--ver m-stack--desktop\">\n\t\t\t<div class=\"m-stack__item m-stack__item--left m-stack__item--middle m-stack__item--last\">\n\t\t\t\t<span class=\"m-footer__copyright\">\n\t\t\t\t\t2019 &copy; C\u00f4ng Ty B\u1ea5t \u0110\u1ed9ng S\u1ea3n\n\t\t\t\t\t<a href=\"https://longdienland.com\" class=\"m-link\">\n\t\t\t\t\t\tLong \u0110i\u1ec1n\n\t\t\t\t\t</a>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</footer>\n",
  "package utility;\n\nimport java.sql.ResultSet;\nimport java.util.List;\n\nimport Dao.Aservice;\nimport Dao.serviceRecord;\n\npublic class serviceSQLControl {\n\t\n\tprivate serviceSQLControl() {}\n\t\n\tstatic Aservice sqlServiceQuery(int serviceID) {\n\t\tString sql =\"select * from service where ServiceID='\"+serviceID+\"';\";\n\t\tResultSet rsSet =doSQL.sQuery(sql);\n\t\tAservice servInfo = tools.getaServiceInfo(rsSet);\n\n\t\treturn  servInfo;\n\t}\n\t\n\tstatic boolean sqlServiceInset(Aservice servInfo) {\n\t\t //int ServiceID =servInfo.getServiceID();\n\t\t int userID=servInfo.getUserID();\n\t\t String Title=servInfo.getTitle();\n\t\t String Description=servInfo.getDescription();\n\t\t String StartDate=servInfo.getStartDate();\n\t\t int Status=servInfo.getStatus();\n\t\t\n\t\t\n\t\t String sql =\"insert into service(userID,Title,Description,StartDate,Status)values('\"+userID+\"','\"+Title+\"','\"+Description+\"','\"+StartDate+\"','\"+Status+\"'); \";\n\t\t doSQL.sInsert(sql);\n\t\t\n\t\t return  true;\n\t}\n\t\n\t\n\tstatic boolean sqlServiceUpdate(int serviceID,int userID) {\n\t\tString sql =\"update service set Status =\"+1+\" where ServiceID=\"+serviceID+\" and UserID=\"+userID+\"; \";\n\t\tdoSQL.sUpdate(sql);\n\t\t\n\t\treturn  true;\n\t}\n\t//\u614e\u7528\n\tboolean sqlServiceDelete(int userID) {\n\t\tString sql =\"delete * from service  where UserID='\"+userID+\"'); \";\n\t\tdoSQL.sDelete(sql);\n\t\t\n\t\treturn  true;\n\t}\n\t\n\tstatic List<serviceRecord> serviceRecordQuery(int serviceID ) {\n\t\tString sql =\"select * from servicerecord where ServiceID='\"+serviceID+\"' ;\";\n\t\tResultSet rsSet =doSQL.sQuery(sql); \n\t\tList<serviceRecord> sRecords = tools.getServiceRecords(rsSet);\n\t\t \n\n\t\treturn sRecords ;\n\t}\n\t\n\tstatic boolean sqlSRecordInset(serviceRecord sRecord) {\n\t\t //int ServiceID =servInfo.getServiceID();\n\t\t int ServiceID=sRecord.getServiceID();\n\t\t int userID=sRecord.getUserID();\n\t\t String content=sRecord.getContent();\n\t\t String time=sRecord.getTime();\n\t\t  \t\n\t\t String sql =\"insert into servicerecord(ServiceID,userID,content,StartDate)values('\"+ServiceID+\"','\"+userID+\"','\"+content+\"','\"+time+\"'); \";\n\t\t doSQL.sInsert(sql);\n\t\t\n\t\t return  true;\n\t}\n}\n",
  "package com.company;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class VariableInHexFormat {\n\n    public static void main(String[] args) throws IOException {\n\tBufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n\n\tint result = Integer.parseInt(reader.readLine(), 16);\n\n        System.out.println(result);\n    }\n}\n",
  "#ifndef _TETRAEDRO_H\n#define _TETRAEDRO_H\n\n#include \"objeto3D.h\"\nusing namespace std;\n\nclass Tetraedro : public Objeto3D {\n\nprivate:\n    vert lado;\n    void asignaCoordenadas(void);\n\npublic:\n    Tetraedro(vert longitud, GLubyte red, GLubyte green, GLubyte blue);\n    void setLado(vert longitud);\n    vert getLado(void);\n};\n\n#endif",
  "package ring\n\nimport (\n\t\"fmt\"\n\t\"io\"\n\n\t\"github.com/lionkov/go9p/p\"\n\tlog \"github.com/sirupsen/logrus\"\n)\n\nconst (\n\tunknownSize uint32 = 0xffffffff\n)\n\ntype MessageBuffer struct {\n\tbuffer     *Buffer\n\tcurSize    uint32\n\tcurMessage []byte\n}\n\nfunc NewMessageBuffer() (*MessageBuffer, error) {\n\tbuffer, err := NewBuffer()\n\tif err!= nil {\n\t\treturn nil, err\n\t}\n\treturn &MessageBuffer{\n\t\tbuffer:     buffer,\n\t\tcurSize:    unknownSize,\n\t\tcurMessage: make([]byte, 4),\n\t}, nil\n}\n\nfunc (mb *MessageBuffer) Ingest(chunk []byte) error {\n\tn, err := mb.buffer.Write(chunk)\n\tif err!= nil {\n\t\treturn fmt.Errorf(\"ingest ring buffer write: %w\", err)\n\t}\n\tif n!= len(chunk) {\n\t\treturn fmt.Errorf(\"could only write %d of %d bytes\", n, len(chunk))\n\t}\n\treturn nil\n}\n\nfunc (mb *MessageBuffer) PrintMessages(out io.Writer) error {\nnext:\n\t// If we don't know the size of the current message and we have at least 4 bytes,\n\t// decode the size of the current message.\n\tif mb.curSize == unknownSize && mb.buffer.Readable() >= 4 {\n\t\tsizeBytes := mb.curMessage[:4]\n\t\tn, err := mb.buffer.Read(sizeBytes)\n\t\tif err!= nil {\n\t\t\treturn fmt.Errorf(\"ring buffer read: %w\", err)\n\t\t}\n\t\tif n!= 4 {\n\t\t\treturn fmt.Errorf(\"could only read %d of 4 bytes\", n)\n\t\t}\n\t\tmb.curSize, _ = p.Gint32(sizeBytes)\n\t\tif uint32(len(mb.curMessage)) < mb.curSize {\n\t\t\tp := make([]byte, mb.curSize)\n\t\t\tcopy(p, mb.curMessage)\n\t\t\tmb.curMessage = p\n\t\t}\n\t}\n\t// If we have all the current message, decode that.\n\tif mb.buffer.Readable()+4 >= mb.curSize {\n\t\tn, err := mb.buffer.Read(mb.curMessage[4:mb.curSize])\n\t\tif err!= nil {\n\t\t\treturn fmt.Errorf(\"ring buffer read: %w\", err)\n\t\t}\n\t\tif n < 0 || uint32(n)!= mb.curSize-4 {\n\t\t\treturn fmt.Errorf(\"could only read %d of %d bytes\", n, mb.curSize-4)\n\t\t}\n\t\tfc, err, _ := p.Unpack(mb.curMessage[:mb.curSize], false)\n\t\tif err!= nil {\n\t\t\tlog.WithField(\"cause\", err).Error(\"Could not unpack message\")\n\t\t} else {\n\t\t\tfmt.Fprintln(out, fc)\n\t\t}\n\t\tmb.curSize = unknownSize\n\t\t// Go back to the beginning, we might have room for another message,\n\t\t// or perhaps just its size.\n\t\tgoto next\n\t}\n\treturn nil\n}\n",
  "<#\n# Copyright (c) 2021 All Rights Reserved by the RWS Group for and on behalf of its affiliates and subsidiaries.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#>\n\n$here = Split-Path -Parent $MyInvocation.MyCommand.Path\n$sut = (Split-Path -Leaf $MyInvocation.MyCommand.Path) -replace '\\.Tests\\.', '.'\n. \"$here\\$sut\"\n. \"$here\\..\\Public\\Get-UriStatus.ps1\"\n\n$randomUri = 'Uri' + (Get-random)\n$maxIterations = 5\n\nDescribe \"Wait-UriStatus\" {\n    BeforeEach {\n        Set-Variable -Name \"Iteration\" -Value 1 -Scope Global\n    }\n    AfterEach {\n        Remove-Variable -Name \"Iteration\" -Scope Global -ErrorAction SilentlyContinue\n    }\n    Mock \"Get-UriStatus\" {\n        $iteration = Get-Variable -Name \"Iteration\" -Scope Global -ValueOnly\n        Write-Debug \"iteration=$iteration\"\n        if ($iteration -lt $maxIterations) {\n            Set-Variable -Name \"Iteration\" -Value ($iteration + 1) -Scope Global\n            0\n        }\n        else {\n            200\n        }\n    }\n\n    It \"Wait-UriStatus -Seconds\" {\n        $measure = Measure-Command -Expression { Wait-UriStatus -Uri $randomUri -Status 200 -Seconds 1 }\n        $iteration | Should BeExactly 5\n        Assert-MockCalled -CommandName \"Get-UriStatus\" -Scope It -Exactly $maxIterations -ParameterFilter {\n            $Uri -eq $randomUri\n        }\n    }\n    It \"Wait-UriStatus -Milliseconds\" {\n        $measure = Measure-Command -Expression { Wait-UriStatus -Uri $randomUri -Status 200 -Milliseconds 10 }\n        $iteration | Should BeExactly 5\n        Assert-MockCalled -CommandName \"Get-UriStatus\" -Scope It -Exactly $maxIterations -ParameterFilter {\n            $Uri -eq $randomUri\n        }\n    }\n}\n",
  "---\ntemplateKey: blog-post\ncategories:\n  - Facebook Ads\ncategories-slug:\n  - facebook-ads\ntitle: How to Select Types of Facebook Ads Wisely\ndate: 2019-01-17T00:00:00.000Z\ndescription: null\nfeaturedpost: false\nfeaturedimage: /img/best-facebook-ad-types-featured-image.jpg\nimage: /img/best-facebook-ad-types-featured-image.jpg\nseotitle: Guide to Choosing the Best Facebook Ad Types for Your Business\nfocuskeyphrase: best facebook ad types\nfocus_keyphrase: best facebook ad types\nseo_title: Guide to Choosing the Best Facebook Ad Types for Your Business\ntags:\n  - Lead ads\n  - 360 videos\n  - Carousel ads\n  - Collection ads\n  - Dynamic ads\n  - Event Response ads\n  - Facebook ad formats\n  - Facebook ad types\n  - Image ads\n  - Instagram\n  - Messenger\n  - Offer ads\n  - Page Like ads\n  - Playable ads\n  - Post Engagement ads\n  - Slideshow ads\n  - Video ads\nminread: 5\nmetadescription: Don\u2019t know how to pick the best Facebook ad types? Read this\n  guide to learn everything about the major advertising formats on the largest\n  social network.\n---\n<!--StartFragment-->\n\nStories have been lifting people\u2019s minds to the celestial level throughout human history. And beyond a shadow of a doubt, ads are stories. They began alongside civilization itself. The first ads can be observed in ancient Egypt, Rome, and Greece.\n\nStorytelling on Facebook has a history as well. Did you know that the first type of Facebook ad was mostly used by college students for advertising parties? Called Flyers, these ads were launched in 2004 and cost $10 to $40. That year, Facebook also launched its first cost-per-click (CPC) platform, called Flyers Pro. The next two events determined Facebook\u2019s fate as a marketing platform:\n\n**2005:** Apple and Victoria\u2019s Secret give a significant revenue boost to Facebook. These corporate giants become the two biggest revenue generating advertisers.\n\n**2007:** Facebook partners with Microsoft, which becomes the exclusive provider of banner advertising on the social network.\n\nAfter that, the company launched Facebook Ads and Marketplace. They also started diversifying the methods of ad storytelling.\n\n## Major Types of Facebook Ads\n\nAccording to Facebook, over 1.5 billion users worldwide are connected to a small business on the social network. This number has been achieved due to many factors, one of which is the great selection of Facebook ad types.\n\nThere are many combinations of form and content you can use to advertise your business on Facebook. We consider these options and explain why you should try them all.\n\nThis article also includes a few useful tips to help you select the right formats for your marketing strategy. So read this guide till the end.\n\n### Photo Ads\n\nPhoto ads, also known as image ads, are a time-tested solution that you can\u2019t ignore despite all the other Facebook ad formats. As a [Facebook study](https://www.facebook.com/business/news/insights/creative-combinations-that-work) shows, a series of images can outperform other ad combinations.\n\n<div class=\"blog-iframe\"><iframe loading=\"lazy\" style=\"border: none; overflow: hidden;\" src=\"https://www.facebook.com/plugins/post.php?href=https%3A%2F%2Fwww.facebook.com%2Famericastestkitchen%2Fposts%2F10161309475905565%3A0&amp;width=500\" width=\"500\" height=\"633\" frameborder=\"0\" scrolling=\"no\"></iframe></div>\n\nThe most significant advantage of photo ads lies in their simplicity. They\u2019re easy to make. You can take a photo using your smartphone, come up with a short but powerful copy, and that\u2019s it \u2014 your ad is ready to go!\n\n### Video Ads\n\nLaunched in 2014, [Facebook video ads](https://softcube.com/best-facebook-video-marketing-tips/) have gained popularity among both users and businesses. No wonder, we love watching videos.\n\n<div class=\"blog-iframe\"><iframe loading=\"lazy\" style=\"border: none; overflow: hidden;\" src=\"https://www.facebook.com/plugins/video.php?href=https%3A%2F%2Fwww.facebook.com%2FAirAsia%2Fvideos%2F2223733517869393%2F&amp;show_text=1&amp;width=476\" width=\"476\" height=\"650\" frameborder=\"0\" scrolling=\"no\" allowfullscreen=\"allowfullscreen\"></iframe></div>\n\nToday, advertisers can upload videos in various forms:\n\n* **Short video.** Ads created with GIFs.\n* **Vertical video.** Full-screen video ads for mobile.\n* **Stories.** Videos that vanish after 24 hours.\n* **In-stream video.** Sponsored ads running before, during, or after a video on Facebook and Audience Network.\n* **Live streams.** Real-time video broadcasts.\n* **360 video.** Head-spinning experiences, especially for owners of VR headsets.\n\nAside from these types of video ads, there are two more ad formats that allow you to publish videos on Facebook: Carousel and Collection.\n\n### Carousel Ads\n\nA Carousel Ad can combine up to ten cards that include videos and images. In a Carousel Ad, cards are arranged in a particular order. It\u2019s a perfect way to highlight the features of one product or to showcase a few products from a collection.\n\n<div class=\"blog-iframe\"><iframe loading=\"lazy\" style=\"border: none; overflow: hidden;\" src=\"https://www.facebook.com/plugins/post.php?href=https%3A%2F%2Fwww.facebook.com%2FBMW%2Fposts%2F10157233085797269&amp;width=500\" width=\"500\" height=\"570\" frameborder=\"0\" scrolling=\"no\" align=\"center\"></iframe></div>\n\nIf you want to know everything about this ad format, read our guide to [Carousel Ads on Facebook](https://softcube.com/how-to-show-carousel-ads-on-facebook/). It includes Carousel Ad sizing and specs, best practices, and great examples.\n\n### Collection Ads\n\nCollections are similar to Carousels. You can use a [Collection Ad](https://softcube.com/guide-to-facebook-collection-ads/) to publish up to four video and image cards in one ad. The only difference between Collections and Carousels is in their layout.\n\n<div class=\"blog-iframe\"><iframe loading=\"lazy\" class=\"giphy-embed\" src=\"https://giphy.com/embed/LkqzTSCDT4skLsUYt7\" width=\"247\" height=\"480\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"></iframe></div>\n\nWhile Carousel Ads look like merry-go-rounds, Collection Ads have the form of a grid, with a primary card above the grid. There are four Collection Ad templates you can pick from depending on your goals:\n\n1. **Instant Storefront.** Show your product catalog and lead potential buyers to your app or website.\n2. **Instant Lookbook.** Display products in action, create a digital version of a paper catalog and tell a story to inform people about sales.\n3. **Instant Customer Acquisition.** Drive users to a landing page or get users to take an action on your app or website.\n4. **Instant Storytelling.** Tell about your business, app, or website with a short story.\n\n### Stories\n\n[Stories](https://softcube.com/the-complete-guide-to-instagram-stories-ads/) are customizable photos, GIFs, or videos that disappear in 24 hours. This is one of the most engaging types of Facebook advertising, helping you establish a personal connection with the viewer.\n\n![Best Facebook ad types - stories ad](/img/best-facebook-ad-types-stories.jpg)\n\nAccording to Facebook:\n\n* 58% of users have become more interested in a product or brand after watching Stories.\n* One-third of the most popular Stories on Instagram are posted by businesses.\n* Sharing in Stories will likely surpass sharing in feeds in 2019.\n\nStories can be posted on Facebook, Instagram, and Messenger.\n\n### Playable Ads\n\nHave you developed an app or game you want to promote? Then Playable Ads are what you need.\n\n![Best Facebook ad types - playable ads](/img/best-facebook-ad-types-playable-ads.jpg)\n\nThey allow users to experience an interactive preview:\n\n1. Users watch an opening video that showcases your app in the News Feed.\n2. After watching the video, users experience the game by testing a demo version.\n3. Users can then",
  "<?php\n\nnamespace UBC\\Exam\\MainBundle\\Form;\n\nuse Symfony\\Component\\Form\\AbstractType;\nuse Symfony\\Component\\Form\\FormBuilderInterface;\nuse Symfony\\Component\\OptionsResolver\\OptionsResolver;\n\nclass ExamType extends AbstractType\n{\n    public function buildForm(FormBuilderInterface $builder, array $options)\n    {\n        $builder\n            ->add('campus')\n            ->add('faculty')\n            ->add('dept')\n            ->add('subject_code')\n            ->add('year')\n            ->add('term')\n            ->add('type')\n//            ->add('comments')\n            ->add('cross_listed')\n            ->add('legal_content_owner')\n            ->add('legal_uploader')\n//            ->add('legal_date')\n            ->add('legal_agreed')\n            ->add('access_level')\n//            ->add('created')\n//            ->add('modified')\n//            ->add('downloads')\n//            ->add('uploaded_by')\n        ;\n    }\n\n    public function configureOptions(OptionsResolver $resolver)\n    {\n        $resolver->setDefaults(array(\n            'data_class' => 'UBC\\Exam\\MainBundle\\Entity\\Exam'\n        ));\n    }\n\n    public function getBlockPrefix()\n    {\n        return 'ubc_exam_mainbundle_exam';\n    }\n}\n",
  "<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<title>Pickle ball</title>\n\t\t<meta charset=\"utf-8\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\t\t<!-- bootstrap styles -->\n\t\t<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\" integrity=\"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\" crossorigin=\"anonymous\">\n\t\t<!-- font awesome  -->\n\t\t<link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.4.1/css/all.css\" integrity=\"sha384-5sAR7xN1Nv6T6+dT2mhtzEpVJvfS3NScPQTrOxhwjIuvcA67KV2R5Jz6kr4abQsz\" crossorigin=\"anonymous\">\n\t\t<!-- owl -->\n\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdnjs.cloudflare.com/ajax/libs/owl-carousel/1.3.3/owl.carousel.min.css\">\n\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdnjs.cloudflare.com/ajax/libs/owl-carousel/1.3.3/owl.theme.min.css\">\n\t\t<!-- custom css -->\n\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"assets/css/style.css\">\n\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"assets/css/sidenav.css\">\n\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"assets/css/marquee.css\">\n\t</head>\n\t<body>\n\t\t<!-- main container -->\n\t\t<div class=\"main-container\">\n\t\t\t<!-- mobile menu -->\n\t\t\t<div id=\"pickle-sidenav\" class=\"sidenav\">\n\t\t\t\t<a href=\"javascript:void(0)\" class=\"closebtn\" onclick=\"closeNav()\">&times;</a>\n\t\t\t\t<ul class=\"list-unstyled \" style=\"line-height: 30px\">\n\t\t\t\t\t<li><a href=\"index.html\"><i class=\"far fa-building fa-1x\"></i> Home</a></li>\n\t\t\t\t\t<li><a href=\"facilities.html\"><i class=\"fab fa-apple fa-1x\"></i> Facilities</a></li>\n\t\t\t\t\t<li><a href=\"pickleball.html\"><i class=\"fas fa-table-tennis fa-1x\"></i> Pickleball</a></li>\n\t\t\t\t\t<li><a href=\"member-benefits.html\"><i class=\"far fa-user fa-1x\"></i> Members</a></li>\n\t\t\t\t\t<li><a href=\"about-us.html\"><i class=\"far fa-handshake fa-1x\"></i> About us</a></li>\n\t\t\t\t\t<li><a href=\"faq.html\"><i class=\"far fa-comments fa-1x\"></i> Faq</a></li>\n\t\t\t\t\t<li><a href=\"contact-us.html\"><i class=\"far fa-address-book fa-1x\"></i> Contact</a></li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<!-- menu -->\n\t\t\t<div class=\"pickle-menu bg-orange\">\n\t\t\t\t<ul class=\"nav flex-column text-center\">\n\t\t\t\t\t<li class=\"nav-item\">\n\t\t\t\t\t\t<a class=\"nav-link\" href=\"index.html\"><i class=\"far fa-building fa-2x\"></i> <br><span class=\"menu-text\">HOME</span></a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li class=\"nav-item\">\n\t\t\t\t\t\t<a class=\"nav-link active\" href=\"facilities.html\"><i class=\"fab fa-apple fa-2x\"></i> <br><span class=\"menu-text\">FACILITIES</span></a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li class=\"nav-item\">\n\t\t\t\t\t\t<a class=\"nav-link\" href=\"member-benefits.html\"><i class=\"far fa-user fa-2x\"></i><br> <span class=\"menu-text\">MEMBERS</span></a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li class=\"nav-item\">\n\t\t\t\t\t\t<a class=\"nav-link\" href=\"pickleball.html\"><i class=\"fas fa-table-tennis fa-2x\"></i><br> <span class=\"menu-text\">PICKLEBALL</span></a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li class=\"nav-item\">\n\t\t\t\t\t\t<a class=\"nav-link \" href=\"about-us.html\"><i class=\"far fa-handshake fa-2x\"></i><br><span class=\"menu-text\">ABOUT US</span></a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li class=\"nav-item\">\n\t\t\t\t\t\t<a class=\"nav-link\" href=\"faq.html\"><i class=\"far fa-comments fa-2x\"></i> <br><span class=\"menu-text\">FAQ</span></a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li class=\"nav-item\">\n\t\t\t\t\t\t<a class=\"nav-link\" href=\"contact-us.html\"><i class=\"far fa-address-book fa-2x\"></i> <br> <span class=\"menu-text\">CONTACT US</span></a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<!-- content section -->\n\t\t\t<div class=\"pickle-container\">\n\t\t\t\t<!-- top header -->\n\t\t\t\t<div class=\"pickle-header \">\n\t\t\t\t\t<nav class=\"navbar\">\n\t\t\t\t\t\t<ul class=\"nav nav \">\n\t\t\t\t\t\t\t<li class=\"nav-item\">\n\t\t\t\t\t\t\t\t<a href=\"#\" class=\"nav-link d-block d-sm-block d-md-none\">\n\t\t\t\t\t\t\t\t\t<span onclick=\"openNav()\"><i class=\"fas fa-bars\"></i></span>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<ul class=\"nav nav justify-content-end\">\n\t\t\t\t\t\t\t<li class=\"nav-item d-none d-sm-none  d-md-block\">\n\t\t\t\t\t\t\t\t<a href=\"tel:+91 98 9999 8888\" class=\"nav-item nav-link icon-text \"><i class=\"fas fa-phone\"></i> +91 98 9999 8888 </a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li class=\"nav-item d-none d-sm-none  d-md-block\">\n\t\t\t\t\t\t\t\t<a class=\"nav-link\" href=\"#\">\n\t\t\t\t\t\t\t\t\t<div class=\"\"><i class=\"fab fa-twitter\"></i></div>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li class=\"nav-item d-none d-sm-none d-md-block\">\n\t\t\t\t\t\t\t\t<a class=\"nav-link\" href=\"#\">\n\t\t\t\t\t\t\t\t\t<div class=\" \"><i class=\"fab fa-facebook\"></i></div>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li class=\"nav-item\">\n\t\t\t\t\t\t\t\t<a class=\"nav-link\" href=\"#\">Sign Up</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li class=\"nav-item\">\n\t\t\t\t\t\t\t\t<a class=\"nav-link\" href=\"#\">Sign In</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</nav>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"page-header-section\">\n\t\t\t\t\t<div class=\"background-overlay-section\">\n\t\t\t\t\t\t<h1><i class=\"fab fa-apple\"></i> Facilities</h1>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<section class=\"contact-us-section\">\n\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\n\t\t\t\t<!-- footer section -->\n\t\t\t\t<footer class=\"bg-dark text-light\">\n\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t<div class=\"col-lg-4 border-right\">\n\t\t\t\t\t\t\t\t<img src=\"assets/img/pikcle_logo.jpg\" style=\"max-height: 100px;padding-bottom: 10px;\">\n\t\t\t\t\t\t\t\t<p>The PDPPC  as the club fosters pickleball in the Pee Dee region by helping facilities organize pickleball programs, teaching and promotions. The club has over 160 registered pickleball players and growing.</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-lg-4  border-right text-light\">\n\t\t\t\t\t\t\t\t<ul class=\"list-unstyled\">\n\t\t\t\t\t\t\t\t\t<li><a href=\"facilities.html\">FACILITIES</a></li>\n\t\t\t\t\t\t\t\t\t<li><a href=\"member-benefits.html\">MEMBERSHIP BENIFITS</a",
  "<?php\n\nreturn [\n\n    /*\n    |--------------------------------------------------------------------------\n    | Validation Language Lines\n    |--------------------------------------------------------------------------\n    |\n    | The following language lines contain the default error messages used by\n    | the validator class. Some of these rules have multiple versions such\n    | as the size rules. Feel free to tweak each of these messages here.\n    |\n    */\n\n    'accepted' => 'ACCEPTED # :attribute # The :attribute must be accepted.',\n    'active_url' => 'ACTIVE_URL # :attribute # The :attribute is not a valid URL.',\n    'after' => 'AFTER_DATE # :attribute # The :attribute must be a date after :date.',\n    'after_or_equal' => 'AFTER_OR_EQUAL # :attribute # The :attribute must be a date after or equal to :date.',\n    'alpha' => 'ALPHA # :attribute # The :attribute may only contain letters.',\n    'alpha_dash' => 'ALPHA_DASH # :attribute # The :attribute may only contain letters, numbers, dashes and underscores.',\n    'alpha_num' => 'ALPHA_NUM # :attribute # The :attribute may only contain letters and numbers.',\n    'array' => 'ARRAY # :attribute # The :attribute must be an array.',\n    'before' => 'BEFORE_DATE # :attribute # The :attribute must be a date before :date.',\n    'before_or_equal' => 'BEFORE_EQUAL_DATE # :attribute # The :attribute must be a date before or equal to :date.',\n    'between' => [\n        'numeric' => 'BETWEEN_NUMERIC # :attribute # The :attribute must be between :min and :max.',\n        'file' => 'BETWEEN_FILE # :attribute # The :attribute must be between :min and :max kilobytes.',\n       'string' => 'BETWEEN_STRING # :attribute # The :attribute must be between :min and :max characters.',\n        'array' => 'BETWEEN_ARRAY # :attribute # The :attribute must have between :min and :max items.',\n    ],\n    'boolean' => 'BOOLEAN # :attribute # The :attribute field must be true or false.',\n    'confirmed' => 'CONFIRMED # :attribute # The :attribute confirmation does not match.',\n    'date' => 'DATE # :attribute # The :attribute is not a valid date.',\n    'date_equals' => 'DATE_EQUALS # :attribute # The :attribute must be a date equal to :date.',\n    'date_format' => 'DATE_FORMAT # :attribute # The :attribute does not match the format :format.',\n    'different' => 'DATE_DIFFERENT # :attribute # The :attribute and :other must be different.',\n    'digits' => 'DIGITS # :attribute # The :attribute must be :digits digits.',\n    'digits_between' => 'DIGITS_BETWEEN # :attribute # The :attribute must be between :min and :max digits.',\n    'dimensions' => 'DIMENSIONS # :attribute # The :attribute has invalid image dimensions.',\n    'distinct' => 'DISTINCT # :attribute # The :attribute field has a duplicate value.',\n    'email' => 'EMAIL # :attribute # The :attribute must be a valid email address.',\n    'ends_with' => 'ENDS_WITH # :attribute # The :attribute must end with one of the following: :values.',\n    'exists' => 'EXISTS # :attribute # The selected :attribute is invalid.',\n    'file' => 'FILE # :attribute # The :attribute must be a file.',\n    'filled' => 'FILLED # :attribute # The :attribute field must have a value.',\n    'gt' => [\n        'numeric' => 'GREATER_THAN_NUMERIC # :attribute # The :attribute must be greater than :value.',\n        'file' => 'GREATER_THAN_FILE # :attribute # The :attribute must be greater than :value kilobytes.',\n       'string' => 'GREATER_THAN_STRING # :attribute # The :attribute must be greater than :value characters.',\n        'array' => 'GREATER_THAN_ARRAY # :attribute # The :attribute must have more than :value items.',\n    ],\n    'gte' => [\n        'numeric' => 'GREATER_THAN_OR_EQUAL_NUMERIC # :attribute # The :attribute must be greater than or equal :value.',\n        'file' => 'GREATER_THAN_OR_EQUAL_FILE # :attribute # The :attribute must be greater than or equal :value kilobytes.',\n       'string' => 'GREATER_THAN_OR_EQUAL_STRING # :attribute # The :attribute must be greater than or equal :value characters.',\n        'array' => 'GREATER_THAN_OR_EQUAL_ARRAY # :attribute # The :attribute must have :value items or more.',\n    ],\n    'image' => 'IMAGE # :attribute # The :attribute must be an image.',\n    'in' => 'IN # :attribute # The selected :attribute is invalid.',\n    'in_array' => 'IN_ARRAY # :attribute # The :attribute field does not exist in :other.',\n    'integer' => 'INTEGER # :attribute # The :attribute must be an integer.',\n    'ip' => 'IP # :attribute # The :attribute must be a valid IP address.',\n    'ipv4' => 'IPV4 # :attribute # The :attribute must be a valid IPv4 address.',\n    'ipv6' => 'IPV6 # :attribute # The :attribute must be a valid IPv6 address.',\n    'json' => 'JSON # :attribute # The :attribute must be a valid JSON string.',\n    'lt' => [\n        'numeric' => 'LESS_THAN_NUMERIC # :attribute # The :attribute must be less than :value.',\n        'file' => 'LESS_THAN_FILE # :attribute # The :attribute must be less than :value kilobytes.',\n       'string' => 'LESS_THAN_STRING # :attribute # The :attribute must be less than :value characters.',\n        'array' => 'LESS_THAN_ARRAY # :attribute # The :attribute must have less than :value items.',\n    ],\n    'lte' => [\n        'numeric' => 'LESS_THAN_OR_EQUAL_NUMERIC # :attribute # The :attribute must be less than or equal :value.',\n        'file' => 'LESS_THAN_OR_EQUAL_FILE # :attribute # The :attribute must be less than or equal :value kilobytes.',\n       'string' => 'LESS_THAN_OR_EQUAL_STRING # :attribute # The :attribute must be less than or equal :value characters.',\n        'array' => 'LESS_THAN_OR_EQUAL_ARRAY # :attribute # The :attribute must not have more than :value items.',\n    ],\n   'max' => [\n        'numeric' => 'MAX_NUMERIC # :attribute # The :attribute may not be greater than :max.',\n        'file' => 'MAX_FILE # :attribute # The :attribute may not be greater than :max kilobytes.',\n       'string' => 'MAX_STRING # :attribute # The :attribute may not be greater than :max characters.',\n        'array' => 'MAX_ARRAY # :attribute # The :attribute may not have more than :max items.',\n    ],\n   'mimes' => 'MAX_ARRAY # :attribute # The :attribute must be a file of type: :values.',\n   'mimetypes' => 'MIMES_TYPES # :attribute # The :attribute must be a file of type: :values.',\n   'min' => [\n        'numeric' => 'MIN_NUMERIC # :attribute # The :attribute must be at least :min.',\n        'file' => 'MIN_FILE # :attribute # The :attribute must be at least :min kilobytes.',\n       'string' => 'MIN_STRING # :attribute # The :attribute must be at least :min characters.',\n        'array' => 'MIN_ARRAY # :attribute # The :attribute must have at least :min items.',\n    ],\n    'not_in' => 'NOT_IN # :attribute # The selected :attribute is invalid.',\n    'not_regex' => 'NOT_REGEX # :attribute # The :attribute format is invalid.',\n    'numeric' => 'NUMERIC # :attribute # The :attribute must be a number.',\n    'password' => 'PASSWORD # :attribute # The password is incorrect.',\n    'present' => 'PRESENT # :attribute # The :attribute field must be present.',\n   'regex' => 'REGEX # :attribute # The :attribute format is invalid.',\n   'required' => 'REQUIRED # :attribute # The :",
  "# -*- coding: utf-8 -*-\n# Copyright (c) 2013-2014 Simon Jagoe\n# All rights reserved.\n#\n# This software may be modified and distributed under the terms\n# of the 3-clause BSD license.  See the LICENSE.txt file for details.\nfrom __future__ import absolute_import, unicode_literals\n\nimport argparse\nimport os\n\nimport haas\nfrom.loader import Loader\nfrom.plugin_context import PluginContext\nfrom.plugin_manager import PluginManager\nfrom.result import ResultCollector\nfrom.utils import configure_logging\n\n\ndef create_argument_parser():\n    \"\"\"Creates the argument parser for haas.\n\n    \"\"\"\n    parser = argparse.ArgumentParser(prog='haas')\n    parser.add_argument('--version', action='version',\n                        version='%(prog)s {0}'.format(haas.__version__))\n    verbosity = parser.add_mutually_exclusive_group()\n    verbosity.add_argument('-v', '--verbose', action='store_const', default=1,\n                           dest='verbosity', const=2, help='Verbose output')\n    verbosity.add_argument('-q', '--quiet', action='store_const', const=0,\n                           dest='verbosity', help='Quiet output')\n    parser.add_argument('-f', '--failfast', action='store_true', default=False,\n                        help='Stop on first fail or error')\n    parser.add_argument('-c', '--catch', dest='catch_interrupt',\n                        action='store_true', default=False,\n                        help=('(Ignored) Catch ctrl-C and display results so '\n                              'far'))\n    parser.add_argument('-b', '--buffer', action='store_true', default=False,\n                        help='Buffer stdout and stderr during tests')\n    parser.add_argument(\n       'start', nargs='*', default=[os.getcwd()],\n        help=('One or more directories or dotted package/module names from '\n              'which to start searching for tests'))\n    parser.add_argument('-p', '--pattern', default='test*.py',\n                        help=\"Pattern to match tests ('test*.py' default)\")\n    parser.add_argument('-t', '--top-level-directory', default=None,\n                        help=('Top level directory of project (defaults to '\n                             'start directory)'))\n    _add_log_level_option(parser)\n    return parser\n\n\ndef _create_log_level_parser():\n    parser = argparse.ArgumentParser(prog='haas', add_help=False)\n    _add_log_level_option(parser)\n    return parser\n\n\ndef _add_log_level_option(parser):\n    parser.add_argument('--log-level', default=None,\n                        type=lambda level_name: level_name.lower(),\n                        choices=['critical', 'fatal', 'error', 'warning',\n                                 'info', 'debug'],\n                        help='Log level for haas logging')\n\n\nclass HaasApplication(object):\n    \"\"\"Main haas application entry-point.\n\n    \"\"\"\n\n    def __init__(self, argv, **kwargs):\n        super(HaasApplication, self).__init__(**kwargs)\n        self.argv = argv\n\n        initial_parser = _create_log_level_parser()\n        initial_args, _ = initial_parser.parse_known_args(argv[1:])\n        if initial_args.log_level is not None:\n            configure_logging(initial_args.log_level)\n\n        self.parser = create_argument_parser()\n\n    def run(self, plugin_manager=None):\n        \"\"\"Run the haas test runner.\n\n        This will load and configure the selected plugins, set up the\n        environment and begin test discovery, loading and running.\n\n        Parameters\n        ----------\n        plugin_manager : haas.plugin_manager.PluginManager\n            [Optional] Override the use of the default plugin manager.\n\n        \"\"\"\n        if plugin_manager is None:\n            plugin_manager = PluginManager()\n        plugin_manager.add_plugin_arguments(self.parser)\n\n        args = self.parser.parse_args(self.argv[1:])\n\n        environment_plugins = plugin_manager.get_enabled_hook_plugins(\n            plugin_manager.ENVIRONMENT_HOOK, args)\n        runner = plugin_manager.get_driver(\n            plugin_manager.TEST_RUNNER, args)\n\n        with PluginContext(environment_plugins):\n            loader = Loader()\n            discoverer = plugin_manager.get_driver(\n                plugin_manager.TEST_DISCOVERY, args, loader=loader)\n            suites = [\n                discoverer.discover(\n                    start=start,\n                    top_level_directory=args.top_level_directory,\n                    pattern=args.pattern,\n                )\n                for start in args.start\n            ]\n            if len(suites) == 1:\n                suite = suites[0]\n            else:\n                suite = loader.create_suite(suites)\n            test_count = suite.countTestCases()\n            result_handlers = plugin_manager.get_enabled_hook_plugins(\n                plugin_manager.RESULT_HANDLERS, args, test_count=test_count)\n\n            result_collector = ResultCollector(\n                buffer=args.buffer, failfast=args.failfast)\n\n            for result_handler in result_handlers:\n                result_collector.add_result_handler(result_handler)\n\n            result = runner.run(result_collector, suite)\n            return not result.wasSuccessful()\n",
  "Rails.application.routes.draw do\n  resources :tips\n  resources :sections\n  resources :places\n  \nend\n",
  "#!/usr/bin/env python3\n# Copyright (c) 2016-2020 The Bitcoin Core developers\n# Distributed under the MIT software license, see the accompanying\n# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n\"\"\"Test NULLDUMMY softfork.\n\nConnect to a single node.\nGenerate 2 blocks (save the coinbases for later).\nGenerate COINBASE_MATURITY (CB) more blocks to ensure the coinbases are mature.\n[Policy/Consensus] Check that NULLDUMMY compliant transactions are accepted in block CB + 3.\n[Policy] Check that non-NULLDUMMY transactions are rejected before activation.\n[Consensus] Check that the new NULLDUMMY rules are not enforced on block CB + 4.\n[Policy/Consensus] Check that the new NULLDUMMY rules are enforced on block CB + 5.\n\"\"\"\nimport time\n\nfrom test_framework.blocktools import (\n    COINBASE_MATURITY,\n    NORMAL_GBT_REQUEST_PARAMS,\n    add_witness_commitment,\n    create_block,\n    create_transaction,\n)\nfrom test_framework.messages import CTransaction\nfrom test_framework.script import CScript\nfrom test_framework.test_framework import XCBCTestFramework\nfrom test_framework.util import assert_equal, assert_raises_rpc_error\n\nNULLDUMMY_ERROR = \"non-mandatory-script-verify-flag (Dummy CHECKMULTISIG argument must be zero)\"\n\n\ndef trueDummy(tx):\n    scriptSig = CScript(tx.vin[0].scriptSig)\n    newscript = []\n    for i in scriptSig:\n        if len(newscript) == 0:\n            assert len(i) == 0\n            newscript.append(b'\\x51')\n        else:\n            newscript.append(i)\n    tx.vin[0].scriptSig = CScript(newscript)\n    tx.rehash()\n\n\nclass NULLDUMMYTest(XCBCTestFramework):\n    def set_test_params(self):\n        self.num_nodes = 1\n        self.setup_clean_chain = True\n        # This script tests NULLDUMMY activation, which is part of the'segwit' deployment, so we go through\n        # normal segwit activation here (and don't use the default always-on behaviour).\n        self.extra_args = [[\n            f'-segwitheight={COINBASE_MATURITY + 5}',\n            '-addresstype=legacy',\n        ]]\n\n    def skip_test_if_missing_module(self):\n        self.skip_if_no_wallet()\n\n    def run_test(self):\n        self.nodes[0].createwallet(wallet_name='wmulti', disable_private_keys=True)\n        wmulti = self.nodes[0].get_wallet_rpc('wmulti')\n        w0 = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n        self.address = w0.getnewaddress()\n        self.pubkey = w0.getaddressinfo(self.address)['pubkey']\n        self.ms_address = wmulti.addmultisigaddress(1, [self.pubkey])['address']\n        self.wit_address = w0.getnewaddress(address_type='p2sh-segwit')\n        self.wit_ms_address = wmulti.addmultisigaddress(1, [self.pubkey], '', 'p2sh-segwit')['address']\n        if not self.options.descriptors:\n            # Legacy wallets need to import these so that they are watched by the wallet. This is unnecessary (and does not need to be tested) for descriptor wallets\n            wmulti.importaddress(self.ms_address)\n            wmulti.importaddress(self.wit_ms_address)\n\n        self.coinbase_blocks = self.nodes[0].generate(2)  # block height = 2\n        coinbase_txid = []\n        for i in self.coinbase_blocks:\n            coinbase_txid.append(self.nodes[0].getblock(i)['tx'][0])\n        self.nodes[0].generate(COINBASE_MATURITY)  # block height = COINBASE_MATURITY + 2\n        self.lastblockhash = self.nodes[0].getbestblockhash()\n        self.lastblockheight = COINBASE_MATURITY + 2\n        self.lastblocktime = int(time.time()) + self.lastblockheight\n\n        self.log.info(f\"Test 1: NULLDUMMY compliant base transactions should be accepted to mempool and mined before activation [{COINBASE_MATURITY + 3}]\")\n        test1txs = [create_transaction(self.nodes[0], coinbase_txid[0], self.ms_address, amount=49)]\n        txid1 = self.nodes[0].sendrawtransaction(test1txs[0].serialize_with_witness().hex(), 0)\n        test1txs.append(create_transaction(self.nodes[0], txid1, self.ms_address, amount=48))\n        txid2 = self.nodes[0].sendrawtransaction(test1txs[1].serialize_with_witness().hex(), 0)\n        test1txs.append(create_transaction(self.nodes[0], coinbase_txid[1], self.wit_ms_address, amount=49))\n        txid3 = self.nodes[0].sendrawtransaction(test1txs[2].serialize_with_witness().hex(), 0)\n        self.block_submit(self.nodes[0], test1txs, False, True)\n\n        self.log.info(\"Test 2: Non-NULLDUMMY base multisig transaction should not be accepted to mempool before activation\")\n        test2tx = create_transaction(self.nodes[0], txid2, self.ms_address, amount=47)\n        trueDummy(test2tx)\n        assert_raises_rpc_error(-26, NULLDUMMY_ERROR, self.nodes[0].sendrawtransaction, test2tx.serialize_with_witness().hex(), 0)\n\n        self.log.info(f\"Test 3: Non-NULLDUMMY base transactions should be accepted in a block before activation [{COINBASE_MATURITY + 4}]\")\n        self.block_submit(self.nodes[0], [test2tx], False, True)\n\n        self.log.info(\"Test 4: Non-NULLDUMMY base multisig transaction is invalid after activation\")\n        test4tx = create_transaction(self.nodes[0], test2tx.hash, self.address, amount=46)\n        test6txs = [CTransaction(test4tx)]\n        trueDummy(test4tx)\n        assert_raises_rpc_error(-26, NULLDUMMY_ERROR, self.nodes[0].sendrawtransaction, test4tx.serialize_with_witness().hex(), 0)\n        self.block_submit(self.nodes[0], [test4tx])\n\n        self.log.info(\"Test 5: Non-NULLDUMMY P2WSH multisig transaction invalid after activation\")\n        test5tx = create_transaction(self.nodes[0], txid3, self.wit_address, amount=48)\n        test6txs.append(CTransaction(test5tx))\n        test5tx.wit.vtxinwit[0].scriptWitness.stack[0] = b'\\x01'\n        assert_raises_rpc_error(-26, NULLDUMMY_ERROR, self.nodes[0].sendrawtransaction, test5tx.serialize_with_witness().hex(), 0)\n        self.block_submit(self.nodes[0], [test5tx], True)\n\n        self.log.info(f\"Test 6: NULLDUMMY compliant base/witness transactions should be accepted to mempool and in block after activation [{COINBASE_MATURITY + 5}]\")\n        for i in test6txs:\n            self.nodes[0].sendrawtransaction(i.serialize_with_witness().hex(), 0)\n        self.block_submit(self.nodes[0], test6txs, True, True)\n\n    def block_submit(self, node, txs, witness=False, accept=False):\n        tmpl = node.getblocktemplate(NORMAL_GBT_REQUEST_PARAMS)\n        assert_equal(tmpl['previousblockhash'], self.lastblockhash)\n        assert_equal(tmpl['height'], self.lastblockheight + 1)\n        block = create_block(tmpl=tmpl,",
  "---\nlayout: default\n---\n\n# Disseny Centrat en l'usuari - Disseny d'interf\u00edcie d'usuari.\n\n# El color en la interfaz d'usuari\n![Significat Color](./images/significatColor.jpg)\n## Color roig![](./images/red.gif)\n\nEl roig \u00e9s el color del foc i la sang, per la qual cosa est\u00e0 associat amb l'energia, la guerra, el perill, la for\u00e7a, el poder, la determinaci\u00f3, aix\u00ed com la passi\u00f3, el desig i l'amor.\n\nEl roig \u00e9s un color molt intens emocionalment. Millora el metabolisme hum\u00e0, augmenta la taxa de respiraci\u00f3 i augmenta la pressi\u00f3 arterial. T\u00e9 una visibilitat molt alta, per la qual cosa els senyals d'alt, els sem\u00e0fors i els equips contra incendis generalment estan pintats de roig. En her\u00e0ldica, el roig s'usa per a indicar coratge. \u00c9s un color que es troba en moltes banderes nacionals.\n\nEl roig porta text i imatges al primer pla. Utilitza-ho com un color d'accent per a estimular a les persones a prendre decisions r\u00e0pides; \u00c9s un color perfecte per als botons **'Comprar ara'** o **'Fa\u00e7a clic ac\u00ed'** en els b\u00e0ners i llocs web d'Internet. En publicitat, el roig sovint s'usa per a evocar sentiments er\u00f2tics (llavis rojos, ungles roges, districtes de llum roja, 'Lady in Xarxa', etc.). El roig s'usa \u00e0mpliament per a indicar perill (senyals d'alt voltatge, sem\u00e0fors). Aquest color tamb\u00e9 s'associa comunament amb l'energia, per la qual cosa pot usar-lo quan promociona begudes energ\u00e8tiques, jocs, autom\u00f2bils, articles relacionats amb l'esport i l'alta activitat f\u00edsica.\n\n- **El roig cla**r representa alegria, sexualitat, passi\u00f3, sensibilitat i amor.\n- **Rosa** significa roman\u00e7, amor i amistat. Denota qualitats femenines i passivitat.\n- **El roig fosc** s'associa amb vigor, for\u00e7a de voluntat, ira, ira, lideratge, coratge, anhel, mal\u00edcia i ira.\n- **Marr\u00f3** suggereix estabilitat i denota qualitats masculines.\n- **El marr\u00f3 vermell\u00f3s** s'associa amb la collita i la caiguda.\n\n![Color Roig](./images/significatRoig.png)\n## Color Taronja![](./images/orange.gif)\n\nEl taronja combina l'energia del roig i la felicitat del groc. Est\u00e0 associat amb l'alegria, el sol i els tr\u00f2pics. Representa entusiasme, fascinaci\u00f3, felicitat, creativitat, determinaci\u00f3, atracci\u00f3, \u00e8xit, al\u00e9 i estimulaci\u00f3.\n\nPer a l'ull hum\u00e0, el taronja \u00e9s un color molt c\u00e0lid, per la qual cosa d\u00f3na la sensaci\u00f3 de calor. No obstant aix\u00f2, el taronja no \u00e9s tan agressiu com el roig. La taronja augmenta el subministrament d'oxigen al cervell, produeix un efecte estimulant i estimula l'activitat mental. \u00c9s altament acceptat entre els joves. Com a color c\u00edtric, el taronja s'associa amb aliments saludables i estimula l'apetit. El taronja \u00e9s el color de la tardor i la collita. \n\nEl taronja t\u00e9 una visibilitat molt alta, per la qual cosa pot usar-ho per a cridar l'atenci\u00f3 i ressaltar els elements m\u00e9s importants del seu disseny. La taronja \u00e9s molt efectiva per a promocionar productes alimentosos i joguets.\n\n- **El taronja fosc** pot significar engany i desconfian\u00e7a.\n- **El roig ataronjat** correspon al desig, la passi\u00f3 sexual, el plaer, la dominaci\u00f3, l'agressi\u00f3 i la set d'acci\u00f3.\n- **L'or** evoca la sensaci\u00f3 de prestigi. El significat de l'or \u00e9s il\u00b7luminaci\u00f3, saviesa i riquesa. L'or sovint simbolitza l'alta qualitat.\n\n![Color Taronja](./images/significatTaronja.png)\n\n## Color groc ![](./images/yellow.gif)\n\nEl groc \u00e9s el color del sol. S'associa amb alegria, felicitat, intel\u00b7lecte i energia.\n\nEl groc produeix un efecte de calfament, desperta alegria, estimula l'activitat mental i genera energia muscular. El groc sovint s'associa amb el menjar. El groc pur i brillant crida l'atenci\u00f3, ra\u00f3 per la qual els taxis estan pintats d'aquest color. Quan s'usa en exc\u00e9s, el groc pot tindre un efecte pertorbador; Se sap que els beb\u00e9s ploren m\u00e9s a les habitacions grogues. El groc es veu abans que altres colors quan es col\u00b7loca contra el negre; Aquesta combinaci\u00f3 sovint s'utilitza per a emetre un advertiment. \n\nUsa el groc per a evocar sentiments agradables i alegres. Pot triar el groc per a promocionar productes i articles per a xiquets relacionats amb l'oci. El groc \u00e9s molt efectiu per a atraure l'atenci\u00f3, aix\u00ed que usa-ho per a ressaltar els elements m\u00e9s importants del teu disseny. Els homes generalment perceben el groc com un color molt alegre, \"infantil\", per la qual cosa no es recomana usar groc en vendre productes cars i prestigiosos als homes: ning\u00fa comprar\u00e0 un vestit de negocis groc o un Mercedes groc. El groc \u00e9s un color inestable i espontani, per tant, evite usar el groc si desitja suggerir estabilitat i seguretat. El groc clar tendeix a desapar\u00e9ixer en blanc, per la qual cosa generalment necessita un color fosc per a ressaltar-lo. Els tons de groc s\u00f3n visualment poc atractius perqu\u00e8 perden alegria i es tornen bruts.\n\n- **El groc opac** (l\u00fagubre) representa precauci\u00f3, decad\u00e8ncia, malaltia i gelosia.\n- **El groc clar** s'associa amb intel\u00b7lecte, frescor i alegria.\n\n![Color Groc](./images/significatGroc.png)\n\n## Color verd ![](./images/green.gif)\n\nEl verd \u00e9s el color de la naturalesa. Simbolitza creixement, harmonia, frescor i fertilitat. Green t\u00e9 una forta correspond\u00e8ncia emocional amb la seguretat. El verd fosc tamb\u00e9 s'associa comunament amb els diners.\n\nEl verd t\u00e9 un gran poder curatiu. \u00c9s el color m\u00e9s reparador per a l'ull hum\u00e0; Pot millorar la visi\u00f3. El verd suggereix estabilitat i resist\u00e8ncia. A vegades el verd denota falta d'experi\u00e8ncia. El verd, en oposici\u00f3 al roig, significa seguretatt.\n\nUtilitza el verd per a indicar seguretat en anunciar medicaments i productes m\u00e8dics. El verd est\u00e0 directament relacionat amb la naturalesa, per la qual cosa pot usar-lo per a promocionar productes'verds'. El verd opac i fosc s'associa comunament amb els diners, el m\u00f3n financer, la banca i Wall Street.\n\n- **El verd fosc** est\u00e0 associat amb l'ambici\u00f3, la cobd\u00edcia i la gelosia.\n- **Groc-verd** pot indic",
  "# d3-whale-vs-human-me\nShowing the comical difference in ME (Maintenance Energy) between fin whales and humans.\n\nCurrently a work in progress.\n\nThis data viz project is backed by research from my bio undergrad. Once upon a time I made a fin whale nutrition blog\nfor an assignment (disclaimer: it was not customized in any way - s'all about the research on that one). \nThis can be viewed at https://physalus.wordpress.com/\n\nThe human maintenance energy values are from other scientific sources, linked below:\n\nhttp://www.fao.org/docrep/003/aa040e/aa040e07.htm\n\nhttp://www.cabdirect.org/abstracts/19801407687.html;jsessionid=E394A5179225BEF5653F10311FEC6216\n\nhttp://ajcn.nutrition.org/content/79/6/1078.short\n\nhttp://journals.cambridge.org/action/displayAbstract?fromPage=online&aid=919444&fileId=S0007114570000557\n\nhttp://ajcn.nutrition.org/content/40/6/1264.short\n\n",
  "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<!-- NewPage -->\n<html lang=\"en\">\n<head>\n<!-- Generated by javadoc (version 1.7.0_67) on Sat Mar 28 11:57:58 CET 2015 -->\n<meta http-equiv=\"Content-Type\" content=\"text/html\" charset=\"UTF-8\">\n<title>io.oasp.gastronomy.restaurant.general.common.api (JavaDocs for oasp4j-sample-core)</title>\n<meta name=\"date\" content=\"2015-03-28\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"../../../../../../../stylesheet.css\" title=\"Style\">\n</head>\n<body>\n<h1 class=\"bar\"><a href=\"../../../../../../../io/oasp/gastronomy/restaurant/general/common/api/package-summary.html\" target=\"classFrame\">io.oasp.gastronomy.restaurant.general.common.api</a></h1>\n<div class=\"indexContainer\">\n<h2 title=\"Interfaces\">Interfaces</h2>\n<ul title=\"Interfaces\">\n<li><a href=\"ApplicationEntity.html\" title=\"interface in io.oasp.gastronomy.restaurant.general.common.api\" target=\"classFrame\"><i>ApplicationEntity</i></a></li>\n<li><a href=\"BinaryObject.html\" title=\"interface in io.oasp.gastronomy.restaurant.general.common.api\" target=\"classFrame\"><i>BinaryObject</i></a></li>\n<li><a href=\"NlsBundleApplicationRoot.html\" title=\"interface in io.oasp.gastronomy.restaurant.general.common.api\" target=\"classFrame\"><i>NlsBundleApplicationRoot</i></a></li>\n<li><a href=\"Usermanagement.html\" title=\"interface in io.oasp.gastronomy.restaurant.general.common.api\" target=\"classFrame\"><i>Usermanagement</i></a></li>\n<li><a href=\"UserProfile.html\" title=\"interface in io.oasp.gastronomy.restaurant.general.common.api\" target=\"classFrame\"><i>UserProfile</i></a></li>\n</ul>\n<h2 title=\"Classes\">Classes</h2>\n<ul title=\"Classes\">\n<li><a href=\"MoneyHelper.html\" title=\"class in io.oasp.gastronomy.restaurant.general.common.api\" target=\"classFrame\">MoneyHelper</a></li>\n</ul>\n</div>\n</body>\n</html>\n",
  "\ufeffusing Domain.Models;\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\nusing Xunit;\n\nnamespace XUnitTest\n{\n    public class StockTest : IDisposable\n    {\n        Stock testStock;\n        public StockTest()\n        {\n            testStock = new Stock(\"APPL\",\"NASDAQ\",\"Apple Inc.\",null);\n        }\n\n        [Fact]\n        public void UserTest1()\n        {\n\n            //Act\n            testStock.Symbol = \"paul\";\n\n\n            //Assert\n            Assert.Equal(\"paul\", testStock.Symbol);\n        }\n\n        [Fact]\n        public void UserTest2()\n        {\n            //Arrange\n\n            //Act\n            testStock.Market = \"Human\";\n\n            //Assert\n            Assert.Equal(\"Human\", testStock.Market);\n        }\n        [Fact]\n        public void UserTest3()\n        {\n            //Arrange\n\n            //Act\n            testStock.Logo = \"face\";\n\n            //Assert\n            Assert.Equal(\"face\", testStock.Logo);\n        }\n        [Fact]\n        public void UserTest4()\n        {\n            //Arrange\n\n            //Act\n            testStock.Name = \"Cortez\";\n\n            //Assert\n            Assert.Equal(\"Cortez\", testStock.Name);\n        }\n        [Fact]\n        public void UserTest5()\n        {\n            //Arrange\n\n            //Act\n            testStock.Id = 1;\n\n            //Assert\n            Assert.Equal(1, testStock.Id);\n        }\n\n        public void Dispose()\n        {\n            testStock = null;\n        }\n    }\n}\n",
  "\ufeffusing System;\n\nusing Foundation;\nusing UIKit;\n\nnamespace iTorrent {\n    public partial class SwitchCell : UITableViewCell {\n\n\t\tAction<UISwitch> action;\n        \n\t\tpublic UISwitch GetSwitcher {\n\t\t\tget {\n\t\t\t\treturn Switcher;\n\t\t\t}\n\t\t}\n        \n\t\tpublic SwitchCell(IntPtr handle) : base(handle) {\n        }\n\n\t\tpublic void SetSwitcherAction(Action<UISwitch> action) {\n\t\t\tthis.action = action;\n\t\t}\n\n\t\tpartial void ValueChangedAction(UISwitch sender) {\n\t\t\taction?.Invoke(sender);\n\t\t}\n    }\n}\n",
  "# platypuslol\n\nClone of bunny1 (or facebooks bunnylol) in Haskell. Currently no ground breaking features, just simple playground project. Use at your own risk (for now).\n\n## Notes\n\n```\nstack build --haddock\nstack hoogle -- generate --local\nstack build hlint hscope haskell-tools-daemon haskell-tools-cli --copy-compiler-tool\n# this is sad:-(\n# How to get ghc-mod working: \n# https://github.com/DanielG/ghc-mod/pull/922#issuecomment-353896120\n# TODO this is not scalable for more than 1 project\nstack hoogle -- server --local --port=8080\n```\n\n# TODO\n[ ] Git repository:\n  [x] Configure list of repositories\n  [x] Keep list of branches up to date\n  [x] Be able to resolve to github repo\n  [x] Have substitutions, like!branch! and then!branch.repo-base!!query.branch\n  [ ] Search for files / directories, hitory and so on\n  [ ] Config is getting too comples, switch to haskell at least for some environment stuff, and github stuff. Don't reinvent new languge\n",
  "# Exasol Go SQL Driver 0.1.1, released 2021-07-22\n\nCode name: Fixed fetching data from a result set\n\n## Summary\n\nIn this release we have fixed fetching data from a result set. The driver thrown an error if data didn't fit into one fetch. \n\n## Bug Fixes\n\n* #26: Fixed a bug in multiple fetching. \n\n## Documentation\n\n* #28: Added changelog files.",
  "# Training via JavaScript\n\nUsing JavaScript in training environments\n\n![training_via_js_logo](https://user-images.githubusercontent.com/37618836/50683939-c5291780-100b-11e9-8bbc-0ba27ca28872.png)\n\n## Project setup\n```\nnpm install\n```\n\n### Compiles and hot-reloads for development\n```\nnpm run serve\n```\n\n### Compiles and minifies for production\n```\nnpm run build\n```\n\n### Lints and fixes files\n```\nnpm run lint\n```\n\n### Customize configuration\nSee [Configuration Reference](https://cli.vuejs.org/config/).\n",
  "/*-\n * #%L\n * RSyntaxTextArea ANTLR 4 Extension\n * %%\n * Copyright (C) 2021 Markus Heberling\n * %%\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the Markus Heberling nor the names of its contributors\n *    may be used to endorse or promote products derived from this software without\n *    specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\n * OF THE POSSIBILITY OF SUCH DAMAGE.\n * #L%\n */\n\npackage de.tisoft.rsyntaxtextarea.parser.antlr;\n\nimport org.antlr.v4.runtime.BaseErrorListener;\nimport org.antlr.v4.runtime.LexerNoViableAltException;\nimport org.antlr.v4.runtime.RecognitionException;\nimport org.antlr.v4.runtime.Recognizer;\nimport org.antlr.v4.runtime.Token;\nimport org.fife.ui.rsyntaxtextarea.parser.DefaultParserNotice;\nimport org.fife.ui.rsyntaxtextarea.parser.ParseResult;\n\npublic class ParseResultErrorListener extends BaseErrorListener {\n  private final ParseResult parseResult;\n\n  public ParseResultErrorListener(ParseResult parseResult) {\n    this.parseResult = parseResult;\n  }\n\n  @Override\n  public void syntaxError(\n      Recognizer<?,?> recognizer,\n      Object offendingSymbol,\n      int line,\n      int charPositionInLine,\n      String msg,\n      RecognitionException e) {\n    int startIndex = -1;\n    int length = -1;\n\n    if (offendingSymbol instanceof Token) {\n      startIndex = ((Token) offendingSymbol).getStartIndex();\n      length = ((Token) offendingSymbol).getStopIndex() - startIndex + 1;\n    } else if (e!= null) {\n      if (e.getOffendingToken()!= null) {\n        startIndex = e.getOffendingToken().getStartIndex();\n        length = e.getOffendingToken().getStopIndex() - startIndex + 1;\n      } else if (e instanceof LexerNoViableAltException) {\n        startIndex = ((LexerNoViableAltException) e).getStartIndex();\n        length = 1;\n      }\n    }\n\n    // if length is 0, we can't highlight a character, so the whole line needs to be highlighted\n    if (length == 0) {\n      startIndex = -1;\n      length = -1;\n    }\n\n    parseResult\n       .getNotices()\n       .add(new DefaultParserNotice(parseResult.getParser(), msg, line - 1, startIndex, length));\n  }\n}\n",
  "<html>\n  <head>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" charset=\"UTF-8\">\n    <title>TWO_TO_FIVE_MINUTES</title>\n</head><body><link href=\"../../../../../../../../../../../images/logo-icon.svg\" rel=\"icon\" type=\"image/svg\"><script>var pathToRoot = \"../../../../../../\";</script><script type=\"text/javascript\" src=\"../../../../../../scripts/sourceset_dependencies.js\" async></script><link href=\"../../../../../../styles/style.css\" rel=\"Stylesheet\"><link href=\"../../../../../../styles/logo-styles.css\" rel=\"Stylesheet\"><link href=\"../../../../../../styles/jetbrains-mono.css\" rel=\"Stylesheet\"><link href=\"../../../../../../styles/main.css\" rel=\"Stylesheet\"><script type=\"text/javascript\" src=\"../../../../../../scripts/clipboard.js\" async></script><script type=\"text/javascript\" src=\"../../../../../../scripts/navigation-loader.js\" async></script><script type=\"text/javascript\" src=\"../../../../../../scripts/platform-content-handler.js\" async></script><script type=\"text/javascript\" src=\"../../../../../../scripts/main.js\" async></script>\n  \n    <div id=\"container\">\n      <div id=\"leftColumn\"><a href=\"../../../../../../index.html\">\n            <div id=\"logo\"></div>\n          </a>\n        <div id=\"paneSearch\"></div>\n        <div id=\"sideMenu\"></div>\n      </div>\n      <div id=\"main\">\n        <script type=\"text/javascript\" src=\"../../../../../../scripts/main.js\"></script><div id=\"leftToggler\"><span class=\"icon-toggler\"></span></div>\n\n        <div class=\"main-content\" id=\"content\" pageids=\"external::com.stripe.stripeterminal.external.models/ReaderSoftwareUpdate.UpdateTimeEstimate.TWO_TO_FIVE_MINUTES///PointingToDeclaration//-405186196\">\n          <div class=\"navigation-wrapper\" id=\"navigation-wrapper\">\n            <div class=\"breadcrumbs\"><a href=\"../../../../../index.html\">external</a>/<a href=\"../../../index.html\">com.stripe.stripeterminal.external.models</a>/<a href=\"../../index.html\">ReaderSoftwareUpdate</a>/<a href=\"../index.html\">UpdateTimeEstimate</a>/<a href=\"index.html\">TWO_TO_FIVE_MINUTES</a></div>\n            <div class=\"pull-right d-flex\">\n              <div id=\"searchBar\"></div>\n            </div>\n          </div>\n          <div class=\"cover \">\n            <h1 class=\"cover\"><span>T</span><wbr><span>W</span><wbr><span>O_</span><wbr><span>T</span><wbr><span>O_</span><wbr><span>F</span><wbr><span>I</span><wbr><span>V</span><wbr><span>E_</span><wbr><span>M</span><wbr><span>I</span><wbr><span>N</span><wbr><span>U</span><wbr><span>T</span><wbr><span>E</span><wbr><span>S</span></h1>\n            <div class=\"platform-hinted \" data-platform-hinted=\"data-platform-hinted\"><div class=\"content sourceset-depenent-content\" data-active=\"\" data-togglable=\":terminalsdk:external:dokkaHtmlPartial/release\"><div class=\"symbol monospace\"><div class=\"block\"><a href=\"index.html\">TWO_TO_FIVE_MINUTES</a>(\"2-5 minutes\")</div><span class=\"top-right-position\"><span class=\"copy-icon\"></span><div class=\"copy-popup-wrapper popup-to-left\"><span class=\"copy-popup-icon\"></span><span>Content copied to clipboard</span></div></span></div><p class=\"paragraph\">The update should take 2-5 minutes to complete.</p></div></div>\n          </div>\n          <div class=\"tabbedcontent\">\n            <div class=\"tabs-section\" tabs-section=\"tabs-section\"><button class=\"section-tab\" data-active=\"\" data-togglable=\"Properties\">Properties</button></div>\n            <div class=\"tabs-section-body\">\n              <h2 class=\"\">Properties</h2>\n              <div class=\"table\" data-togglable=\"Properties\"><a data-name=\"-868175819%2FProperties%2F-405186196\" anchor-label=\"description\" id=\"-868175819%2FProperties%2F-405186196\" data-filterable-set=\":terminalsdk:external:dokkaHtmlPartial/release\"></a>\n                <div class=\"table-row\" data-filterable-current=\":terminalsdk:external:dokkaHtmlPartial/release\" data-filterable-set=\":terminalsdk:external:dokkaHtmlPartial/release\">\n                  <div class=\"main-subrow keyValue \">\n                    <div class=\"\"><span class=\"inline-flex\"><a href=\"description.html\">description</a><span class=\"anchor-wrapper\"><span class=\"anchor-icon\" pointing-to=\"-868175819%2FProperties%2F-405186196\"></span>\n                          <div class=\"copy-popup-wrapper \"><span class=\"copy-popup-icon\"></span><span>Link copied to clipboard</span></div>\n                        </span></span></div>\n                    <div>\n                      <div class=\"title\">\n                        <div class=\"platform-hinted \" data-platform-hinted=\"data-platform-hinted\" data-togglable=\"Properties\"><div class=\"content sourceset-depenent-content\" data-active=\"\" data-togglable=\":terminalsdk:external:dokkaHtmlPartial/release\"><a data-name=\"-868175819%2FProperties%2F-405186196\" anchor-label=\"description\" id=\"-868175819%2FProperties%2F-405186196\" data-filterable-set=\":terminalsdk:external:dokkaHtmlPartial/release\"></a><div class=\"symbol monospace\">val <a href=\"description.html\">description</a>: <a href=\"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html\">String</a><span class=\"top-right-position\"><span class=\"copy-icon\"></span><div class=\"copy-popup-wrapper popup-to-left\"><span class=\"copy-popup-icon\"></span><span>Content copied to clipboard</span></div></span></div><div class=\"brief \"><a data-name=\"-868175819%2FProperties%2F-405186196\" anchor-label=\"description\" id=\"-868175819%2FProperties%2F-405186196\" data-filterable-set=\":terminalsdk:external:dokkaHtmlPartial/release\"></a>Returns a user-facing string describing the amount of time the update will take</div></div></div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n<a data-name=\"-76146402%2FProperties%2F-405186196\" anchor-label=\"name\" id=\"-76146402%2FProperties%2F-405186196\" data-filterable-set=\":terminalsdk:external:dokkaHtmlPartial/release\"></a>\n                <div class=\"table-row\" data-filterable-current=\":terminalsdk:external:dokkaHtmlPartial/release\" data-filterable-set=\":terminalsdk:external:dokkaHtmlPartial/release\">\n                  <div class=\"main-subrow keyValue \">\n                    <div class=\"\"><span class=\"inline-flex\"><a href=\"name.html\">name</a><span class=\"anchor-wrapper\"><span class=\"anchor-icon\" pointing-to=\"-76146402%2FProperties%2F-405186196\"></span>\n                          <div class=\"copy-popup-wrapper \"><span class=\"copy-popup-icon\"></span><span>Link copied to clipboard</span></div>\n                        </span></span></div>\n                    <div>\n                      <div class=\"title\">\n                        <div class=\"platform-hinted \" data-platform-hinted=\"data-platform-hinted\" data-togglable=\"Properties\"><div class=\"content sourceset-depenent-content\" data-active=\"\" data-togglable=\":terminalsdk:external:dokkaHtmlPartial/release\"><a data-name=\"-76146402%2FProperties%2F-405186196\" anchor-label=\"name\" id=\"-76146402%2",
  "import * as React from'react';\nimport {\n  autobind,\n  TextField\n} from '../../../../index';\n\nexport class TextFieldBasicExample extends React.Component<any, any> {\n  public render() {\n    return (\n      <div>\n        <TextField label='Default TextField' onChanged={ this._onChanged } />\n        <TextField label='Disabled TextField' disabled={ true } />\n        <TextField label='Required TextField' required={ true } />\n        <TextField label='TextField with a placeholder' placeholder='Now I am a Placeholder' ariaLabel='Please enter text here' />\n        <TextField label='Multiline TextField' multiline />\n        <TextField label='Multiline TextField Unresizable' multiline resizable={ false } />\n        <TextField label='Underlined TextField' underlined />\n      </div>\n    );\n  }\n\n  @autobind\n  private _onChanged(text) {\n    console.log(text);\n  }\n}\n",
  "<!-- \u9762\u5305\u5c51\u5bfc\u822a -->\r\n<div class=\"position\">\r\n\t<a href =\"__APP__\">\u9996\u9875</a>&nbsp;>&nbsp;\r\n\t<volist name=\"breadcrumbs\" id=\"vo\">\r\n\t\t<a href =\"{:U('AppStore://Apps/appList?cid='. $vo['id'])}\">{$vo['name']}</a>&nbsp;>&nbsp;\r\n\t</volist>\r\n</div>\r\n<!-- \u9762\u5305\u5c51\u5bfc\u822a -->\r\n<!-- \u5de6\u8fb9\u4fa7\u680f -->\r\n<div class=\"appbar f_l\">\r\n\t<!-- \u5e94\u7528\u7b80\u4ecb -->\r\n\t<div>\r\n\t\t<!-- \u5e94\u7528logo -->\r\n\t\t<img class=\"applogo\" src=\"{:C('PICTURE_HOST')}{$approw['AppDeviceType'][0]['icon']}\" />\r\n\t\t<!-- \u5e94\u7528logo -->\r\n\t\t<!-- \u8bc4\u5206 -->\r\n\t\t<p>\r\n\t\t\t<span class=\"grade\">\r\n\t\t\t\t<if condition=\"$approw['app_starcount'] gt 0\">\r\n\t\t\t\t<i style=\"width:{:round($approw['app_score_www']/$approw['app_starcount'], 2) * 35}px;\"></i>\r\n\t\t\t\t<else/>\r\n\t\t\t\t<i style=\"width:0px;\"></i>\r\n\t\t\t\t</if>\r\n\t\t\t</span>\r\n\t\t</p>\r\n\t\t<!-- \u8bc4\u5206 -->\r\n\t\t<table class=\"table_appinfo\">\r\n\t\t\t<colgroup>\r\n\t\t\t\t<col width=\"80px\" />\r\n\t\t\t\t<col />\r\n\t\t\t</colgroup>\r\n\t\t\t<tr>\r\n\t\t\t\t<th class=\"t_l\">\u5f53\u524d\u7248\u672c\uff1a</th><td class=\"t_l\">{$approw['app_version']}</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<th class=\"t_l\">\u4f5c\u8005\uff1a</th><td class=\"t_l\">{$approw['author_name']}</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<th class=\"t_l\">\u6700\u540e\u66f4\u65b0\uff1a</th><td class=\"t_l\">{$approw['app_update_date']|strtotime|date='Y-m-d',###}</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<th class=\"t_l\">\u6587\u4ef6\u5927\u5c0f\uff1a</th><td class=\"t_l\">{$approw['AppDeviceType'][0]['app_size']/1048576|round=1} MB</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<th class=\"t_l\">\u9002\u7528\u7cfb\u7edf\uff1a</th><td class=\"t_l\">android 1.6</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<th class=\"t_l\"></th><td class=\"t_l\">android 2.3</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<th class=\"t_l\">\u9002\u7528\u5206\u8fa8\u7387\uff1a</th><td class=\"t_l\">480x800</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<th class=\"t_l\"></th><td class=\"t_l\">320x240</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<th class=\"t_l\">\u4e0b\u8f7d\u6b21\u6570\uff1a</th><td class=\"t_l\">{$approw['app_downloads']|number_format}</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<th class=\"t_l\">\u8bc4\u5206\u6b21\u6570\uff1a</th><td class=\"t_l\">{$approw['app_starcount']|number_format}</td>\r\n\t\t\t<tr>\r\n\t\t\t\t<th class=\"t_l\">\u6211\u6765\u8bc4\u5206\uff1a</th><td class=\"t_l\">\u8bf7\u767b\u5f55\u540e\u8bc4\u5206</td>\r\n\t\t\t</tr>\r\n\t\t</table>\r\n\t\t<!-- \u4e0b\u8f7d -->\r\n\t\t<ul class=\"appbar_download\">\r\n\t\t\t<li>\r\n\t\t\t\t<a href=\"{$downloadUrl}\">\r\n\t\t\t\t\t<img src=\"../Public/images/download_icon.png\" />\r\n\t\t\t\t</a>\r\n\t\t\t</li>\r\n\t\t\t<li>AppBao.com\u5ba2\u6237\u7aef\u4e0b\u8f7d</li>\r\n\t\t</ul>\r\n\t\t<!-- \u4e0b\u8f7d -->\r\n\t\t<!-- \u4e8c\u7ef4\u7801 -->\r\n\t\t<img class=\"prcode\" src=\"http://hjapp.hjapp.com/global/qr/?url={:urlencode('http://'. $_SERVER['HTTP_HOST']. $downloadUrl)}\" />\r\n\t\t<!-- \u4e8c\u7ef4\u7801 -->\r\n\t\t<!-- \u5206\u4eab -->\r\n\t\t<div class=\"share clear\">\r\n\t\t\t<span class=\"f_l\" style=\"padding-top:5px;\">\u5206\u4eab\u5230\uff1a</span>\r\n\t\t\t<a id=\"share_sina\" href=\"javascript:void(0)\" title=\"\u65b0\u6d6a\u5fae\u535a\">\r\n\t\t\t\t\u65b0\u6d6a\u5fae\u535a\r\n\t\t\t</a>\r\n\t\t\t<a id=\"share_renren\" href=\"javascript:void(0)\" title=\"\u4eba\u4eba\u7f51\">\r\n\t\t\t\t\u4eba\u4eba\u7f51\r\n\t\t\t</a>\r\n\t\t\t<a id=\"share_kaixin\" href=\"javascript:void(0)\" title=\"\u5f00\u5fc3\u7f51\">\r\n\t\t\t\t\u5f00\u5fc3\u7f51\r\n\t\t\t</a>\r\n\t\t\t<a id=\"share_qq\" href=\"javascript:void(0)\" title=\"\u817e\u8baf\u5fae\u535a\">\r\n\t\t\t\t\u817e\u8baf\u5fae\u535a\r\n\t\t\t</a>\r\n\t\t</div>\r\n\t\t<!-- \u5206\u4eab -->\r\n\t</div>\r\n\t<!-- \u5e94\u7528\u7b80\u4ecb -->\r\n\t<!-- \u76f8\u5173\u63a8\u8350 -->\r\n\t<div class=\"appbar_recommend clear\">\r\n\t\t<h6>\r\n\t\t\t\u76f8\u5173\u63a8\u8350\r\n\t\t</h6>\r\n\t\t<ul>\r\n\t\t    <volist name=\"recommenlist\" id=\"vo\">\r\n\t\t\t\t<li>\r\n\t\t\t\t    <a name=\"rec_app_24\" href=\"{:U('AppStore://Apps/detail?aid='. $vo['app_id'])}\" target=\"_blank\">\r\n\t\t\t\t\t\t<img alt =\"\" src=\"{:C('PICTURE_HOST')}{$vo['AppDeviceType'][0]['icon']}\" width=\"50\" height=\"50\" />\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t</volist>\r\n\t\t</ul>\r\n\t</div>\r\n\t<!-- \u76f8\u5173\u63a8\u8350 -->\r\n</div>\r\n<!-- \u5de6\u8fb9\u4fa7\u680f -->\r\n<!-- \u53f3\u8fb9\u4e3b\u4f53 -->\r\n<div class=\"app_detail_box f_r\">\r\n\t<!-- \u53f3\u8fb9\u9876\u90e8 -->\r\n\t<div class=\"app_detail_top\">\r\n\t\t<ul class=\"app_detail_name\">\r\n\t\t\t<li class=\"download_icon\"><span>\u4e0b\u8f7d</span></li>\r\n\t\t\t<li>{$approw['app_name']}</li>\r\n\t\t</ul>\r\n\t\t<ul class=\"switch_tab\">\r\n\t\t\t<li><a href=\"javascript:void(0);\" class=\"switch_tab_current\">\u6982\u89c8</a></li>\r\n\t\t</ul>\r\n\t</div>\r\n\t<!-- \u53f3\u8fb9\u9876\u90e8 -->\r\n\t\r\n\t<div class=\"app_desc_box f_l clear\">\r\n\t\t<h6>\u8bf4\u660e</h6>\r\n\t\t<p id=\"app_desc_short\">\r\n\t\t\t{$approw['app_desc']|mb_substr=0,100,'UTF-8'}\r\n\t\t</p>\r\n\t\t<p id=\"app_desc_full\" style=\"display:none;\">\r\n\t\t\t{$approw['app_desc']}\r\n\t\t</p>\r\n\t\t<hr /> <span class=\"app_desc_button\" id=\"show_app_desc\">\u5c55\u5f00</span>\r\n\t\t<a href=\"\">\u8bbf\u95ee\u5f00\u53d1\u4eba\u5458\u7f51\u7ad9</a>\r\n\t\t<h6>\u5e94\u7528\u7a0b\u5e8f\u5c4f\u5e55\u622a\u56fe</h6>\r\n\t\t<div class=\"app_desc_image\">\r\n\t\t\t<a href=\"javascript:void(0);\" class=\"slide_b_l\"></a>\r\n\t\t\t<ul>\r\n\t\t\t\t{~$app_img_list = explode('|', $approw['AppDeviceType'][0]['screenshots'])}\r\n\t\t\t\t<volist name=\"app_img_list\" id=\"vo\">\r\n\t\t\t\t<li><img src=\"{:C('PICTURE_HOST')}{$vo}\" /></li>\r\n\t\t\t\t</volist>\r\n\t\t\t</ul>\r\n\t\t\t<a href=\"javascript:void(0);\" class=\"slide_b_r\"></a>\r\n\t\t</div>\r\n\t\t<h6>\u7528\u6237\u8bc4\u8bba</h6>\r\n\t\t<table class=\"app_score_table f_l t_c\">",
  "/*\n * Copyright (c) Contributors to the Open 3D Engine Project.\n * For complete copyright and license terms please see the LICENSE at the root of this distribution.\n *\n * SPDX-License-Identifier: Apache-2.0 OR MIT\n *\n */\n\n#pragma once\n\n#include <AzCore/EBus/EBus.h>\n#include <QtGlobal>\n#include <QString>\nQT_FORWARD_DECLARE_CLASS(QWidget)\n\nnamespace EMStudio\n{\n    class InspectorRequests\n        : public AZ::EBusTraits\n    {\n    public:\n        // Call in case a fully customized widget shall be shown in the inspector. The header widget will be shown above the given widget.\n        virtual void Update([[maybe_unused]] const QString& headerTitle, [[maybe_unused]] const QString& iconFilename, [[maybe_unused]] QWidget* widget) = 0;\n\n        // Call in case the objects to be inspected are reflected. This creates a card with a reflected property editor inside in the standard way for each object along with a header widget above.\n        // Use this method whenever a single, reflected object shall be visible in the inspector.\n        struct CardElement\n        {\n            void* m_object = nullptr;\n            AZ::TypeId m_objectTypeId;\n            QString m_cardName;\n            QWidget* m_customWidget = nullptr;\n        };\n        virtual void UpdateWithRpe([[maybe_unused]] const QString& headerTitle, [[maybe_unused]] const QString& iconFilename, [[maybe_unused]] const AZStd::vector<CardElement>& cardElements) = 0;\n\n        // Call in case the inspected object got removed or unselected. This will show the no selection widget in the inspector.\n        virtual void Clear() = 0;\n    };\n\n    using InspectorRequestBus = AZ::EBus<InspectorRequests>;\n\n\n    class InspectorNotifications\n        : public AZ::EBusTraits\n    {\n    public:\n    };\n\n    using InspectorNotificationBus = AZ::EBus<InspectorNotifications>;\n} // namespace EMStudio\n",
  "package org.zoxweb.server.flow;\n\n\nimport java.util.EventObject;\nimport java.util.function.Supplier;\n\n\n@SuppressWarnings(\"serial\")\npublic class FlowEvent<T>\n    extends EventObject\n    implements Supplier<FlowEvent<T>>\n{\n    private long timestamp;\n    protected T flowType;\n    private long sequence;\n\n\n    public FlowEvent(T type)\n    {\n        this(type, type);\n    }\n\n\n    public FlowEvent(Object source, T type)\n    {\n        super(source);\n        this.flowType = type;\n        this.timestamp = System.currentTimeMillis();\n    }\n\n    public T getFlowType()\n    {\n        return flowType;\n    }\n\n    public long getTimestamp()\n    {\n        return timestamp;\n    }\n\n    protected void setSequence(long sequence)\n    {\n        this.sequence = sequence;\n    }\n    public long getSequence()\n    {\n        return sequence;\n    }\n\n    public FlowEvent<T> get()\n    {\n        return this;\n    }\n\n}\n",
  "require 'yogo/configuration'\nrequire 'yogo/datamapper/model/configuration'\nrequire 'yogo/datamapper/model/common/properties'\n\nrequire 'dm-types/uuid'\nrequire 'dm-types/yaml'\n\nmodule Yogo\n  module DataMapper\n    module Model\n      module Stored\n        module Configuration\n          include ::DataMapper::Resource\n          include Dynamic::Configuration\n        \n          is :remixable\n          \n          Common::Properties::UUIDKey[self]\n          \n          property :operation_definitions,       Yaml,       :default => lambda {|*args| []}\n        end # Configuration\n      end # Stored\n    end # Model\n  end # DataMapper\nend # Yogo",
  "#!/bin/bash\nsed -e's/brown/red/;s/lazy/happy/' data1.txt\n",
  "# Alias\n\nStart by creating a `./x/nameservice/alias.go` file. The main reason for having this file is to prevent import cycles. You can read more about import cycles in go here: [Golang import cycles](https://stackoverflow.com/questions/28256923/import-cycle-not-allowed)\n\nFirst start by import the types folder you have created.\n\n```go\npackage nameservice\n\nimport (\n\t\"github.com/cosmos/sdk-application-tutorial/x/nameservice/types\"\n)\n```\n\nThere are three types of types we will create in the alias.go file.\n\n1. A const, this is where you will define imutable variables.\n\n```go\nconst (\n\tModuleName = types.ModuleName\n\tRouterKey  = types.RouterKey\n\tStoreKey   = types.StoreKey\n)\n```\n\n2. A var, here you will define varibale, like your messages.\n\n```go\nvar (\n\tNewMsgBuyName = types.NewMsgBuyName\n\tNewMsgSetName = types.NewMsgSetName\n\tNewWhois      = types.NewWhois\n\tModuleCdc     = types.ModuleCdc\n\tRegisterCodec = types.RegisterCodec\n)\n```\n\n3. A type, here you will define the types you have created in the types folder.\n\n```go\ntype (\n\tMsgSetName      = types.MsgSetName\n\tMsgBuyName      = types.MsgBuyName\n\tQueryResResolve = types.QueryResResolve\n\tQueryResNames   = types.QueryResNames\n\tWhois           = types.Whois\n)\n```\n\nNow you have aliased your needed consts, vars, and types. We can move forward with the creation of the module.\n\n### Register your types in the [Amino encoding format next](./codec.md)!\n",
  "<?php\n/**\n * The main template file\n * \n * @package bootstrap-basic\n */\n\nget_header();\n\n/**\n * determine main column size from actived sidebar\n */\n$main_column_size = bootstrapBasicGetMainColumnSize();\n?>\n<?php get_sidebar('left');?> \n\t\t\t\t<div class=\"col-md-<?php echo $main_column_size;?> content-area\" id=\"main-column\">\n\t\t\t\t\t<main id=\"main\" class=\"site-main\" role=\"main\">\n\t\t\t\t\t\t\n\n        <div class=\"tabbable\">\n          <header>\n            <!--<div class=\"intro\">\n            <h4 class=\"h4\">Click on the links to see the FI-WARE video tutorials</h4>\n            </div>-->\n            <h4 id=\"my_mo_tooltip\" data-toggle=\"tooltip\" data-placement=\"left\" title=\"Click on the links to see the FI-WARE video tutorials\"><i class=\"fa fa-question-circle\"></i></h4>\n\n            <ul class=\"nav nav-tabs\">\n              <li class=\"active\"><a href=\"#cloud\" data-toggle=\"tab\">Cloud</a></li>\n              <li><a href=\"#store\" data-toggle=\"tab\">Store</a></li>\n              <li><a href=\"#mashup\" data-toggle=\"tab\">Mashup</a></li>\n              <li><a href=\"#account\" data-toggle=\"tab\">Account</a></li>\n            </ul>\n            <span class=\"corner hidden-tablet hidden-phone\"></span>\n          </header>\n          <div class=\"tab-content\">\n            <div class=\"tab-pane active\" id=\"cloud\">\n              <div class=\"video\">\n           \n                <iframe id=\"blueprints-video\" src=\"//www.youtube.com/embed/MdZS_0jt6Vo\" frameborder=\"0\" allowfullscreen></iframe>\n              \n                <iframe id=\"instances-video\" src=\"//www.youtube.com/embed/mb7CdMnZh7Q\" frameborder=\"0\" allowfullscreen></iframe>\n                \n                <iframe id=\"o-storage-video\" src=\"//www.youtube.com/embed/PR2gnSJLKvc\" frameborder=\"0\" allowfullscreen></iframe>\n             \n              </div>\n\n              <ul class=\"description\">\n                <div class=\"tabbable\"> <!-- Only required for left/right tabs -->\n                  <ul class=\"nav nav-pills nav-justified\" role=\"tablist\" id=\"myTab\">\n                    <li role=\"presentation\" class=\"btn btn-default active\"><a href=\"#blueprints-t\" aria-controls=\"home\" role=\"tab\" data-toggle=\"tab\">Blueprints</a></li>\n                    <li role=\"presentation\" class=\"btn btn-default\"><a href=\"#instances-t\" aria-controls=\"profile\" role=\"tab\" data-toggle=\"tab\">Instances</a></li>\n                    <li role=\"presentation\" class=\"btn btn-default\"><a href=\"#object-storage-t\" aria-controls=\"messages\" role=\"tab\" data-toggle=\"tab\">Object Storage</a></li>\n                  </ul>\n\n                  <div class=\"tab-content\">\n                    <div role=\"tabpanel\" class=\"tab-pane fade in active\" id=\"blueprints-t\">\n                      <p>Blueprint Templates let you quickly create a template from which to build your application.</p>\n                      <p>You can specify the software you need in the Tier Templates and easily deploy all the instances with one click.</p>\n                    </div>\n                    <div role=\"tabpanel\" class=\"tab-pane fade\" id=\"instances-t\">\n                      <p>Use the Cloud section to create virtual servers for your applications in FI-WARE.</p>\n                      <p>This short video shows how to start a virtual server from an image and configure <acronym title=\"Internet protocol\">IP</acronym>, security groups, and keys to access it.</p>\n                    </div>\n                    <div role=\"tabpanel\" class=\"tab-pane fade\" id=\"object-storage-t\">\n                      <p>The FI-WARE Object Storage facility is ideal for storing large static files.</p>\n                      <p>You can manage your object store using the FI-WARE, and integrate your applications with it through the <acronym title=\"connecting digital media interfaces\">CDMI</acronym> interface.</p>\n                      <p>The FI-WARE Object Storage facility is ideal for storing large static files. You can manage your object store using the FI-WARE, and integrate your applications with it through the <acronym title=\"connecting digital media interfaces\">CDMI</acronym> interface.</p>\n                    </div>\n                  </div>\n                </div>\n              </ul>\n            </div>\n \n\n            <div class=\"tab-pane\" id=\"store\">\n              \n              <div class=\"video\">\n                <iframe src=\"//www.youtube.com/embed/-yainBAU32E\" frameborder=\"0\" allowfullscreen></iframe>\n              </div>\n              <div class=\"description\">\n                <div class=\"content\">\n                  <p>Use the Store portal to publish your own service offerings and to acquire those of your interest.</p>\n                  <p>You can use the Store to publish your service offerings including Mashup resources, Account applications or external services, or to obtain those offerings of your interest. The Store allows you to manage your offerings through their entire life cycle.</p>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"tab-pane\" id=\"mashup\">\n              <div class=\"video\">\n                <iframe src=\"//www.youtube.com/embed/yzQqstBAUeo\" frameborder=\"0\" allowfullscreen></iframe>\n              </div>\n              <div class=\"description\">\n                <div class=\"content\">\n                  <p>Use the Mashup portal to easily create value added web application mashups integrating heterogeneous data, application logic and user interface components (aka widgets).</p>\n\n                  <p>As an end user, you can use the Mashup portal to create and your own web application mashups from existing widgets and operators without requiring programming skills, and you can even share the mashups by publishing them in a registered store or marketplace. As a web developer, you can enrich the existing catalogue with your own catalogue of widgets and operators, and publish them through the Store. Wirecloud offers you a rich set of connectors to other FI-WARE <acronym title=\"Generic Enablers\">GEs</acronym> that ease the task.</p>  \n                </div>\n              </div>\n            </div>\n\n            <div class=\"tab-pane\" id=\"account\">\n              <div class=\"video\">\n                <iframe src=\"//www.youtube.com/embed/FtV0jTL4Vyw\" frameborder=\"0\" allowfullscreen></iframe>\n              </div>\n              <div class=\"description\">\n\n              <div class=\"content\">\n                <p>Use the Account section to register your new applications in FI-WARE, associating roles and permissions.</p>\n\n                <p>If you want to set up your users and organizations, you can also go to the Account application and add their data in an easy to use user interface. </p>\n              </div>\n\n              </div>\n            </div>\n          </div>\n        </div>\n\n    \n      \n      \n      \n        <div id=\"blog\">\n\n\t\t\t\t\t\t<?php if (have_posts()) {?> \n\t\t\t\t\t\t<?php \n\t\t\t\t\t\t// start the loop\n\t\t\t\t\t\twhile (have_posts()) {\n\t\t\t\t\t\t\tthe_post();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t/* Include the Post-Format-specific template for the content.\n\t\t\t\t\t\t\t* If you want to override this in a child theme, then include a file\n\t\t\t\t\t\t\t* called content-___.php (where ___ is the Post Format name) and that will be used instead.\n\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\tget_template_part('content', get_post_format());\n\t\t\t\t\t\t}// end while\n\t\t\t\t\t\t\n\t\t\t\t\t\tbootstrapBasicPagination();\n\t\t\t\t\t\t?> \n\t\t\t\t\t\t<?php } else {?> \n\t\t\t\t\t\t<?php get_template_part('no-results', 'index');?>\n\t\t\t\t\t\t<?php } // endif;?> \n\t\t\t\t\t\t</div>\n\t\t\t\t\t</main>\n\t\t\t\t</div>\n<?php get_sidebar('right');?> \n\n\n<div id=\"my_mo_modal\" style=\"top: 20%;\" class=\"modal fade\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\"></span></button>\n        <h4>Important info</h4>\n      </div>\n      <div class=\"",
  "/*\n * Copyright 2020 u-blox Cambourne Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n    http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n#ifndef _CELLULAR_SOCK_LWIP_ITF_H_\n#define _CELLULAR_SOCK_LWIP_ITF_H_\n\n/* Only LWIP #includes allowed in here. */\n\n#include \"lwip/sockets.h\" // Needed for socklen_t, sockaddr,\n                          // iovec, msghdr, fd_set and timeval\n\n/* This header file defines the LWIP interface to the cellular\n * sockets API.  These functions are thread-safe.\n */\n\n/* ----------------------------------------------------------------\n * COMPILE-TIME MACROS\n * -------------------------------------------------------------- */\n\n/* ----------------------------------------------------------------\n * TYPES\n * -------------------------------------------------------------- */\n\n/* ----------------------------------------------------------------\n * FUNCTIONS\n * -------------------------------------------------------------- */\n\n/** Create a socket.  This function conforms to the behaviour\n * defined by LWIP, please see their documentation for a description\n * of how it works.\n */\nint cellular_lwip_socket(int domain, int type, int protocol);\n\n/** Make an outgoing connection on the given socket.  This function\n * conforms to the behaviour defined by LWIP, please see their\n * documentation for a description of how it works.\n */\nint cellular_lwip_connect(int s, const struct sockaddr *name,\n                          socklen_t namelen);\n\n/** Close a socket.  This function conforms to the behaviour\n * defined by LWIP, please see their documentation for a description\n * of how it works.\n */\nint cellular_lwip_close(int s);\n\n/** Configure the given socket's file parameters.  This function\n * conforms to the behaviour defined by LWIP except that only\n * setting/getting O_NONBLOCK is supported; please see the LWIP\n * documentation for a description of how it works.\n */\nint cellular_lwip_fcntl(int s, int cmd, int val);\n\n/** Configure the given socket's device parameters.  This\n * function conforms to the behaviour defined by LWIP except\n * that only the value FIONBAR is supported; please\n * see the LWIP documentation for a description of how it works.\n */\nint cellular_lwip_ioctl(int s, long cmd, void *argp);\n\n/** Set the options for the given socket.  This function\n * conforms to the behaviour defined by LWIP, please see\n * their documentation for a description of how it works.\n */\nint cellular_lwip_setsockopt (int s, int level, int optname,\n                              const void *optval,\n                              socklen_t optlen);\n\n/** Get the options for the given socket.  This function\n * conforms to the behaviour defined by LWIP, please see\n * their documentation for a description of how it works.\n */\nint cellular_lwip_getsockopt (int s, int level, int optname,\n                              void *optval, socklen_t *optlen);\n\n/** Send a datagram to the given host.  This function\n * conforms to the behaviour defined by LWIP, please see\n * their documentation for a description of how it works.\n */\nint cellular_lwip_sendto(int s, const void *dataptr,\n                         size_t size, int flags,\n                         const struct sockaddr *to,\n                         socklen_t tolen);\n\n/** Receive a datagram from the given host.  This function\n * conforms to the behaviour defined by LWIP, please see\n * their documentation for a description of how it works.\n */\nint cellular_lwip_recvfrom(int s, void *mem, size_t len,\n                           int flags,\n                           struct sockaddr *from,\n                           socklen_t *fromlen);\n\n/** Send data.  This function conforms to the behaviour\n * defined by LWIP, please see their documentation for a\n * description of how it works.\n */\nint cellular_lwip_write(int s, const void *dataptr,\n                        size_t size);\n\n/** Send data, with flags.  This function conforms to the\n * behaviour defined by LWIP except that the flag parameters\n * is ignored; please see the LWIP documentation for a\n * description of how it works.\n */\nint cellular_lwip_send(int s, const void *dataptr,\n                       size_t size, int flags);\n\n/** Send data, multiple buffers at a time.  This function\n * conforms to the behaviour defined by LWIP, please see\n * their documentation for a description of how it works.\n */\nint cellular_lwip_writev(int s, const struct iovec *iov,\n                         int iovcnt);\n\n/** Send data, with flags, multiple buffers at a time and\n * including additional control information.  This\n * function conforms to the behaviour defined by LWIP\n * except that the fields over and abvoe the iov* fields\n * in message and the flags parameter are ignored; please\n * see the LWIP documentation for a description of how it\n * works.\n */\nint cellular_lwip_sendmsg(int s,\n                          const struct msghdr *message,\n                          int flags);\n\n/** Receive data.  This function conforms to the behaviour\n * defined by LWIP, please see their documentation for a\n * description of how it works.\n */\nint cellular_lwip_read(int s, void *mem, size_t len);\n\n/** Receive data, with flags, multiple buffers at a time\n * and including additional control information.  This\n * function conforms to the behaviour defined by LWIP\n * except that the flags parameters is ignored; please\n * see the LWIP documentation for a description of\n * how it works.\n */\nint cellular_lwip_recv(int s, void *mem, size_t len,\n                       int flags);\n\n/** Prepare a TCP socket for being closed.  This function\n * conforms to the behaviour defined by LWIP, please see\n * their documentation for a description of how it works.\n */\nint cellular_lwip_shutdown(int s, int how);\n\n/** Bind a socket to a local address.  This function\n * conforms to the behaviour defined by LWIP, please see\n * their documentation for a description of how it works.\n */\nint cellular_lwip_bind(int s, const struct sockaddr *name,\n                       socklen_t namelen);\n\n/** Set the given socket into listening mode.  This function\n * conforms to the behaviour defined by LWIP, please see\n * their documentation for a description of how it works.\n */\nint cellular_lwip_listen(int s, int backlog);\n\n/** Accept an incoming TCP connection on the given socket.\n * This function conforms to the behaviour defined by LWIP,\n * please see their documentation for a description of how\n * it works.\n */\nint cellular_lwip_accept(int s, struct sockaddr *addr,\n                         socklen_t *addrlen);\n\n/** Select: wait for one of a set of sockets to become\n * unblocked. This function conforms to the behaviour defined\n * by LWIP, please see their documentation for a description\n * of how it works.\n */\nint cellular_lwip_select(int maxfdp1, fd_set *readset,\n                         fd_set *writeset,\n                         fd_set *exceptset,\n                         struct timeval *timeout);\n\n/** Get the address of the remote host connected to a given\n * socket. This function conforms to the behaviour defined\n * by LWIP, please see their documentation for a description\n * of how it works.\n */\nint cellular_lwip_getpeername(int s, struct sockaddr *name,\n                              socklen_t *namelen);\n\n/** Get the local address of the given socket. This function\n * conforms to the behaviour defined by LWIP, please see\n * their documentation for a description of how it works.\n */\nint cellular_lwip_getsockname(int s, struct sockaddr *name,\n                              socklen_t *namelen);\n\n\n#endif // _CELLULAR_SOCK_LWIP_ITF_H_\n\n// End of file\n",
  "<!doctype html>\n<html class=\"default no-js\">\n<head>\n\t<meta charset=\"utf-8\">\n\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n\t<title>DestinyFactionDefinition | bungie-api-ts</title>\n\t<meta name=\"description\" content=\"\">\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\t<link rel=\"stylesheet\" href=\"../assets/css/main.css\">\n</head>\n<body>\n<header>\n\t<div class=\"tsd-page-toolbar\">\n\t\t<div class=\"container\">\n\t\t\t<div class=\"table-wrap\">\n\t\t\t\t<div class=\"table-cell\" id=\"tsd-search\" data-index=\"../assets/js/search.js\" data-base=\"..\">\n\t\t\t\t\t<div class=\"field\">\n\t\t\t\t\t\t<label for=\"tsd-search-field\" class=\"tsd-widget search no-caption\">Search</label>\n\t\t\t\t\t\t<input id=\"tsd-search-field\" type=\"text\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<ul class=\"results\">\n\t\t\t\t\t\t<li class=\"state loading\">Preparing search index...</li>\n\t\t\t\t\t\t<li class=\"state failure\">The search index is not available</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<a href=\"../index.html\" class=\"title\">bungie-api-ts</a>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"table-cell\" id=\"tsd-widgets\">\n\t\t\t\t\t<div id=\"tsd-filter\">\n\t\t\t\t\t\t<a href=\"#\" class=\"tsd-widget options no-caption\" data-toggle=\"options\">Options</a>\n\t\t\t\t\t\t<div class=\"tsd-filter-group\">\n\t\t\t\t\t\t\t<div class=\"tsd-select\" id=\"tsd-filter-visibility\">\n\t\t\t\t\t\t\t\t<span class=\"tsd-select-label\">All</span>\n\t\t\t\t\t\t\t\t<ul class=\"tsd-select-list\">\n\t\t\t\t\t\t\t\t\t<li data-value=\"public\">Public</li>\n\t\t\t\t\t\t\t\t\t<li data-value=\"protected\">Public/Protected</li>\n\t\t\t\t\t\t\t\t\t<li data-value=\"private\" class=\"selected\">All</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"tsd-filter-inherited\" checked />\n\t\t\t\t\t\t\t<label class=\"tsd-widget\" for=\"tsd-filter-inherited\">Inherited</label>\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"tsd-filter-externals\" checked />\n\t\t\t\t\t\t\t<label class=\"tsd-widget\" for=\"tsd-filter-externals\">Externals</label>\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"tsd-filter-only-exported\" />\n\t\t\t\t\t\t\t<label class=\"tsd-widget\" for=\"tsd-filter-only-exported\">Only exported</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<a href=\"#\" class=\"tsd-widget menu no-caption\" data-toggle=\"menu\">Menu</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"tsd-page-title\">\n\t\t<div class=\"container\">\n\t\t\t<ul class=\"tsd-breadcrumb\">\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"../globals.html\">Globals</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"../modules/_destiny2_interfaces_.html\">&quot;destiny2/interfaces&quot;</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"_destiny2_interfaces_.destinyfactiondefinition.html\">DestinyFactionDefinition</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t<h1>Interface DestinyFactionDefinition</h1>\n\t\t</div>\n\t</div>\n</header>\n<div class=\"container container-main\">\n\t<div class=\"row\">\n\t\t<div class=\"col-8 col-content\">\n\t\t\t<section class=\"tsd-panel tsd-comment\">\n\t\t\t\t<div class=\"tsd-comment tsd-typography\">\n\t\t\t\t\t<div class=\"lead\">\n\t\t\t\t\t\t<p>These definitions represent Factions in the game. Factions have ended up\n\t\t\t\t\t\t\tunilaterally being related to Vendors that represent them, but that need not\n\t\t\t\t\t\tnecessarily be the case.</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p>A Faction is really just an entity that has a related progression for which a\n\t\t\t\t\t\tcharacter can gain experience. In Destiny 1, Dead Orbit was an example of a\n\t\t\t\t\t\tFaction: there happens to be a Vendor that represents Dead Orbit (and indeed,\n\t\t\t\t\t\tDestinyVendorDefinition.factionHash defines to this relationship), but Dead\n\t\t\t\t\tOrbit could theoretically exist without the Vendor that provides rewards.</p>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t\t<section class=\"tsd-panel tsd-hierarchy\">\n\t\t\t\t<h3>Hierarchy</h3>\n\t\t\t\t<ul class=\"tsd-hierarchy\">\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<span class=\"target\">DestinyFactionDefinition</span>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t\t<section class=\"tsd-panel-group tsd-index-group\">\n\t\t\t\t<h2>Index</h2>\n\t\t\t\t<section class=\"tsd-panel tsd-index-panel\">\n\t\t\t\t\t<div class=\"tsd-index-content\">\n\t\t\t\t\t\t<section class=\"tsd-index-section \">\n\t\t\t\t\t\t\t<h3>Properties</h3>\n\t\t\t\t\t\t\t<ul class=\"tsd-index-list\">\n\t\t\t\t\t\t\t\t<li class=\"tsd-kind-property tsd-parent-kind-interface\"><a href=\"_destiny2_interfaces_.destinyfactiondefinition.html#displayproperties\" class=\"tsd-kind-icon\">display<wbr>Properties</a></li>\n\t\t\t\t\t\t\t\t<li class=\"tsd-kind-property tsd-parent-kind-interface\"><a href=\"_destiny2_interfaces_.destinyfactiondefinition.html#hash\" class=\"tsd-kind-icon\">hash</a></li>\n\t\t\t\t\t\t\t\t<li class=\"tsd-kind-property tsd-parent-kind-interface\"><a href=\"_destiny2_interfaces_.destinyfactiondefinition.html#index\" class=\"tsd-kind-icon\">index</a></li>\n\t\t\t\t\t\t\t\t<li class=\"tsd-kind-property tsd-parent-kind-interface\"><a href=\"_destiny2_interfaces_.destinyfactiondefinition.html#progressionhash\" class=\"tsd-kind-icon\">progression<wbr>Hash</a></li>\n\t\t\t\t\t\t\t\t<li class=\"tsd-kind-property tsd-parent-kind-interface\"><a href=\"_destiny2_interfaces_.destinyfactiondefinition.html#redacted\" class=\"tsd-kind-icon\">redacted</a></li>\n\t\t\t\t\t\t\t\t<li class=\"tsd-kind-property tsd-parent-kind-interface\"><a href=\"_destiny2_interfaces_.destinyfactiondefinition.html#rewarditemhash\" class=\"tsd-kind-icon\">reward<wbr>Item<wbr>Hash</a></li>\n\t\t\t\t\t\t\t\t<li class=\"tsd-kind-property tsd-parent-kind-interface\"><a href=\"_destiny2_interfaces_.destinyfactiondefinition.html#rewardvendorhash\" class=\"tsd-kind-icon\">reward<wbr>Vendor<wbr>Hash</a></li>\n\t\t\t\t\t\t\t\t<li class=\"tsd-kind-property tsd-parent-kind-interface\"><a href=\"_destiny2_interfaces_.destinyfactiondefinition.html#tokenvalues\" class=\"tsd-kind-icon\">token<wbr>Values</a></li>\n\t\t\t\t\t\t\t\t<li class=\"tsd-kind-property tsd-parent-kind-interface\"><a href=\"_destiny2_interfaces_.destinyfactiondefinition.html#vendors\" class=\"tsd-kind-icon\">vendors</a></li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t</section>\n\t\t\t<section class=\"tsd-panel-group tsd-member-group \">\n\t\t\t\t<h2>Properties</h2>\n\t\t\t\t<section class=\"tsd-panel tsd-member tsd-kind-property tsd-parent-kind-interface\">\n\t\t\t\t\t<a name=\"displayproperties\" class=\"tsd-anchor\"></a>\n\t\t\t\t\t<h3>display<wbr>Properties</h3>\n\t\t\t\t\t<div class=\"tsd-signature tsd-kind-icon\">display<wbr>Properties<span class=\"tsd-signature-symbol\">:</span> <a href=\"_destiny2_interfaces_.destinydisplaypropertiesdefinition.html\" class=\"tsd-signature-type\">DestinyDisplayPropertiesDefinition</a></div>\n\t\t\t\t\t<aside class=\"tsd-sources\">\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>Defined in <a href=\"https://github.com/DigitalClouds/bungie-api-ts/blob/c8d1606/generated-src/destiny",
  "/*\n * Copyright (c) 2019. Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n * Morbi non lorem porttitor neque feugiat blandit. Ut vitae ipsum eget quam lacinia accumsan.\n * Etiam sed turpis ac ipsum condimentum fringilla. Maecenas magna.\n * Proin dapibus sapien vel ante. Aliquam erat volutpat. Pellentesque sagittis ligula eget metus.\n * Vestibulum commodo. Ut rhoncus gravida arcu.\n */\n\npackage org.devon.data.structures.linked;\n\nimport org.junit.Test;\n\nimport java.util.LinkedList;\n\n/**\n * @author dewen.ye\n * @date 2019/2/16 18:25\n */\npublic class LinkedListDebugTest {\n    @Test\n    public void testDataStructure(){\n        LinkedList<Integer> linkedList = new LinkedList<>();\n        for (int i = 0; i < 5; i++) {\n            linkedList.addFirst(i);\n        }\n    }\n}\n",
  "\ufeff/*\n* Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\").\n* You may not use this file except in compliance with the License.\n* A copy of the License is located at\n*\n*  http://aws.amazon.com/apache2.0\n*\n* or in the \"license\" file accompanying this file. This file is distributed\n* on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n* express or implied. See the License for the specific language governing\n* permissions and limitations under the License.\n*/\n\n#include <aws/ssm/model/GetInventoryRequest.h>\n#include <aws/core/utils/json/JsonSerializer.h>\n\n#include <utility>\n\nusing namespace Aws::SSM::Model;\nusing namespace Aws::Utils::Json;\nusing namespace Aws::Utils;\n\nGetInventoryRequest::GetInventoryRequest() : \n    m_filtersHasBeenSet(false),\n    m_aggregatorsHasBeenSet(false),\n    m_resultAttributesHasBeenSet(false),\n    m_nextTokenHasBeenSet(false),\n    m_maxResults(0),\n    m_maxResultsHasBeenSet(false)\n{\n}\n\nAws::String GetInventoryRequest::SerializePayload() const\n{\n  JsonValue payload;\n\n  if(m_filtersHasBeenSet)\n  {\n   Array<JsonValue> filtersJsonList(m_filters.size());\n   for(unsigned filtersIndex = 0; filtersIndex < filtersJsonList.GetLength(); ++filtersIndex)\n   {\n     filtersJsonList[filtersIndex].AsObject(m_filters[filtersIndex].Jsonize());\n   }\n   payload.WithArray(\"Filters\", std::move(filtersJsonList));\n\n  }\n\n  if(m_aggregatorsHasBeenSet)\n  {\n   Array<JsonValue> aggregatorsJsonList(m_aggregators.size());\n   for(unsigned aggregatorsIndex = 0; aggregatorsIndex < aggregatorsJsonList.GetLength(); ++aggregatorsIndex)\n   {\n     aggregatorsJsonList[aggregatorsIndex].AsObject(m_aggregators[aggregatorsIndex].Jsonize());\n   }\n   payload.WithArray(\"Aggregators\", std::move(aggregatorsJsonList));\n\n  }\n\n  if(m_resultAttributesHasBeenSet)\n  {\n   Array<JsonValue> resultAttributesJsonList(m_resultAttributes.size());\n   for(unsigned resultAttributesIndex = 0; resultAttributesIndex < resultAttributesJsonList.GetLength(); ++resultAttributesIndex)\n   {\n     resultAttributesJsonList[resultAttributesIndex].AsObject(m_resultAttributes[resultAttributesIndex].Jsonize());\n   }\n   payload.WithArray(\"ResultAttributes\", std::move(resultAttributesJsonList));\n\n  }\n\n  if(m_nextTokenHasBeenSet)\n  {\n   payload.WithString(\"NextToken\", m_nextToken);\n\n  }\n\n  if(m_maxResultsHasBeenSet)\n  {\n   payload.WithInteger(\"MaxResults\", m_maxResults);\n\n  }\n\n  return payload.WriteReadable();\n}\n\nAws::Http::HeaderValueCollection GetInventoryRequest::GetRequestSpecificHeaders() const\n{\n  Aws::Http::HeaderValueCollection headers;\n  headers.insert(Aws::Http::HeaderValuePair(\"X-Amz-Target\", \"AmazonSSM.GetInventory\"));\n  return headers;\n\n}\n\n\n\n\n",
  "<?php\n\nnamespace inais\\Providers;\n\nuse Illuminate\\Support\\ServiceProvider;\n\nclass HelperServiceProvider extends ServiceProvider\n{\n    /**\n     * Bootstrap any application services.\n     *\n     * @return void\n     */\n    public function boot()\n    {\n        //\n    }\n\n    /**\n     * Register any application services.\n     *\n     * @return void\n     */\n    public function register()\n    {\n        foreach (glob(app_path().'/Helpers/*.php') as $filename){\n            require_once($filename);\n        }\n    }\n}\n",
  "package com.nurseryapi.service.lookup.impl;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.Pageable;\nimport org.springframework.stereotype.Service;\n\nimport com.nurseryapi.entity.lookup.MajorEntity;\nimport com.nurseryapi.exception.NoSuchElementFoundException;\nimport com.nurseryapi.repository.lookup.MajorRepository;\nimport com.nurseryapi.service.lookup.MajorService;\n\n/**\n * \n * @author Hamza Aljazara\n *\n */\n@Service\npublic class MajorServiceImpl implements MajorService {\n\n\t@Autowired\n\tprivate MajorRepository MajorRepository;\n\n\t/*\n\t * @see com.nurseryapi.service.lookup.MajorService#getMajor(long)\n\t */\n\t@Override\n\tpublic MajorEntity getMajor(long majorId) {\n\t\treturn MajorRepository.findById(majorId).orElseThrow(NoSuchElementFoundException::new);\n\t}\n\n\t/*\n\t * @see\n\t * com.nurseryapi.service.lookup.MajorService#getMajor(org.springframework.data.\n\t * domain.Pageable)\n\t */\n\t@Override\n\tpublic Page<MajorEntity> getMajor(Pageable pageable) {\n\t\treturn MajorRepository.findAll(pageable);\n\t}\n}",
  "//\n//  IMYWebAjaxHandler.h\n//  Pods\n//\n//  Created by ljh on 2017/4/10.\n//\n//\n\n#import <Foundation/Foundation.h>\n\nNS_ASSUME_NONNULL_BEGIN\n\n@protocol IMYWebAjaxHandler <NSObject>\n\n- (void)startWithMethod:(NSString *)method\n                    url:(NSString *)urlString\n                baseURL:(nullable NSURL *)baseURL\n                headers:(nullable NSDictionary *)headers\n                   body:(nullable id)body\n         completedBlock:(void (^)(NSInteger httpCode, NSDictionary * _Nullable headers, NSString * _Nullable data))completedBlock;\n\n@end\n\nNS_ASSUME_NONNULL_END\n",
  "/* $Source$\n * $State$\n * $Revision$\n */\n\n#include <stdlib.h>\n#include <errno.h>\n#include <unistd.h>\n#include <stdarg.h>\n#include \"libsys.h\"\n\nint unlink(const char* path)\n{\n\treturn _syscall(__NR_unlink, (quad) path, 0, 0);\n}\n",
  "################################################################################\n# celeba: done\n################################################################################\nceleba(){\n    python train_federated.py --device-id 2 0 1 --dataset celeba --clf cnn --paradigm lbgm --error-tol 0.9 --optim sgd --num-workers 100 --batch-size 0 --test-batch-size 128 --epochs 101 --lr 2e-5 --momentum 0.9 --loss-type mse --non-iid 0 --residual 0 --repeat 0.4 --dry-run 0 &\n    python train_federated.py --device-id 2 0 --dataset celeba --clf cnn --paradigm lbgm --error-tol 0.8 --optim sgd --num-workers 100 --batch-size 0 --test-batch-size 128 --epochs 101 --lr 2e-5 --momentum 0.9 --loss-type mse --non-iid 0 --residual 0 --repeat 0.4 --dry-run 0 &\n    python train_federated.py --device-id 2 0 1 --dataset celeba --clf cnn --paradigm lbgm --error-tol 0.6 --optim sgd --num-workers 100 --batch-size 0 --test-batch-size 128 --epochs 101 --lr 2e-5 --momentum 0.9 --loss-type mse --non-iid 0 --residual 0 --repeat 0.4 --dry-run 0 &\n    python train_federated.py --device-id 2 0 1 --dataset celeba --clf cnn --paradigm lbgm --error-tol 0.4 --optim sgd --num-workers 100 --batch-size 0 --test-batch-size 128 --epochs 101 --lr 2e-5 --momentum 0.9 --loss-type mse --non-iid 0 --residual 0 --repeat 0.4 --dry-run 0 &\n    python train_federated.py --device-id 2 0 1 --dataset celeba --clf cnn --paradigm lbgm --error-tol 0.2 --optim sgd --num-workers 100 --batch-size 0 --test-batch-size 128 --epochs 101 --lr 2e-5 --momentum 0.9 --loss-type mse --non-iid 0 --residual 0 --repeat 0.4 --dry-run 0 &\n}\n\n\n################################################################################\n# cifar\n################################################################################\ncifar(){\n    python train_federated.py --device-id 2 0 1 --dataset cifar --clf cnn --paradigm lbgm --error-tol 0.9 --optim sgd --num-workers 100 --batch-size 0 --test-batch-size 128 --epochs 501 --lr 1e-1 --momentum 0.9 --non-iid $n --residual 0 --repeat 1 --dry-run 0 &\n    python train_federated.py --device-id 2 0 1 --dataset cifar --clf cnn --paradigm lbgm --error-tol 0.8 --optim sgd --num-workers 100 --batch-size 0 --test-batch-size 128 --epochs 501 --lr 1e-2 --momentum 0.9 --non-iid $n --residual 0 --repeat 1 --dry-run 0 &\n    python train_federated.py --device-id 2 0 1 --dataset cifar --clf cnn --paradigm lbgm --error-tol 0.6 --optim sgd --num-workers 100 --batch-size 0 --test-batch-size 128 --epochs 501 --lr 1e-1 --momentum 0.9 --non-iid $n --residual 0 --repeat 1 --dry-run 0 &\n    python train_federated.py --device-id 2 0 1 --dataset cifar --clf cnn --paradigm lbgm --error-tol 0.4 --optim sgd --num-workers 100 --batch-size 0 --test-batch-size 128 --epochs 501 --lr 1e-1 --momentum 0.9 --non-iid $n --residual 0 --repeat 1 --dry-run 0 &\n    python train_federated.py --device-id 2 0 1 --dataset cifar --clf cnn --paradigm lbgm --error-tol 0.2 --optim sgd --num-workers 100 --batch-size 0 --test-batch-size 128 --epochs 501 --lr 1e-1 --momentum 0.9 --non-iid $n --residual 0 --repeat 1 --dry-run 0 &\n}\n\n################################################################################\n# fmnist:\n################################################################################\nfmnist(){\n    python train_federated.py --device-id 2 0 1 --dataset fmnist --clf cnn --paradigm lbgm --error-tol 0.9 --optim sgd --num-workers 100 --batch-size 0 --test-batch-size 128 --epochs 101 --lr 1e-2 --momentum 0.9 --non-iid $n --residual 0 --repeat 1 --dry-run 0 &\n    # python train_federated.py --device-id 2 0 1 --dataset fmnist --clf cnn --paradigm lbgm --error-tol 0.8 --optim sgd --num-workers 100 --batch-size 0 --test-batch-size 128 --epochs 101 --lr 1e-2 --momentum 0.9 --non-iid $n --residual 0 --repeat 1 --dry-run 0 &\n    python train_federated.py --device-id 2 0 1 --dataset fmnist --clf cnn --paradigm lbgm --error-tol 0.6 --optim sgd --num-workers 100 --batch-size 0 --test-batch-size 128 --epochs 101 --lr 1e-2 --momentum 0.9 --non-iid $n --residual 0 --repeat 1 --dry-run 0 &\n    python train_federated.py --device-id 2 0 1 --dataset fmnist --clf cnn --paradigm lbgm --error-tol 0.4 --optim sgd --num-workers 100 --batch-size 0 --test-batch-size 128 --epochs 101 --lr 1e-2 --momentum 0.9 --non-iid $n --residual 0 --repeat 1 --dry-run 0 &\n    python train_federated.py --device-id 2 0 1 --dataset fmnist --clf cnn --paradigm lbgm --error-tol 0.2 --optim sgd --num-workers 100 --batch-size 0 --test-batch-size 128 --epochs 101 --lr 1e-2 --momentum 0.9 --non-iid $n --residual 0 --repeat 1 --dry-run 0 &\n}\n\n################################################################################\n# mnist:\n################################################################################\nmnist(){\n    python train_federated.py --device-id 0 1 2 --dataset mnist --clf cnn --paradigm lbgm --error-tol 0.9 --optim sgd --num-workers 100 --batch-size 0 --test-batch-size 128 --epochs 101 --lr 1e-2 --momentum 0.9 --non-iid $n --residual 0 --repeat 1 --dry-run 0 &\n    # python train_federated.py --device-id 0 1 2 --dataset mnist --clf cnn --paradigm lbgm --error-tol 0.8 --optim sgd --num-workers 100 --batch-size 0 --test-batch-size 128 --epochs 101 --lr 1e-2 --momentum 0.9 --non-iid $n --residual 0 --repeat 1 --dry-run 0 &\n    python train_federated.py --device-id 0 1 2 --dataset mnist --clf cnn --paradigm lbgm --error-tol 0.6 --optim sgd --num-workers 100 --batch-size 0 --test-batch-size 128 --epochs 101 --lr 1e-2 --momentum 0.9 --non-iid $n --residual 0 --repeat 1 --dry-run 0 &\n    python train_federated.py --device-id 0 1 2 --dataset mnist --clf cnn --paradigm lbgm --error-tol 0.4 --optim sgd --num-workers 100 --batch-size 0 --test-batch-size 128 --epochs 101 --lr 1e-2 --momentum 0.9 --non-iid $n --residual 0 --repeat 1 --dry-run 0 &\n    python train_federated.py --device-id 0 1 2 --dataset mnist --clf cnn --paradigm lbgm --error-tol 0.2 --optim sgd --num-workers 100 --batch-size 0 --test-batch-size 128 --epochs 101 --lr 1e-2 --momentum 0.9 --non-iid $n --residual 0 --repeat 1 --dry-",
  "import styled from'styled-components'\n\nexport const H2_NoScale = styled.div`\n  font-weight: bold;\n  color: ${(props) => props.color || '#FFFFFF'};\n  font-size: ${(props) => props.fontSize || '45px'};\n`\n\nexport const H2 = styled(H2_NoScale)`\n  @media (max-width: 768px) {\n    font-size: calc(${(props) => props.fontSize || '45px'} * 0.5);\n  }\n`\n\nexport const H3_NoScale = styled.div`\n  color: ${(props) => props.color || '#FFFFFF'};\n  font-size: ${(props) => props.fontSize || '25px'};\n`\n\nexport const H3 = styled(H3_NoScale)`\n  @media (max-width: 768px) {\n    font-size: calc(${(props) => props.fontSize || '32px'} * 0.5);\n  }\n`\n\nexport const H4_NoScale = styled.div`\n  color: ${(props) => props.color || '#FFFFFF'};\n  font-size: ${(props) => props.fontSize || '22px'};\n`\n\nexport const H4Bold_NoScale = styled(H4_NoScale)`\n  font-weight: bold;\n  font-size: ${(props) => props.fontSize || '18px'};\n`\n\nexport const H4 = styled(H4_NoScale)`\n  @media (max-width: 768px) {\n    font-size: calc(${(props) => props.fontSize || '22px'} * 0.5);\n  }\n`\n\nexport const H4Bold = styled(H4)`\n  font-weight: bold;\n  }\n`\n",
  "# twitter-json2atom\nGenerate an Atom feed for a Twitter account\n",
  "# homepage\nKleiner One-Pager f\u00fcr meine Internetpr\u00e4senz\n",
  "\u30ea\u30dd\u30b8\u30c8\u30ea\u7ba1\u7406\u8005\u306f\u3001\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u5bfe\u3057\u3066\u4f9d\u5b58\u95a2\u4fc2\u30b0\u30e9\u30d5\u3092\u6709\u52b9\u307e\u305f\u306f\u7121\u52b9\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u30e6\u30fc\u30b6\u30a2\u30ab\u30a6\u30f3\u30c8\u307e\u305f\u306f Organization \u304c\u6240\u6709\u3059\u308b\u3059\u3079\u3066\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u4f9d\u5b58\u95a2\u4fc2\u30b0\u30e9\u30d5\u3092\u6709\u52b9\u307e\u305f\u306f\u7121\u52b9\u306b\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 For more information, see \"[Configuring the dependency graph](/code-security/supply-chain-security/understanding-your-software-supply-chain/configuring-the-dependency-graph).\"\n\n{% data reusables.repositories.navigate-to-repo %}\n{% data reusables.repositories.sidebar-settings %}\n{% data reusables.repositories.navigate-to-code-security-and-analysis %}\n4. \u30ea\u30dd\u30b8\u30c8\u30ea \u30c7\u30fc\u30bf\u3078\u306e\u8aad\u307f\u53d6\u308a\u30a2\u30af\u30bb\u30b9\u3092 {% data variables.product.product_name %} \u306b\u8a31\u53ef\u3057\u3066\u4f9d\u5b58\u95a2\u4fc2\u30b0\u30e9\u30d5\u3092\u6709\u52b9\u306b\u3059\u308b\u3053\u3068\u306b\u95a2\u3059\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8aad\u3093\u3060\u3046\u3048\u3067\u3001[Dependency Graph] \u306e\u96a3\u306b\u3042\u308b [**Enable**] \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002![\"Enable\" button for the dependency graph](/assets/images/help/repository/dependency-graph-enable-button.png) You can disable the dependency graph at any time by clicking **Disable** next to \"Dependency Graph\" on the settings page for {% ifversion fpt or ghec or ghes > 3.4 or ghae-issue-5658 %}\"Code security and analysis.\"{% else %}\"Security & analysis.\"{% endif %}\n",
  "\n# Distributed tracing\n\nAs an ASP.NET Core component, YARP can easily integrate into different tracing systems the same as any other web application.\nSee detailed guides for setting up your application with:\n- [OpenTelemetry] or\n- [Application Insights]\n\n.NET 6.0 has built-in configurable support for distributed tracing that YARP takes advantage of to enable such scenarios out-of-the-box.\n\n##.NET 5.0 and older\n\nBefore 6.0, `SocketsHttpHandler` could not be used with distributed tracing.\nWhen running on.NET 3.1 or 5.0, YARP will copy tracing headers as-is, not accounting for any changes that may have occurred to the trace within the application.\n\nTo get YARP to actively participate, you must use a workaround to manually insert the correct headers.\n\nThe recommended workaround is to:\n- Include a [custom `IForwarderHttpClientFactory`][DiagnosticsHandlerFactory] in your project and\n- Register it in the DI container\n    ```c#\n    #if!NET6_0_OR_GREATER\n    services.AddSingleton<IForwarderHttpClientFactory, DiagnosticsHandlerFactory>();\n    #endif\n    ```\nThe workaround mimics the behavior of the internal `DiagnosticsHandler` class used by `HttpClient`. As such, it automatically works with instrumentation packages from OpenTelemetry or Application Insights.\n\n[OpenTelemetry]: https://github.com/open-telemetry/opentelemetry-dotnet/blob/main/docs/trace/getting-started/README.md\n[Application Insights]: https://docs.microsoft.com/azure/azure-monitor/app/asp-net-core\n[DiagnosticsHandlerFactory]: https://github.com/microsoft/reverse-proxy/blob/main/samples/ReverseProxy.Code.Sample/DiagnosticsHandlerFactory.cs",
  "#include <stdio.h>\n#include <stdlib.h>\n\n//\u041f\u0440\u043e\u0441\u0435\u0438\u0432\u0430\u043d\u0438\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432\nvoid siftDown(int *arr, int root, int bottom)\n{\n \tint max;\n\t\n \twhile (root * 2 <= bottom)\n\t{\n\t\tif ((root * 2 == bottom) || (arr[root * 2] > arr[root * 2 + 1]))\n\t\t{\n\t\t\tmax = root * 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmax = root * 2 + 1;\n\t\t}\n\t\tif (arr[root] < arr[max]) \n\t\t{ \n\t\t\tint t = arr[root]; \n\t\t\tarr[root] = arr[max];\n\t\t\tarr[max] = t;\n\t\t\troot = max;\n\t\t}\n\t\telse break;\n\t}\n}\n\n//\u041f\u0438\u0440\u043e\u043c\u0438\u0434\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430\nvoid sorting_function(int *arr, int arr_len)\n{\n\tfor (int i = (arr_len / 2) - 1; i >= 0; i--)\n\t\tsiftDown(arr, i, arr_len - 1);\n\tfor (int i = arr_len - 1; i >= 1; i--)\n\t{\n    \t\tint t = arr[0];\n    \t\tarr[0] = arr[i];\n    \t\tarr[i] = t;\n    \t\tsiftDown(arr, 0, i - 1);\n\t}\n}\n\nint main()\n{\n\tint n;\t\n\tscanf(\"%d\", &n);\n\tint arr[n];\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d\", &arr[i]);\n\t}\n\n\tsorting_function(arr, n);\n\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tprintf(\"%d \", arr[i]);\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}\n",
  "\n#import <_Foundation/_Foundation.h>\n\n// ----------------------------------\n// Macro\n// ----------------------------------\n\n#undef  app_initializer\n#define app_initializer [_AppInit sharedInstance]\n\n// ----------------------------------\n// Class Definition\n// ----------------------------------\n\n@interface _AppInit : NSObject\n\n@singleton( _AppInit )\n\n@end\n",
  "/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nexport declare class NzInputNumberModule {\n}\n",
  "\"\"\"Solution to Cryptopals Set 1, Challenge 8.\"\"\"\n\nimport math\n\n\ndef split_blocks(bytes_):\n    \"\"\"Split a byte sequence into 16-byte blocks.\"\"\"\n    return [bytes_[start:start+16] for start in range(0, len(bytes_), 16)]\n\n\ndef score_ecb(bytes_):\n    \"\"\"\n    Score a byte sequence based on likliehood it is an ECB mode ct.\n\n    The score is based on the standard deviation of the distribution of 16-byte\n    blocks in the sequence.\n    \"\"\"\n    blocks = split_blocks(bytes_)\n    repeats = {}\n    for block in blocks:\n        if block not in repeats.keys():\n            repeats[block] = 1\n        else:\n            repeats[block] += 1\n    distribution = repeats.values()\n    sigma = math.sqrt(sum(x ** 2 for x in distribution)) / len(blocks)\n    return sigma\n\n\ndef solve(cts):\n    \"\"\"Solve this challenge.\"\"\"\n    scores = []\n    for ct in cts:\n        scores.append((score_ecb(ct), ct))\n    if scores:\n        _, ct = max(scores)\n        return ct\n",
  "import typescript from \"rollup-plugin-typescript2\";\nimport external from \"rollup-plugin-peer-deps-external\";\nimport commonjs from \"@rollup/plugin-commonjs\";\nimport resolve from \"@rollup/plugin-node-resolve\";\nimport babel from '@rollup/plugin-babel';\nimport cleanup from 'rollup-plugin-cleaner';\nimport postcss from 'rollup-plugin-postcss';\n\nimport pkg from \"./package.json\";\nconst extensions = ['.js', '.jsx', '.ts', '.tsx'];\n\nexport default {\n  input: \"lib/index.tsx\",\n  output: [\n    {\n      file: pkg.main,\n      format: \"cjs\",\n      exports: \"named\",\n    },\n    {\n      file: pkg.module,\n      format: \"es\",\n      exports: \"named\",\n    }\n  ],\n  plugins: [\n    cleanup({\n      targets: [\n        './dist/',\n      ]\n    }),\n    external(),\n    resolve(extensions),\n    typescript({\n      rollupCommonJSResolveHack: true,\n      exclude: \"**/tests/**\",\n      clean: true,\n      useTsconfigDeclarationDir: true,\n    }),\n    commonjs({\n      include: [\"node_modules/**\"],\n    }),\n    babel({\n      extensions,\n      include: ['lib/**/*'],\n      babelHelpers: 'runtime',\n    }),\n    postcss(),\n  ]\n};\n",
  "//\n//  ProgramItemCellModel+MBMatchProgram.h\n//  matchbook\n//\n//  Created by guangbool on 2017/6/24.\n//  Copyright \u00a9 2017\u5e74 devbool. All rights reserved.\n//\n\n#import \"ProgramItemCellModel.h\"\n#import <MBKit/MBMatchProgram.h>\n\n@interface ProgramItemCellModel (MBMatchProgram)\n\n+ (ProgramItemCellModel *)modelWithProgram:(MBMatchProgram *)program\n                          currentTimestamp:(NSTimeInterval)currentTimestamp;\n\n@end\n",
  "var router = require('express').Router();\nvar usersRouter = require('./usersRouter.js');\nvar quizRouter = require('./quizRouter.js');\nvar updateRouter = require('./updateRouter.js');\n\nrouter.use('/users', usersRouter);\nrouter.use('/update', updateRouter);\nrouter.use('/quiz', quizRouter);\nmodule.exports = router;\n",
  "<!--\n Copyright (C) 2019 Toshiba Corporation\n SPDX-License-Identifier: Apache-2.0\n-->\n\n<!DOCTYPE html>\n<html>\n<head>\n\t<meta charset=\"utf-8\">\n\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge,chrome=1\">\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t<title>Connector</title>\n\t<style>\n\thtml, body {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tbackground-color: #eeeeee;\n\t}\n\t</style>\n</head>\n<body>\n\t<script src=\"../../js/pixi/5.2.5/pixi.min.js\"></script>\n\t<script src=\"../../js/wcardinal-ui/0.148.0/wcardinal-ui.min.js\"></script>\n\t<script src=\"../../js/wcardinal-ui/0.148.0/wcardinal-ui-theme-white.min.js\"></script>\n\t<script>\n\t(function(){\n\t\t\"use strict\";\n\n\t\tvar application = new wcardinal.ui.DApplication();\n\n\t\tvar diagram = new wcardinal.ui.DDiagramEditor({\n\t\t\tparent: application.stage,\n\t\t\tx: 0, y: 0,\n\t\t\twidth: \"100%\", height: \"100%\",\n\t\t\ton: {\n\t\t\t\tready: function() {\n\t\t\t\t\tvar circleA = diagram.layer.children[0];\n\t\t\t\t\tvar update = function () {\n\t\t\t\t\t\tvar t = (Date.now()) / 3000 * Math.PI;\n\t\t\t\t\t\tcircleA.transform.position.y = 250 + 100 * Math.cos(t);\n\t\t\t\t\t\tapplication.update();\n\t\t\t\t\t\tsetTimeout(update, 16);\n\t\t\t\t\t};\n\t\t\t\t\tupdate();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tfetch( \"../../resource/diagram/connector.json\" ).then(function( response ) {\n\t\t\tresponse.json().then(function( json ) {\n\t\t\t\tdiagram.set( json );\n\t\t\t\tdiagram.view.fit();\n\t\t\t});\n\t\t});\n\t}());\n\t</script>\n</body>\n</html>\n",
  "# -*- coding: utf-8 -*-\n\"\"\"\nUser Permission settings SQL-based object repository.\n\"\"\"\nfrom app.crud.config.user import UserPermissionRepository\nfrom app.db.crud.base import SQLRepositoryMixin\nfrom app.db.models.config.user import UserPermission\n\n\nclass UserPermissionSQLRepository(\n    SQLRepositoryMixin,\n    UserPermissionRepository[UserPermission]\n):\n    \"\"\"\n    User Permission SQL-based object storage repository.\n    \"\"\"\n    __obj_cls__ = UserPermission\n",
  "//\n//  UIScrollView+BXAddition.h\n//  BXToolKit_Example\n//\n//  Created by Hmily on 2019/3/20.\n//  Copyright \u00a9 2019 xudusheng. All rights reserved.\n//\n\n#import <UIKit/UIKit.h>\n\nNS_ASSUME_NONNULL_BEGIN\n\n@interface UIScrollView (BXAddition)\n\n/**\n Scroll content to top with animation.\n */\n- (void)scrollToTop;\n\n/**\n Scroll content to bottom with animation.\n */\n- (void)scrollToBottom;\n\n/**\n Scroll content to left with animation.\n */\n- (void)scrollToLeft;\n\n/**\n Scroll content to right with animation.\n */\n- (void)scrollToRight;\n\n/**\n Scroll content to top.\n \n @param animated  Use animation.\n */\n- (void)scrollToTopAnimated:(BOOL)animated;\n\n/**\n Scroll content to bottom.\n \n @param animated  Use animation.\n */\n- (void)scrollToBottomAnimated:(BOOL)animated;\n\n/**\n Scroll content to left.\n \n @param animated  Use animation.\n */\n- (void)scrollToLeftAnimated:(BOOL)animated;\n\n/**\n Scroll content to right.\n \n @param animated  Use animation.\n */\n- (void)scrollToRightAnimated:(BOOL)animated;\n\n@end\n\nNS_ASSUME_NONNULL_END\n",
  "<?php\n\nnamespace App;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Transaction extends Model\n{\n    //\n    protected $table = 'transaction';\n    protected $fillable = [\n        'user_id', 'payment_id','slot','state', 'insurance', 'pin', 'total_price','start_rent', 'end_rent', 'created_at', 'updated_at'\n    ];\n    protected $primaryKey = 'transaction_id';\n\n    public function user()\n    {\n        return $this->belongsTo('App\\User', 'user_id', 'id');\n    }\n}\n",
  "const UA_SYNTHETICS_EVENT_NAMES = [\n  'incomingCall',\n  'declinedIncomingCall',\n  'failedIncomingCall',\n  'availableSecondRemoteStream',\n  'notAvailableSecondRemoteStream',\n 'mustStopPresentation',\n 'shareState',\n  'enterRoom',\n] as const;\n\nexport const UA_JSSIP_EVENT_NAMES = [\n  'connecting',\n  'connected',\n  'disconnected',\n  'newRTCSession',\n 'registered',\n  'unregistered',\n 'registrationFailed',\n  'newMessage',\n 'sipEvent',\n] as const;\n\nexport const UA_EVENT_NAMES = [...UA_JSSIP_EVENT_NAMES,...UA_SYNTHETICS_EVENT_NAMES] as const;\n\nconst SESSION_SYNTHETICS_EVENT_NAMES = [\n  'peerconnection:confirmed',\n  'peerconnection:ontrack',\n  'channels',\n  'channels:notify',\n  'ended:fromserver',\n 'main-cam-control',\n  'participant:added-to-list-moderators',\n  'participant:removed-from-list-moderators',\n] as const;\n\nexport const SESSION_JSSIP_EVENT_NAMES = [\n  'ended',\n  'connecting',\n 'sending',\n 'reinvite',\n 'replaces',\n 'refer',\n  'progress',\n  'accepted',\n  'confirmed',\n  'peerconnection',\n  'failed',\n 'muted',\n  'unmuted',\n  'newDTMF',\n  'newInfo',\n  'hold',\n  'unhold',\n  'update',\n 'sdp',\n  'icecandidate',\n  'getusermediafailed',\n  'peerconnection:createofferfailed',\n  'peerconnection:createanswerfailed',\n  'peerconnection:setlocaldescriptionfailed',\n  'peerconnection:setremotedescriptionfailed',\n  'presentation:start',\n  'presentation:started',\n  'presentation:end',\n  'presentation:ended',\n  'presentation:failed',\n] as const;\n\nexport const SESSION_EVENT_NAMES = [\n ...SESSION_JSSIP_EVENT_NAMES,\n ...SESSION_SYNTHETICS_EVENT_NAMES,\n] as const;\n\nexport type TEventUA = typeof UA_EVENT_NAMES[number];\n\nexport type TEventSession = typeof SESSION_EVENT_NAMES[number];\n",
  "\npackage com.mr81.biz.board.impl;\n\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\n\n\npublic class JDBCunit {\n\t\n\tprivate static Connection conn =null;\n\t\n\tpublic JDBCunit() {\n\t\t// TODO Auto-generated constructor stub\n\t}\n\t\n\t\n\tpublic static Connection getConnection(){\n\t\t\n\t\t\n\t\t\n\t\n\t\t\n\t\ttry {\n\t\t\tClass.forName(\"oracle.jdbc.driver.OracleDriver\");\n\t\t\tconn=DriverManager.getConnection(\"jdbc:oracle:thin:@127.0.0.1:1521:xe\",\"hgj0307\",\"0307\"); \n\t\t\t\n\t\t\n\t\t} catch (Exception e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t\n\t\treturn conn;\n\t\t\n\t}\n\npublic static void close(PreparedStatement stmt, Connection conn){\n\t\n\ttry{\n\t\t\n\t\tif(stmt!=null){\n\t\t\tstmt.close();\n\t\t}\n\t\tif(conn!=null){\n\t\t\tconn.close();\n\t\t}\n\t\t\n\t}catch (Exception e) {\n\t\t// TODO: handle exception\n\te.printStackTrace();\n\t}\n\t\n}\n\n\npublic static void close(PreparedStatement stmt, Connection conn, ResultSet set){\n\t\n\ttry{\n\t\tif(set!=null){\n\t\t\tset.close();\n\t\t}\n\t\tif(stmt!=null){\n\t\t\tstmt.close();\n\t\t}\n\t\tif(conn!=null){\n\t\t\tconn.close();\n\t\t}\n\t\t\n\t}catch (Exception e) {\n\t\t// TODO: handle exception\n\t\te.printStackTrace();\n\t}\n\t\n}\n\n\n}\n\n",
  "\"\"\"This script loads the numpy arrays and saves them in HDF files!\"\"\"\nimport os\n\nimport h5py\nimport numpy as np\n\n\ndef min_max_normalization(data, eps):\n    mn = data.min()\n    mx = data.max()\n    data_normalized = data - mn\n    old_range = mx - mn + eps\n    data_normalized /= old_range\n\n    return data_normalized\n\n\ndef main():\n    # Root folder of the Training data.\n    root_folder = os.path.join(\"D:\", os.sep, \"DownloadDatasets\", \"medical_decathlon\", \"Numpy\", \"images\")\n    root_folder_gt = os.path.join(\"D:\", os.sep, \"DownloadDatasets\", \"medical_decathlon\", \"Numpy\", \"groundtruth\")\n\n    # Hyperparameters for Training.\n    seed = 77\n    train_size = 1\n\n    # load all arrays from the folder\n    folders = os.listdir(root_folder)\n\n    # split after seed\n    split = int(train_size * len(folders))\n    np.random.seed(seed)\n    np.random.shuffle(folders)\n    test_files, train_files = folders[split:], folders[:split]\n\n    # Groups of the training HDF5.\n    # Create the File were the Data will be stored.\n    file = h5py.File(os.path.join(\"D:\", os.sep, \"DownloadDatasets\", \"medical_decathlon\", \"speedtest_hdf5.h5\"), 'w')\n    train_image_file = file.create_group(\"images\")\n    train_mask_file = file.create_group(\"groundtruth\")\n\n    # create train data.\n    i = 0\n    for x in train_files:\n        train_slides = np.load(os.path.join(root_folder, x))\n\n        # load the masks\n        mask = np.load(os.path.join(root_folder_gt, x.split(\".\")[0] + \"-gt.npy\"))\n\n        # normalization yes or no?\n        # hyperparameter maybe float16 for amp.\n        train_slides = train_slides.astype(np.float32)\n        train_slides = min_max_normalization(train_slides, 0.001)\n\n        train_image_file.create_dataset(str(i), data=train_slides)\n        train_mask_file.create_dataset(str(i), data=mask)\n        i += 1\n\n    file.close()\n    print(\"Amount of images\", i-1)\n    del file, train_slides, train_image_file, train_mask_file, mask\n\n\n\n    # COMPRESSION GZIP\n    file = h5py.File(os.path.join(\"D:\", os.sep, \"DownloadDatasets\", \"medical_decathlon\", \"speedtest_hdf5-gzip.h5\"), 'w')\n    train_image_file = file.create_group(\"images\")\n    train_mask_file = file.create_group(\"groundtruth\")\n\n    # create train data.\n    i = 0\n    for x in train_files:\n        train_slides = np.load(os.path.join(root_folder, x))\n\n        # load the masks\n        mask = np.load(os.path.join(root_folder_gt, x.split(\".\")[0] + \"-gt.npy\"))\n\n        # normalization yes or no?\n        # hyperparameter maybe float16 for amp.\n        train_slides = train_slides.astype(np.float32)\n        train_slides = min_max_normalization(train_slides, 0.001)\n\n        train_image_file.create_dataset(str(i), compression=\"gzip\", compression_opts=9, data=train_slides)\n        train_mask_file.create_dataset(str(i), compression=\"gzip\", compression_opts=9, data=mask)\n        i += 1\n\n    file.close()\n    print(\"Amount of images\", i - 1)\n    del file, train_slides, train_image_file, train_mask_file, mask\n\n\n\n    # COMPRESSION LZF\n    file = h5py.File(os.path.join(\"D:\", os.sep, \"DownloadDatasets\", \"medical_decathlon\", \"speedtest_hdf5-lzf.h5\"), 'w')\n    train_image_file = file.create_group(\"images\")\n    train_mask_file = file.create_group(\"groundtruth\")\n\n    # create train data.\n    i = 0\n    for x in train_files:\n        train_slides = np.load(os.path.join(root_folder, x))\n\n        # load the masks\n        mask = np.load(os.path.join(root_folder_gt, x.split(\".\")[0] + \"-gt.npy\"))\n\n        # normalization yes or no?\n        # hyperparameter maybe float16 for amp.\n        train_slides = train_slides.astype(np.float32)\n        train_slides = min_max_normalization(train_slides, 0.001)\n\n        train_image_file.create_dataset(str(i), compression=\"lzf\", data=train_slides)\n        train_mask_file.create_dataset(str(i), compression=\"lzf\", data=mask)\n        i += 1\n\n    file.close()\n    print(\"Amount of images\", i - 1)\n    del file, train_slides, train_image_file, train_mask_file, mask\n\n\n\n    # COMPRESSION SZIP\n    file = h5py.File(os.path.join(\"D:\", os.sep, \"DownloadDatasets\", \"medical_decathlon\", \"speedtest_hdf5-szip.h5\"),\n                     'w')\n    train_image_file = file.create_group(\"images\")\n    train_mask_file = file.create_group(\"groundtruth\")\n\n    # create train data.\n    i = 0\n    for x in train_files:\n        train_slides = np.load(os.path.join(root_folder, x))\n\n        # load the masks\n        mask = np.load(os.path.join(root_folder_gt, x.split(\".\")[0] + \"-gt.npy\"))\n\n        # normalization yes or no?\n        # hyperparameter maybe float16 for amp.\n        train_slides = train_slides.astype(np.float32)\n        train_slides = min_max_normalization(train_slides, 0.001)\n\n        train_image_file.create_dataset(str(i), compression=\"szip\", data=train_slides)\n        train_mask_file.create_dataset(str(i), compression=\"szip\", data=mask)\n        i += 1\n\n    file.close()\n    print(\"Amount of images\", i - 1)\n    del file, train_slides, train_image_file, train_mask_file, mask\n\n\nif __name__ == '__main__':\n    main()\n",
  "# zf2-common\nzf2-common\n",
  "/**\n * Copyright (c) 2012 - 2021 Data In Motion and others.\n * All rights reserved. \n * \n * This program and the accompanying materials are made available under the terms of the \n * Eclipse Public License v1.0 which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n * \n * Contributors:\n *     Data In Motion - initial API and implementation\n */\n/*******************************************************************************\n * Copyright (c) 2021 Data In Motion Consulting GmbH\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n *******************************************************************************/\n\npackage org.gecko.vaadin.whiteboard.spi;\n\npublic interface VaadinWhiteboard {\n\n}\n",
  "/*\n * SPDX-License-Identifier: Apache-2.0\n */\n\n//===--- MaxPoolSingleOut.cpp - Shape Inference for MaxPoolSingleOut Op ---===//\n//\n// This file implements shape inference for the ONNX MaxPool Operator.\n//\n//===----------------------------------------------------------------------===//\n\n#include \"src/Dialect/ONNX/ShapeInference/ONNXShapeHelper.hpp\"\n\nusing namespace mlir;\n\nnamespace onnx_mlir {\n\nONNXMaxPoolSingleOutOpShapeHelper::ONNXMaxPoolSingleOutOpShapeHelper(\n    ONNXMaxPoolSingleOutOp *newOp, IndexExprScope *inScope)\n    : ONNXGenericPoolShapeHelper<ONNXMaxPoolSingleOutOp,\n          ONNXMaxPoolSingleOutOpAdaptor>(\n          newOp, false /*hasFilter*/, newOp->ceil_mode(), inScope) {}\n\nONNXMaxPoolSingleOutOpShapeHelper::ONNXMaxPoolSingleOutOpShapeHelper(\n    ONNXMaxPoolSingleOutOp *newOp, OpBuilder *rewriter,\n    ArrayValueIndexCapture::GetDenseVal fGetDenseVal,\n    ArrayValueIndexCapture::LoadVal fLoadVal, IndexExprScope *inScope)\n    : ONNXGenericPoolShapeHelper<ONNXMaxPoolSingleOutOp,\n          ONNXMaxPoolSingleOutOpAdaptor>(newOp, false /*hasFilter*/,\n          newOp->ceil_mode(), rewriter, fGetDenseVal, fLoadVal, inScope) {}\n\nLogicalResult ONNXMaxPoolSingleOutOpShapeHelper::computeShape(\n    ONNXMaxPoolSingleOutOpAdaptor operandAdaptor) {\n  return ONNXGenericPoolShapeHelper<ONNXMaxPoolSingleOutOp,\n      ONNXMaxPoolSingleOutOpAdaptor>::computeShape(operandAdaptor, nullptr,\n      op->kernel_shape(), op->pads(), op->strides(), op->dilations());\n}\n\n} // namespace onnx_mlir\n",
  "---\nsort_order: 160\ncanvas_id: https://readux.ecdsdev.org/iiif/81285178.4931.emory.edu/canvas/81285178.4931.emory.edu$161\nannotation_count: 0\nimages:\n  small-thumbnail: https://iiif.archivelab.org/iiif//81285178.4931.emory.edu$161/full/200,/0/default.jpg\n  json: https://iiif.archivelab.org/iiif//81285178.4931.emory.edu$161/info.json\n  full: https://iiif.archivelab.org/iiif//81285178.4931.emory.edu$161/full/full/0/default.jpg\n  page: https://iiif.archivelab.org/iiif//81285178.4931.emory.edu$161/full/full/0/default.jpg\n  thumbnail: https://iiif.archivelab.org/iiif//81285178.4931.emory.edu$161/full/200,/0/default.jpg\ntitle: '162'\nnumber: 160\n\n---\n\n<div class=\"ocr-line ocrtext\" style=\"left:4.01%;top:10.7%;width:70.45%;height:2.27%;text-align:left;font-size:48px\" data-vhfontsize=\"2\">\n\t<span>\n\t\t<span id='7a2b4ab2-c83b-4038-b1d7-313d7c5281c7' style='height: 50px; width: 326px; font-size: 31.25px; letter-spacing: 25.125px' data-letter-spacing='0.07707055214723926'>CLARIS5.</span> <span id='b67b6363-f5f5-4f03-ac23-360bd1822d58' style='height: 48px; width: 192px; font-size: 30.0px; letter-spacing: 33.0px' data-letter-spacing='0.171875'>VIRO</span> <span id='c994c772-c621-40b9-b31e-885184ec7a5f' style='height: 47px; width: 399px; font-size: 29.375px; letter-spacing: 42.3125px' data-letter-spacing='0.10604636591478697'>ARNOLDO</span> \t</span>\n</div>\n<div class=\"ocr-line ocrtext\" style=\"left:7.88%;top:14.19%;width:66.51%;height:1.8%;text-align:left;font-size:35px\" data-vhfontsize=\"2\">\n\t<span>\n\t\t<span id='1f9aebee-6060-4a6f-b382-c562d57dd5fa' style='height: 32px; width: 410px; font-size: 20.0px; letter-spacing: 31.0px' data-letter-spacing='0.07560975609756097'>ROSENBERGO</span> <span id='2b25d4db-3de1-489a-95df-c93896aea997' style='height: 39px; width: 531px; font-size: 24.375px; letter-spacing: 25.741071428571427px' data-letter-spacing='0.048476594027441484'>IVRISCONSVLTO,</span> \t</span>\n</div>\n<div class=\"ocr-line ocrtext\" style=\"left:8.28%;top:16.9%;width:66.1%;height:1.5%;text-align:left;font-size:30px\" data-vhfontsize=\"2\">\n\t<span>\n\t\t<span id='61eb3e7b-0dc0-444a-b58d-aed2d20f57c1' style='height: 32px; width: 192px; font-size: 20.0px; letter-spacing: 28.4px' data-letter-spacing='0.14791666666666667'>HADR.</span> <span id='9c7502fa-e901-44a7-aa3b-4e75908f93a1' style='height: 32px; width: 219px; font-size: 20.0px; letter-spacing: 26.5px' data-letter-spacing='0.12100456621004566'>IVNIVS</span> <span id='92971fa2-590b-47d1-82a8-4269a9562b70' style='height: 32px; width: 275px; font-size: 20.0px; letter-spacing: 29.285714285714285px' data-letter-spacing='0.10649350649350649'>MEDICVS</span> <span id='dc6f9c39-b8de-4e94-bba3-1f1854c49195' style='height: 29px; width: 34px; font-size: 18.125px; letter-spacing: 7.9375px' data-letter-spacing='0.23345588235294118'>S.</span> <span id='6f2fd98b-ffb4-427a-9e5c-c17f4c7dcc3e' style='height: 27px; width: 44px; font-size: 16.875px; letter-spacing: 13.5625px' data-letter-spacing='0.30823863636363635'>D.</span> \t</span>\n</div>\n<div class=\"ocr-line ocrtext\" style=\"left:18.51%;top:21.76%;width:39.83%;height:2.7%;text-align:left;font-size:50px\" data-vhfontsize=\"2\">\n\t<span>\n\t\t<span id='6a0ab02d-c142-43f2-bf5d-2c16311147b1' style='height: 44px; width: 31px; font-size: 27.5px; letter-spacing: 17.25px' data-letter-spacing='0.5564516129032258'>E</span> <span id='c21881eb-bce6-4e2a-bdb7-866eb7f9911c' style='height: 46px; width: 63px; font-size: 28.75px; letter-spacing: 1.375px' data-letter-spacing='0.021825396825396824'>tibi</span> <span id='f761cb4d-65e7-4dd0-b6b2-5e01dce40629' style='height: 62px; width: 173px; font-size: 38.75px; letter-spacing: -0.1527777777777778px' data-letter-spacing='-0.0008831085420680797'>latebrofa</span> \t</span>\n</div>\n<div class=\"ocr-line ocrtext\" style=\"left:21.52%;top:22.1%;width:53.2%;height:2.45%;text-align:left;font-size:37px\" data-vhfontsize=\"2\">\n\t<span>\n\t\t<span id='7119c8ed-f8c9-4caa-8fb0-1fae5037f948' style='height: 28px; width: 27px; font-size: 17.5px; letter-spacing: 18.25px' data-letter-spacing='0.6759259259259259'>x</span> <span id='189c5735-2675-417b-9009-11e91adc8de2' style='height: 28px; width: 27px; font-size: 17.5px; letter-spacing: 18.25px' data-letter-spacing='0.6759259259259259'>T</span> <span id='6758cfdf-534f-4ac7-b014-74b5cd115b9a' style='height: 38px; width: 152px; font-size: 23.75px; letter-spacing: 9.839285714285714px' data-letter-spacing='0.06473214285714285'>numeris</span> <span id='4070c1f3-23af-4741-84ea-ce7f914da47d' style='height: 57px; width: 233px; font-size: 35.625px; letter-spacing: 5.4875px",
  "import React, { Fragment } from \"react\"\nimport { ArrowRightInbox } from \"./svgindex\"\nimport { Link } from \"react-router-dom\"\n\n\nconst EmployeeModuleCard = ({Icon, moduleName, kpis = [], links = [], isCitizen = false }) => {\n    return <div className=\"employeeCard card-home customEmployeeCard\" style={isCitizen? {margin: \"0px 16px 24px 16px\", padding: \"0px\"} : {}}>\n            <div className=\"complaint-links-container\">\n                <div className=\"header\">\n                    <span className=\"text removeHeight\">{moduleName}</span>\n                    <span className=\"logo removeBorderRadiusLogo\">\n                        {Icon}\n                    </span>\n                </div>\n                <div className=\"body\" style={{ margin: \"0px\", padding: \"0px\" }}>\n                    <div className=\"flex-fit\">\n                        {kpis.map(({count, label, link}, index) => <div className=\"card-count\" key={index}>\n                            <div> \n                                <span>{count || \"-\"}</span>\n                            </div>\n                            <div>\n                                {link? <Link to={link} className=\"employeeTotalLink\">{label}</Link> : null}\n                            </div>\n                        </div>)}\n                    </div>\n                    <div className=\"links-wrapper\" style={{width: \"80%\"}}>\n                        {links.map(({count, label, link}, index) => <span className=\"link\" key={index}>\n                            {link? <Link to={link}>{label}</Link> : null }\n                            {count ? \n                            <>\n                                <span className={\"inbox-total\"}>{count || \"-\"}</span> \n                                    <Link to={link}>\n                                        <ArrowRightInbox />\n                                    </Link>\n                            </> : null }\n                        </span>)}\n                    </div>\n                </div>\n            </div>\n        </div>\n}\n\nexport default EmployeeModuleCard",
  "/**\n * @file jaln_network.c This file contains function definitions for\n * general public network library functions.\n *\n * @section LICENSE\n *\n * Source code in 3rd-party is licensed and owned by their respective\n * copyright holders.\n *\n * All other source code is copyright Tresys Technology and licensed as below.\n *\n * Copyright (c) 2011 Tresys Technology LLC, Columbia, Maryland, USA\n *\n * This software was developed by Tresys Technology LLC\n * with U.S. Government sponsorship.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n#include <axl.h>\n#include <vortex.h>\n#include <jalop/jaln_network.h>\n#include <jalop/jaln_network_types.h>\n\n#include \"jaln_context.h\"\n#include \"jaln_connection.h\"\n#include \"jaln_publisher.h\"\n\nvoid jaln_mark_closing(jaln_session *sess)\n{\n\tvortex_mutex_lock(&sess->lock);\n\tsess->closing = axl_true;\n\tvortex_mutex_unlock(&sess->lock);\n}\n\nenum jal_status jaln_disconnect(struct jaln_connection *jal_conn)\n{\n\tif (!jal_conn ||!jal_conn->jaln_ctx) {\n\t\treturn JAL_E_INVAL;\n\t}\n\n\tif (jal_conn->journal_sess) {\n\t\tjaln_mark_closing(jal_conn->journal_sess);\n\t}\n\tif (jal_conn->audit_sess) {\n\t\tjaln_mark_closing(jal_conn->audit_sess);\n\t}\n\tif (jal_conn->log_sess) {\n\t\tjaln_mark_closing(jal_conn->log_sess);\n\t}\n\n\treturn JAL_OK;\n}\n\nenum jal_status jaln_shutdown(struct jaln_connection *jal_conn)\n{\n\tif (!jal_conn) {\n\t\treturn JAL_E_INVAL;\n\t}\n\n\taxl_bool ret = axl_false;\n\n\tvortex_connection_shutdown(jal_conn->v_conn);\n\tret = vortex_connection_close(jal_conn->v_conn);\n\tif (axl_true!= ret) {\n\t\treturn JAL_E_INVAL;\n\t}\n\n\t// Vortex will handle notifying everything to shut down, but we can't return to the\n\t// network store until that is complete.  The network store should have one reference\n\t// to the context.\n\t/***\n\twhile (jal_conn->jaln_ctx->ref_cnt > 1) {\n\t\tsleep(1);\n\t}\n\t***/\n\treturn JAL_OK;\n}\n",
  "/* build/tpl */\nimport deps from './deps/eachDeep.js';\nimport getEachDeep from './getEachDeep.js';\nexport default getEachDeep(deps);\n",
  "const path = require('path')\n\nconst isDev = process.argv.indexOf('--development') >= 0\nconst isWatch = process.argv.indexOf('--watch') >= 0\n\n\nconst srcPath = path.resolve(__dirname, '../../src')\nconst distPath = path.resolve(__dirname, '../../dist')\nconst packagePath = path.resolve(__dirname, '../../package.json')\n\n\nmodule.exports = {\n  isDev,\n  isWatch,\n  packagePath,\n  srcPath, // \u6e90\u76ee\u5f55\n  distPath,// \u76ee\u6807\u76ee\u5f55\n  wxmlFiles: [`${srcPath}/**/*.wxml`],\n  lessFiles: [\n    `${srcPath}/**/*.less`,\n    `!${srcPath}/**/styles/**/*.less`,\n    `!${srcPath}/**/_template/*.less`,\n  ],\n  jsonFiles: [`${srcPath}/**/*.json`, `!${srcPath}/**/_template/*.json`, `!${srcPath}/node_modules/**/*.json`],\n  jsFiles: [`${srcPath}/**/*.js`, `!${srcPath}/node_modules/**/*.js`],\n  imgFiles: [\n    `${srcPath}/icons/*.{png,jpg,gif,ico}`,\n    `${srcPath}/icons/**/*.{png,jpg,gif,ico}`,\n  ],\n  npmFile: [\n    `${srcPath}/npm/index.js`,\n  ],\n  distNpmFile: `${distPath}/npm`,\n  // allFiles: [`${srcPath}/**/ * `,`${srcPath}/**/ *. * `],  //\u6240\u6709\u6587\u4ef6\u5939 \u548c \u6240\u6709\u6587\u4ef6\n}\n",
  "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<!-- NewPage -->\n<html lang=\"en\">\n<head>\n<!-- Generated by javadoc (1.8.0_242) on Fri Sep 04 14:44:43 CEST 2020 -->\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n<title>Uses of Class org.apache.zookeeper.cli.CliParseException (Apache ZooKeeper - Server 3.6.2 API)</title>\n<meta name=\"date\" content=\"2020-09-04\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"../../../../../stylesheet.css\" title=\"Style\">\n<script type=\"text/javascript\" src=\"../../../../../script.js\"></script>\n</head>\n<body>\n<script type=\"text/javascript\"><!--\n    try {\n        if (location.href.indexOf('is-external=true') == -1) {\n            parent.document.title=\"Uses of Class org.apache.zookeeper.cli.CliParseException (Apache ZooKeeper - Server 3.6.2 API)\";\n        }\n    }\n    catch(err) {\n    }\n//-->\n</script>\n<noscript>\n<div>JavaScript is disabled on your browser.</div>\n</noscript>\n<!-- ========= START OF TOP NAVBAR ======= -->\n<div class=\"topNav\"><a name=\"navbar.top\">\n<!--   -->\n</a>\n<div class=\"skipNav\"><a href=\"#skip.navbar.top\" title=\"Skip navigation links\">Skip navigation links</a></div>\n<a name=\"navbar.top.firstrow\">\n<!--   -->\n</a>\n<ul class=\"navList\" title=\"Navigation\">\n<li><a href=\"../../../../../overview-summary.html\">Overview</a></li>\n<li><a href=\"../package-summary.html\">Package</a></li>\n<li><a href=\"../../../../../org/apache/zookeeper/cli/CliParseException.html\" title=\"class in org.apache.zookeeper.cli\">Class</a></li>\n<li class=\"navBarCell1Rev\">Use</li>\n<li><a href=\"../package-tree.html\">Tree</a></li>\n<li><a href=\"../../../../../deprecated-list.html\">Deprecated</a></li>\n<li><a href=\"../../../../../index-all.html\">Index</a></li>\n<li><a href=\"../../../../../help-doc.html\">Help</a></li>\n</ul>\n</div>\n<div class=\"subNav\">\n<ul class=\"navList\">\n<li>Prev</li>\n<li>Next</li>\n</ul>\n<ul class=\"navList\">\n<li><a href=\"../../../../../index.html?org/apache/zookeeper/cli/class-use/CliParseException.html\" target=\"_top\">Frames</a></li>\n<li><a href=\"CliParseException.html\" target=\"_top\">No&nbsp;Frames</a></li>\n</ul>\n<ul class=\"navList\" id=\"allclasses_navbar_top\">\n<li><a href=\"../../../../../allclasses-noframe.html\">All&nbsp;Classes</a></li>\n</ul>\n<div>\n<script type=\"text/javascript\"><!--\n  allClassesLink = document.getElementById(\"allclasses_navbar_top\");\n  if(window==top) {\n    allClassesLink.style.display = \"block\";\n  }\n  else {\n    allClassesLink.style.display = \"none\";\n  }\n  //-->\n</script>\n</div>\n<a name=\"skip.navbar.top\">\n<!--   -->\n</a></div>\n<!-- ========= END OF TOP NAVBAR ========= -->\n<div class=\"header\">\n<h2 title=\"Uses of Class org.apache.zookeeper.cli.CliParseException\" class=\"title\">Uses of Class<br>org.apache.zookeeper.cli.CliParseException</h2>\n</div>\n<div class=\"classUseContainer\">\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<table class=\"useSummary\" border=\"0\" cellpadding=\"3\" cellspacing=\"0\" summary=\"Use table, listing packages, and an explanation\">\n<caption><span>Packages that use <a href=\"../../../../../org/apache/zookeeper/cli/CliParseException.html\" title=\"class in org.apache.zookeeper.cli\">CliParseException</a></span><span class=\"tabEnd\">&nbsp;</span></caption>\n<tr>\n<th class=\"colFirst\" scope=\"col\">Package</th>\n<th class=\"colLast\" scope=\"col\">Description</th>\n</tr>\n<tbody>\n<tr class=\"altColor\">\n<td class=\"colFirst\"><a href=\"#org.apache.zookeeper.cli\">org.apache.zookeeper.cli</a></td>\n<td class=\"colLast\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li class=\"blockList\">\n<ul class=\"blockList\">\n<li class=\"blockList\"><a name=\"org.apache.zookeeper.cli\">\n<!--   -->\n</a>\n<h3>Uses of <a href=\"../../../../../org/apache/zookeeper/cli/CliParseException.html\" title=\"class in org.apache.zookeeper.cli\">CliParseException</a> in <a href=\"../../../../../org/apache/zookeeper/cli/package-summary.html\">org.apache.zookeeper.cli</a></h3>\n<table class=\"useSummary\" border=\"0\" cellpadding=\"3\" cellspacing=\"0\" summary=\"Use table, listing methods, and an explanation\">\n<caption><span>Methods in <a href=\"../../../../../org/apache/zookeeper/cli/package-summary.html\">org.apache.zookeeper.cli</a> that throw <a href=\"../../../../../org/apache/zookeeper/cli/CliParseException.html\" title=\"class in org.apache.zookeeper.cli\">CliParseException</a></span><span class=\"tabEnd\">&nbsp;</span></caption>\n<tr>\n<th class=\"colFirst\" scope=\"col\">Modifier and Type</th>\n<th class=\"colLast\" scope=\"col\">Method and Description</th>\n</tr>\n<tbody>\n<tr class=\"altColor\">\n<td class=\"colFirst\"><code><a href=\"../../../../../org/apache/zookeeper/cli/CliCommand.html\" title=\"class in org.apache.zookeeper.cli\">CliCommand</a></code></td>\n<td class=\"colLast\"><span class=\"typeNameLabel\">GetAclCommand.</span><code><span class=\"memberNameLink\"><a href=\"../../../../../org/apache/zookeeper/cli/GetAclCommand.html#parse-java.lang.String:A-\">parse</a></span>(<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true\" title=\"class or interface in java.lang\">String</a>[]&nbsp;cmdArgs)</code>&nbsp;</td>\n</tr>\n<tr class=\"rowColor\">\n<td class=\"colFirst\"><code><a href=\"../../../../../org/apache/zookeeper/cli/CliCommand.html\" title=\"class in org.apache.zookeeper.cli\">CliCommand</a></code></td>\n<td class=\"colLast\"><span class=\"typeNameLabel\">AddWatchCommand.</span><code><span class=\"memberNameLink\"><a href=\"../../../../../org/apache/zookeeper/cli/AddWatchCommand.html#parse-java.lang.String:A-\">parse</a></span>(<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true\" title=\"class or interface in java.lang\">String</a>[]&nbsp;cmdArgs)</code>&nbsp;</td>\n</tr>\n<tr class=\"altColor\">\n<td class=\"colFirst\"><code><a href=\"../../../../../org/apache/zookeeper/cli/CliCommand.html\" title=\"class in org.apache.zookeeper.cli\">CliCommand</a></code></td>\n<td class=\"colLast\"><span class=\"typeNameLabel\">CloseCommand.</span><code><span class=\"memberNameLink\"><a href=\"../../../../../org/apache/zookeeper/cli/CloseCommand.html#parse-java.lang.String:A-\">parse</a></span>(<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true\" title=\"class or interface in java.lang\">String</a",
  "const single = [\"I'm single\", \"We are all single\"];\n\nmodule.exports.bus = [\"Buzz Lightyear\", \"space bus\"];\nmodule.exports.single = single;\n",
  "package org.jetbrains.plugins.scala\npackage annotator\n\nimport org.intellij.lang.annotations.Language\nimport org.jetbrains.plugins.scala.annotator.element.ScTypedExpressionAnnotator\nimport org.jetbrains.plugins.scala.base.SimpleTestCase\nimport org.jetbrains.plugins.scala.extensions._\nimport org.jetbrains.plugins.scala.lang.psi.api.expr.ScTypedExpression\n\nclass TypedExpressionAnnotatorTest extends SimpleTestCase {\n  private final val Header = \"class A; class B; object A extends A; object B extends B\\n\"\n\n  def testFine(): Unit = {\n    assertMatches(messages(\"A: A\")) {\n      case Nil =>\n    }\n  }\n\n  def testTypeMismatch(): Unit = {\n    assertMatches(messages(\"B: A\")) {\n      case Error(\"A\", UpcastingError()) :: Nil =>\n    }\n  }\n\n  def testTypeMismatchMessage(): Unit = {\n    assertMatches(messages(\"B: A\")) {\n      case Error(_, \"Cannot upcast B.type to A\") :: Nil =>\n    }\n  }\n\n  //todo: requires Function1 trait in scope\n  /*def testImplicitConversion {\n    assertMatches(messages(\"implicit def toA(b: B) = A; B: A\")) {\n      case Nil =>\n    }\n  }*/\n\n\n  def messages(@Language(value = \"Scala\", prefix = Header) code: String): List[Message] = {\n    val file = (Header + code).parse\n    val expression = file.depthFirst().findByType[ScTypedExpression].get\n\n    implicit val mock: AnnotatorHolderMock = new AnnotatorHolderMock(file)\n    ScTypedExpressionAnnotator.annotate(expression)\n    mock.annotations\n  }\n\n  private val UpcastingError = ContainsPattern(\"Cannot upcast\")\n}\n",
  "package main\n\nimport \"github.com/dominictwlee/bao/internal/fs\"\n\nfunc main() {\n\terr := fs.CopyDir(\"../../templates\", \"templates\")\n\tif err!= nil {\n\t\tpanic(err)\n\t}\n}\n",
  "<?php\n\nnamespace App;\n\nuse Illuminate\\Contracts\\Auth\\MustVerifyEmail;\nuse Illuminate\\Foundation\\Auth\\User as Authenticatable;\nuse Illuminate\\Notifications\\Notifiable;\n\nclass User extends Authenticatable\n{\n    use Notifiable;\n\n    /**\n     * The attributes that are mass assignable.\n     *\n     * @var array\n     */\n    protected $fillable = [\n        'name', 'email', 'password', 'joined_at', 'department_id', 'flg_admin'\n    ];\n\n    /**\n     * The attributes that should be hidden for arrays.\n     *\n     * @var array\n     */\n    protected $hidden = [\n        'password','remember_token',\n    ];\n\n    /**\n     * The attributes that should be cast to native types.\n     *\n     * @var array\n     */\n    protected $casts = [\n        'email_verified_at' => 'datetime',\n    ];\n    \n    /**\n     * *:1\u306e\u30e2\u30c7\u30eb\n     */\n    public function department(){\n        return $this->belongsTo(Department::class);\n    }\n    \n    public function paidVacation(){\n        return $this->hasMany(PaidVacation::class);\n    }\n    \n    public function posts(){\n        return $this->hasMany(Post::class);\n    }\n}\n",
  "<?php\n\nnamespace CorporacionPeru;\n\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Carbon\\Carbon;\n\nclass TrasladoGalones extends Model\n{\n   \tprotected $table = 'traslado_galones';\n    protected $primaryKey = 'id';\n    protected $fillable= ['tipo','id','stock','nuevo_stock','cantidad',\n\t\t\t\t'horario','proveedor_id','cliente_id','fecha','grifo_id'];\n\n    public function proveedor()\n    {    \t\n    \treturn $this->belongsTo(Proveedor::class, 'proveedor_id');\n\t}\n\n    public function grifo()\n    {       \n        return $this->belongsTo(Grifo::class);\n    }\n\n    public function cliente()\n    {       \n        return $this->belongsTo(Cliente::class);\n    } \n\n    public function setFechaAttribute($value)\n    {\n        $this->attributes['fecha'] = Carbon::createFromFormat('d/m/Y', $value)->format('Y-m-d');\n    }\n    public function getFechaAttribute($value)\n    {\n        return Carbon::createFromFormat('Y-m-d', $value)->format('d/m/Y');\n    }\n\n    public function getTipo(){\n    \t\n    \t$result=\"\";\n\n        switch($this->tipo){\n            case 2: \n                $result=\"Cliente\";\n                break;\n            case 1:\n                $result=\"Grifo\";\n                break;\n        }\n        return $result;\n    }\n}\n",
  "; A131282: Period 6: repeat [1, 2, 3, 3, 4, 5].\n; 1,2,3,3,4,5,1,2,3,3,4,5,1,2,3,3,4,5,1,2,3,3,4,5,1,2,3,3,4,5,1,2,3,3,4,5,1,2,3,3,4,5,1,2,3,3,4,5,1,2,3,3,4,5,1,2,3,3,4,5,1,2,3,3,4,5,1,2,3,3,4,5,1,2,3,3,4,5,1,2,3,3,4,5,1,2,3,3,4,5,1,2,3,3,4,5,1,2,3,3\n\nmod $0,6\nmov $1,$0\ndiv $1,3\nsub $0,$1\nadd $0,1\n",
  "!!!!!_______________PM________________!!!\nprogram airfoil\n\nIMPLICIT NONE\ninteger,parameter :: mytype = 8\ninteger, parameter :: nx=481,ny=288,nz=14, nclx=2, ncly=0, nclz=0\n!  integer, parameter :: nx1=500, ny1=500\n real(mytype), parameter:: dt=0.0005\nreal(mytype) :: dx, dy,theta,xo,yo,m, xmax, xmin, ymax, ymin, d2min,x1,x2, y1, y2,p1,p2,p3,p4\nreal(mytype) :: p11,p21,p12,p22,p, delta\ninteger :: i,j,out,k,l, counter, count, q,r,s, no, case\n! real(4), dimension(nx1,ny1) :: ux1, uy1, x1, y1\ninteger, parameter :: n=159, dims=2\nreal(mytype), dimension(n) :: x,y\nreal(mytype), dimension(n,nz) :: pre, pavg\nreal(mytype), dimension(n) :: preFinal\nreal(mytype), dimension(n,dims) :: Po! POINTS ARRAY\t\nreal(mytype), dimension(nx,ny,nz)::pp\nreal(mytype), parameter::  xlx=20, yly=12, zlz=1\nreal(mytype), dimension(nx,ny):: xgrid,ygrid\n\ninteger::im1,ip1\nreal(mytype)::dist,dx1,dy1\n\ninteger :: kAvg\n\nif (nclx==0) dx=xlx/nx \nif (nclx==1.or. nclx==2) dx=xlx/(nx-1.) \nif (ncly==0) dy=yly/ny!(ny-1.)\nif (ncly==1.or.ncly==2) dy=yly/(ny-1.)\ndelta = 0.00005 + (dx**2 + dy**2)**0.5\n\nOPEN(10,FILE='Cylinder-test.dat',FORM='FORMATTED',&\n        RECL=4, STATUS='OLD')\n  \n     DO i= 1,n\n           READ(10,*) Po(i,1), Po(i,2)\t\t\t\t\t\t! reading points file\n     ENDDO\n    \n  CLOSE(10)\n  \n   OPEN(10,FILE='pmean-2.dat',FORM='UNFORMATTED',&\n       ACCESS='DIRECT', RECL=8, STATUS='OLD')\n  COUNT = 1\n  DO k=1,nz\n     DO j=ny,1, -1\n        DO i=1,nx\n           READ(10,REC=COUNT) pp(i,j,k)\t\t\t\t\t\t! reading pressure values\n           COUNT = COUNT + 1\n        ENDDO\n     ENDDO\n  ENDDO\n  CLOSE(10)\n  \n!  print *, '1,1', pp(1,1,19)/4000\n!print *, '2,1', pp(2,1,19)/4000\n!print *, '1,2', pp(1,2,19)/4000\n!print *, '241,337', pp(481,337,19)/4000\n!print *, '1,337', pp(1,337,19)/4000\n!print *, '481,1', pp(481,1,1)/4000\n\n!    DO j=165,173\n !      DO i=104,114\n!\t    print *, i, j, pp(i,j,19)/4000\t\n!       ENDDO\n !   ENDDO\n  \n  \n!   do i=1,400\n!   \n!   im1=i-1\n!   ip1=i+1\n!   if(i==1)im1=399\n!   if(i==400)ip1=2\n!   \n!   dx1=Po(ip1,1)-Po(im1,1)\n!   dy1=Po(im1,2)-Po(ip1,2)\n! \n!   dist = dsqrt(dx1**2+dy1**2)\n! \n!   dx1 = dx1/dist\n!   dy1 = dy1/dist\n! \n!   x(i) = Po(i,1) + dx1 * delta\n!   y(i) = Po(i,2) + dy1 * delta\n!   \n!   end do\n  \n!**************************************************************************\n\n!  delta = 3.5e-2\n\n  do i=1,n\n\n  im1=i-1\n  ip1=i+1\n  if(i==1)im1= n-1\n  if(i==n)ip1= 2\n\n !if(i==200)ip1 = i\n !if(i==201)im1 = i\n\n\n\n  dx1=Po(ip1,1)-Po(im1,1)\n  dy1=Po(ip1,2)-Po(im1,2)\n\n  dist = dsqrt(dx1**2+dy1**2)\n\n  dx1 = dx1/dist\n  dy1 = dy1/dist\n\n  x(i) = Po(i,1) - dy1 * delta\n  y(i) = Po(i,2) + dx1 * delta\n\n  \n  end do\n\nOPEN(UNIT=3,FILE='points_boundary.dat', FORM = 'FORmatted', status ='replace')\ndo i=1,n\n  WRITE(3,*) x(i), y(i)!-pp(2,ny-4,nz/2))\nenddo\n\nCLOSE(3)\n!-------------------------------------------------------------added from interp_pre.f90----------------------------\n! \nd2min=dx*dx\n\n\nxmax=3.0\nxmin=2.000036\nymax=1.060009\nymin=0.939991\n\n! defining actual coordinates\ns=(xmax+8*dx)/dx+1\nr=(xmin-8*dx)/dx+1\n!p=(ymin-8*dy)/dy+1\nq=(ymax+8*dy)/dy+1\n\n!print *, r, s, p,q\n\n\n! STOP\n\ndo j=1,ny\ndo i=1,nx\n\nxgrid(i,j)=(i-1)*dx\nygrid(i,j)=(j-1)*dy\n\nenddo\nenddo\nOPEN(UNIT=3,FILE='interpolant_points.dat', FORM = 'FORmatted', status ='replace')\n\ndo kAvg=1,nz\nprint *,'k loop:',kAvg,'out of',nz\ndo i=1,n!no\ncount=1\n!   do l=p,q\n!   do k=r,s\n  do l= 5*ny/12, 7*ny/12\n  do k= 5*nx/24, 7*nx/24\n\tx1 = xgrid(k,l)\n\ty1 = ygrid(k,l)\n\tx2 = xgrid(k+1,l)\n\ty2 = ygrid(k,l+1)\n\tp11 = pp(k,l,kAvg)\n\tp21 = pp(k+1,l,kAvg)\n\tp12 = pp(k,l+1,kAvg)\n\tp22 = pp(k+1,l+1,kAvg)\n\n\tcall mesh_cell(x1,y1,x2,y2,x(i),y(i),p11,p21,p12,p22,p,case,out)\n\n!      d2=(x(i)-xgrid(k,l))*(x(i)-xgrid(k,l))+(y(i)-ygrid(k,l))*(y(i)-ygrid(k,l))\n! !  print *, d2\n!!  if (sqrt((x(k,l)-xc)*(x(k,l)-xc)+(x(k,l)-xc)*(x(k,l)-xc))>rad) then\n!      if (d2<=d2min.and. count==1) then\n!!     x1=x(k,l)\n!!     y1=y(k,l)\n!      call polygon_test(xgrid(k,l),ygrid(k,l),out)\n!      if (out==1) then\n!            d_1=d2\n!      p1=pp(k,l,kAvg)\n!      count=2\n!      \n!! \t  print *, x(i),',',y",
  "use dominator::{Dom, html, clone, with_node};\nuse futures_signals::signal::Mutable;\nuse std::rc::Rc;\nuse super::{state::*, actions};\nuse web_sys::HtmlInputElement;\nuse utils::{events, routes::*};\nuse crate::firebase::*;\nuse crate::register::{\n    state::{Step, Step1Data},\n    components::footer::Footer\n};\n\nconst STR_SUBMIT:&'static str = \"Submit\";\nconst STR_LOCATION_LABEL:&'static str = \"Location*\";\nconst STR_TERMS_LABEL:&'static str = \"I have read the terms and conditions (legal text\u2026)\";\nconst STR_LANGUAGE_LABEL:&'static str = \"Preferred language of communication*\";\nconst STR_MARKETING_LABEL:&'static str = \"I would like to receive educational resources (GDPR legal text\u2026.)\";\n\npub struct Step2Page {\n}\n\nimpl Step2Page {\n    pub fn render(step: Mutable<Step>, step_1: Step1Data) -> Dom {\n        let state = Rc::new(State::new(step, step_1));\n\n        html!(\"page-register-step2\", {\n           .children(&mut [\n                html!(\"input-location\", {\n                   .property(\"slot\", \"location\")\n                   .event(clone!(state => move |evt:events::GoogleLocation| {\n                        *state.location_json.borrow_mut() = evt.raw_json();\n                    }))\n                }),\n                html!(\"input-text\", {\n                   .property(\"slot\", \"language\")\n                   .property(\"label\", STR_LANGUAGE_LABEL)\n                   .property(\"mode\", \"text\")\n                   .event(clone!(state => move |evt:events::CustomInput| {\n                        *state.language.borrow_mut() = evt.value();\n                    }))\n                }),\n                html!(\"input-checkbox\", {\n                   .property(\"slot\", \"checkbox\")\n                   .property_signal(\"error\", state.terms_error())\n                   .property(\"label\", STR_TERMS_LABEL)\n                   .event(clone!(state => move |evt:events::CustomToggle| {\n                        state.clear_terms_status();\n                        *state.terms.borrow_mut() = evt.value();\n                    }))\n                }),\n                html!(\"input-checkbox\", {\n                   .property(\"slot\", \"checkbox\")\n                   .property(\"label\", STR_MARKETING_LABEL)\n                   .event(clone!(state => move |evt:events::CustomToggle| {\n                        *state.marketing.borrow_mut() = evt.value();\n                    }))\n                }),\n                html!(\"button-rect\", {\n                   .property(\"slot\", \"submit\")\n                   .property(\"color\", \"red\")\n                   .property(\"size\", \"medium\")\n                   .text(STR_SUBMIT)\n                   .event(clone!(state => move |evt:events::Click| {\n                        actions::submit(state.clone());\n                    }))\n                }),\n                Footer::render()\n            ])\n        })\n            \n    }\n}\n\n",
  "export class CreateUserDto {\n    readonly name: string;\n    readonly email: string;\n    readonly password: string;\n    readonly permissions?: string[];\n    readonly isActive?: boolean;\n    readonly accessToken?: string;\n    readonly refreshToken?: string;\n}",
  "package org.openelisglobal.resultlimits.form;\n\nimport java.util.Collection;\n\nimport org.openelisglobal.common.form.BaseForm;\n\npublic class ResultLimitsForm extends BaseForm {\n    private ResultLimitsLink limit;\n\n    private Collection tests;\n\n    private Collection resultTypes;\n\n    private Collection genders;\n\n    private Collection units;\n\n    public ResultLimitsForm() {\n        setFormName(\"resultLimitsForm\");\n    }\n\n    public ResultLimitsLink getLimit() {\n        return limit;\n    }\n\n    public void setLimit(ResultLimitsLink limit) {\n        this.limit = limit;\n    }\n\n    public Collection getTests() {\n        return tests;\n    }\n\n    public void setTests(Collection tests) {\n        this.tests = tests;\n    }\n\n    public Collection getResultTypes() {\n        return resultTypes;\n    }\n\n    public void setResultTypes(Collection resultTypes) {\n        this.resultTypes = resultTypes;\n    }\n\n    public Collection getGenders() {\n        return genders;\n    }\n\n    public void setGenders(Collection genders) {\n        this.genders = genders;\n    }\n\n    public Collection getUnits() {\n        return units;\n    }\n\n    public void setUnits(Collection units) {\n        this.units = units;\n    }\n}\n",
  "#!/usr/bin/env python3.6\n# -*- coding: utf-8 -*-\n",
  "use crate::data::RegisterData;\nuse crate::state::State;\nuse crate::utils::{error, html, redirect, user};\nuse bcrypt::{hash, DEFAULT_COST};\nuse tide::{Request, Response};\n\npub async fn register_get(req: Request<State>) -> tide::Result<Response> {\n    let user = user(req.session());\n    if user.logged_in {\n        return Ok(redirect(\"/\"));\n    }\n\n    let rendered = req.state().render(\"register.html\")?;\n    let response = html(rendered);\n    Ok(response)\n}\n\npub async fn register_post(mut req: Request<State>) -> tide::Result<Response> {\n    let data: RegisterData = req.body_form().await?;\n    if data.password!= data.password_confirm {\n        let response = error(&req, \"register.html\", \"Passwords don't match.\")?;\n        return Ok(response);\n    }\n\n    let pool = req.state().pool();\n    let query = sqlx::query!(\"SELECT * FROM user WHERE username =?\", &data.username)\n       .fetch_optional(pool)\n       .await?;\n    if query.is_some() {\n        let response = error(&req, \"register.html\", \"User with this name already exists.\")?;\n        return Ok(response);\n    }\n\n    let hashed = hash(&data.password, DEFAULT_COST)?;\n    sqlx::query!(\n        \"INSERT INTO user (username, password) VALUES (?,?)\",\n        &data.username,\n        &hashed\n    )\n   .execute(pool)\n   .await?;\n\n    Ok(redirect(\"/\"))\n}\n",
  "const { MEMBER_SEPARATOR, NULL_CHARACTER } = require('./constants')\nconst createEvent = require('./createEvent')\nconst getLoader = require('./getLoader')\nconst v = require('./validate')\n\n// TODO: refactor to eliminate code duplication (searchByValue, searchByValueIgnoreCase).\n\n/**\n * Searches for events with a value either equal to the given value or starting with it, ignoring case.\n *\n * @function EntityAttribute#searchByValueIgnoreCase\n * @param {?String} value The given value.\n * @param {('ascending'|'descending')} [order='ascending'] The order of the returned events.\n * @param {Function} done\n * @returns {Array.<Event>} An array of matching events.\n */\nmodule.exports = function EntityAttribute$searchByValueIgnoreCase(value, aOrder, aDone) {\n    let order\n    let done\n\n    if (typeof aOrder === 'function') {\n        order = 'ascending'\n        done = aOrder\n    } else {\n        order = aOrder\n        done = aDone\n    }\n\n    if (!v.callback(done, \"argument 3, 'done'\")) {\n        throw v.lastError\n    }\n\n    const canBeNull = this._isNullable\n    if (!v.value(value, canBeNull, \"argument 1, 'value'\")) {\n        done(v.lastError)\n        return\n    }\n\n    if (!v.order(order, \"argument 2, 'order'\")) {\n        done(v.lastError)\n        return\n    }\n\n    const client = this._client\n    const isCaseSensitive = false\n\n    getLoader(client).load('searchByValue', (err, sha) => {\n        if (err) {\n            done(err)\n            return\n        }\n\n        client.evalsha(\n            sha,\n            0,\n            this._keyPrefix,\n            isCaseSensitive,\n            MEMBER_SEPARATOR,\n            value,\n            order,\n            (err, reply) => {\n                if (err) {\n                    done(err)\n                    return\n                }\n\n                // TODO: move to constructor\n                const transform = isCaseSensitive\n                   ? r => {\n                          const [value, createdAt, entityId] = r.split(MEMBER_SEPARATOR)\n                          return createEvent(NULL_CHARACTER, entityId, value, createdAt)\n                      }\n                    : r => {\n                          const [createdAt, entityId, value] = r.split(MEMBER_SEPARATOR).slice(1)\n                          return createEvent(NULL_CHARACTER, entityId, value, createdAt)\n                      }\n\n                done(null, reply.map(transform))\n            }\n        )\n    })\n}\n",
  "@import \"./PageHeader-common.css\";\n\n\n\n",
  "import type { Adapter, CanHandle, ParseRequest, BuildResponse } from '../types';\n\nconst target = 'Simple JSON (default)';\n\nconst canHandle: CanHandle = (request) => {\n  const { intent } = request;\n  return!!intent;\n};\n\nconst parseRequest: ParseRequest = (request) => {\n  const { intent, parameters, user, queryText, sessionId, locale = 'en-US' } = request;\n  return {\n    orginalRequest: request,\n    intent,\n    parameters: parameters || {},\n    target,\n    locale,\n    user,\n    queryText,\n    sessionId,\n  };\n};\n\nconst buildResponse: BuildResponse = (conversation) => ({\n ...conversation.response,\n});\n\nconst SimpleJSON: Adapter = {\n  target,\n  canHandle,\n  parseRequest,\n  buildResponse,\n};\n\nexport { SimpleJSON };\n",
  "// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n// MtabWatcherLinux implementation.\n\n#include \"components/storage_monitor/mtab_watcher_linux.h\"\n\n#include <mntent.h>\n#include <stddef.h>\n#include <stdio.h>\n\n#include \"base/bind.h\"\n#include \"base/macros.h\"\n#include \"content/public/browser/browser_thread.h\"\n\nnamespace {\n\n// List of file systems we care about.\nconst char* const kKnownFileSystems[] = {\n  \"btrfs\",\n  \"ext2\",\n  \"ext3\",\n  \"ext4\",\n  \"fat\",\n  \"hfsplus\",\n  \"iso9660\",\n  \"msdos\",\n  \"ntfs\",\n  \"udf\",\n  \"vfat\",\n};\n\n}  // namespace\n\nnamespace storage_monitor {\n\nMtabWatcherLinux::MtabWatcherLinux(const base::FilePath& mtab_path,\n                                   base::WeakPtr<Delegate> delegate)\n    : mtab_path_(mtab_path),\n      delegate_(delegate),\n      weak_ptr_factory_(this) {\n  DCHECK_CURRENTLY_ON(content::BrowserThread::FILE);\n  bool ret = file_watcher_.Watch(\n      mtab_path_, false,\n      base::Bind(&MtabWatcherLinux::OnFilePathChanged,\n                 weak_ptr_factory_.GetWeakPtr()));\n  if (!ret) {\n    LOG(ERROR) << \"Adding watch for \" << mtab_path_.value() << \" failed\";\n    return;\n  }\n\n  ReadMtab();\n}\n\nMtabWatcherLinux::~MtabWatcherLinux() {\n  DCHECK_CURRENTLY_ON(content::BrowserThread::FILE);\n}\n\nvoid MtabWatcherLinux::ReadMtab() const {\n  DCHECK_CURRENTLY_ON(content::BrowserThread::FILE);\n\n  FILE* fp = setmntent(mtab_path_.value().c_str(), \"r\");\n  if (!fp)\n    return;\n\n  MountPointDeviceMap device_map;\n  mntent entry;\n  char buf[512];\n\n  // We return the same device mounted to multiple locations, but hide\n  // devices that have been mounted over.\n  while (getmntent_r(fp, &entry, buf, sizeof(buf))) {\n    // We only care about real file systems.\n    for (size_t i = 0; i < arraysize(kKnownFileSystems); ++i) {\n      if (strcmp(kKnownFileSystems[i], entry.mnt_type) == 0) {\n        device_map[base::FilePath(entry.mnt_dir)] =\n            base::FilePath(entry.mnt_fsname);\n        break;\n      }\n    }\n  }\n  endmntent(fp);\n\n  content::BrowserThread::PostTask(\n      content::BrowserThread::UI, FROM_HERE,\n      base::Bind(&Delegate::UpdateMtab, delegate_, device_map));\n}\n\nvoid MtabWatcherLinux::OnFilePathChanged(\n    const base::FilePath& path, bool error) {\n  DCHECK_CURRENTLY_ON(content::BrowserThread::FILE);\n\n  if (path!= mtab_path_) {\n    // This cannot happen unless FilePathWatcher is buggy. Just ignore this\n    // notification and do nothing.\n    NOTREACHED();\n    return;\n  }\n  if (error) {\n    LOG(ERROR) << \"Error watching \" << mtab_path_.value();\n    return;\n  }\n\n  ReadMtab();\n}\n\n}  // namespace storage_monitor\n",
  "package com.example.mytictok.activity;\n\nimport androidx.fragment.app.Fragment;\nimport androidx.viewpager.widget.ViewPager;\n\nimport com.androidkun.xtablayout.XTabLayout;\nimport com.example.mytictok.R;\nimport com.example.mytictok.adapter.CommPagerAdapter;\nimport com.example.mytictok.base.BaseActivity;\nimport com.example.mytictok.fragment.FansFragment;\n\n\nimport java.util.ArrayList;\n\nimport butterknife.BindView;\n\n\npublic class FocusActivity extends BaseActivity {\n    @BindView(R.id.tablayout)\n    XTabLayout tabLayout;\n    @BindView(R.id.viewpager)\n    ViewPager viewPager;\n    private ArrayList<Fragment> fragments = new ArrayList<>();\n    private CommPagerAdapter pagerAdapter;\n    private String[] titles = new String[] {\"\u5173\u6ce8 128\", \"\u7c89\u4e1d 128\", \"\u63a8\u8350\u5173\u6ce8\"};\n\n    @Override\n    protected int setLayoutId() {\n        return R.layout.activity_focus;\n    }\n\n    @Override\n    protected void init() {\n\n        for (int i=0;i<titles.length;i++) {\n            fragments.add(new FansFragment());\n            tabLayout.addTab(tabLayout.newTab().setText(titles[i]));\n        }\n\n        pagerAdapter = new CommPagerAdapter(getSupportFragmentManager(), fragments, titles);\n        viewPager.setAdapter(pagerAdapter);\n        tabLayout.setupWithViewPager(viewPager);\n    }\n}\n",
  "# go-awesome",
  "\"\"\"Classes and functions for the human interface for the Driver Assistant  env.\n\nThe human interface is designed to allow a human user manually control\nthe assistant system. This includes modifying the signal sent to the\ndriver (i.e. 'x', 'y', 'vx', 'vy') as well as the recommended\nacceleratio and steering.\n\nSpecifically, at each step the human controlled assistant will send\nsignals and recommendations that equal to the observed values\n(in the case of the signals) or 0.0 (in case of the recommendations)\nplus the offset specified by the human user.\n\nThe offset for each parameter: 'x', 'y', 'vx', 'vy' can be increased or\ndeacresed using the following keys:\n\n  parameter    increase   decrease\n-----------------------------------\n     'x'           Q         A\n     'y'           W         S\n     'v            E         D\n     'vy'          R         F\n'acceleration'   Right      Left\n 'steering'       Up       Down\n\nWhere Right, Left, Up, Down correspond to the arrow keys on the\nkeyboard.\n\"\"\"\nimport os.path as osp\nfrom typing import TYPE_CHECKING, Tuple, List, Optional\n\nimport numpy as np\nimport pygame as pg\n\nfrom highway_env.road.graphics import WorldSurface\nfrom highway_env.envs.common.graphics import EnvViewer\n\nfrom bdgym.envs.driver_assistant.action import (\n    AssistantContinuousAction,\n    AssistantContinuousOffsetAction,\n    AssistantDiscreteAction\n)\n\nif TYPE_CHECKING:\n    from bdgym.envs.driver_assistant.env import DriverAssistantEnv\n\n\nclass DriverAssistantEnvViewer(EnvViewer):\n    \"\"\"A viewer to render a Driver Assistant environment \"\"\"\n\n    def __init__(self,\n                 env: 'DriverAssistantEnv',\n                 save_images: bool = False,\n                 save_directory: Optional[str] = None):\n        super().__init__(env)\n        # Set class variable to false to ensure image saving is handled\n        # by this class not the parent EnvViewer class\n        # it's a bit of a hack, but its the simplest way to achieve this\n        self.SAVE_IMAGES = False\n        self.save_images = save_images\n        self.directory = save_directory\n\n    def display(self) -> None:\n        super().display()\n\n        if self.save_images and self.directory:\n            frame_num_str = \"0\"*(6-len(str(self.frame))) + str(self.frame)\n            pg.image.save(\n                self.screen,\n                osp.join(self.directory, f\"frame_{frame_num_str}.png\")\n            )\n            self.frame += 1\n\n    def handle_events(self) -> None:\n        \"\"\"Overrides parent.\"\"\"\n        if self.env.config[\"manual_control\"]:\n            # All events handled by\n            # bdgym.envs.driver_assistant.manual_control.AssistantEventHandler\n            return\n        super().handle_events()\n\n\nclass AssistantActionDisplayer:\n    \"\"\"A callable class for displaying the Assistant's actions in viewer \"\"\"\n\n    IGNORE_FEATURES = ['presence']\n\n    def __init__(self, env: 'DriverAssistantEnv'):\n        self.env = env\n        self.font = pg.font.Font(None, 26)\n        self.surface = pg.Surface(\n            (self.env.config[\"screen_width\"], self.env.config[\"screen_height\"])\n        )\n        self.width = self.surface.get_width()\n        self.height = self.surface.get_height()\n\n        # Display for what the Assistant Observes\n        self.assistant_obs_parameters = []\n        self.obs_ignore_idxs = []\n        for i, f in enumerate(self.env.config['observation']['features']):\n            if f not in self.IGNORE_FEATURES:\n                self.assistant_obs_parameters.append(f)\n            else:\n                self.obs_ignore_idxs.append(i)\n\n        self.assistant_display = DashboardDisplay(\n            \"Assistant Observation\",\n            self.surface,\n            width=self.width,\n            height=self.height // 3,\n            position=(0, 0),\n            parameters=self.assistant_obs_parameters\n        )\n\n        # Display for the current Assistant action\n        self.assistant_action = DashboardDisplay(\n            \"Assistant Action\",\n            self.surface,\n            width=self.width,\n            height=self.height // 3,\n            position=(0, self.height // 3),\n            parameters=list(AssistantContinuousAction.ASSISTANT_ACTION_INDICES)\n        )\n\n        # Display for what the Driver Observes\n        self.driver_display = DashboardDisplay(\n            \"Driver observation\",\n            self.surface,\n            width=self.width,\n            height=self.height // 3,\n            position=(0, 2*(self.height // 3)),\n            parameters=list(AssistantContinuousAction.ASSISTANT_ACTION_INDICES)\n        )\n\n    def _get_assistant_action_title(self):\n        assistant_action_type = self.env.action_type.assistant_action_type\n        if isinstance(assistant_action_type, AssistantContinuousAction):\n            return (\n                \"Assistant Action (Driver observation & action recommendation)\"\n            )\n        if isinstance(\n                assistant_action_type,\n                (AssistantContinuousOffsetAction, AssistantDiscreteAction)\n        ):\n            return (\n                \"Current Offsets applied to Driver observation & \"\n                \"recommendation\"\n            )\n        raise ValueError(\n            \"Unsupported Assistant Action Type for Assistant action display: \"\n            f\"{assistant_action_type}. Either use supported action type or \"\n            \"disable action display with the 'action_display' environment \"\n            \"configuration parameter\"\n        )\n\n    def _get_assistant_ego_obs(self) -> np.ndarray:\n        raw_obs = self.env.last_assistant_obs[\n            self.env.observation_type.ASSISTANT_EGO_ROW\n        ]\n        obs = []\n        for i in range(raw_obs.shape[0]):\n            if i not in self.obs_ignore_idxs:\n                obs.append(raw_obs[i])\n        return np.array(obs)\n\n    def _get_assistant_action(self) -> np.ndarray:\n        assistant_action_type = self.env.action_type.assistant_action_type\n        if isinstance(assistant_action_type, AssistantContinuousAction):\n            return assistant_action_type.last_action\n        if isinstance(assistant_action_type, AssistantContinuousOffsetAction):\n            return np.zeros(len(self.assistant_obs_parameters))\n        if isinstance(assistant_action_type, AssistantDiscreteAction):\n            current_offset = assistant_action_type.current_offset\n            last_action = assistant_action_type.last_action\n            return np.concatenate([current_offset, last_action[4:]])\n\n        raise ValueError(\n            \"Unsupported Assistant Action Type for Assistant action display: \"\n            f\"{assistant_action_type}. Either use supported action type or \"\n            \"disable action display with the 'action_display' environment \"\n            \"configuration parameter\"\n        )\n\n    def _get_driver_obs(self) -> np.ndarray:\n        assistant_action_type = self.env.action_type.assistant_action_type\n        return assistant_action_type.last_action\n\n    def __call__(self,\n                 agent_surface: pg.Surface,\n                 sim_surface: WorldSurface) -> None:\n        \"\"\"Draws the assistants last action on agent_surface \"\"\"\n        assistant_obs = self._get_assistant_ego_obs()\n        assistant_action = self._get_assistant_action()\n        driver_obs = self._get_driver_obs()\n\n        self.assistant_display.display(assistant_obs)\n        self.assistant_action.display(assistant_action)\n        self.driver_display.display(driver_obs)\n\n        agent_surface.blit(self.surface, (0, 0))\n\n    def render_text(self,\n                    surface: pg.Surface,\n                    pos: Tuple[float, float],\n                    text: str,\n                    color: Tuple[int, int, int],\n                    bgcolor: Tuple[int, int, int]) -> Tuple[float, float]:\n        \"\"\"Render text",
  "package sample\n\nimport (\n\t\"math/rand\"\n\t\"strings\"\n\n\t\"github.com/honeycombio/refinery/config\"\n\t\"github.com/honeycombio/refinery/logger\"\n\t\"github.com/honeycombio/refinery/metrics\"\n\t\"github.com/honeycombio/refinery/types\"\n)\n\ntype RulesBasedSampler struct {\n\tConfig  *config.RulesBasedSamplerConfig\n\tLogger  logger.Logger\n\tMetrics metrics.Metrics\n}\n\nfunc (s *RulesBasedSampler) Start() error {\n\ts.Logger.Debug().Logf(\"Starting RulesBasedSampler\")\n\tdefer func() { s.Logger.Debug().Logf(\"Finished starting RulesBasedSampler\") }()\n\n\ts.Metrics.Register(\"rulessampler_num_dropped\", \"counter\")\n\ts.Metrics.Register(\"rulessampler_num_kept\", \"counter\")\n\ts.Metrics.Register(\"rulessampler_sample_rate\", \"histogram\")\n\n\treturn nil\n}\n\nfunc (s *RulesBasedSampler) GetSampleRate(trace *types.Trace) (rate uint, keep bool) {\n\tlogger := s.Logger.Debug().WithFields(map[string]interface{}{\n\t\t\"trace_id\": trace.TraceID,\n\t})\n\n\tfor _, rule := range s.Config.Rule {\n\t\tvar matched int\n\t\trate := uint(rule.SampleRate)\n\t\tkeep :=!rule.Drop && rule.SampleRate > 0 && rand.Intn(rule.SampleRate) == 0\n\n\t\t// no condition signifies the default\n\t\tif rule.Condition == nil {\n\t\t\ts.Metrics.Histogram(\"rulessampler_sample_rate\", float64(rule.SampleRate))\n\t\t\tif keep {\n\t\t\t\ts.Metrics.IncrementCounter(\"rulessampler_num_kept\")\n\t\t\t} else {\n\t\t\t\ts.Metrics.IncrementCounter(\"dynsampler_num_dropped\")\n\t\t\t}\n\t\t\tlogger.WithFields(map[string]interface{}{\n\t\t\t\t\"rate\":      rate,\n\t\t\t\t\"keep\":      keep,\n\t\t\t\t\"drop_rule\": rule.Drop,\n\t\t\t}).Logf(\"got sample rate and decision\")\n\t\t\treturn rate, keep\n\t\t}\n\n\t\tfor _, condition := range rule.Condition {\n\t\tspan:\n\t\t\tfor _, span := range trace.GetSpans() {\n\t\t\t\tvar match bool\n\t\t\t\tvalue, exists := span.Data[condition.Field]\n\n\t\t\t\tswitch exists {\n\t\t\t\tcase true:\n\t\t\t\t\tswitch condition.Operator {\n\t\t\t\t\tcase \"exists\":\n\t\t\t\t\t\tmatch = exists\n\t\t\t\t\tcase \"!=\":\n\t\t\t\t\t\tif comparison, ok := compare(value, condition.Value); ok {\n\t\t\t\t\t\t\tmatch = comparison!= equal\n\t\t\t\t\t\t}\n\t\t\t\t\tcase \"=\":\n\t\t\t\t\t\tif comparison, ok := compare(value, condition.Value); ok {\n\t\t\t\t\t\t\tmatch = comparison == equal\n\t\t\t\t\t\t}\n\t\t\t\t\tcase \">\":\n\t\t\t\t\t\tif comparison, ok := compare(value, condition.Value); ok {\n\t\t\t\t\t\t\tmatch = comparison == more\n\t\t\t\t\t\t}\n\t\t\t\t\tcase \">=\":\n\t\t\t\t\t\tif comparison, ok := compare(value, condition.Value); ok {\n\t\t\t\t\t\t\tmatch = comparison == more || comparison == equal\n\t\t\t\t\t\t}\n\t\t\t\t\tcase \"<\":\n\t\t\t\t\t\tif comparison, ok := compare(value, condition.Value); ok {\n\t\t\t\t\t\t\tmatch = comparison == less\n\t\t\t\t\t\t}\n\t\t\t\t\tcase \"<=\":\n\t\t\t\t\t\tif comparison, ok := compare(value, condition.Value); ok {\n\t\t\t\t\t\t\tmatch = comparison == less || comparison == equal\n\t\t\t\t\t\t}\n\t\t\t\t\tcase \"starts-with\":\n\t\t\t\t\t\tswitch a := value.(type) {\n\t\t\t\t\t\tcase string:\n\t\t\t\t\t\t\tswitch b := condition.Value.(type) {\n\t\t\t\t\t\t\tcase string:\n\t\t\t\t\t\t\t\tmatch = strings.HasPrefix(a, b)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\tcase \"contains\":\n\t\t\t\t\t\tswitch a := value.(type) {\n\t\t\t\t\t\tcase string:\n\t\t\t\t\t\t\tswitch b := condition.Value.(type) {\n\t\t\t\t\t\t\tcase string:\n\t\t\t\t\t\t\t\tmatch = strings.Contains(a, b)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tcase false:\n\t\t\t\t\tswitch condition.Operator {\n\t\t\t\t\tcase \"not-exists\":\n\t\t\t\t\t\tmatch =!exists\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif match {\n\t\t\t\t\tmatched++\n\t\t\t\t\tbreak span\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif matched == len(rule.Condition) {\n\t\t\ts.Metrics.Histogram(\"rulessampler_sample_rate\", float64(rule.SampleRate))\n\t\t\tif keep {\n\t\t\t\ts.Metrics.IncrementCounter(\"rulessampler_num_kept\")\n\t\t\t} else {\n\t\t\t\ts.Metrics.IncrementCounter(\"dynsampler_num_dropped\")\n\t\t\t}\n\t\t\tlogger.WithFields(map[string]interface{}{\n\t\t\t\t\"rate\":      rate,\n\t\t\t\t\"keep\":      keep,\n\t\t\t\t\"drop_rule\": rule.Drop,\n\t\t\t\t\"rule_name\": rule.Name,\n\t\t\t}).Logf(\"got sample rate and decision\")\n\t\t\treturn rate, keep\n\t\t}\n\t}\n\n\treturn 1, true\n}\n\nconst (\n\tless  = -1\n\tequal = 0\n\tmore  = 1\n)\n\nfunc compare(a, b interface{}) (int, bool) {\n\tif a == nil {\n\t\tif b == nil {\n\t\t\treturn equal, true\n\t\t}\n\n\t\treturn less, true\n\t}\n\n\tif b == nil {\n\t\treturn more, true\n\t}\n\n\tswitch at := a.(type) {\n\tcase int64:\n\t\tswitch bt := b.(type) {\n\t\tcase int64:\n\t\t\tswitch {\n\t\t\tcase at < bt:\n\t\t\t\treturn less, true\n\t\t\tcase at > bt:\n\t\t\t\treturn more, true\n\t\t\tdefault:\n\t\t\t\treturn equal, true\n\t\t\t}\n\t\tcase float64:\n\t\t\tf := float64(at)\n\t\t\tswitch {\n\t\t\tcase f < bt:\n\t\t\t\treturn less, true\n\t\t\tcase f > bt:\n\t\t\t\treturn more, true\n\t\t\tdefault:\n\t\t\t\treturn equal, true\n\t\t\t}\n\t\t}\n\tcase float64:\n\t\tswitch bt := b.(type) {\n\t\tcase int64:\n\t\t\tf := float64(bt)\n\t\t\tswitch {\n\t\t\tcase at < f:\n\t\t\t\treturn less, true\n\t\t\tcase at > f:\n\t\t\t\treturn more, true\n\t\t\tdefault:\n\t\t\t\treturn equal, true\n\t\t\t}\n\t\tcase float64:\n\t\t\tswitch {\n\t\t\tcase at < bt:\n\t\t\t\treturn less, true\n\t\t\tcase at > bt:\n\t\t\t\treturn more, true\n\t\t\tdefault:\n\t\t\t\treturn equal, true\n\t\t\t}\n\t\t}\n\tcase bool:\n\t\tswitch bt := b.(type) {\n\t\tcase bool:\n\t\t\tswitch {\n\t\t\tcase!at && bt:\n\t\t\t\treturn less, true\n\t\t\tcase at &&!bt:\n\t\t\t\treturn more, true\n\t\t\tdefault:\n\t\t\t\treturn equal, true\n\t\t\t}\n\t\t}\n\tcase string:\n\t\tswitch bt := b.(type) {\n\t\tcase string:\n\t\t\treturn strings.Compare(at, bt), true\n\t\t}\n\t}\n\n\treturn equal, false\n}\n",
  "package principle.srp.section2;\r\n\r\n/**\r\n * @author cbf4Life cbf4life@126.com\r\n * I'm glad to share my knowledge with you all.\r\n * \u7528\u6237\u7684\u4e1a\u52a1\u5bf9\u8c61\r\n */\r\npublic interface IUserBO {\r\n    //\u8bbe\u7f6e\u7528\u6237\u7684ID\r\n    public void setUserID(String userID);\r\n\r\n    //\u83b7\u5f97\u7528\u6237\u7684ID\r\n    public String getUserID();\r\n\r\n    //\u8bbe\u7f6e\u7528\u6237\u7684\u5bc6\u7801\r\n    public void setPassword(String password);\r\n\r\n    //\u83b7\u5f97\u7528\u6237\u7684\u5bc6\u7801\r\n    public String getPassword();\r\n\r\n    //\u8bbe\u7f6e\u7528\u6237\u7684\u540d\u5b57\r\n    public void setUserName(String userName);\r\n\r\n    //\u83b7\u5f97\u7528\u6237\u7684\u540d\u5b57\r\n    public String getUserName();\r\n}\r\n",
  "* {\r\n    box-sizing: border-box;\r\n    }\r\n\r\n    body{\r\n        font-family: Arial, Helvetica, sans-serif;\r\n        padding: 10px;\r\n        background-color: #F88017;\r\n        margin: 0;\r\n    }\r\n    ul {\r\n        list-style-type: none;\r\n        margin: 0;\r\n        padding: 0;\r\n        overflow: hidden;\r\n        background-color: #333;\r\n    }\r\n\r\n    li {\r\n        float: right;\r\n    }\r\n\r\n    li a {\r\n        display: block;\r\n        color: white;\r\n        text-align: center;\r\n        padding: 14px 16px;\r\n        text-decoration: none;\r\n    }\r\n\r\n    li a:hover {\r\n    background-color: #111;\r\n    }\r\n    li a:hover:not(.active) {\r\n    background-color: #111;\r\n    }\r\n\r\n    li a.active {\r\n    background-color:#110;\r\n    }\r\n\r\n\r\n\r\n/* @media screen and (max-width: 900px) {\r\n        ul{\r\n            width: 100%;\r\n            height: auto;\r\n            position: relative;\r\n            float: left;\r\n            padding: 15px;\r\n        } */\r\n    /* Footer */\r\n    \r\n    \r\n   .content {\r\n    max-width: 480px;\r\n    margin: auto;\r\n    background:\t#F88017;\r\n    padding: 10px;\r\n    }\r\n   .footer {\r\n    padding: 20px;\r\n    text-align: center;\r\n    background:#111;\r\n    margin-top: 20px;\r\n    width: 100%;\r\n    \r\n    }\r\n\r\n    \r\n    input[type=text], select, textarea {\r\n    width: 100%;\r\n    padding: 12px;\r\n    border: 3px solid #ccc;\r\n    border-radius: 14px;\r\n    resize: vertical;\r\n    }\r\n\r\n    input[type=email] {\r\n    width: 100%;\r\n    padding: 12px;\r\n    border: 5px solid #ccc;\r\n    border-radius: 14px;\r\n    resize: vertical;   \r\n    }   \r\n    input[type=password] {\r\n    width: 100%;\r\n    padding: 12px;\r\n    border: 5px solid #ccc;\r\n    border-radius: 14px;\r\n    resize: vertical;\r\n    }\r\n    label {\r\n    padding: 12px 12px 12px 0;\r\n    display: inline-block;\r\n    }\r\n\r\n    input[type=submit] {\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    padding: 18px 20px;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    float: left;\r\n    }\r\n\r\n    input[type=submit]:hover {\r\n    background-color: #45a049;\r\n    }\r\n\r\n   .container {\r\n    border-radius: 5px;\r\n    background-color: #f2f2f2;\r\n    padding: 17px;\r\n    width: 100%;\r\n\r\n    }\r\n\r\n   .col-25 {\r\n    float: left;\r\n    width: 25%;\r\n    margin-top: 6px;\r\n    }\r\n\r\n   .col-75 {\r\n    float: left;\r\n    width: 75%;\r\n    margin-top: 6px;\r\n    }\r\n\r\n/* Clear floats after the columns */\r\n   .row:after {\r\n    content: \"\";\r\n    display: table;\r\n    clear: both;\r\n    }\r\n\r\n/* Responsive layout - when the screen is less than 600px wide, make the two columns stack on top of each other instead of next to each other */\r\n    @media screen and (max-width: 600px) {\r\n       .col-25,.col-75, input[type=submit] {\r\n            width: 100%;\r\n            margin-top: 0;\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 600px){\r\n        li {\r\n            width: 100%;\r\n            position:relative;\r\n            height: auto;\r\n            overflow:auto;\r\n            text-align: center;\r\n            float: none;\r\n        }\r\n        \r\n    }",
  "import'react-loading-skeleton/dist/skeleton.css';\n\nimport { FC } from'react';\nimport Skeleton from'react-loading-skeleton';\n\nimport { Box } from 'design-system';\n\nimport { GridStyled, GridStyledInnerContainer } from './styled';\n\nconst highlightColor = '#68686a';\nconst baseColor = '#c1c1cf';\n\nconst CardLoaderSkeleton: FC = () => {\n  return (\n    <GridStyled item minHeight={350} xs={12} container columnSpacing={2}>\n      <GridStyledInnerContainer item xs={12} flexDirection=\"column\">\n        <Box height={'40%'}>\n          <Skeleton width={'100%'} height={'100%'} baseColor={baseColor} highlightColor={highlightColor} duration={3} />\n        </Box>\n        <Box height={'10%'} mt={3}>\n          <Skeleton width={'100%'} height={'100%'} baseColor={baseColor} highlightColor={highlightColor} duration={3} />\n        </Box>\n        <Box height={'20%'} mt={3}>\n          <Skeleton width={'100%'} height={'100%'} baseColor={baseColor} highlightColor={highlightColor} duration={3} />\n        </Box>\n        <Box height={'10%'} mt={3}>\n          <Skeleton width={'100%'} height={'100%'} baseColor={baseColor} highlightColor={highlightColor} duration={3} />\n        </Box>\n      </GridStyledInnerContainer>\n    </GridStyled>\n  );\n};\n\nexport default CardLoaderSkeleton;\n",
  "\ufeffusing System;\nusing System.Text;\nusing System.Text.RegularExpressions;\nusing i18n.Helpers;\n\nnamespace i18n\n{\n    internal static class Extensions\n    {\n        static readonly Regex m_regex_unescape = new Regex(\"\\\\\\\\[abfnrtv?\\\"'\\\\\\\\]|\\\\\\\\[0-3]?[0-7]{1,2}|\\\\\\\\u[0-9a-fA-F]{4}|.\");\n\n\n        /// <summary>\n        /// Efficiently returns the number of time the specified char appears in the string.\n        /// </summary>\n        public static int CountOfChar(\n            this string str,\n            char ch)\n        {\n            int n = 0;\n            foreach (char ch1 in str) {\n                if (ch1 == ch) {\n                    ++n; }\n            }\n            return n;\n        }\n\n        /// <summary>\n        /// Isolates and returns the character sequence between any first and last quote chars.\n        /// </summary>\n        /// <param name=\"lhs\">Subject string possibly containing a quoted sequence.</param>\n        /// <param name=\"quotechar\">Quote char, defaults to double quotes. May be a string of more than one character.</param>\n        /// <returns>\n        /// Any character sequence contained within the first and last occurence of quotechar.\n        /// Empty string if the first and last occurrence of quotechar are adjacent chars.\n        /// Null if no welformed quoted sequence found.\n        /// </returns>\n        public static string Unquote(this string lhs, string quotechar = \"\\\"\")\n        {\n            int begin = lhs.IndexOf(quotechar);\n            if (begin == -1) {\n                return null; }\n            int end = lhs.LastIndexOf(quotechar);\n            if (end <= begin) {\n                return null; }\n            return lhs.Substring(begin +1, end -begin -1);\n        }\n\n        /// <summary>\n        /// Looks up in the subject string standard C escape sequences and converts them\n        /// to their actual character counterparts.\n        /// </summary>\n        /// <seealso href=\"http://stackoverflow.com/questions/6629020/evaluate-escaped-string/8854626#8854626\"/>\n        public static string Unescape(this string s)\n        {\n            StringBuilder sb = new StringBuilder();\n            MatchCollection mc = m_regex_unescape.Matches(s, 0);\n\n            foreach (Match m in mc) {\n                if (m.Length == 1) {\n                    sb.Append(m.Value);\n                } else {\n                    if (m.Value[1] >= '0' && m.Value[1] <= '7') {\n                        int i = 0;\n\n                        for (int j = 1; j < m.Length; j++) {\n                            i *= 8;\n                            i += m.Value[j] - '0';\n                        }\n\n                        sb.Append((char)i);\n                    } else if (m.Value[1] == 'u') {\n                        int i = 0;\n\n                        for (int j = 2; j < m.Length; j++) {\n                            i *= 16;\n\n                            if (m.Value[j] >= '0' && m.Value[j] <= '9') {\n                                i += m.Value[j] - '0';\n                            } else if (m.Value[j] >= 'A' && m.Value[j] <= 'F') {\n                                i += m.Value[j] - 'A' + 10;\n                            } else if (m.Value[j] >= 'a' && m.Value[j] <= 'a') {\n                                i += m.Value[j] - 'a' + 10;\n                            }\n                        }\n\n                        sb.Append((char)i);\n                    } else {\n                        switch (m.Value[1]) {\n                            case 'a':\n                                sb.Append('\\a');\n                                break;\n                            case 'b':\n                                sb.Append('\\b');\n                                break;\n                            case 'f':\n                                sb.Append('\\f');\n                                break;\n                            case 'n':\n                                sb.Append('\\n');\n                                break;\n                            case 'r':\n                                sb.Append('\\r');\n                                break;\n                            case 't':\n                                sb.Append('\\t');\n                                break;\n                            case 'v':\n                                sb.Append('\\v');\n                                break;\n                            default:\n                                sb.Append(m.Value[1]);\n                                break;\n                        }\n                    }\n                }\n            }\n\n            return sb.ToString();\n        }\n\n        public static void PrependPath(this UriBuilder uriBuilder, string folder)\n        {\n            string s1 = uriBuilder.Path;\n            uriBuilder.Path = \"/\" + folder;\n            if (s1.IsSet() && s1!= \"/\") {\n                uriBuilder.Path += s1; }\n        }\n\n        /// <summary>\n        /// Indicates whether a URI is local to this URI.\n        /// </summary>\n        /// <param name=\"lhs\">An absolute URI.</param>\n        /// <param name=\"rhs\">A relative or absolute URI. A relative 'root' URI should be '/'.</param>\n        /// <returns>\n        /// true if rhs is relative, or it is absolute and addresses the same host as lhs;\n        /// otherwise, false.\n        /// </returns>\n        /// <remarks>\n        /// We consider one uri to be local relative to another if they have an equivalent Authority\n        /// component (host name and any port number).\n        /// </remarks>\n        public static bool IsLocal(this Uri lhs, string rhs)\n        {\n            if (!rhs.IsSet()) {\n                return false; }\n           // If rhs is a valid absolute uri, compare Authority.\n            Uri rhs1;\n            if (Uri.TryCreate(rhs, UriKind.Absolute, out rhs1)) {\n                return String.Equals(lhs.Authority, rhs1.Authority, StringComparison.OrdinalIgnoreCase); }\n           // If rhs is valid relative Uri then treat as local.\n           // NB: this code was based on HttpRequestBase.IsUrlLocalToHost in MVC3 which seems to be broken \n           // now with MVC4.\n            bool isLocal =!rhs.StartsWith(\"http:\", StringComparison.OrdinalIgnoreCase)\n                &&!rhs.StartsWith(\"https:\", StringComparison.OrdinalIgnoreCase)\n                && Uri.IsWellFormedUriString(rhs, UriKind.Relative);\n            return isLocal;\n        }\n    }\n}\n",
  "<!DOCTYPE html>\n\n<html>\n\n<head>\n    {{ partial \"head.html\". }}\n</head>\n\n<body style=\"overflow-x: unset;\">\n    <div class=\"container-fluid\">\n        <div class=\"row d-print-block\">\n            <div class=\"col-12 col-md-3 col-lg-2 bd-sidebar d-print-none\">\n                {{ partial \"notes-header\". }}\n                {{ partial \"notes-sidebar\". }}\n            </div>\n            <div class=\"col-12 col-md-9 col-lg-10 d-print-block\">\n                <div class=\"row d-print-block\">\n                    <main class=\"col-12 col-md-10 col-lg-9 py-md-3 pl-md-5 bd-content d-print-block\" role=\"main\">\n                        <div id=\"title\" class=\"my-4 border-bottom\">\n                            <h2>\n                                {{.Title }}\n                            </h2>\n                            {{ if not.Parent.IsHome }}\n                                <footer>\n                                    {{ with.Params.textbook }}\n                                    <span>\n                                        <i class=\"iconfont icon-book1 mr-2\"></i>\n                                        {{. | markdownify }}\n                                    </span> <br />\n                                    {{ end }}\n                                    {{ with.Params.course }}\n                                    <span>\n                                        <i class=\"iconfont icon-chalkboard-teacher mr-2\"></i>\n                                        {{. | markdownify }}\n                                    </span> <br />\n                                    {{ end }}\n                                    {{ with.Params.version }}\n                                    <span>\n                                        <i class=\"iconfont icon-git mr-2\"></i> \u4fee\u6539\u8bb0\u5f55<br />\n                                        {{ range. }}\n                                        <span style=\"margin-left: 2rem;\">{{.}}</span><br />\n                                        {{ end }}\n                                    </span>\n                                    {{ end }}\n                                </footer>\n                                <br />\n                                {{.Content }}\n                            {{ else }}\n                                {{.Content }}\n                            {{ end }}\n                        </div>\n                        <div id=\"notes-list\" class=\"list-group\">\n                            {{ range.Pages.ByWeight }}\n                            <a class=\"list-group-item\" href=\"{{.RelPermalink }}\">\n                                {{.Title }}\n                                {{ if eq.Kind \"section\" }}\n                                <span class=\"float-right\">{{ len.Pages }} \u7bc7</span>\n                                {{ else }}\n                                <span class=\"float-right\">\n                                    {{ dateFormat.Site.Params.dateformFull.Lastmod.Local }}\n                                </span>\n                                {{ end }}\n                            </a>\n                            {{ end }}\n                        </div>\n                    </main>\n                    <div class=\"d-none d-lg-block col-lg-3 bd-toc d-print-none\">\n                        {{ partial \"notes-func\". }}\n                        {{.TableOfContents }}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <script defer src=\"https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/katex.min.js\" integrity=\"sha384-y23I5Q6l+B6vatafAwxRu/0oK/79VlbSz7Q9aiSZUvyWYIYsd+qj+o24G5ZU2zJz\" crossorigin=\"anonymous\"></script>\n    <script defer src=\"https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/contrib/auto-render.min.js\"\n        integrity=\"sha384-kWPLUVMOks5AQFrykwIup5lo0m3iMkkHrD0uJ4H5cjeGihAutqP0yW0J6dpFiVkI\" crossorigin=\"anonymous\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/jquery@3.4.1/dist/jquery.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/axios@0.19.0/dist/axios.min.js\" integrity=\"sha256-S1J4GVHHDMiirir9qsXWc8ZWw74PHHafpsHp5PXtjTs=\" crossorigin=\"anonymous\"></script>\n    \n    <script>\n        const loadPage = (div, title, link) => {\n            div.append('<h1>' + title + '</h1>');\n            return new Promise((resolve, reject) => {\n                axios.get(link)\n                   .then(res => {\n                        const page = $(res.data);\n                        div.append(page.find('#content'));\n                        resolve();\n                    })\n                   .catch(err => reject(err));\n            });\n        }\n        const printAllNotes = () => {\n            const body = $('body');\n            const title = $('#title').clone().find('a').remove().end().text();\n            const list = $('#notes-list').children();\n            \n            body.children().remove();\n            body.append('<h1 id=\"title\">Loading notes...</h1><hr/>');\n            \n            let pageLoaders = [];\n            $.each(list, (id, anchor) => {\n                console.log(id, anchor);\n                const div = $('<div id=\"page-' + id + '\"></div>');\n                div.appendTo(body);\n                pageLoaders[id] = loadPage(div, anchor.text, anchor.href);\n            });\n\n            Promise.all(pageLoaders)\n               .then(() => {\n                    renderMathInElement(document.body, {\n                        delimiters: [{\n                            left: \"$$\",\n                            right: \"$$\",\n                            display: true\n                        },\n                        {\n                            left: \"\\\\[\",\n                            right: \"\\\\]\",\n                            display: true\n                        },\n                        {\n                            left: \"$\",\n                            right: \"$\",\n                            display: false\n                        },\n                        {\n                            left: \"\\\\(\",\n                            right: \"\\\\)\",\n                            display: false\n                        }]\n                    });\n                    $('#title').text(title);\n                    window.print();\n                    window.location.reload();\n                })\n               .catch(err => {\n                    $('#title').addClass('text-danger');\n                    $('#title').text('Loading failed.');\n                    console.error(err);\n                });\n        }\n    </script>\n</body>\n\n</html>",
  "#!/usr/bin/perl\n\nuse strict;\nuse warnings;\n\nuse Data::Dumper;\n\nuse FindBin;\nuse lib \"$FindBin::RealBin/../../../../perl5\";\n\nuse Unison;\nuse Unison::Schema::Schema;\nuse Unison::Schema::Table;\n\nsub apply_custom_configuration($$$);\n\nour %tables;\nour %custom_table_predicates;\nour %custom_copy_queries;\n\ndo 'pub-rules.pl';\n\n%tables = Unison->new()->get_table_info();\napply_custom_configuration( \\%tables, \\%custom_table_predicates,\n    \\%custom_copy_queries );\n\nforeach my $st (qw( unison.pseq unison.pseq_pannotation unison.pfeature )) {\n\n#  $tables{$st} = Unison::Schema::Table->new('st' => $st ) unless exists $tables{$st};\n    print( \"==== $st:\\n\", $tables{$st}->copy_query(), \"\\n >>======\\n\\n\" );\n}\n\nsub apply_custom_configuration($$$) {\n    my ( $t, $ctp, $ccq ) = @_;\n    my $st;\n    foreach $st ( sort keys %$ccq ) {\n        $t->{$st} = Unison::Schema::Table->new('st' => $st )\n          unless exists $t->{$st};\n        $t->{$st}->{cq} = $ccq->{$st};\n        $t->{$st}->{restricted}++;\n    }\n    foreach $st ( sort keys %$ctp ) {\n        $t->{$st} = Unison::Schema::Table->new('st' => $st )\n          unless exists $t->{$st};\n        for ( my $i = 0 ; $i <= $#{ $ctp->{$st} } ; $i++ ) {\n            $t->{$st}->add_pred( $ctp->{$st}->[$i] );\n        }\n    }\n}\n",
  "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<!-- NewPage -->\n<html lang=\"en\">\n<head>\n<!-- Generated by javadoc (1.8.0_241) on Sun Jan 31 21:59:52 EET 2021 -->\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n<title>JodaDateValidator (Apache Drill Root POM 1.18.0 API)</title>\n<meta name=\"date\" content=\"2021-01-31\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"../../../../../../stylesheet.css\" title=\"Style\">\n<script type=\"text/javascript\" src=\"../../../../../../script.js\"></script>\n</head>\n<body>\n<script type=\"text/javascript\"><!--\n    try {\n        if (location.href.indexOf('is-external=true') == -1) {\n            parent.document.title=\"JodaDateValidator (Apache Drill Root POM 1.18.0 API)\";\n        }\n    }\n    catch(err) {\n    }\n//-->\nvar methods = {\"i0\":9};\nvar tabs = {65535:[\"t0\",\"All Methods\"],1:[\"t1\",\"Static Methods\"],8:[\"t4\",\"Concrete Methods\"]};\nvar altColor = \"altColor\";\nvar rowColor = \"rowColor\";\nvar tableTab = \"tableTab\";\nvar activeTableTab = \"activeTableTab\";\n</script>\n<noscript>\n<div>JavaScript is disabled on your browser.</div>\n</noscript>\n<!-- ========= START OF TOP NAVBAR ======= -->\n<div class=\"topNav\"><a name=\"navbar.top\">\n<!--   -->\n</a>\n<div class=\"skipNav\"><a href=\"#skip.navbar.top\" title=\"Skip navigation links\">Skip navigation links</a></div>\n<a name=\"navbar.top.firstrow\">\n<!--   -->\n</a>\n<ul class=\"navList\" title=\"Navigation\">\n<li><a href=\"../../../../../../overview-summary.html\">Overview</a></li>\n<li><a href=\"package-summary.html\">Package</a></li>\n<li class=\"navBarCell1Rev\">Class</li>\n<li><a href=\"class-use/JodaDateValidator.html\">Use</a></li>\n<li><a href=\"package-tree.html\">Tree</a></li>\n<li><a href=\"../../../../../../deprecated-list.html\">Deprecated</a></li>\n<li><a href=\"../../../../../../index-all.html\">Index</a></li>\n<li><a href=\"../../../../../../help-doc.html\">Help</a></li>\n</ul>\n</div>\n<div class=\"subNav\">\n<ul class=\"navList\">\n<li><a href=\"../../../../../../org/apache/drill/common/expression/fn/FunctionReplacementUtils.html\" title=\"class in org.apache.drill.common.expression.fn\"><span class=\"typeNameLink\">Prev&nbsp;Class</span></a></li>\n<li><a href=\"../../../../../../org/apache/drill/common/expression/fn/JodaDateValidator.PostgresDateTimeConstant.html\" title=\"enum in org.apache.drill.common.expression.fn\"><span class=\"typeNameLink\">Next&nbsp;Class</span></a></li>\n</ul>\n<ul class=\"navList\">\n<li><a href=\"../../../../../../index.html?org/apache/drill/common/expression/fn/JodaDateValidator.html\" target=\"_top\">Frames</a></li>\n<li><a href=\"JodaDateValidator.html\" target=\"_top\">No&nbsp;Frames</a></li>\n</ul>\n<ul class=\"navList\" id=\"allclasses_navbar_top\">\n<li><a href=\"../../../../../../allclasses-noframe.html\">All&nbsp;Classes</a></li>\n</ul>\n<div>\n<script type=\"text/javascript\"><!--\n  allClassesLink = document.getElementById(\"allclasses_navbar_top\");\n  if(window==top) {\n    allClassesLink.style.display = \"block\";\n  }\n  else {\n    allClassesLink.style.display = \"none\";\n  }\n  //-->\n</script>\n</div>\n<div>\n<ul class=\"subNavList\">\n<li>Summary:&nbsp;</li>\n<li><a href=\"#nested.class.summary\">Nested</a>&nbsp;|&nbsp;</li>\n<li><a href=\"#field.summary\">Field</a>&nbsp;|&nbsp;</li>\n<li><a href=\"#constructor.summary\">Constr</a>&nbsp;|&nbsp;</li>\n<li><a href=\"#method.summary\">Method</a></li>\n</ul>\n<ul class=\"subNavList\">\n<li>Detail:&nbsp;</li>\n<li><a href=\"#field.detail\">Field</a>&nbsp;|&nbsp;</li>\n<li><a href=\"#constructor.detail\">Constr</a>&nbsp;|&nbsp;</li>\n<li><a href=\"#method.detail\">Method</a></li>\n</ul>\n</div>\n<a name=\"skip.navbar.top\">\n<!--   -->\n</a></div>\n<!-- ========= END OF TOP NAVBAR ========= -->\n<!-- ======== START OF CLASS DATA ======== -->\n<div class=\"header\">\n<div class=\"subTitle\">org.apache.drill.common.expression.fn</div>\n<h2 title=\"Class JodaDateValidator\" class=\"title\">Class JodaDateValidator</h2>\n</div>\n<div class=\"contentContainer\">\n<ul class=\"inheritance\">\n<li><a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true\" title=\"class or interface in java.lang\">java.lang.Object</a></li>\n<li>\n<ul class=\"inheritance\">\n<li>org.apache.drill.common.expression.fn.JodaDateValidator</li>\n</ul>\n</li>\n</ul>\n<div class=\"description\">\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<hr>\n<br>\n<pre>public class <span class=\"typeNameLabel\">JodaDateValidator</span>\nextends <a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true\" title=\"class or interface in java.lang\">Object</a></pre>\n</li>\n</ul>\n</div>\n<div class=\"summary\">\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<!-- ======== NESTED CLASS SUMMARY ======== -->\n<ul class=\"blockList\">\n<li class=\"blockList\"><a name=\"nested.class.summary\">\n<!--   -->\n</a>\n<h3>Nested Class Summary</h3>\n<table class=\"memberSummary\" border=\"0\" cellpadding=\"3\" cellspacing=\"0\" summary=\"Nested Class Summary table, listing nested classes, and an explanation\">\n<caption><span>Nested Classes</span><span class=\"tabEnd\">&nbsp;</span></caption>\n<tr>\n<th class=\"colFirst\" scope=\"col\">Modifier and Type</th>\n<th class=\"colLast\" scope=\"col\">Class and Description</th>\n</tr>\n<tr class=\"altColor\">\n<td class=\"colFirst\"><code>static class&nbsp;</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../../../../org/apache/drill/common/expression/fn/JodaDateValidator.PostgresDateTimeConstant.html\" title=\"enum in org.apache.drill.common.expression.fn\">JodaDateValidator.PostgresDateTimeConstant</a></span></code>&nbsp;</td>\n</tr>\n</table>\n</li>\n</ul>\n<!-- =========== FIELD SUMMARY =========== -->\n<ul class=\"blockList\">\n<li class=\"blockList\"><a name=\"field.summary\">\n<!--   -->\n</a>\n<h3>Field Summary</h3>\n<table class=\"memberSummary\" border=\"0\" cellpadding=\"3\" cellspacing=\"0\" summary=\"Field Summary table, listing fields, and an explanation\">\n<caption><span>Fields</span><span class=\"tabEnd\">&nbsp;</span></caption>\n<tr>\n<th class=\"colFirst\" scope=\"col\">Modifier and Type</th>\n<th class=\"colLast\" scope=\"col\">Field and Description</th>\n</tr>\n<tr class=\"altColor\">\n<td class=\"colFirst\"><code>static <a href=\"https://docs.oracle.com/",
  "# SNS config (send SMS)\nsns_enabled = 'no' # yes/no\naws_key_id = 'keyId'\naws_secret_key ='secretKey'\naws_region = 'us-east-1' # not all regions support SNS\nphone = '+xxxxxxxxxxx'\n\n# Delegate Names\n# Leave only the networks and delegates that you use!\ndelegates = {\n    'Ark':['name'],\n    'DArk':['name'],\n    'Qredit':['name1','name2']\n}\n\n# Don't change the rest unless you know what you're doing!\n\n# Network APIs\nnodes = {\n    'Ark':'https://api.ark.io/api',\n    'DArk':'https://dapi.ark.io/api',\n    'Qredit':'https://qredit.cloud/api'\n}\n\n# Network Settings [delegates, blocktime]\ndb = {\n    'Ark':[51, 8],\n    'DArk':[51, 8],\n    'Qredit':[51, 8]\n}\n",
  "package br.com.producer.testes;\n\nimport java.io.IOException;\nimport java.net.ConnectException;\nimport java.util.concurrent.TimeoutException;\n\nimport br.com.producer.AppUtils;\nimport br.com.producer.mocks.seeds.JsonExampleSeed;\nimport br.com.producer.sender.IMessageSender;\nimport br.com.producer.sender.MessageSender;\n\npublic class EnviarMensagensFilaTest {\n\n\n\tprivate final static String QUEUE_NAME = \"task_queue\";\n\tprivate final static String HOST_NAME = \"localhost\";\n\t\n\tJsonExampleSeed message = new JsonExampleSeed();\n\t\n\tprivate IMessageSender sender1 = new MessageSender(QUEUE_NAME, HOST_NAME);\n\tprivate MessageSender sender2 = new MessageSender(QUEUE_NAME, HOST_NAME);\n\t\n\tpublic void enviarMensagens() \n\t\t\tthrows ConnectException, IOException, TimeoutException, IllegalArgumentException {\n\t\t// teste 1\n\t\tsender1.send(message.getExemploJson()); \n\t\t\n\t\t// teste 2\n\t\tsender2.setMessage(AppUtils.toJsonObject(\"Testando envio de string como JSON...! \"));\n\t\tsender2.send(); \n\t}\t\n}\n",
  "<html style=\"\" lang=\"en\" class=\"js flexbox fontface\"><head><meta charset=\"utf-8\"><meta content=\"width=device-width, initial-scale=1.0\" name=\"viewport\"><meta content=\"OCaml Scientific and Engineering Computing - Tutorial Book\" name=\"description\"><meta content=\"OCaml, Data Science, Data Analytics, Analytics, Functional Programming, Machine Learning, Deep Neural Network, Scientific Computing, Numerical Algorithm, Tutorial, Linear Algebra, Matrix\" name=\"keywords\"><meta content=\"Liang Wang\" name=\"author\"><title>Statistical Functions - OCaml Scientific Computing</title><link href=\"css/app.css\" rel=\"stylesheet\"><link href=\"css/prism.css\" rel=\"stylesheet\"><script src=\"js/min/modernizr-min.js\"></script><script src=\"js/prism.js\"></script><script src=\"https://use.typekit.net/gfj8wez.js\"></script><script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML\"></script><script>try{Typekit.load();}catch(e){}</script><script data-ad-client=\"ca-pub-1868946892712371\" async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-123353217-1\"></script><script>\n      window.dataLayer = window.dataLayer || [];\n      function gtag(){dataLayer.push(arguments);}\n      gtag('js', new Date());\n      gtag('config', 'UA-123353217-1');</script></head><body><div class=\"title-bar\"><div class=\"title\"><h1>OCaml Scientific Computing</h1><h5>1<sup>st</sup> Edition (in progress)</h5><nav><a href=\"index.html\">Home</a><a href=\"toc.html\">Table of Contents</a><a href=\"faqs.html\">FAQs</a><a href=\"install.html\">Install</a><a href=\"https://ocaml.xyz/package/\">API Docs</a></nav></div></div><div class=\"wrap\"><div class=\"left-column\"><a class=\"to-chapter\" href=\"toc.html\"><small>Back</small><h5>Table of Contents</h5></a></div><article class=\"main-body\"><section class=\"level1\" id=\"statistical-functions\">\n<h1>Statistical Functions</h1>\n<p>Statistics is an indispensable tool for data analysis, it helps us to gain the insights from data. The statistical functions in Owl can be categorised into three groups: descriptive statistics, distributions, and hypothesis tests.</p>\n<section class=\"level2\" id=\"random-variables\">\n<h2>Random Variables</h2>\n<p>We start from assigning probabilities to <em>events</em>. A event may comprise of finite or infinite number of possible outcomes. All possible output make up the <em>sample space</em>. To better capture this assigning processes, we need the idea of <em>Random Variables</em>.</p>\n<p>A random variable is a function that associate sample output of events with some numbers of interests. Imagine the classic tossing coin game, we toss the coin four times, and the result is \u201chead\u201d, \u201chead\u201d, \u201ctail\u201d, \u201chead\u201d. We are interested in the number of \u201chead\u201d in this outcome. So we make a Random Variable \u201cX\u201d to denote this number, and <code>X([\"head\", \"head\", \"tail\", \"head\"]) = 3</code>. You can see that using random variables can greatly reduce the event sample space.</p>\n<p>Depending on the number of values it can be, a random variable can be broadly categorised into <em>Discrete</em> Random Variable (with finite number of possible output), and <em>Continuous</em> Random Variable (with infinite number of possible output).</p>\n<section class=\"level3\" id=\"discrete-random-variables\">\n<h3>Discrete Random Variables</h3>\n<p>Back to the coin tossing example. Suppose that the coin is specially minted so that the probability of tossing head is <span class=\"math inline\">\\(p\\)</span>. In this scenario, we toss for three times. Use the number of heads as a random variable <span class=\"math inline\">\\(X\\)</span>, and it contains four possible outcomes: 0, 1, 2, or 3.</p>\n<p>We can calculate the possibility of each output result. Since each toss is a individual trial, the possibility of three heads <code>P(X=2)</code> is <span class=\"math inline\">\\(p^3\\)</span>. Two heads includes three cases: HHT, HTH, THH, each has a probability of <span class=\"math inline\">\\(p^2(1-p)\\)</span>, and together <span class=\"math inline\">\\(P(X=2) = 3p^2(1-p)\\)</span>. Similarly <span class=\"math inline\">\\(P(X=1)=3p(1-p)^2\\)</span>, and <span class=\"math inline\">\\(P(X=0)=(1-p)^3\\)</span>.</p>\n<p>Formally, consider a series of <span class=\"math inline\">\\(n\\)</span> independent trails, each trail containing two possible results, and the result of interest happens at a possibility of <span class=\"math inline\">\\(p\\)</span>, then the possibility distribution of random variable <span class=\"math inline\">\\(X\\)</span> is (<span class=\"math inline\">\\(X\\)</span> being the number of result of interests):</p>\n<p><span id=\"eq:stats:binomial_pdf\"><span class=\"math display\">\\[P(X=k) = {N\\choose k} p^k(1-p)^{n-k}.\\qquad(1)\\]</span></span></p>\n<p>This type of distribution is called the <em>Binomial Probability Distribution</em>. We can stimulate this process of tossing coins with the <code>Stats.binomial_rvs</code> function. Suppose the probability of tossing head is 0.4, and for 10 times.</p>\n<div class=\"highlight\">\n<pre data-filter-output=\">\" data-prompt=\"#\" class=\"command-line\"><code class=\"language-ocaml\">let _ =\n  let toss = Array.make 10 0 in\n  Array.map (fun _ -&gt; Stats.binomial_rvs 0.3 1) toss\n;;\n&gt;- : int array = [|0; 0; 0; 0; 0; 0; 0; 0; 1; 0|]\n</code></pre>\n</div>\n<p>The equation eq.&nbsp;1 is called the <em>&amp;probability density function</em> (PDF) of this binomial distribution. Formally the PDF of random variable X is denoted with <span class=\"math inline\">\\(p_X(k)\\)</span> and is defined as:</p>\n<p><span class=\"math display\">\\[p_X(k)=P({s \\in S | X(s) = k}),\\]</span></p>\n<p>where <span class=\"math inline\">\\(S\\)</span> is the sample space. This can also be expressed with the code:</p>\n<div class=\"highlight\">\n<pre data-filter-output=\">\" data-prompt=\"#\" class=\"command-line\"><code class=\"language-ocaml\">let x = [|0; 1; 2; 3|];;\n&gt;val x : int array = [|0; 1; 2; 3|]\nlet p = Array.map (Stats.binomial_pdf ~p:0.3 ~n:3) x;;\n&gt;val p : float array =\n&gt;  [|0.342999999999999916; 0.440999999999999837; 0.188999999999999918;\n&gt;    0.0269999999999999823|]\nArray.fold_left (+.) 0. p;;\n&gt;- : float = 0.999999999999999778\n</code></pre>\n</div>\n<p>Aside from the PDF, another related and frequently used idea is to see the probability of random variable <span class=\"math inline\">\\(X\\)</span> being within a certain range: <span class=\"math inline\">\\(P(a \\leq X \\leq b)\\)</span>. It can be rewritten as <span class=\"math inline\">\\(P(X \\leq b) - P(X \\leq a - 1)\\)</span>. Here the term <span class=\"math inline\">\\(P(X \\leq t)\\)</span> is called the <em>Cumulative Distribution Function</em> of random variable <span class=\"math inline",
  "import { TestBed, async } from '@angular/core/testing';\nimport { AppComponent } from './app.component';\nimport { MatomoModule } from 'ngx-matomo';\n\ndescribe('Demo App', () => {\n  beforeEach(async(() => {\n    TestBed.configureTestingModule({\n      imports: [MatomoModule],\n      declarations: [AppComponent]\n    }).compileComponents();\n  }));\n\n  it('should create the app', () => {\n    const fixture = TestBed.createComponent(AppComponent);\n    const app = fixture.debugElement.componentInstance;\n    expect(app).toBeTruthy();\n  });\n\n  it('should render title in a h1 tag', () => {\n    const fixture = TestBed.createComponent(AppComponent);\n    fixture.detectChanges();\n    const compiled = fixture.debugElement.nativeElement;\n    expect(compiled.querySelector('h1').textContent).toContain('Matomo Tracker Test');\n  });\n\n  it(`should have a Matomo injector`, () => {\n    const fixture = TestBed.createComponent(AppComponent);\n    const app = fixture.debugElement.componentInstance;\n    expect(app.matomoInjector).toBeTruthy();\n  });\n\n  it(`should have a Matomo tracker`, () => {\n    const fixture = TestBed.createComponent(AppComponent);\n    const app = fixture.debugElement.componentInstance;\n    expect(app.matomoTracker).toBeTruthy();\n  });\n});\n",
  "//\n//  CGGradientRef.h\n//  HeaderNote\n//\n//  Created by Rhino on 2017/7/26.\n//  Copyright \u00a9 2017\u5e74 Rhino. All rights reserved.\n//\n\n#ifndef CGGradientRef_h\n#define CGGradientRef_h\n\n\n\n//\u6e10\u53d8\n#ifndef CGGRADIENT_H_\n#define CGGRADIENT_H_\n\n#include <CoreFoundation/CFBase.h>\n#include <CoreFoundation/CFAvailability.h>\n#include <stdint.h>\n\ntypedef struct CF_BRIDGED_TYPE(id) CGGradient *CGGradientRef;\n\ntypedef CF_OPTIONS (uint32_t, CGGradientDrawingOptions) {\n    //\u6269\u5c55\u586b\u5145\u8d77\u59cb\u70b9\u4e4b\u524d\u7684\u533a\u57df\n    kCGGradientDrawsBeforeStartLocation = (1 << 0),\n    //\u6269\u5c55\u586b\u5145\u7ed3\u675f\u70b9\u4e4b\u540e\u7684\u533a\u57df\n    kCGGradientDrawsAfterEndLocation = (1 << 1)\n};\n\n#include <CoreGraphics/CGBase.h>\n#include <CoreGraphics/CGColorSpace.h>\n#include <CoreGraphics/CGContext.h>\n\nCF_IMPLICIT_BRIDGING_ENABLED\n\nCF_ASSUME_NONNULL_BEGIN\n\n/* A CGGradient defines a transition between colors. The transition is\n defined over a range from 0 to 1 inclusive. A gradient specifies a color\n at location 0, one at location 1, and possibly additional colors assigned\n to locations between 0 and 1.\n \n A CGGradient has a color space. When a gradient is created, all colors\n specified are converted to that color space, and interpolation of colors\n occurs using the components of that color space. See the documentation of\n each creation function for more details. */\n\n/* Return the CFTypeID for CGGradients. */\n\nCG_EXTERN CFTypeID CGGradientGetTypeID(void)\nCG_AVAILABLE_STARTING(__MAC_10_5, __IPHONE_2_0);\n\n/* Creates a gradient by pairing the color components provided in\n `components' with locations provided in `locations'. If `locations' is\n NULL, the first color in `colors' will be at location 0, the last color\n in `colors' will be at location 1, and intervening colors will be at\n equal intervals in between. Otherwise, each location in `locations'\n should be a CGFloat between 0 and 1. Each set of color components should\n specify a color in the color space `space' (which may not be a pattern or\n indexed color space). The number of locations is specified by `count';\n the number of color components is the product of `count' and the number\n of color components of `space'. If no color is provided for 0 or 1, the\n gradient will use the color provided at the locations closest to 0 and 1\n for those values. */\n\n//\u521b\u5efa\u6e10\u53d8\u5bf9\u8c61\n//\u53c2\u65701:\u989c\u8272\u7a7a\u95f4(RGB,CMYK,YUV,Gray...)\n//\u53c2\u65702:\u6570\u7ec4,\u6839\u636e\u4e0d\u540c\u7684\u989c\u8272\u7a7a\u95f4\u8bbe\u7f6e\u591a\u79cd\u989c\u8272\n//\u53c2\u65703:\u6570\u7ec4,\u6307\u5b9a\u4e2a\u989c\u8272\u70b9\u7684\u5206\u5e03\u4f4d\u7f6e,\u5982\u679c\u6307\u5b9aNULL,\u5404\u989c\u8272\u70b9\u4f1a\u5747\u5300\u5206\u5e03\n//\u53c2\u65704:\u6307\u5b9a\u8be5\u6e10\u53d8\u5305\u542b\u591a\u5c11\u79cd\u989c\u8272.\nCG_EXTERN CGGradientRef __nullable CGGradientCreateWithColorComponents(\n                                                                       CGColorSpaceRef cg_nullable space, const CGFloat * cg_nullable components,\n                                                                       const CGFloat * __nullable locations, size_t count)\nCG_AVAILABLE_STARTING(__MAC_10_5, __IPHONE_2_0);\n\n/* Creates a gradient by pairing the colors provided in `colors' with the\n locations provided in `locations'. `colors' should be a non-empty array\n of CGColor objects. The colors may be in any color space other than a\n pattern or indexed color space. If `space' is non-NULL, each color will\n be converted to that color space and the gradient will drawn in that\n space; otherwise, each color will be converted to and drawn in the\n \"Generic\" RGB color space. If `space' is specified, it may not be a\n pattern or indexed color space. If `locations' is NULL, the first color\n in `colors' will be at location 0, the last color in `colors' will be at\n location 1, and intervening colors will be at equal intervals in between.\n Otherwise, each location in `locations' should be a CGFloat between 0 and\n 1; the array of locations should should contain the same number of items\n as `colors'. If no color is provided for 0 or 1, the gradient will use\n the color provided at the locations closest to 0 and 1 for those\n values. */\n\nCG_EXTERN CGGradientRef __nullable CGGradientCreateWithColors(\n                                                              CGColorSpaceRef __nullable space, CFArrayRef cg_nullable colors,\n                                                              const CGFloat * __nullable locations)\nCG_AVAILABLE_STARTING(__MAC_10_5, __IPHONE_2_0);\n\n/* Equivalent to `CFRetain' except that it doesn't crash (as `CFRetain'\n does) if `gradient' is NULL. */\n\nCG_EXTERN CGGradientRef cg_nullable CGGradientRetain(\n                                                     CGGradientRef cg_nullable gradient)\nCG_AVAILABLE_STARTING(__MAC_10_5, __IPHONE_2_0);\n\n/* Equivalent to `CFRelease' except that it doesn't crash (as `CFRelease'\n does) if `gradient' is NULL. */\n\nCG_EXTERN void CGGradientRelease(CGGradientRef cg_nullable gradient)\nCG_AVAILABLE_STARTING(__MAC_10_5, __IPHONE_2_0);\n\nCF_ASSUME_NONNULL_END\n\nCF_IMPLICIT_BRIDGING_DISABLED\n\n#endif /* CGGRADIENT_H_ */\n\n\n\n\n#endif /* CGGradientRef_h */\n",
  "// Copyright (c) Imazen LLC.\n// No part of this project, including this file, may be copied, modified,\n// propagated, or distributed except as permitted in COPYRIGHT.txt.\n// Licensed under the GNU Affero General Public License, Version 3.0.\n// Commercial licenses available at http://imageresizing.net/\n\ufeffusing ImageResizer.Configuration;\nusing ImageResizer.Configuration.Logging;\nusing ImageResizer.ExtensionMethods;\nusing ImageResizer.Plugins.DiskCache;\nusing ImageResizer.Util;\nusing System;\nusing System.Collections.Generic;\nusing System.Collections.Specialized;\nusing System.IO;\nusing System.Security;\nusing System.Security.Permissions;\nusing System.Text;\nusing System.Threading.Tasks;\nusing System.Web;\nusing System.Web.Hosting;\n\nnamespace ImageResizer.Plugins.SourceDiskCache\n{\n    /// <summary>\n    /// Like DiskCache, but for source files. Not advisable if your source image collection is larger than available local storage.\n    /// </summary>\n    public class SourceDiskCachePlugin : IVirtualFileCache, IPlugin, ILoggerProvider, IVirtualFileCacheAsync, ILicensedPlugin\n    {\n        /// <summary>\n        /// Creates a new instance of SourceDiskCache\n        /// </summary>\n        public SourceDiskCachePlugin() { }\n\n        protected string virtualDir = HostingEnvironment.ApplicationVirtualPath.TrimEnd('/') + \"/cache/sourceimages\";\n        /// <summary>\n        /// Sets the location of the cache directory. \n        /// Can be a virtual path (like /App/imagecache) or an application-relative path (like ~/imagecache, the default).\n        /// Relative paths are assummed to be relative to the application root.\n        /// All values are converted to virtual path format upon assignment (/App/imagecache)\n        /// Will throw an InvalidOperationException if changed after the plugin is installed.\n        /// </summary>\n        public string VirtualCacheDir\n        {\n            get\n            {\n                return virtualDir;\n            }\n            set\n            {\n                BeforeSettingChanged();\n                //Default to application-relative path if no leading slash is present. \n                //Resolve the tilde if present.\n                virtualDir = string.IsNullOrEmpty(value)? null : PathUtils.ResolveAppRelativeAssumeAppRelative(value);\n            }\n        }\n        /// <summary>\n        /// Returns the physical path of the cache directory specified in VirtualCacheDir.\n        /// </summary>\n        public string PhysicalCacheDir\n        {\n            get\n            {\n                if (!string.IsNullOrEmpty(VirtualCacheDir)) return HostingEnvironment.MapPath(VirtualCacheDir);\n                return null;\n            }\n        }\n        /// <summary>\n        /// Throws an exception if the class is already modified\n        /// </summary>\n        protected void BeforeSettingChanged()\n        {\n            if (_started) throw new InvalidOperationException(\"SourceDiskCache settings may not be adjusted after it is started.\");\n        }\n        \n        \n        protected CustomDiskCache cache = null;\n        protected AsyncCustomDiskCache asyncCache = null;\n        protected CleanupManager cleaner = null;\n        protected WebConfigWriter writer = null;\n\n        protected readonly object _startSync = new object();\n        protected volatile bool _started = false;\n        /// <summary>\n        /// Returns true if the DiskCache instance is operational.\n        /// </summary>\n        public bool Started { get { return _started; } }\n\n        public IVirtualFile GetFileIfCached(string virtualPath, System.Collections.Specialized.NameValueCollection queryString, IVirtualFile original)\n        {\n            if (!\"disk\".Equals(queryString[\"scache\"], StringComparison.OrdinalIgnoreCase)) return null;\n            if (this.AsyncModuleMode) throw new InvalidOperationException(\"SourceDiskCache cannot be used in synchronous mode if AsyncModuleMode=true\");\n            \n\n            //Verify web.config exists in the cache folder.\n            writer.CheckWebConfigEvery5();\n\n            //Use alternate cache key if provided\n            string key = original is IVirtualFileSourceCacheKey? ((IVirtualFileSourceCacheKey)original).GetCacheKey(false) : original.VirtualPath;\n            //If cached, serve it. \n            \n            var r = cache.GetCachedFile(key, \".cache\", delegate(Stream target)\n             {\n                 using (Stream data = original.Open())\n                 {//Very long-running call\n                     data.CopyToStream(target);\n                 }\n             }, 15 * 1000, true);\n           \n            if (r.Result == CacheQueryResult.Failed)\n                return null;\n\n            if (r.Result == CacheQueryResult.Hit && cleaner!= null)\n                cleaner.UsedFile(r.RelativePath, r.PhysicalPath);\n\n\n            return new SourceVirtualFile(original.VirtualPath,delegate(){\n                return r.Data?? File.Open(r.PhysicalPath, FileMode.Open, FileAccess.Read, FileShare.Read);\n            });\n        }\n\n\n\n        public async Task<IVirtualFileAsync> GetFileIfCachedAsync(string virtualPath, NameValueCollection queryString, IVirtualFileAsync original)\n        {\n            if (!\"disk\".Equals(queryString[\"scache\"], StringComparison.OrdinalIgnoreCase)) return null;\n            if (!this.AsyncModuleMode) throw new InvalidOperationException(\"SourceDiskCache cannot be used in asynchronous mode if AsyncModuleMode=false\");\n            \n\n            //Verify web.config exists in the cache folder.\n            writer.CheckWebConfigEvery5();\n\n            //Use alternate cache key if provided\n            string key = original is IVirtualFileSourceCacheKey? ((IVirtualFileSourceCacheKey)original).GetCacheKey(false) : original.VirtualPath;\n            //If cached, serve it. \n            var r = await asyncCache.GetCachedFile(key, \".cache\", async delegate(Stream target)\n            {\n                using (Stream data = await original.OpenAsync())\n                {//Very long-running call\n                    await data.CopyToAsync(target);\n                }\n            }, 15 * 1000, true);\n\n            if (r.Result == CacheQueryResult.Failed)\n                return null;\n\n            if (r.Result == CacheQueryResult.Hit && cleaner!= null)\n                cleaner.UsedFile(r.RelativePath, r.PhysicalPath);\n\n\n            return new SourceVirtualFileAsync(original.VirtualPath, delegate()\n            {\n                return Task.FromResult(r.Data?? File.Open(r.PhysicalPath, FileMode.Open, FileAccess.Read, FileShare.Read));\n            });\n        }\n\n        public class SourceVirtualFile : IVirtualFile\n        {\n            public delegate Stream OpenDelegate();\n            public SourceVirtualFile(string virtualPath, OpenDelegate streamDelegate){\n                this.path = virtualPath;\n                this.stream = streamDelegate;\n            }\n            private string path;\n            public string VirtualPath\n            {\n                get { return path; }\n            }\n\n            private OpenDelegate stream;\n            public Stream Open()\n            {\n                return stream();\n            }\n        }\n\n        public class SourceVirtualFileAsync : IVirtualFileAsync\n        {\n            public delegate Task<Stream> OpenAsyncDelegate();\n            public SourceVirtualFileAsync(string virtualPath, OpenAsyncDelegate streamDelegate)\n            {\n                this.path = virtualPath;\n                this.stream = streamDelegate;\n            }\n            private string path;\n            public string VirtualPath\n            {\n                get { return path; }\n            }\n\n            private OpenAsyncDelegate stream;\n            public Stream Open()\n            {\n                return AsyncUtils.RunSync<Stream>(() => stream());\n            }\n        \n            public Task<Stream> OpenAsync()\n            {\n                return stream();\n            }\n        }\n        \n        protected ILogger log = null;\n        public ILogger Logger { get { return log; } }\n\n        /// <summary>\n        /// Loads the settings from 'c', starts the cache, and registers the plugin.\n        /// Will throw an invalidoperationexception if already started.\n        /// </summary>\n        /// <param name=\"c\"></param>\n        /// <returns></returns>\n        public IPlugin Install(Config c) {\n            \n            bool? inAsyncMode = c.Pipeline.UsingAsyncMode;\n            if (inAsyncMode == null) throw new InvalidOperationException(\"You must set Config.Current.Pipeline.UsingAsyncMode before installing SourceDiskCache\");\n            this.AsyncModuleMode = inAsyncMode.Value;\n\n            if (c.get(\"diskcache.logging\", false)) {\n                if (c.Plugins.LogManager!= null) \n                    log = c.Plugins.LogManager.GetLogger(\"ImageResizer.Plugins.DiskCache\");\n                else \n                    c.Plugins.LoggingAvailable += delegate(ILogManager mgr) {\n                        if (log!= null) log = c",
  "\ufeffusing Xunit;\nusing System;\nusing System.Collections.Specialized;\n\nnamespace WebHDFS.Test\n{\n    public class WebHDFSHttpQueryParameterTests\n    {\n        NameValueCollection getEmptyQuery() {\n            return new NameValueCollection();\n        }\n\n        [Fact]\n        public void TestOp()\n        {\n            var query = getEmptyQuery();\n            WebHDFSHttpQueryParameter.SetOp(query, WebHDFSHttpQueryParameter.Op.CREATE);\n            Assert.Equal(\"CREATE\", query[\"op\"]);\n        }\n\n        [Fact]\n        public void TestOverwrite()\n        {\n            var query = getEmptyQuery();\n            Assert.Equal(query, WebHDFSHttpQueryParameter.SetOverwrite(query, null));\n\n            var queryTrue = getEmptyQuery();\n            WebHDFSHttpQueryParameter.SetOverwrite(queryTrue, true);\n            Assert.Equal(\"true\", queryTrue[\"overwrite\"]);\n\n            var queryFalse = getEmptyQuery();\n            WebHDFSHttpQueryParameter.SetOverwrite(queryFalse, false);\n            Assert.Equal(\"false\", queryFalse[\"overwrite\"]);\n        }\n\n        [Fact]\n        public void TestBlocksize()\n        {\n            var query = getEmptyQuery();\n            Assert.Equal(query, WebHDFSHttpQueryParameter.setBlocksize(query, null));\n\n            query = getEmptyQuery();\n            WebHDFSHttpQueryParameter.setBlocksize(query, 128);\n            Assert.Equal(128.ToString(), query[\"blocksize\"]);\n\n            query = getEmptyQuery();\n            WebHDFSHttpQueryParameter.setBlocksize(query, 512);\n            Assert.Equal(512.ToString(), query[\"blocksize\"]);\n\n            Assert.Throws<ArgumentException>(() => { WebHDFSHttpQueryParameter.setBlocksize(query, 0); });\n        }\n\n        [Fact]\n        public void TestReplication()\n        {\n            var query = getEmptyQuery();\n            Assert.Equal(query, WebHDFSHttpQueryParameter.SetReplication(query, null));\n\n            query = getEmptyQuery();\n            WebHDFSHttpQueryParameter.SetReplication(query, 1);\n            Assert.Equal(1.ToString(), query[\"replication\"]);\n\n            query = getEmptyQuery();\n            WebHDFSHttpQueryParameter.SetReplication(query, 3);\n            Assert.Equal(3.ToString(), query[\"replication\"]);\n        }\n\n        [Fact]\n        public void TestPermission()\n        {\n            var query = getEmptyQuery();\n            Assert.Equal(query, WebHDFSHttpQueryParameter.SetPermission(query, null));\n\n            query = getEmptyQuery();\n            WebHDFSHttpQueryParameter.SetPermission(query, \"1\");\n            Assert.Equal(\"1\", query[\"permission\"]);\n\n            query = getEmptyQuery();\n            WebHDFSHttpQueryParameter.SetPermission(query, \"755\");\n            Assert.Equal(\"755\", query[\"permission\"]);\n\n            Assert.Throws<ArgumentException>(() => { WebHDFSHttpQueryParameter.SetPermission(query, \"800\"); });\n            Assert.Throws<ArgumentException>(() => { WebHDFSHttpQueryParameter.SetPermission(query, \"11111\"); });\n        }\n\n        [Fact]\n        public void TestBuffersize()\n        {\n            var query = getEmptyQuery();\n            Assert.Equal(query, WebHDFSHttpQueryParameter.SetBuffersize(query, null));\n\n            query = getEmptyQuery();\n            WebHDFSHttpQueryParameter.SetBuffersize(query, 1);\n            Assert.Equal(\"1\", query[\"buffersize\"]);\n\n            query = getEmptyQuery();\n            WebHDFSHttpQueryParameter.SetBuffersize(query, 100);\n            Assert.Equal(\"100\", query[\"buffersize\"]);\n\n            Assert.Throws<ArgumentException>(() => { WebHDFSHttpQueryParameter.SetBuffersize(query, 0); });\n            Assert.Throws<ArgumentException>(() => { WebHDFSHttpQueryParameter.SetBuffersize(query, -1); });\n        }\n\n        [Fact]\n        public void TestOffset()\n        {\n            var query = getEmptyQuery();\n            Assert.Equal(query, WebHDFSHttpQueryParameter.SetOffset(query, null));\n\n            query = getEmptyQuery();\n            WebHDFSHttpQueryParameter.SetOffset(query, 0);\n            Assert.Equal(\"0\", query[\"offset\"]);\n\n            query = getEmptyQuery();\n            WebHDFSHttpQueryParameter.SetOffset(query, 1);\n            Assert.Equal(\"1\", query[\"offset\"]);\n\n            query = getEmptyQuery();\n            WebHDFSHttpQueryParameter.SetOffset(query, 100);\n            Assert.Equal(\"100\", query[\"offset\"]);\n\n            Assert.Throws<ArgumentException>(() => { WebHDFSHttpQueryParameter.SetOffset(query, -1); });\n        }\n\n        [Fact]\n        public void TestLength()\n        {\n            var query = getEmptyQuery();\n            Assert.Equal(query, WebHDFSHttpQueryParameter.SetLength(query, null));\n\n            query = getEmptyQuery();\n            WebHDFSHttpQueryParameter.SetLength(query, 0);\n            Assert.Equal(\"0\", query[\"length\"]);\n\n            query = getEmptyQuery();\n            WebHDFSHttpQueryParameter.SetLength(query, 1);\n            Assert.Equal(\"1\", query[\"length\"]);\n\n            query = getEmptyQuery();\n            WebHDFSHttpQueryParameter.SetLength(query, 100);\n            Assert.Equal(\"100\", query[\"length\"]);\n\n            Assert.Throws<ArgumentException>(() => { WebHDFSHttpQueryParameter.SetLength(query, -1); });\n        }\n\n        [Fact]\n        public void TestDestination()\n        {\n            var query = getEmptyQuery();\n            Assert.Equal(query, WebHDFSHttpQueryParameter.SetDestination(query, null));\n\n            query = getEmptyQuery();\n            Assert.Equal(query, WebHDFSHttpQueryParameter.SetDestination(query, \"\"));\n\n            query = getEmptyQuery();\n            WebHDFSHttpQueryParameter.SetDestination(query, \"/abc\");\n            Assert.Equal(\"/abc\", query[\"destination\"]);\n        }\n\n        [Fact]\n        public void TestRecursive()\n        {\n            var query = getEmptyQuery();\n            Assert.Equal(query, WebHDFSHttpQueryParameter.SetRecursive(query, null));\n\n            query = getEmptyQuery();\n            WebHDFSHttpQueryParameter.SetRecursive(query, true);\n            Assert.Equal(\"true\", query[\"recursive\"]);\n\n            query = getEmptyQuery();\n            WebHDFSHttpQueryParameter.SetRecursive(query, false);\n            Assert.Equal(\"false\", query[\"recursive\"]);\n        }\n\n        [Fact]\n        public void TestNewLength()\n        {\n            var query = getEmptyQuery();\n            Assert.Equal(query, WebHDFSHttpQueryParameter.SetNewLength(query, null));\n\n            query = getEmptyQuery();\n            WebHDFSHttpQueryParameter.SetNewLength(query, 0);\n            Assert.Equal(\"0\", query[\"newlength\"]);\n\n            query = getEmptyQuery();\n            WebHDFSHttpQueryParameter.SetNewLength(query, 1);\n            Assert.Equal(\"1\", query[\"newlength\"]);\n\n            query = getEmptyQuery();\n            WebHDFSHttpQueryParameter.SetNewLength(query, 100);\n            Assert.Equal(\"100\", query[\"newlength\"]);\n\n            Assert.Throws<ArgumentException>(() => { WebHDFSHttpQueryParameter.SetNewLength(query, -1); });\n        }\n\n        [Fact]\n        public void TestSources()\n        {\n            var query = getEmptyQuery();\n            Assert.Equal(query, WebHDFSHttpQueryParameter.SetSources(query, null));\n\n            query = getEmptyQuery();\n            Assert.Equal(query, WebHDFSHttpQueryParameter.SetSources(query, \"\"));\n\n            query = getEmptyQuery();\n            WebHDFSHttpQueryParameter.SetSources(query, \"/abc\");\n            Assert.Equal(\"/abc\", query[\"sources\"]);\n\n            query = getEmptyQuery();\n            WebHDFSHttpQueryParameter.SetSources(query, \"/abc,/def\");\n            Assert.Equal(\"/abc,/def\", query[\"sources\"]);\n        }\n\n        [Fact]\n        public void TestCreateParent()\n        {\n            var query = getEmptyQuery();\n            Assert.Equal(query, WebHDFSHttpQueryParameter.SetCreateParent(query, null));\n\n            query = getEmptyQuery();\n            WebHDFSHttpQueryParameter.SetCreateParent(query, true);\n            ",
  "# Simple maze game\nA maze breaking game using tkinter\n\n# Requirements:\n* Python 3.8+\n* Computer\n\n# Launching:\nFor Linux users, there's a shell script that can be launched (you'll need to mark it as executable, when you run it for the firs time), or just launch Main.py.\n\nFor Windows and Mac users, there's no script at the moment, but the game can still be launched by running Main.py\n\nTo run Main.py, you can open the terminal in the folder with all the scripts and run: `python3 Main.py`\n\n# Planned features:\n* Winning\n* Different difficulties\n* Possibly even timer",
  "import React from \"react\";\nimport ModalImage from \"./ModalImage\";\n\n\nexport default function Tile({title, description, detailsLabel, detailsLink, images, htmlSnippets}) {\n    return (\n        <div className=\"tile is-child\">\n            <article className=\"box has-background-grey-lighter\">\n                <p className=\"subtitle\"><b>{title}</b></p>\n                {description && <p>\n                    {description ||\n                    ``\n                    }\n                    {<span dangerouslySetInnerHTML={{__html: htmlSnippets}}/>}\n                </p>}\n                {detailsLink &&\n                <div style={{textAlign: 'right'}}>\n                    <a href={detailsLink}>... more</a>\n                </div>\n                }\n                {images &&\n                <div>\n                    {description && <br/>}\n                    {images.map(img => <ModalImage src={img.src} altText={img.altText} thumbnailWidth={100}/>)}\n                </div>\n                }\n            </article>\n        </div>\n    );\n}\n\nexport function VerticalTileGroup({children, extraClasses}) {\n    let classes = \"tile is-parent is-vertical\";\n    return (\n        <div className={extraClasses? `${classes} ${extraClasses}` : classes}>\n            {children}\n        </div>\n    );\n}\n\n",
  "import torch\nfrom torch.distributions import Normal\n\n\ndef naive_loss(z, logdet, mu, sigma, mu_rest=None):\n    \"\"\"First element of z corresponds to property (mu = property value),\n    the rest have N(0,1) distribution\"\"\"\n    device = z.device\n    z_a = z[:, : mu.shape[1]]\n    z_rest = z[:, mu.shape[1] :]\n    dist_a = Normal(mu, sigma * torch.ones_like(mu, device=device))\n    dist_rest = Normal(mu_rest if mu_rest is not None else torch.tensor([0.0]).to(device), torch.tensor([1.0]).to(device))\n    logp_a = dist_a.log_prob(z_a)\n    logp_rest = dist_rest.log_prob(z_rest) if z_rest.shape[-1]!= 0 else torch.tensor([0.0]).to(device)\n    logpz = logp_a.sum(-1, keepdim=True) + logp_rest.sum(-1, keepdim=True)\n    logpz = (logpz + logdet).mean()\n    return (\n        -logpz,\n        {\n            \"-logpz\": -logpz,\n            \"-logp_a\": -logp_a.mean(),\n            \"MSE\": torch.mean((z_a - mu) ** 2),\n            \"sigma\": torch.tensor(sigma),\n        },\n    )\n\n\ndef N01_loss(z, logdet, mu_rest=None):\n    device = z.device\n    dist = Normal(mu_rest if mu_rest is not None else torch.tensor([0.0]).to(device), torch.tensor([1.0]).to(device))\n    logpz = dist.log_prob(z)\n    logpz = logpz.sum(-1, keepdim=True)\n    logpz = (logpz + logdet).mean()\n    return (\n        -logpz,\n        {\"-logpz\": -logpz},\n    )\n",
  "/* ESI AIS Parser\n * \n * Copyright 2011/2012 by Pierre van de Laar & Pierre America (Embedded Systems Institute)\n * Copyright 2008 by Brian C. Lane <bcl@brianlane.com>\n * All Rights Reserved\n * \n */\npackage nl.esi.metis.aisparser;\n\npublic interface AISMessage20Unit {\n\n\t/** offsetNumber\n\t * @return int value of offsetNumber (12 bits)\n\t */\n\tpublic int getOffsetNumber();\n\n\t/** numberOfSlots\n\t * @return int value of numberOfSlots (4 bits)\n\t */\n\tpublic int getNumberOfSlots();\n\n\t/** timeOut\n\t * @return int value of timeOut (3 bits)\n\t */\n\tpublic int getTimeOut();\n\n\t/** increment\n\t * @return int value of increment (11 bits)\n\t */\n\tpublic int getIncrement();\n\n}",
  "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<!-- NewPage -->\n<html lang=\"en\">\n<head>\n<!-- Generated by javadoc (1.8.0_73) on Wed Feb 01 10:45:06 EST 2017 -->\n<title>MemberChangeEvent (Oracle - Berkeley DB Java Edition API)</title>\n<meta name=\"date\" content=\"2017-02-01\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"../../../../../style.css\" title=\"Style\">\n<script type=\"text/javascript\" src=\"../../../../../script.js\"></script>\n</head>\n<body>\n<script type=\"text/javascript\"><!--\n    try {\n        if (location.href.indexOf('is-external=true') == -1) {\n            parent.document.title=\"MemberChangeEvent (Oracle - Berkeley DB Java Edition API)\";\n        }\n    }\n    catch(err) {\n    }\n//-->\nvar methods = {\"i0\":10};\nvar tabs = {65535:[\"t0\",\"All Methods\"],2:[\"t2\",\"Instance Methods\"],8:[\"t4\",\"Concrete Methods\"]};\nvar altColor = \"altColor\";\nvar rowColor = \"rowColor\";\nvar tableTab = \"tableTab\";\nvar activeTableTab = \"activeTableTab\";\n</script>\n<noscript>\n<div>JavaScript is disabled on your browser.</div>\n</noscript>\n<!-- ========= START OF TOP NAVBAR ======= -->\n<div class=\"topNav\"><a name=\"navbar.top\">\n<!--   -->\n</a>\n<div class=\"skipNav\"><a href=\"#skip.navbar.top\" title=\"Skip navigation links\">Skip navigation links</a></div>\n<a name=\"navbar.top.firstrow\">\n<!--   -->\n</a>\n<ul class=\"navList\" title=\"Navigation\">\n<li><a href=\"../../../../../overview-summary.html\">Overview</a></li>\n<li><a href=\"package-summary.html\">Package</a></li>\n<li class=\"navBarCell1Rev\">Class</li>\n<li><a href=\"class-use/MemberChangeEvent.html\">Use</a></li>\n<li><a href=\"package-tree.html\">Tree</a></li>\n<li><a href=\"../../../../../deprecated-list.html\">Deprecated</a></li>\n<li><a href=\"../../../../../index-all.html\">Index</a></li>\n<li><a href=\"../../../../../help-doc.html\">Help</a></li>\n</ul>\n<div class=\"aboutLanguage\"><b>Berkeley DB Java Edition</b><br><font size=\\\"-1\\\"> version 7.3.7</font>\n\t  </div>\n</div>\n<div class=\"subNav\">\n<ul class=\"navList\">\n<li><a href=\"../../../../../com/sleepycat/je/rep/monitor/LeaveGroupEvent.LeaveReason.html\" title=\"enum in com.sleepycat.je.rep.monitor\"><span class=\"typeNameLink\">Prev&nbsp;Class</span></a></li>\n<li><a href=\"../../../../../com/sleepycat/je/rep/monitor/Monitor.html\" title=\"class in com.sleepycat.je.rep.monitor\"><span class=\"typeNameLink\">Next&nbsp;Class</span></a></li>\n</ul>\n<ul class=\"navList\">\n<li><a href=\"../../../../../index.html?com/sleepycat/je/rep/monitor/MemberChangeEvent.html\" target=\"_top\">Frames</a></li>\n<li><a href=\"MemberChangeEvent.html\" target=\"_top\">No&nbsp;Frames</a></li>\n</ul>\n<ul class=\"navList\" id=\"allclasses_navbar_top\">\n<li><a href=\"../../../../../allclasses-noframe.html\">All&nbsp;Classes</a></li>\n</ul>\n<div>\n<script type=\"text/javascript\"><!--\n  allClassesLink = document.getElementById(\"allclasses_navbar_top\");\n  if(window==top) {\n    allClassesLink.style.display = \"block\";\n  }\n  else {\n    allClassesLink.style.display = \"none\";\n  }\n  //-->\n</script>\n</div>\n<div>\n<ul class=\"subNavList\">\n<li>Summary:&nbsp;</li>\n<li>Nested&nbsp;|&nbsp;</li>\n<li>Field&nbsp;|&nbsp;</li>\n<li>Constr&nbsp;|&nbsp;</li>\n<li><a href=\"#method.summary\">Method</a></li>\n</ul>\n<ul class=\"subNavList\">\n<li>Detail:&nbsp;</li>\n<li>Field&nbsp;|&nbsp;</li>\n<li>Constr&nbsp;|&nbsp;</li>\n<li><a href=\"#method.detail\">Method</a></li>\n</ul>\n</div>\n<a name=\"skip.navbar.top\">\n<!--   -->\n</a></div>\n<!-- ========= END OF TOP NAVBAR ========= -->\n<!-- ======== START OF CLASS DATA ======== -->\n<div class=\"header\">\n<div class=\"subTitle\">com.sleepycat.je.rep.monitor</div>\n<h2 title=\"Class MemberChangeEvent\" class=\"title\">Class MemberChangeEvent</h2>\n</div>\n<div class=\"contentContainer\">\n<ul class=\"inheritance\">\n<li><a href=\"http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true\" title=\"class or interface in java.lang\">java.lang.Object</a></li>\n<li>\n<ul class=\"inheritance\">\n<li><a href=\"../../../../../com/sleepycat/je/rep/monitor/MonitorChangeEvent.html\" title=\"class in com.sleepycat.je.rep.monitor\">com.sleepycat.je.rep.monitor.MonitorChangeEvent</a></li>\n<li>\n<ul class=\"inheritance\">\n<li>com.sleepycat.je.rep.monitor.MemberChangeEvent</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<div class=\"description\">\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<dl>\n<dt>Direct Known Subclasses:</dt>\n<dd><a href=\"../../../../../com/sleepycat/je/rep/monitor/JoinGroupEvent.html\" title=\"class in com.sleepycat.je.rep.monitor\">JoinGroupEvent</a>, <a href=\"../../../../../com/sleepycat/je/rep/monitor/LeaveGroupEvent.html\" title=\"class in com.sleepycat.je.rep.monitor\">LeaveGroupEvent</a>, <a href=\"../../../../../com/sleepycat/je/rep/monitor/NewMasterEvent.html\" title=\"class in com.sleepycat.je.rep.monitor\">NewMasterEvent</a></dd>\n</dl>\n<hr>\n<br>\n<pre>public abstract class <span class=\"typeNameLabel\">MemberChangeEvent</span>\nextends <a href=\"../../../../../com/sleepycat/je/rep/monitor/MonitorChangeEvent.html\" title=\"class in com.sleepycat.je.rep.monitor\">MonitorChangeEvent</a></pre>\n<div class=\"block\">MemberChangeEvent is the base class for all member status changed events. \n Its subclasses provide additional event-specific information.</div>\n</li>\n</ul>\n</div>\n<div class=\"summary\">\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<!-- ========== METHOD SUMMARY =========== -->\n<ul class=\"blockList\">\n<li class=\"blockList\"><a name=\"method.summary\">\n<!--   -->\n</a>\n<h3>Method Summary</h3>\n<table class=\"memberSummary\" border=\"0\" cellpadding=\"3\" cellspacing=\"0\" summary=\"Method Summary table, listing methods, and an explanation\">\n<caption><span id=\"t0\" class=\"activeTableTab\"><span>All Methods</span><span class=\"tabEnd\">&nbsp;</span></span><span id=\"t2\" class=\"tableTab\"><span><a href=\"javascript:show(2);\">Instance Methods</a></span><span class=\"tabEnd\">&nbsp;</span></span><span id=\"t4\" class=\"tableTab\"><span><a href=\"javascript:show(8);\">Concrete Methods</a></span><span class=\"tabEnd\">&nbsp;</span></span></caption>\n<tr>\n<th class=\"colFirst\" scope=\"col\">Modifier and Type</th>\n<th class=\"colLast\" scope=\"col\">Method and Description</th>\n</tr>\n<tr id=\"i0\" class=\"altColor\">\n<",
  "<?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass employee extends Model\n{\n    use HasFactory;\n    protected $table=\"employees\";\n}\n",
  "# frozen_string_literal: true\n\nmodule Thredded\n  class ModerationController < Thredded::ApplicationController\n    before_action :thredded_require_login!\n    before_action :load_moderatable_messageboards\n\n    def pending\n      @posts = Thredded::PostsPageView.new(\n        thredded_current_user,\n        moderatable_posts\n         .pending_moderation\n         .order_oldest_first\n         .preload(:user, :postable)\n         .page(current_page)\n      )\n      maybe_set_last_moderated_record_flash\n    end\n\n    def history\n      @post_moderation_records = accessible_post_moderation_records\n       .order(created_at: :desc)\n       .page(current_page)\n    end\n\n    def activity\n      @posts = Thredded::PostsPageView.new(\n        thredded_current_user,\n        moderatable_posts\n         .order_newest_first\n         .preload(:user, :postable)\n         .page(current_page)\n      )\n      maybe_set_last_moderated_record_flash\n    end\n\n    def moderate_post\n      return head(:bad_request) unless Thredded::Post.moderation_states.include?(params[:moderation_state])\n      flash[:last_moderated_record_id] = Thredded::ModeratePost.run!(\n        post: moderatable_posts.find(params[:id]),\n        moderation_state: params[:moderation_state],\n        moderator: thredded_current_user,\n      ).id\n      redirect_back fallback_location: pending_moderation_path\n    end\n\n    def users\n      @users = Thredded.user_class\n       .left_join_thredded_user_details\n       .merge(Thredded::UserDetail.order(moderation_state_changed_at: :desc))\n      @query = params[:q].to_s\n      if @query.present?\n        @users = DbTextSearch::CaseInsensitive.new(@users, Thredded.user_name_column).prefix(@query)\n      end\n      @users = @users.page(current_page)\n    end\n\n    def user\n      @user = Thredded.user_class.find(params[:id])\n      # Do not apply policy_scope here, as we want to show blocked posts as well.\n      posts_scope = @user.thredded_posts\n       .where(messageboard_id: policy_scope(Messageboard.all).pluck(:id))\n       .order_newest_first\n       .includes(:postable)\n       .page(current_page)\n      @posts = Thredded::PostsPageView.new(thredded_current_user, posts_scope)\n    end\n\n    def moderate_user\n      return head(:bad_request) unless Thredded::UserDetail.moderation_states.include?(params[:moderation_state])\n      user = Thredded.user_class.find(params[:id])\n      user.thredded_user_detail.update!(moderation_state: params[:moderation_state])\n      user.thredded_user_detail.update!(moderation_id: thredded_current_user.thredded_user_detail.user_id)\n      redirect_back fallback_location: user_moderation_path(user.id)\n    end\n\n    private\n\n    def maybe_set_last_moderated_record_flash\n      return unless flash[:last_moderated_record_id]\n      @last_moderated_record = accessible_post_moderation_records.find(flash[:last_moderated_record_id].to_s)\n    end\n\n    def moderatable_posts\n      Thredded::Post.where(messageboard_id: @moderatable_messageboards)\n    end\n\n    def accessible_post_moderation_records\n      Thredded::PostModerationRecord\n       .where(messageboard_id: @moderatable_messageboards)\n    end\n\n    def load_moderatable_messageboards\n      @moderatable_messageboards = thredded_current_user.thredded_can_moderate_messageboards.to_a\n      if @moderatable_messageboards.empty? # rubocop:disable Style/GuardClause\n        fail Pundit::NotAuthorizedError, 'You are not authorized to perform this action.'\n      end\n    end\n\n    def current_page\n      (params[:page] || 1).to_i\n    end\n  end\nend\n",
  "\n------------------------------\n-- library\n------------------------------\n\nrequire 'torch'\n\n------------------------------\n-- option\n------------------------------\n\nif not opt then\n\tprint '==> processing options'\n\tcmd = torch.CmdLine()\n\tcmd:text('Options:')\n\t-- valid:\n\tcmd:option('-va', 5, 'num of validation-sets')\n\tcmd:text()\n\topt = cmd:parse(arg or {})\nend\n\n------------------------------\n-- main\n------------------------------\n\n-- split valid: ----------\n\nif opt.va > 0 then\n\n\tmath.randomseed(globalItr)\n\ttorch.manualSeed(globalItr)\n\tcutorch.manualSeed(globalItr)\n\n\trate_valid = 0.1\n\n\tvatrain_data = {}\n\tvatrain_label = {}\n\tvatest_data = {}\n\tvatest_label = {}\n\n\ttrain_nrow = train_data:size(1)\n\n\tfor i = 1,opt.va do\n\t\tids = torch.randperm(train_nrow)\n\t\tvatest_data[i] = train_data:index(1,ids[{{1,math.floor(train_nrow*rate_valid)}}]:type(\"torch.LongTensor\"))\n\t\tvatest_label[i] = train_label:index(1,ids[{{1,math.floor(train_nrow*rate_valid)}}]:type(\"torch.LongTensor\"))\n\n\t\tvatrain_data[i] = train_data:index(1,ids[{{math.floor(train_nrow*rate_valid)+1,train_nrow}}]:type(\"torch.LongTensor\"))\n\t\tvatrain_label[i] = train_label:index(1,ids[{{math.floor(train_nrow*rate_valid)+1,train_nrow}}]:type(\"torch.LongTensor\"))\n\tend\nend\n\ncollectgarbage();\n",
  "export default {}\n\n// \u6307\u5b9a\u7684\u7c7b\u578b\u662f\u5426\u4e3anever\u7c7b\u578b\n\n/**\n1\u3001[T]\u548c[never]\u4e3a\u5143\u7ec4\uff0c\u4f5c\u4e3a\u5305\u88c5\u7c7b\u578b\uff0c\u8054\u5408\u7c7b\u578b\u4e0d\u4f1a\u88ab\u5206\u53d1\uff1b\n2\u3001never\u7c7b\u578b\u4e0d\u80fd\u6269\u5c55never\u7c7b\u578b\uff0c\u4f46\u662fnever[]\u53ef\u4ee5\u6269\u5c55never[]\u3002\n */\ntype IsNever<T> = [T] extends [never]? true : false\n\n// \u6d4b\u8bd5\u7528\u4f8b\ntype I0 = IsNever<never> // true\ntype I1 = IsNever<never | string> // false\ntype I2 = IsNever<null> // false\ntype I3 = IsNever<{}> // false\ntype I4 = IsNever<[]> // false\ntype I5 = IsNever<[] | never> // false\n",
  "<?php\nnamespace MHN\\Referenten;\n\nif (Auth::istEingeloggt()) {\n    $navItems = [\n        'home' => ['/', 'Startseite', 'home'],\n        'benutzersuche' => Auth::hatRecht('ma-pt')? ['benutzersuche.php', 'Benutzersuche','search'] : null,\n        'vortragssuche' => Auth::hatRecht('ma-pt')? ['vortragssuche.php', 'Vortragssuche','search'] : null,\n        'admin' => Auth::hatRecht('ma-pt')? ['admin.php', 'Programmteam', 'wrench'] : null,\n        'benutzer' => ['benutzer.php', 'Mein Profil', 'user'],\n        'vortragsliste' => (Auth::hatRecht('referent') &&!Auth::hatRecht('ma-pt'))? ['vortragsliste.php', 'Meine Beitr\u00e4ge', 'calendar'] : null,\n        'logout' => ['logout.php', 'Logout', 'log-out'],\n        'akademie' => ['https://www.mind-akademie.de/', 'MA-Webseite', 'home'],\n       'moodle' => ['https://www.'. getenv('DOMAINNAME'), 'MHN-Webseite', 'home'],\n        'datenschutz' => ['https://www.'. getenv('DOMAINNAME'). '/mod/book/view.php?id=253&chapterid=4', 'Datenschutz', 'paragraph'],\n        'datenverarbeitung' => ['datenverarbeitung.php', 'Datenverarbeitung', 'paragraph'],\n        'impressum' => ['https://www.'. getenv('DOMAINNAME'). '/mod/book/view.php?id=253&chapterid=5', 'Impressum', 'globe'],\n    ];\n\n} else {\n    $navItems = [\n        'login' => ['/', 'Login', 'log-in'],\n       'registrieren' => ['registrieren.php', 'Registrieren', 'plus'],\n        'akademie' => ['https://www.mind-akademie.de/', 'MA-Webseite', 'home'],\n       'moodle' => ['https://www.'. getenv('DOMAINNAME'), 'MHN-Webseite', 'home'],\n        'datenschutz' => ['https://www.'. getenv('DOMAINNAME'). '/mod/book/view.php?id=253&chapterid=4', 'Datenschutz', 'paragraph'],\n        'impressum' => ['https://www.'. getenv('DOMAINNAME'). '/mod/book/view.php?id=253&chapterid=5', 'Impressum', 'globe'],\n    ];\n}\n?>\n<nav class=\"navbar navbar-mhn sidebar\" role=\"navigation\">\n    <div class=\"container-fluid\">\n        <!-- Brand and toggle get grouped for better mobile display -->\n        <div class=\"navbar-header\">\n            <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#bs-sidebar-navbar-collapse-1\">\n                <span class=\"sr-only\">Navigation aufklappen</span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n            </button>\n            <a class=\"navbar-brand\" href=\"/\"><img src=\"/img/mhn-logo-small.png\" id=\"mhn-logo\"><span class=\"logo-text\"> Referenten\n            </span>\n                <span class='pull-right showopacity glyphicon'><img src=\"/img/mhn-logo-small.png\" id=\"mhn-icon\"></span>\n            </a>\n        </div>\n        <div class=\"collapse navbar-collapse\" id=\"bs-sidebar-navbar-collapse-1\">\n            <ul class=\"nav navbar-nav\">\n<?php\n\nforeach ($navItems as $itemname => $item) {\n    if (!$item) {\n        continue;\n    }\n    $class = (!empty($navId) and $navId === $itemname)? 'active' : '';\n    echo \"<li class='$class'><a href='$item[0]'>$item[1]<span class='pull-right showopacity glyphicon glyphicon-$item[2]'></span></a></li>\\n\";\n}\n?>\n            </ul>\n        </div>\n    </div>\n</nav>\n",
  "import hoc from './styletransformer';\n\nexport default hoc({\n  name: 'Relative',\n  type: 'div',\n  extras: ['position'],\n  style: props => ({\n    position:'relative',\n  }),\n})('div');\n",
  "/*\n** Copyright 2005-2018  Solarflare Communications Inc.\n**                      7505 Irvine Center Drive, Irvine, CA 92618, USA\n** Copyright 2002-2005  Level 5 Networks Inc.\n**\n** This program is free software; you can redistribute it and/or modify it\n** under the terms of version 2 of the GNU General Public License as\n** published by the Free Software Foundation.\n**\n** This program is distributed in the hope that it will be useful,\n** but WITHOUT ANY WARRANTY; without even the implied warranty of\n** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n** GNU General Public License for more details.\n*/\n\n/****************************************************************************\n * Driver for Solarflare network controllers -\n *          resource management for Xen backend, OpenOnload, etc\n *\n * This file provides internal API for protection domain resources.\n *\n * Copyright 2012-2012: Solarflare Communications Inc,\n *                      9501 Jeronimo Road, Suite 250,\n *                      Irvine, CA 92618, USA\n *\n * Developed and maintained by Solarflare Communications:\n *                      <linux-xen-drivers@solarflare.com>\n *                      <onload-dev@solarflare.com>\n *\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 2 as published\n * by the Free Software Foundation, incorporated herein by reference.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n ****************************************************************************\n */\n\n#ifndef __EFRM_PD_H__\n#define __EFRM_PD_H__\n\n\n#define OWNER_ID_PHYS_MODE       0\n\nstruct efrm_pd;\nstruct efrm_resource_manager;\n\n\nextern int\nefrm_create_pd_resource_manager(struct efrm_resource_manager **);\n\nextern void\nefrm_pd_free(struct efrm_pd *);\n\n\n/* API to OS-dependent part (proc files in Linux case) */\n\nvoid *\nefrm_pd_os_stats_ctor(struct efrm_pd *pd);\n\nvoid\nefrm_pd_os_stats_dtor(struct efrm_pd *pd, void *os_data);\n\nstruct efrm_bt_manager *\nefrm_pd_bt_manager_next(struct efrm_pd *pd, struct efrm_bt_manager *prev);\n\n#endif  /* __EFRM_PD_H__ */\n",
  "package com.example.m1kes.parkingdemo.printer.models;\n\n\nimport java.text.DecimalFormat;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\npublic class BalanceEnquiry extends Receipt {\n\n\n    private String shiftID;\n    private String vehicleReg;\n    private String owner;\n    private double balance;\n    private String lastlogged;\n    private String responseDateTime;\n    private String currentMarshalUsername;\n    private SimpleDateFormat format = new SimpleDateFormat(\"dd-MM-yyyy HH:mm\");\n    private String date = new SimpleDateFormat(\"dd-MM-yyyy HH:mm\").format(new Date());\n    private DecimalFormat df = new DecimalFormat(\"0.00\");\n\n\n    @Override\n   public String getPrintData() {\n\n        /**\n         *\n         * @return String representation of a fiscal Receipt\n         */\n\n            StringBuilder sb = new StringBuilder();\n            sb.append(getReceiptHeader());\n            sb.append(\"         \").append(date).append(\"\\r\\n\");\n            sb.append(\"\\r\\n\");\n            sb.append(\"   - Balance Enquiry Receipt - \");\n            sb.append(\"\\r\\n\");\n            sb.append(\"\\r\\n\");\n            sb.append(\"Marshall    : \").append(currentMarshalUsername).append(\"\\r\\n\");\n            sb.append(\"Registration: \").append(vehicleReg).append(\"\\r\\n\");\n            sb.append(\"Ownr Details: \").append(owner).append(\"\\r\\n\");\n        if(balance>0){\n            sb.append(\"Tot Arrears : $\").append(df.format(balance)).append(\"\\r\\n\");\n        }else if(balance ==0){\n            sb.append(\"Balance     : $\").append(String.valueOf(balance)).append(\"\\r\\n\");\n        }else{\n            sb.append(\"Tot Prepaid : $\").append(df.format(Math.abs(balance))).append(\"\\r\\n\");\n        }\n        if(lastlogged!=null){\n        SimpleDateFormat ff = new SimpleDateFormat(\"dd-MM-yyyy HH:mm\");\n        SimpleDateFormat df2 = new SimpleDateFormat(\"yyyyMMddHHmmss\");\n        String formattedDate = null;\n        Date startDate  = null;\n        try {\n            startDate = df2.parse(lastlogged);\n        } catch (ParseException e) {\n            e.printStackTrace();\n        }\n        formattedDate = ff.format(startDate);\n\n            sb.append(\"Last Login  : \").append(formattedDate).append(\"\\r\\n\");\n        }else {\n            sb.append(\"Last Login  : Unavailable\").append(\"\\r\\n\");\n        }\n            sb.append(getReceiptFooter());\n            this.printData = sb.toString();\n            return sb.toString();\n    }\n\n    public BalanceEnquiry(String shiftID,String vehicleReg, String owner,double balance,String lastlogged,String responseDateTime,\n                          String currentMarshalUsername){\n        this.shiftID = shiftID;\n        this.vehicleReg = vehicleReg;\n        this.owner = owner;\n        this.balance = balance;\n        this.lastlogged = lastlogged;\n        this.responseDateTime = responseDateTime;\n        this.currentMarshalUsername = currentMarshalUsername;\n     }\n\n\n    @Override\n   public String getPrintType() {\n        return TYPE_BALANCE_ENQUIRY;\n    }\n\n    public String getShiftID() {\n        return shiftID;\n    }\n\n    public void setShiftID(String shiftID) {\n        this.shiftID = shiftID;\n    }\n\n    public String getVehicleReg() {\n        return vehicleReg;\n    }\n\n    public void setVehicleReg(String vehicleReg) {\n        this.vehicleReg = vehicleReg;\n    }\n\n    public String getCurrentMarshalUsername() {\n        return currentMarshalUsername;\n    }\n\n    public void setCurrentMarshalUsername(String currentMarshalUsername) {\n        this.currentMarshalUsername = currentMarshalUsername;\n    }\n\n    public String getOwner_details() {\n        return owner;\n    }\n\n    public void setOwner_details(String owner_details) {\n        this.owner = owner_details;\n    }\n\n    public double getBalance() {\n        return balance;\n    }\n\n    public void setBalance(double balance) {\n        this.balance = balance;\n    }\n\n    public String getLastlogged() {\n        return lastlogged;\n    }\n\n    public void setLastlogged(String lastlogged) {\n        this.lastlogged = lastlogged;\n    }\n\n    public String getResponseDateTime() {\n        return responseDateTime;\n    }\n\n    public void setResponseDateTime(String responseDateTime) {\n        this.responseDateTime = responseDateTime;\n    }\n\n    public String getOwner() {\n        return owner;\n    }\n\n    public void setOwner(String owner) {\n        this.owner = owner;\n    }\n\n    public SimpleDateFormat getFormat() {\n        return format;\n    }\n\n    public void setFormat(SimpleDateFormat format) {\n        this.format = format;\n    }\n\n\n    @Override\n    public String toString() {\n        return \"BalanceEnquiry{\" +\n                \"shiftID=\" + shiftID +\n                \", vehicleReg='\" + vehicleReg + '\\'' +\n                \", owner='\" + owner + '\\'' +\n                \", balance=\" + balance +\n                \", lastlogged='\" + lastlogged + '\\'' +\n                \", responseDateTime='\" + responseDateTime + '\\'' +\n                \", currentMarshalUsername='\" + currentMarshalUsername + '\\'' +\n                \", format=\" + format +\n                '}';\n    }\n}\n",
  "# -*- coding: utf-8 -*-\nfrom __future__ import absolute_import, unicode_literals\nfrom base import GAETestCase\nfrom config.template_middleware import TemplateResponse\nfrom mock import Mock\nfrom routes.acourses import new\nfrom course.course_model import Course\nfrom routes.acourses import rest\nfrom tekton.gae.middleware.redirect import RedirectResponse\n\n__author__ ='marcos'\n\n\nclass NewTest(GAETestCase):\n    def test_sucess(self):\n        resposta = new.salvar(name='An\u00e1lise e Desenvolvimento de Sistemas',\n                              duration='6 semestres',\n                              educationProject='Plano de ensino X')\n        self.assertIsInstance(resposta, RedirectResponse)\n        self.assertEqual('/acourses', resposta.context)\n        courses = Course.query().fetch()\n        self.assertEqual(1, len(courses))\n        course = courses[0]\n        self.assertEqual('An\u00e1lise e Desenvolvimento de Sistemas', course.name)\n        self.assertEqual('6 semestres', course.duration)\n        self.assertEqual('Plano de ensino X', course.educationProject)\n\n    def test_validation(self):\n        resposta = new.salvar()\n        self.assertIsInstance(resposta, TemplateResponse)\n        self.assert_can_render(resposta)\n        self.assertIsNone(Course.query().get())\n        self.maxDiff = None\n        self.assertDictEqual({u'courses': {},\n                              u'erros': {'name': u'Required field',\n                                         'duration': u'Required field',\n                                         'educationProject': u'Required field'}}\n                            , resposta.context)\n\n\n    def test_json_error(self):\n        respota_mock=Mock()\n        resposta = rest.salvar(respota_mock)\n        respota_mock.set_status.assert_called_once_with(400)\n        self.assert_can_serialize_as_json(resposta)",
  "// Copyright (c) 2018 Ashley Jeffs\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\npackage condition\n\nimport (\n\t\"bytes\"\n\t\"errors\"\n\t\"fmt\"\n\t\"regexp\"\n\n\t\"github.com/Jeffail/benthos/lib/log\"\n\t\"github.com/Jeffail/benthos/lib/metrics\"\n\t\"github.com/Jeffail/benthos/lib/types\"\n)\n\n//------------------------------------------------------------------------------\n\nfunc init() {\n\tConstructors[\"text\"] = TypeSpec{\n\t\tconstructor: NewText,\n\t\tdescription: `\nText is a condition that checks the contents of a message part as plain text\nagainst a logical operator and an argument.\n\nAvailable logical operators are:\n\n### ` + \"`equals_cs`\" + `\n\nChecks whether the part equals the argument (case sensitive.)\n\n### ` + \"`equals`\" + `\n\nChecks whether the part equals the argument under unicode case-folding (case\ninsensitive.)\n\n### ` + \"`contains_cs`\" + `\n\nChecks whether the part contains the argument (case sensitive.)\n\n### ` + \"`contains`\" + `\n\nChecks whether the part contains the argument under unicode case-folding (case\ninsensitive.)\n\n### ` + \"`prefix_cs`\" + `\n\nChecks whether the part begins with the argument (case sensitive.)\n\n### ` + \"`prefix`\" + `\n\nChecks whether the part begins with the argument under unicode case-folding\n(case insensitive.)\n\n### ` + \"`suffix_cs`\" + `\n\nChecks whether the part ends with the argument (case sensitive.)\n\n### ` + \"`suffix`\" + `\n\nChecks whether the part ends with the argument under unicode case-folding (case\ninsensitive.)\n\n### ` + \"`regexp_partial`\" + `\n\nChecks whether any section of the message part matches a regular expression (RE2\nsyntax).\n\n### ` + \"`regexp_exact`\" + `\n\nChecks whether the message part exactly matches a regular expression (RE2\nsyntax).`,\n\t}\n}\n\n//------------------------------------------------------------------------------\n\n// Errors for the text condition.\nvar (\n\tErrInvalidTextOperator = errors.New(\"invalid text operator type\")\n)\n\n// TextConfig is a configuration struct containing fields for the text\n// condition.\ntype TextConfig struct {\n\tOperator string `json:\"operator\" yaml:\"operator\"`\n\tPart     int    `json:\"part\" yaml:\"part\"`\n\tArg      string `json:\"arg\" yaml:\"arg\"`\n}\n\n// NewTextConfig returns a TextConfig with default values.\nfunc NewTextConfig() TextConfig {\n\treturn TextConfig{\n\t\tOperator: \"equals_cs\",\n\t\tPart:     0,\n\t\tArg:      \"\",\n\t}\n}\n\n//------------------------------------------------------------------------------\n\ntype textOperator func(c []byte) bool\n\nfunc textEqualsOperator(arg []byte) textOperator {\n\treturn func(c []byte) bool {\n\t\treturn bytes.Equal(c, arg)\n\t}\n}\n\nfunc textEqualsFoldOperator(arg []byte) textOperator {\n\treturn func(c []byte) bool {\n\t\treturn bytes.EqualFold(c, arg)\n\t}\n}\n\nfunc textContainsOperator(arg []byte) textOperator {\n\treturn func(c []byte) bool {\n\t\treturn bytes.Contains(c, arg)\n\t}\n}\n\nfunc textContainsFoldOperator(arg []byte) textOperator {\n\targLower := bytes.ToLower(arg)\n\treturn func(c []byte) bool {\n\t\treturn bytes.Contains(bytes.ToLower(c), argLower)\n\t}\n}\n\nfunc textPrefixOperator(arg []byte) textOperator {\n\treturn func(c []byte) bool {\n\t\treturn bytes.HasPrefix(c, arg)\n\t}\n}\n\nfunc textPrefixFoldOperator(arg []byte) textOperator {\n\targLower := bytes.ToLower(arg)\n\treturn func(c []byte) bool {\n\t\treturn bytes.HasPrefix(bytes.ToLower(c), argLower)\n\t}\n}\n\nfunc textSuffixOperator(arg []byte) textOperator {\n\treturn func(c []byte) bool {\n\t\treturn bytes.HasSuffix(c, arg)\n\t}\n}\n\nfunc textSuffixFoldOperator(arg []byte) textOperator {\n\targLower := bytes.ToLower(arg)\n\treturn func(c []byte) bool {\n\t\treturn bytes.HasSuffix(bytes.ToLower(c), argLower)\n\t}\n}\n\nfunc textRegexpPartialOperator(arg []byte) (textOperator, error) {\n\tcompiled, err := regexp.Compile(string(arg))\n\tif err!= nil {\n\t\treturn nil, err\n\t}\n\treturn func(c []byte) bool {\n\t\treturn compiled.Match(c)\n\t}, nil\n}\n\nfunc textRegexpExactOperator(arg []byte) (textOperator, error) {\n\tcompiled, err := regexp.Compile(string(arg))\n\tif err!= nil {\n\t\treturn nil, err\n\t}\n\treturn func(c []byte) bool {\n\t\treturn len(compiled.Find(c)) == len(c)\n\t}, nil\n}\n\nfunc strToTextOperator(str, arg string) (textOperator, error) {\n\tswitch str {\n\tcase \"equals_cs\":\n\t\treturn textEqualsOperator([]byte(arg)), nil\n\tcase \"equals\":\n\t\treturn textEqualsFoldOperator([]byte(arg)), nil\n\tcase \"contains_cs\":\n\t\treturn textContainsOperator([]byte(arg)), nil\n\tcase \"contains\":\n\t\treturn textContainsFoldOperator([]byte(arg)), nil\n\tcase \"prefix_cs\":\n\t\treturn textPrefixOperator([]byte(arg)), nil\n\tcase \"prefix\":\n\t\treturn textPrefixFoldOperator([]byte(arg)), nil\n\tcase \"suffix_cs\":\n\t\treturn textSuffixOperator([]byte(arg)), nil\n\tcase \"suffix\":\n\t\treturn textSuffixFoldOperator([]byte(arg)), nil\n\tcase \"regexp_partial\":\n\t\treturn textRegexpPartialOperator([]byte(arg))\n\tcase \"regexp_exact\":\n\t\treturn textRegexpExactOperator([]byte(arg))\n\t}\n\treturn nil, ErrInvalidTextOperator\n}\n\n//------------------------------------------------------------------------------\n\n// Text is a condition that checks message text against logical operators.\ntype Text struct {\n\tstats    metrics.Type\n\toperator textOperator\n\tpart     int\n\n\tmSkippedEmpty metrics.StatCounter\n\tmSkipped      metrics.StatCounter\n\tmSkippedOOB   metrics.StatCounter\n\tmApplied      metrics.StatCounter\n}\n\n// NewText returns a Text processor.\nfunc NewText(\n\tconf Config, mgr types.Manager, log log.Modular, stats metrics.Type,\n) (Type, error) {\n\top, err := strToTextOperator(conf.Text.Operator, conf.Text.Arg)\n\tif err!= nil {\n\t\treturn nil, fmt.Errorf(\"operator '%v': %v\", conf.Text.Operator, err)\n\t}\n\treturn &Text{\n\t\tstats:    stats,\n\t\toperator: op,\n\t\tpart:     conf.Text.Part,\n\n\t\tmSkippedEmpty: stats.GetCounter(\"condition.text.skipped.empty_message\"),\n\t\tmSkipped:      stats.GetCounter(\"condition.text.skipped\"),\n\t\tmSkippedOOB:   stats.GetCounter(\"condition.text.skipped.out_of_bounds\"),\n\t\tmApplied:      stats.GetCounter(\"condition.text.applied\"),\n\t}, nil\n}\n\n//------------------------------------------------------------------------------\n\n// Check attempts to check a message part against a configured condition.\nfunc (c *Text) Check(msg types.Message) bool {\n\t",
  "#summaryTable {\n    width: 40%;\n    border-collapse: collapse;\n    border: 1px solid black;\n}\n\ntd, th {\n    border: 1px solid #ddd;\n}\n\n#summaryTable tr {\n    height: 30px;\n}\n\n#destination {\n    width: 20%;\n}\n\ncol.counter {\n    width: 20%;\n}\n\n#siteDetails {\n    width: 100%;\n    border-collapse: collapse;\n    border: 1px solid black;\n}\n\n#subid {\n    width: 10%;\n}\n\n#filename {\n    width: 50%;\n}\n\n#subdest {\n    width: 10%;\n}\n\n#holdReason {\n    width: 10%;\n}\n\n#subsource {\n    width: 10%;\n}\n\n#exitCode {\n    width: 10%;\n}\n",
  "<?php\nclass PageView{\n    /**\u9875\u7801**/\n    public $pageNo = 1;\n    /**\u9875\u5927\u5c0f**/\n    public $pageSize = 20;\n    /**\u5171\u591a\u5c11\u9875**/\n    public $pageCount = 0;\n    /**\u603b\u8bb0\u5f55\u6570**/\n    public $totalNum = 0;\n    /**\u504f\u79fb\u91cf,\u5f53\u524d\u9875\u8d77\u59cb\u884c**/\n    public $offSet = 0;\n    /**\u6bcf\u9875\u6570\u636e**/\n    public $pageData = array();\n     \n    /**\u662f\u5426\u6709\u4e0a\u4e00\u9875**/\n    public $hasPrePage = true;\n    /**\u662f\u5426\u6709\u4e0b\u4e00\u9875**/\n    public $hasNextPage = true;\n     \n    public $pageNoList = array();\n     \n    public $urlPath ='';\n    /**\n     *\n     * @param unknown_type $count \u603b\u884c\u6570\n     * @param unknown_type $size \u5206\u9875\u5927\u5c0f\n     * @param unknown_type $string\n     */\n    public function __construct(){\n\n        \n         \n    }\n    \n    public function init($count=0, $size=20,$pageNo=1,$pageData =array(),$urlPath=''){\n        $this->totalNum = $count;//\u603b\u8bb0\u5f55\u6570\n        $this->pageSize = $size;//\u6bcf\u9875\u5927\u5c0f\n        $this->pageNo = $pageNo;\n        //\u8ba1\u7b97\u603b\u9875\u6570\n        $this->pageCount = ceil($this->totalNum/$this->pageSize);\n        $this->pageCount = ($this->pageCount<=0)?1:$this->pageCount;\n        //\u68c0\u67e5pageNo\n        $this->pageNo = $this->pageNo == 0? 1 : $this->pageNo;\n        $this->pageNo = $this->pageNo > $this->pageCount? $this->pageCount : $this->pageNo;\n         \n        //\u8ba1\u7b97\u504f\u79fb\n        $this->offset = ( $this->pageNo - 1 ) * $this->pageSize;\n        //\u8ba1\u7b97\u662f\u5426\u6709\u4e0a\u4e00\u9875\u4e0b\u4e00\u9875\n        $this->hasPrePage = $this->pageNo == 1?false:true;\n        \n        $this->hasNextPage = $this->pageNo >= $this->pageCount?false:true;\n         \n        $this->pageData = $pageData;\n        $this->urlPath = $urlPath;\n    }\n    \n    /**\n     * \u5206\u9875\u7b97\u6cd5\n     * @return\n     */\n    private function generatePageList(){\n        $pageList = array();\n        if($this->pageCount <= 9){\n            for($i=0;$i<$this->pageCount;$i++){\n                array_push($pageList,$i+1);\n            }\n        }else{\n            if($this->pageNo <= 4){\n                for($i=0;$i<5;$i++){\n                    array_push($pageList,$i+1);\n                }\n                array_push($pageList,-1);\n                array_push($pageList,$this->pageCount);\n\n            }else if($this->pageNo > $this->pageCount - 4){\n                array_push($pageList,1);\n                 \n                array_push($pageList,-1);\n                for($i=5;$i>0;$i--){\n                    array_push($pageList,$this->pageCount - $i+1);\n                }\n            }else if($this->pageNo > 4 && $this->pageNo <= $this->pageCount - 4){\n                array_push($pageList,1);\n                array_push($pageList,-1);\n                 \n                array_push($pageList,$this->pageNo -2);\n                array_push($pageList,$this->pageNo -1);\n                array_push($pageList,$this->pageNo);\n                array_push($pageList,$this->pageNo + 1);\n                array_push($pageList,$this->pageNo + 2);\n                 \n                array_push($pageList,-1);\n                array_push($pageList,$this->pageCount);\n                 \n            }\n        }\n        return $pageList;\n    }\n\n    /***\n     * \u521b\u5efa\u5206\u9875\u63a7\u4ef6\n     * @param\n     * @return String\n     */\n    public function echoPageAsDiv(){\n        $pageList = $this->generatePageList();\n         \n        $pageString =\"<div class='pagination'><div class='page-bottom'>\";\n         \n        if(!empty($pageList)){\n            if($this->pageCount >1){\n                if($this->hasPrePage){\n                    $pageString = $pageString.\"<a class='page-next' href=\\\"$urlPath?page=\".($this->pageNo-1).\"\\\">\u4e0a\u4e00\u9875</a>\";\n                }\n                foreach ($pageList as $k=>$p){\n                    if($this->pageNo == $p){\n                        $pageString = $pageString.\"<span class='page-cur'>\". $this->pageNo. \"</span>\";\n                        continue;\n                    }\n                    \n                    if($p == -1){\n                        $pageString = $pageString.\"<span class='page-break'>...</span>\";\n                        continue;\n                    }\n                    \n                    $pageString = $pageString.\"<a href=\\\"$urlPath?page=\".($p). \"\\\">\". $p. \"</a>\";\n                }\n                 \n                if($this->hasNextPage){\n                    $pageString = $pageString.\"<a class='page-next' href=\\\"$urlPath?page=\".($this->pageNo+1). \")\\\">\u4e0b\u4e00\u9875</a>\";\n                }\n                 \n            }\n        }\n        $pageString = $pageString.(\"</div></div>\");\n        return $pageString;\n    }\n    \n    /***\n     * \u521b\u5efa\u5206\u9875\u63a7\u4ef6\n     * @param\n     * @return String\n     */\n    public function echoPageAsDiv1(){\n        $pageList = $this->generatePageList();\n         \n        $pageString =\"<div class=\\\"row\\\"><div class=\\\"col-sm-6\\\"><div class=\\\"dataTables_paginate paging_simple_numbers\\\" id=\\\"dataTables-example_paginate\\\"><ul class=\\\"pagination\\\">\";\n         \n        if(!empty($pageList)){\n            if($this->pageCount >1){\n                if($this->hasPrePage){\n                    $pageString = $pageString.\"<li class=\\\"paginate_button previous\\\" aria-controls=\\\"dataTables-example\\\" tabindex=\\\"0\\\" id=\\\"dataTables-example_previous\\\"><a href=\\\"$urlPath?page=\".($this->pageNo-1).\"\\\">\u4e0a\u4e00\u9875</a></li>\";\n                        \n                }\n                foreach ($pageList as $k=>$p){\n                    if($this->pageNo == $p){\n                        $pageString = $pageString.\"<li class=\\\"paginate_button active\\\" aria-controls=\\\"dataTables-example\\\" tabindex=\\\"0\\\"><a href=\\\"$urlPath?page=\".$this->pageNo.\"\\\">\".$this->pageNo.\"</a></li>\";\n                        continue;\n                    }\n                    \n                    if($p == -1){\n                        //$pageString = $pageString.\"<li class='page-break'>...</li>\";\n                        continue;\n                    }\n                    \n                    $pageString = $pageString.\"<li class=\\\"paginate_button \\\" aria-controls=\\\"dataTables-example\\\" tabindex=\\\"0\\\"><a href=\\\"$urlPath?page=\".$p.\"\\\">\".$p.\"</a></li>\";\n                }\n                 \n                if($this->hasNextPage){\n                    $pageString = $pageString.\"<li class=\\\"paginate_button next\\\" aria-controls=\\\"dataTables-example\\\" tabindex=\\\"0\\\" id=\\\"dataTables-example_next\\\"><a href=\\\"$urlPath?page=\".($this->pageNo+1).\"\\\">\u4e0b\u4e00\u9875</a></li>\";\n                }\n                 \n            }\n        }\n        $pageString = $pageString.(\"</ul></div></div></div>\");\n        return $pageString;\n    }\n}",
  "package v7_test\n\nimport (\n\t\"errors\"\n\n\t\"code.cloudfoundry.org/cli/actor/actionerror\"\n\t\"code.cloudfoundry.org/cli/actor/v7action\"\n\t\"code.cloudfoundry.org/cli/command/commandfakes\"\n\t\"code.cloudfoundry.org/cli/command/flag\"\n\t. \"code.cloudfoundry.org/cli/command/v7\"\n\t\"code.cloudfoundry.org/cli/command/v7/v7fakes\"\n\t\"code.cloudfoundry.org/cli/util/configv3\"\n\t\"code.cloudfoundry.org/cli/util/ui\"\n\n\t. \"github.com/onsi/ginkgo\"\n\t. \"github.com/onsi/gomega\"\n\t. \"github.com/onsi/gomega/gbytes\"\n)\n\nvar _ = Describe(\"space-ssh-allowed command\", func() {\n\tvar (\n\t\tcmd             SpaceSSHAllowedCommand\n\t\ttestUI          *ui.UI\n\t\tfakeConfig      *commandfakes.FakeConfig\n\t\tfakeSharedActor *commandfakes.FakeSharedActor\n\t\tfakeActor       *v7fakes.FakeSpaceSSHAllowedActor\n\t\texecuteErr      error\n\t\tbinaryName      string\n\n\t\tspaceName       string\n\t\tspaceSSHWarning v7action.Warnings\n\t)\n\n\tBeforeEach(func() {\n\t\ttestUI = ui.NewTestUI(nil, NewBuffer(), NewBuffer())\n\t\tfakeConfig = new(commandfakes.FakeConfig)\n\t\tfakeSharedActor = new(commandfakes.FakeSharedActor)\n\t\tfakeActor = new(v7fakes.FakeSpaceSSHAllowedActor)\n\t\tspaceName = RandomString(\"space\")\n\n\t\tcmd = SpaceSSHAllowedCommand{\n\t\t\tUI:           testUI,\n\t\t\tConfig:       fakeConfig,\n\t\t\tSharedActor:  fakeSharedActor,\n\t\t\tActor:        fakeActor,\n\t\t\tRequiredArgs: flag.Space{Space: spaceName},\n\t\t}\n\n\t\tspaceSSHWarning = v7action.Warnings{\"space-ssh-warning\"}\n\n\t\tbinaryName = \"faceman\"\n\t\tfakeConfig.BinaryNameReturns(binaryName)\n\t\tfakeConfig.TargetedOrganizationReturns(configv3.Organization{GUID: \"some-org-guid\"})\n\n\t\tfakeActor.GetSpaceFeatureReturns(true, spaceSSHWarning, nil)\n\t})\n\n\tJustBeforeEach(func() {\n\t\texecuteErr = cmd.Execute(nil)\n\t})\n\n\tWhen(\"the environment is not set up correctly\", func() {\n\t\tBeforeEach(func() {\n\t\t\tfakeSharedActor.CheckTargetReturns(actionerror.NotLoggedInError{BinaryName: binaryName})\n\t\t})\n\n\t\tIt(\"returns an error\", func() {\n\t\t\tExpect(executeErr).To(MatchError(actionerror.NotLoggedInError{BinaryName: binaryName}))\n\t\t\tExpect(fakeSharedActor.CheckTargetCallCount()).To(Equal(1))\n\t\t\tcheckTargetedOrg, checkTargetedSpace := fakeSharedActor.CheckTargetArgsForCall(0)\n\t\t\tExpect(checkTargetedOrg).To(BeTrue())\n\t\t\tExpect(checkTargetedSpace).To(BeFalse())\n\t\t})\n\t})\n\n\tWhen(\"there is an error getting the SSH feature\", func() {\n\t\tBeforeEach(func() {\n\t\t\tfakeActor.GetSpaceFeatureReturns(true, spaceSSHWarning, errors.New(\"some-feature-error\"))\n\t\t})\n\t\tIt(\"returns the error\", func() {\n\t\t\tExpect(executeErr).To(HaveOccurred())\n\t\t\tExpect(executeErr).To(MatchError(\"some-feature-error\"))\n\t\t\tExpect(testUI.Err).To(Say(\"space-ssh-warning\"))\n\t\t})\n\t})\n\n\tIt(\"prints the feature\", func() {\n\t\tExpect(executeErr).To(Not(HaveOccurred()))\n\t\tExpect(fakeActor.GetSpaceFeatureCallCount()).To(Equal(1))\n\t\tinputSpaceName, inputOrgGUID, inputFeature := fakeActor.GetSpaceFeatureArgsForCall(0)\n\t\tExpect(inputSpaceName).To(Equal(spaceName))\n\t\tExpect(inputOrgGUID).To(Equal(\"some-org-guid\"))\n\t\tExpect(inputFeature).To(Equal(\"ssh\"))\n\n\t\tExpect(testUI.Err).To(Say(\"space-ssh-warning\"))\n\t\tExpect(testUI.Out).To(Say(\"ssh support is enabled in space '%s'.\", spaceName))\n\t})\n})\n",
  "package me.coley.nimbus.serial;\n\nimport com.esotericsoftware.kryo.Kryo;\nimport com.esotericsoftware.kryo.serializers.FieldSerializer;\n\nimport java.util.Arrays;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.Map;\n\n/**\n * A field serializer for kryo that sorts based off of {@link Index} order of fields.\n * If no {@link Index} annotations are present in the class, then this defaults to standard serialization ordering.\n *\n * @param <T>\n * \t\tType to serialize.\n *\n * @author Matt Coley\n */\npublic class IndexedFieldSerializer<T> extends FieldSerializer<T> {\n\tpublic IndexedFieldSerializer(Kryo kryo, Class type) {\n\t\tsuper(kryo, type);\n\t}\n\n\t@Override\n\tprotected void initializeCachedFields() {\n\t\tCachedField[] fields = getFields();\n\t\t// Get indices\n\t\tMap<CachedField, Integer> indices = new HashMap<>();\n\t\tfor (CachedField field : fields) {\n\t\t\tIndex index = field.getField().getAnnotation(Index.class);\n\t\t\tif (index == null)\n\t\t\t\tcontinue;\n\t\t\tindices.put(field, index.value());\n\t\t}\n\t\t// Skip if no indices\n\t\tif (indices.isEmpty())\n\t\t\treturn;\n\t\t// Remove non-indexed fields\n\t\tfor (CachedField field : fields)\n\t\t\tif (!indices.containsKey(field))\n\t\t\t\tremoveField(field);\n\t\t// Sort the fields by index\n\t\tfields = getFields();\n\t\tArrays.sort(fields, Comparator.comparingInt(indices::get));\n\t}\n}\n",
  "<!DOCTYPE html>\n<html>\n  <!--using forceflash breaks this page. square does not show up-->\n  <head>\n    <title>square</title>\n    <script src=\"../../../src/svg.js\" data-path=\"../../../src\"></script>\n   <script>\n  \n  window.onsvgload = function () {\n  \n    //container is the object element used to load the SVG document\n    var container = document.getElementById('container');\n    container.setAttribute(\"width\", 500);\n    container.setAttribute(\"height\", 500);\n\n    //get the SVG Document \n    var doc = container.contentDocument;\n    doc.firstChild.setAttribute(\"width\", 500);\n    doc.firstChild.setAttribute(\"height\", 500);\n    //doc.firstChild.setAttribute(\"viewBox\", \"0 0 500 500\");\n\n    //create an instance of the square\n    var square = doc.createElementNS(svgns, 'use');\n    square.setAttributeNS(xlinkns, 'xlink:href', \"#square\");\n    square.setAttribute(\"style\", \"fill:red\");\n    //append to SVG document\n    doc.documentElement.appendChild(square);\n  };\n   </script>\n  </head>\n  <body style=\"margin:0\">\n    <!--[if!IE]>-->\n      <object data=\"issue580.svg\" type=\"image/svg+xml\" id=\"container\"> <!--<![endif]-->\n    <!--[if lt IE 9]>\n      <object src=\"issue580.svg\" classid=\"image/svg+xml\" id=\"container\"> <![endif]-->\n    <!--[if gte IE 9]>\n      <object data=\"issue580.svg\" type=\"image/svg+xml\" id=\"container\"> <![endif]-->\n      </object>\n\n  </body>\n</html>\n\n",
  "package _674_longest_continuous_increasing_subsequence\n\nfunc findLengthOfLCIS(nums []int) int {\n\tres, max := 1, 1\n\tl := len(nums)\n\tif l == 0 {\n\t\treturn 0\n\t}\n\n\tfor i := 1; i < l; i++ {\n\t\tif nums[i] > nums[i-1] {\n\t\t\tres++\n\t\t} else {\n\t\t\tres = 1\n\t\t}\n\t\tif res > max {\n\t\t\tmax = res\n\t\t}\n\t}\n\treturn max\n}\n",
  "from dodo_commands.framework.singleton import Dodo\n\n\n# Resp: add the current command_name\n# to the list of commands decorated by decorator_name.\nclass DecoratorScope:\n    def __init__(self, decorator_name, remove=False):\n        self.decorators = (\n            Dodo.get(\"/ROOT\")\n           .setdefault(\"decorators\", {})\n           .setdefault(decorator_name, [])\n        )\n        self.prefix = \"!\" if remove else \"\"\n\n    def __enter__(self):  # noqa\n        self.decorators.append(self.prefix + Dodo.command_name)\n\n    def __exit__(self, type, value, traceback):  # noqa\n        self.decorators.remove(self.prefix + Dodo.command_name)\n",
  "/*\nCopyright 2020 KubeSphere Authors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\npackage group\n\nimport (\n\t\"context\"\n\t\"encoding/json\"\n\t\"fmt\"\n\n\tcorev1 \"k8s.io/api/core/v1\"\n\t\"k8s.io/apimachinery/pkg/api/errors\"\n\tmetav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\t\"k8s.io/apimachinery/pkg/labels\"\n\t\"k8s.io/apimachinery/pkg/types\"\n\t\"k8s.io/apimachinery/pkg/util/validation/field\"\n\t\"k8s.io/client-go/kubernetes\"\n\t\"k8s.io/klog\"\n\t\"kubesphere.io/kubesphere/pkg/api\"\n\tiamv1alpha2 \"kubesphere.io/kubesphere/pkg/apis/iam/v1alpha2\"\n\ttenantv1alpha1 \"kubesphere.io/kubesphere/pkg/apis/tenant/v1alpha1\"\n\t\"kubesphere.io/kubesphere/pkg/apiserver/query\"\n\tkubesphere \"kubesphere.io/kubesphere/pkg/client/clientset/versioned\"\n\t\"kubesphere.io/kubesphere/pkg/informers\"\n\tresourcesv1alpha3 \"kubesphere.io/kubesphere/pkg/models/resources/v1alpha3/resource\"\n)\n\ntype GroupOperator interface {\n\tListGroups(workspace string, queryParam *query.Query) (*api.ListResult, error)\n\tCreateGroup(workspace string, namespace *iamv1alpha2.Group) (*iamv1alpha2.Group, error)\n\tDescribeGroup(workspace, group string) (*iamv1alpha2.Group, error)\n\tDeleteGroup(workspace, group string) error\n\tUpdateGroup(workspace string, group *iamv1alpha2.Group) (*iamv1alpha2.Group, error)\n\tPatchGroup(workspace string, group *iamv1alpha2.Group) (*iamv1alpha2.Group, error)\n\tDeleteGroupBinding(workspace, name string) error\n\tCreateGroupBinding(workspace, groupName, userName string) (*iamv1alpha2.GroupBinding, error)\n\tListGroupBindings(workspace string, queryParam *query.Query) (*api.ListResult, error)\n}\n\ntype groupOperator struct {\n\tk8sclient      kubernetes.Interface\n\tksclient       kubesphere.Interface\n\tresourceGetter *resourcesv1alpha3.ResourceGetter\n}\n\nfunc New(informers informers.InformerFactory, ksclient kubesphere.Interface, k8sclient kubernetes.Interface) GroupOperator {\n\treturn &groupOperator{\n\t\tresourceGetter: resourcesv1alpha3.NewResourceGetter(informers, nil),\n\t\tk8sclient:      k8sclient,\n\t\tksclient:       ksclient,\n\t}\n}\n\nfunc (t *groupOperator) ListGroups(workspace string, queryParam *query.Query) (*api.ListResult, error) {\n\n\tif workspace!= \"\" {\n\t\t// filter by workspace\n\t\tqueryParam.Filters[query.FieldLabel] = query.Value(fmt.Sprintf(\"%s=%s\", tenantv1alpha1.WorkspaceLabel, workspace))\n\t}\n\n\tresult, err := t.resourceGetter.List(\"groups\", \"\", queryParam)\n\tif err!= nil {\n\t\tklog.Error(err)\n\t\treturn nil, err\n\t}\n\treturn result, nil\n}\n\n// CreateGroup adds a workspace label to group which indicates group is under the workspace\nfunc (t *groupOperator) CreateGroup(workspace string, group *iamv1alpha2.Group) (*iamv1alpha2.Group, error) {\n\n\tif group.GenerateName == \"\" {\n\t\terr := errors.NewInvalid(iamv1alpha2.SchemeGroupVersion.WithKind(iamv1alpha2.ResourcePluralGroup).GroupKind(),\n\t\t\t\"\", []*field.Error{field.Required(field.NewPath(\"metadata.generateName\"), \"generateName is required\")})\n\t\tklog.Error(err)\n\t\treturn nil, err\n\t}\n\t// generateName is used as displayName\n\t// ensure generateName is unique in workspace scope\n\tif unique, err := t.isGenerateNameUnique(workspace, group.GenerateName); err!= nil {\n\t\treturn nil, err\n\t} else if!unique {\n\t\terr = errors.NewConflict(iamv1alpha2.Resource(iamv1alpha2.ResourcePluralGroup),\n\t\t\tgroup.GenerateName, fmt.Errorf(\"a group named %s already exists in the workspace\", group.GenerateName))\n\t\tklog.Error(err)\n\t\treturn nil, err\n\t}\n\n\treturn t.ksclient.IamV1alpha2().Groups().Create(context.Background(), labelGroupWithWorkspaceName(group, workspace), metav1.CreateOptions{})\n}\n\nfunc (t *groupOperator) isGenerateNameUnique(workspace, generateName string) (bool, error) {\n\n\tresult, err := t.ListGroups(workspace, query.New())\n\n\tif err!= nil {\n\t\tklog.Error(err)\n\t\treturn false, err\n\t}\n\tfor _, obj := range result.Items {\n\t\tg := obj.(*iamv1alpha2.Group)\n\t\tif g.GenerateName == generateName {\n\t\t\treturn false, err\n\t\t}\n\t}\n\treturn true, nil\n}\n\nfunc (t *groupOperator) DescribeGroup(workspace, group string) (*iamv1alpha2.Group, error) {\n\tobj, err := t.resourceGetter.Get(\"groups\", \"\", group)\n\tif err!= nil {\n\t\treturn nil, err\n\t}\n\tns := obj.(*iamv1alpha2.Group)\n\tif ns.Labels[tenantv1alpha1.WorkspaceLabel]!= workspace {\n\t\terr := errors.NewNotFound(corev1.Resource(\"group\"), group)\n\t\tklog.Error(err)\n\t\treturn nil, err\n\t}\n\treturn ns, nil\n}\n\nfunc (t *groupOperator) DeleteGroup(workspace, group string) error {\n\t_, err := t.DescribeGroup(workspace, group)\n\tif err!= nil {\n\t\treturn err\n\t}\n\treturn t.ksclient.IamV1alpha2().Groups().Delete(context.Background(), group, *metav1.NewDeleteOptions(0))\n}\n\nfunc (t *groupOperator) UpdateGroup(workspace string, group *iamv1alpha2.Group) (*iamv1alpha2.Group, error) {\n\t_, err := t.DescribeGroup(workspace, group.Name)\n\tif err!= nil {\n\t\treturn nil, err\n\t}\n\tgroup = labelGroupWithWorkspaceName(group, workspace)\n\treturn t.ksclient.IamV1alpha2().Groups().Update(context.Background(), group, metav1.UpdateOptions{})\n}\n\nfunc (t *groupOperator) PatchGroup(workspace string, group *iamv1alpha2.Group) (*iamv1alpha2.Group, error) {\n\t_, err := t.DescribeGroup(workspace, group.Name)\n\tif err!= nil {\n\t\treturn nil, err\n\t}\n\tif group.Labels!= nil {\n\t\tgroup.Labels[tenantv1alpha1.WorkspaceLabel] = workspace\n\t}\n\tdata, err := json.Marshal(group)\n\tif err!= nil {\n\t\treturn nil, err\n\t}\n\treturn t.ksclient.IamV1alpha2().Groups().Patch(context.Background(), group.Name, types.MergePatchType, data, metav1.PatchOptions{})\n}\n\nfunc (t *groupOperator) DeleteGroupBinding(workspace, name string) error {\n\tobj, err := t.resourceGetter.Get(\"groupbindings\", \"\", name)\n\tif err!= nil {\n\t\treturn err\n\t}\n\tns := obj.(*iam",
  "# -*- coding: utf-8 -*-\n\"\"\" Core Neuroscout App \"\"\"\nfrom flask import send_file, render_template, url_for\nfrom.basic import create_app\nfrom.models import db, user_datastore\n\napp, cache = create_app()\n\nfrom flask_mail import Mail\nfrom flask_jwt import JWT\nfrom flask_security import Security\nfrom flask_security.confirmable import confirm_email_token_status, confirm_user\nfrom flask_cors import CORS\n\nmail = Mail(app)\n# Enable CORS\ncors = CORS(\n    app,\n    resources={r\"/api/*\": {\"origins\": \"*\"}, r\"/swagger/\": {\"origins\": \"*\"}})\n\n# These imports require the above\nfrom.auth import authenticate, load_user\nfrom.utils.factory import route_factory\nfrom.api_spec import docs\n\n# Setup Flask-Security and JWT\nsecurity = Security(app, user_datastore)\njwt = JWT(app, authenticate, load_user)\n\n# Set up API routes\nroute_factory(\n    app, docs,\n    [\n        ('DatasetResource', 'datasets/<int:dataset_id>'),\n        ('DatasetListResource', 'datasets'),\n        ('AnalysisRootResource', 'analyses'),\n        ('AnalysisResource', 'analyses/<analysis_id>'),\n        ('AnalysisFullResource', 'analyses/<analysis_id>/full'),\n        ('AnalysisUploadResource', 'analyses/<analysis_id>/upload'),\n        ('BibliographyResource', 'analyses/<analysis_id>/bibliography'),\n        ('CloneAnalysisResource', 'analyses/<analysis_id>/clone'),\n        ('CompileAnalysisResource', 'analyses/<analysis_id>/compile'),\n        ('ReportResource', 'analyses/<analysis_id>/report'),\n        ('AnalysisResourcesResource', 'analyses/<analysis_id>/resources'),\n        ('AnalysisBundleResource', 'analyses/<analysis_id>/bundle'),\n        ('AnalysisFillResource', 'analyses/<analysis_id>/fill'),\n        ('RunListResource', 'runs'),\n        ('RunResource', 'runs/<int:run_id>'),\n        ('PredictorListResource', 'predictors'),\n        ('PredictorResource', 'predictors/<int:predictor_id>'),\n        ('PredictorCollectionResource', 'predictors/collection/<int:pc_id>'),\n        ('PredictorCollectionCreateResource', 'predictors/collection'),\n        ('PredictorEventListResource', 'predictor-events'),\n        ('UserRootResource', 'user'),\n        ('UserDetailResource', 'user/<string:user_name>'),\n        ('UserAnalysisListResource', 'user/<string:user_name>/analyses'),\n        ('UserPrivateAnalysisListResource', 'user/myanalyses'),\n        ('UserListResource', 'users'),\n        ('UserTriggerResetResource', 'user/reset_password'),\n        ('UserResetSubmitResource', 'user/submit_token'),\n        ('UserResendConfirm', 'user/resend_confirmation'),\n        ('UserPredictorListResource', 'user/predictors'),\n        ('UserPredictorCollectionResource', 'user/collections'),\n        ('TaskResource', 'tasks/<int:task_id>'),\n        ('TaskPredictorsResource', 'tasks/<int:task_id>/predictors'),\n        ('TaskListResource', 'tasks'),\n        ('ImageVersionResource', 'image_version')\n    ])\n\n\n@app.route('/confirm/<token>')\ndef confirm(token):\n    ''' Serve confirmaton page '''\n    expired, invalid, user = confirm_email_token_status(token)\n    name, confirmed = None, None\n    if user:\n        if not expired and not invalid:\n            confirmed = confirm_user(user)\n            db.session.commit()\n        name = user.name\n    else:\n        confirmed = None\n    return render_template(\n        'confirm.html', confirmed=confirmed, expired=expired, invalid=invalid,\n        name=name, action_url=url_for('index', _external=True))\n\n\n@app.route('/', defaults={'path': ''})\n@app.route('/<path:path>')\ndef index(path):\n    ''' Serve index '''\n    return send_file(\"frontend/build/index.html\")\n",
  "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<!-- NewPage -->\n<html lang=\"en\">\n<head>\n<!-- Generated by javadoc (1.8.0_60) on Mon Jul 04 10:07:59 UTC 2016 -->\n<title>org.springframework.http.client.support Class Hierarchy (Spring Framework 4.2.7.RELEASE API)</title>\n<meta name=\"date\" content=\"2016-07-04\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"../../../../../stylesheet.css\" title=\"Style\">\n<script type=\"text/javascript\" src=\"../../../../../script.js\"></script>\n</head>\n<body>\n<script type=\"text/javascript\"><!--\n    try {\n        if (location.href.indexOf('is-external=true') == -1) {\n            parent.document.title=\"org.springframework.http.client.support Class Hierarchy (Spring Framework 4.2.7.RELEASE API)\";\n        }\n    }\n    catch(err) {\n    }\n//-->\n</script>\n<noscript>\n<div>JavaScript is disabled on your browser.</div>\n</noscript>\n<!-- ========= START OF TOP NAVBAR ======= -->\n<div class=\"topNav\"><a name=\"navbar.top\">\n<!--   -->\n</a>\n<div class=\"skipNav\"><a href=\"#skip.navbar.top\" title=\"Skip navigation links\">Skip navigation links</a></div>\n<a name=\"navbar.top.firstrow\">\n<!--   -->\n</a>\n<ul class=\"navList\" title=\"Navigation\">\n<li><a href=\"../../../../../overview-summary.html\">Overview</a></li>\n<li><a href=\"package-summary.html\">Package</a></li>\n<li>Class</li>\n<li class=\"navBarCell1Rev\">Tree</li>\n<li><a href=\"../../../../../deprecated-list.html\">Deprecated</a></li>\n<li><a href=\"../../../../../index-files/index-1.html\">Index</a></li>\n<li><a href=\"../../../../../help-doc.html\">Help</a></li>\n</ul>\n<div class=\"aboutLanguage\">Spring Framework</div>\n</div>\n<div class=\"subNav\">\n<ul class=\"navList\">\n<li><a href=\"../../../../../org/springframework/http/client/package-tree.html\">Prev</a></li>\n<li><a href=\"../../../../../org/springframework/http/converter/package-tree.html\">Next</a></li>\n</ul>\n<ul class=\"navList\">\n<li><a href=\"../../../../../index.html?org/springframework/http/client/support/package-tree.html\" target=\"_top\">Frames</a></li>\n<li><a href=\"package-tree.html\" target=\"_top\">No&nbsp;Frames</a></li>\n</ul>\n<ul class=\"navList\" id=\"allclasses_navbar_top\">\n<li><a href=\"../../../../../allclasses-noframe.html\">All&nbsp;Classes</a></li>\n</ul>\n<div>\n<script type=\"text/javascript\"><!--\n  allClassesLink = document.getElementById(\"allclasses_navbar_top\");\n  if(window==top) {\n    allClassesLink.style.display = \"block\";\n  }\n  else {\n    allClassesLink.style.display = \"none\";\n  }\n  //-->\n</script>\n</div>\n<a name=\"skip.navbar.top\">\n<!--   -->\n</a></div>\n<!-- ========= END OF TOP NAVBAR ========= -->\n<div class=\"header\">\n<h1 class=\"title\">Hierarchy For Package org.springframework.http.client.support</h1>\n<span class=\"packageHierarchyLabel\">Package Hierarchies:</span>\n<ul class=\"horizontal\">\n<li><a href=\"../../../../../overview-tree.html\">All Packages</a></li>\n</ul>\n</div>\n<div class=\"contentContainer\">\n<h2 title=\"Class Hierarchy\">Class Hierarchy</h2>\n<ul>\n<li type=\"circle\">java.lang.<a href=\"http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true\" title=\"class or interface in java.lang\"><span class=\"typeNameLink\">Object</span></a>\n<ul>\n<li type=\"circle\">org.springframework.http.client.support.<a href=\"../../../../../org/springframework/http/client/support/AsyncHttpAccessor.html\" title=\"class in org.springframework.http.client.support\"><span class=\"typeNameLink\">AsyncHttpAccessor</span></a></li>\n<li type=\"circle\">org.springframework.http.client.support.<a href=\"../../../../../org/springframework/http/client/support/HttpAccessor.html\" title=\"class in org.springframework.http.client.support\"><span class=\"typeNameLink\">HttpAccessor</span></a>\n<ul>\n<li type=\"circle\">org.springframework.http.client.support.<a href=\"../../../../../org/springframework/http/client/support/InterceptingHttpAccessor.html\" title=\"class in org.springframework.http.client.support\"><span class=\"typeNameLink\">InterceptingHttpAccessor</span></a></li>\n</ul>\n</li>\n<li type=\"circle\">org.springframework.http.client.support.<a href=\"../../../../../org/springframework/http/client/support/HttpRequestWrapper.html\" title=\"class in org.springframework.http.client.support\"><span class=\"typeNameLink\">HttpRequestWrapper</span></a> (implements org.springframework.http.<a href=\"../../../../../org/springframework/http/HttpRequest.html\" title=\"interface in org.springframework.http\">HttpRequest</a>)</li>\n<li type=\"circle\">org.springframework.http.client.support.<a href=\"../../../../../org/springframework/http/client/support/ProxyFactoryBean.html\" title=\"class in org.springframework.http.client.support\"><span class=\"typeNameLink\">ProxyFactoryBean</span></a> (implements org.springframework.beans.factory.<a href=\"../../../../../org/springframework/beans/factory/FactoryBean.html\" title=\"interface in org.springframework.beans.factory\">FactoryBean</a>&lt;T&gt;, org.springframework.beans.factory.<a href=\"../../../../../org/springframework/beans/factory/InitializingBean.html\" title=\"interface in org.springframework.beans.factory\">InitializingBean</a>)</li>\n</ul>\n</li>\n</ul>\n</div>\n<!-- ======= START OF BOTTOM NAVBAR ====== -->\n<div class=\"bottomNav\"><a name=\"navbar.bottom\">\n<!--   -->\n</a>\n<div class=\"skipNav\"><a href=\"#skip.navbar.bottom\" title=\"Skip navigation links\">Skip navigation links</a></div>\n<a name=\"navbar.bottom.firstrow\">\n<!--   -->\n</a>\n<ul class=\"navList\" title=\"Navigation\">\n<li><a href=\"../../../../../overview-summary.html\">Overview</a></li>\n<li><a href=\"package-summary.html\">Package</a></li>\n<li>Class</li>\n<li class=\"navBarCell1Rev\">Tree</li>\n<li><a href=\"../../../../../deprecated-list.html\">Deprecated</a></li>\n<li><a href=\"../../../../../index-files/index-1.html\">Index</a></li>\n<li><a href=\"../../../../../help-doc.html\">Help</a></li>\n</ul>\n<div class=\"aboutLanguage\">Spring Framework</div>\n</div>\n<div class=\"subNav\">\n<ul class=\"navList\">\n<li><a href=\"../../../../../org/springframework/http/client/package-tree.html\">Prev</a></li>\n<li><a href=\"../../../../../org/springframework/http/converter/package-tree.html\">Next</a></li>\n</ul>\n<ul class=\"navList\">\n<li><a href=\"../../../../../index.html?org/springframework/http/client/support/package-tree.html\" target=\"_top\">Frames</a></li>\n<li><a href=\"package-tree.html\" target=\"_top\">No&nbsp;Frames</a></li>\n</ul>\n<ul class=\"navList\" id=\"allclasses_navbar_bottom\">\n<li><a href=\"../../../../../allclasses-noframe.html\">All&nbsp;Classes</a></li>\n</ul>\n<div>\n<script type=\"text/javascript\"><!--\n  allClassesLink = document.getElementById(\"allclasses_navbar_bottom\");\n  if(window==top) {\n    allClassesLink.style.display = \"block\";\n  }\n  else {\n    allClassesLink.style.display = \"none\";\n",
  "<!DOCTYPE html>\n<html>\n<style>\n.absolutePosition { position: fixed; }\n.float:before { float: right; content: ''; }\n.float:first-letter { float: right; }\n.inline::first-letter { content: ''; }\n</style>\n<script>\nif (window.testRunner)\n    testRunner.dumpAsText();\n\nfunction startTest() {\n    document.body.offsetTop;\n    var parent = document.getElementById(\"parent\");\n    var child = document.getElementById(\"child\");\n    child.setAttribute('class', 'inline');\n    document.body.offsetTop;\n    parent.removeChild(child);\n    document.body.offsetTop;\n    parent.setAttribute('class', 'inline');\n}\nwindow.onload = startTest;\n</script>\nWebKit Bug 85759 - Crash in RenderBlock::updateFirstLetterStyle.\n<div class=\"float\" id=\"parent\">\n<div class=\"absolutePosition\" id=\"child\"></div>\nPASS if test does not crash.\n</div>\n</html>\n",
  "\ufeff-------------------------------------------------------------------------------\r\n-- <copyright company=\"Sherlock\">\r\n--     Copyright 2013 Sherlock. Licensed under the Apache License, Version 2.0.\r\n-- </copyright>\r\n-------------------------------------------------------------------------------\r\n\r\nCREATE PROCEDURE [Tests].[GetTestStepsByTestEnvironmentId]\r\n    @id INT\r\nAS\r\n    SELECT\r\n        [pk_TestStepId]\r\n    FROM [Tests].[TestStep]\r\n    WHERE [fk_TestEnvironmentId] = @id\r\n",
  "const createContact = () => {\n  const main = document.querySelector('#Content');\n  const container = document.createElement('div');\n  container.classList.add('contact-container', 'container', 'border', 'rounded', 'text-center');\n  const temp = document.createElement('h2');\n  temp.classList.add('h2', 'title');\n  temp.innerHTML = 'Get In Contact With Mr. Bonanza!';\n  container.appendChild(temp);\n  main.appendChild(container);\n};\nexport default createContact;",
  "/*----------------------------------------------------------------------------*/\n/* Copyright (c) 2019-2020 FIRST. All Rights Reserved.                        */\n/* Open Source Software - may be modified and shared by FRC teams. The code   */\n/* must be accompanied by the FIRST BSD license file in the root directory of */\n/* the project.                                                               */\n/*----------------------------------------------------------------------------*/\n\n#include \"frc2/command/PIDCommand.h\"\n\nusing namespace frc2;\n\nPIDCommand::PIDCommand(PIDController controller,\n                       std::function<double()> measurementSource,\n                       std::function<double()> setpointSource,\n                       std::function<void(double)> useOutput,\n                       std::initializer_list<Subsystem*> requirements)\n    : m_controller{controller},\n      m_measurement{std::move(measurementSource)},\n      m_setpoint{std::move(setpointSource)},\n      m_useOutput{std::move(useOutput)} {\n  AddRequirements(requirements);\n}\n\nPIDCommand::PIDCommand(PIDController controller,\n                       std::function<double()> measurementSource,\n                       std::function<double()> setpointSource,\n                       std::function<void(double)> useOutput,\n                       wpi::ArrayRef<Subsystem*> requirements)\n    : m_controller{controller},\n      m_measurement{std::move(measurementSource)},\n      m_setpoint{std::move(setpointSource)},\n      m_useOutput{std::move(useOutput)} {\n  AddRequirements(requirements);\n}\n\nPIDCommand::PIDCommand(PIDController controller,\n                       std::function<double()> measurementSource,\n                       double setpoint, std::function<void(double)> useOutput,\n                       std::initializer_list<Subsystem*> requirements)\n    : PIDCommand(\n          controller, measurementSource, [setpoint] { return setpoint; },\n          useOutput, requirements) {}\n\nPIDCommand::PIDCommand(PIDController controller,\n                       std::function<double()> measurementSource,\n                       double setpoint, std::function<void(double)> useOutput,\n                       wpi::ArrayRef<Subsystem*> requirements)\n    : PIDCommand(\n          controller, measurementSource, [setpoint] { return setpoint; },\n          useOutput, requirements) {}\n\nvoid PIDCommand::Initialize() { m_controller.Reset(); }\n\nvoid PIDCommand::Execute() {\n  m_useOutput(m_controller.Calculate(m_measurement(), m_setpoint()));\n}\n\nvoid PIDCommand::End(bool interrupted) { m_useOutput(0); }\n\nPIDController& PIDCommand::GetController() { return m_controller; }\n",
  "/**\n * Copyright (c) 2014, Institute of Telematics, Karlsruhe Institute of Technology.\n * \n * This file is part of the PktAnon project. PktAnon is distributed under 2-clause BSD licence. \n * See LICENSE file found in the top-level directory of this distribution.\n */\n\n#include \"TransformationsConfigurator.h\"\n//----------------------------------------------------------------------------------------------\n#include \"AnonFactory.h\"\n#include \"anonprimitives/AnonPrimitive.h\"\n#include \"transformations/PseudoheaderAwareTransformation.h\"\n\n#include <PHF.h>\n#include <PHT.h>\n\n#include \"log.h\"\n#include \"debug.h\"\n\nusing namespace pktanon;\n\nTransformationsConfigurator& TransformationsConfigurator::instance()\n{\n  static TransformationsConfigurator tc;\n  return tc;\n}\n\nvoid TransformationsConfigurator::register_configurator(std::string config_name, TransformationsConfigurator::Configurator configurator)\n{\n  instance().supported_packets.emplace(config_name, configurator);\n}\n\nvoid TransformationsConfigurator::configure_packet_transformations( const PktAnonConfig& config )\n{\n//   PRINT(\"REGISTERED PACKETS[\" <<  supported_packets.size() <<  \"]\");\n//   for (auto& packet:supported_packets)\n//     PRINT(packet.first);\n\n  for (const auto& packet_config: config.get_packets())\n  {\n    auto it = supported_packets.find(packet_config.get_protocol());\n    if (it!= supported_packets.end())\n    {\n      (*it).second(packet_config, config);\n    }\n    else\n    {\n      _plg_error(\"unknown packet: \" <<  packet_config.get_protocol());\n    }\n  }\n}\n\nvoid TransformationsConfigurator::configure_transformations_lookups()\n{\n  //TODO remove me!\n  if (!payload_transformation)\n  {\n    throw std::runtime_error(\"payload packet must be configured\");\n  }\n  \n  // linktype lookup is done only once,  so just copy the data there\n  Transformation::linktype_lookup_table = std::move(included_linktypes);\n\n  // configure lookup by ethertype\n  {\n    \n    size_t table_size;\n    auto hash_fn = generate_phf(included_ethertypes,  table_size);\n\n    PHT<uint16_t,  Transformation*> ethetype_lookup_table(hash_fn, table_size);\n    \n    for (auto included_ethertype :  included_ethertypes)\n    {\n      ethetype_lookup_table.insert(included_ethertype.first,  included_ethertype.second);\n    }\n    \n    Transformation::ethetype_lookup_table =std::move(ethetype_lookup_table); //!MOVE!\n  }\n  \n  //configure lookup by protocol\n  {\n    std::unordered_map<unsigned, Transformation*> checksum_protocols;\n    checksum_protocols.reserve(included_protocols.size());\n\n    for (auto included_protocol :  included_protocols)\n    {\n      if (dynamic_cast<PseudoheaderAwareTransformation*>(included_protocol.second)!= nullptr)\n      {\n        checksum_protocols.emplace(included_protocol.first, included_protocol.second);\n      }\n    }\n    \n    // IPv6 Hop-by-Hop Option has proto value 0 and is not checksum aware\n    // p is 31,  the value 31 * 16 is not valid proto value and will map to 0\n    checksum_protocols.emplace(prime * 16,  nullptr);\n    \n    size_t table_size;\n    size_t cp_table_size;\n    auto hash_fn = generate_phf(included_protocols, table_size);\n    auto cp_hash_fn = generate_phf(checksum_protocols, cp_table_size);\n\n    PHT<uint8_t,  Transformation*> protocol_lookup_table(hash_fn, table_size);\n    PHT<unsigned,  bool> checksums_lookup_table(cp_hash_fn, cp_table_size);\n    \n    for (auto included_protocol :  included_protocols)\n    {\n      protocol_lookup_table.insert(included_protocol.first,  included_protocol.second);\n//       TRACEV((int)included_protocol.first);\n//       if (dynamic_cast<PseudoheaderAwareTransformation*>(included_protocol.second)!= nullptr)\n//       {\n//         checksums_lookup_table.insert(included_protocol.first,  true);\n//       }\n    }\n\n    for (auto checksum_protocol :  checksum_protocols)\n    {\n      checksums_lookup_table.insert(checksum_protocol.first,  true);\n//       TRACEV(checksum_protocol.first);\n//       TRACEV(cp_hash_fn(checksum_protocol.first));\n    }\n\n//       TRACEV(cp_hash_fn(0));\n\n    \n    Transformation::protocol_lookup_table = std::move(protocol_lookup_table);\n    Transformation::checksums_lookup_table = std::move(checksums_lookup_table);\n  }\n  \n  // add payload packet\n  Transformation::payloadTransformation = payload_transformation;\n}\n\nAnonPrimitive* TransformationsConfigurator::configure_packet_field(const string& field, const PktAnonConfig::PacketConfig& packet_config)\n{\n  if (!packet_config.has_field(field)) return nullptr;\n \n  auto& anons_config = packet_config.get_anon_config(field);\n\n  if (anons_config.size() == 0) throw std::runtime_error(\"empty configuration for field: \" + field); //TODO exception or nullptr\n\n  _plg_verbose (\"\\t\\t\" << field << \"[0]: \" << anons_config[0].get_anon_class());\n  AnonPrimitive* first = AnonFactory::create_anon(anons_config[0].get_anon_class(),  anons_config[0].get_anon_params());\n  AnonPrimitive* prev = first;\n\n  for (int j = 1; j < anons_config.size() ; j++)\n  {\n    _plg_verbose(\"\\t\\t\" << field << \"[\" << j <<\"]: \" << anons_config[j].get_anon_class());\n    AnonPrimitive* next = AnonFactory::create_anon(anons_config[j].get_anon_class(),  anons_config[j].get_anon_params());\n    prev->setNext(next);\n    prev = next;\n  }\n\n  return first;\n}\n",
  "#!/bin/bash\n\ncordova plugin remove readbeyond-plugin-commander\ncordova plugin add../src_plugins/readbeyond-plugin-commander\n\ncordova plugin remove readbeyond-plugin-librarian\ncordova plugin add../src_plugins/readbeyond-plugin-librarian\n\ncordova plugin remove readbeyond-plugin-media\ncordova plugin add../src_plugins/readbeyond-plugin-media\n\ncordova plugin remove readbeyond-plugin-mediarb\ncordova plugin add../src_plugins/readbeyond-plugin-mediarb\n\ncordova plugin remove readbeyond-plugin-unzipper\ncordova plugin add../src_plugins/readbeyond-plugin-unzipper\n\n",
  "\ufeffusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.UI;\nusing NaughtyAttributes;\n\nnamespace GameplayIngredients\n{\n    public class TimerDisplayRig : MonoBehaviour\n    {\n        [NonNullCheck]\n        public Text text;\n        [NonNullCheck]\n        public TextMesh textMesh;\n\n\n        [NonNullCheck]\n        public Timer timer;\n\n        [InfoBox(\"Use the following wildcards:\\n - %h : hours\\n - %m : minutes\\n - %s : seconds\\n - %x : milliseconds\", InfoBoxType.Normal)]\n        public string format = \"%h:%m:%s:%x\";\n\n        private void OnValidate()\n        {\n            UpdateText();\n        }\n\n        private void Reset()\n        {\n            UpdateText();\n        }\n\n        private void Update()\n        {\n            if (timer == null || (text == null && textMesh == null))\n                return;\n\n            UpdateText();\n        }\n\n        void UpdateText()\n        {\n            var value = format;\n\n            uint hours = timer!= null? timer.CurrentHours: 0;\n            uint minutes = timer!= null? timer.CurrentMinutes : 0;\n            uint seconds = timer!= null? timer.CurrentSeconds : 0;\n            uint milliseconds = timer!= null? timer.CurrentMilliseconds : 0;\n\n            value = value.Replace(\"%h\", hours.ToString(\"D2\"));\n            value = value.Replace(\"%m\", minutes.ToString(\"D2\"));\n            value = value.Replace(\"%s\", seconds.ToString(\"D2\"));\n            value = value.Replace(\"%x\", milliseconds.ToString(\"D3\"));\n\n            if (text!= null)\n                text.text = value;\n\n            if (textMesh!= null)\n                textMesh.text = value;\n        }\n    }\n}\n\n",
  "package org.apache.maven.surefire.its;\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport org.apache.maven.surefire.its.fixture.SurefireJUnit4IntegrationTestCase;\nimport org.junit.Test;\n\n/**\n * Test annotation-based TestNG listener\n */\npublic class CheckTestNgListenersIT\n    extends SurefireJUnit4IntegrationTestCase\n{\n    @Test\n    public void testNgListenerReporter()\n    {\n        unpack( \"testng-listeners\" ).mavenTestFailureIgnore( true ).executeTest().assertTestSuiteResults( 1, 0, 1, 0 );\n    }\n\n}\n",
  "---\ntitle: Install AWS CLI on macOS\ncategories: [DevOps]\ntags: [AWS CLI, Mac, AWS]\n---\n\n## Easiest way to install AWS CLI\n\n```\n$ brew install awscli\n```\n\nSee more [http://www.chrisjmendez.com/2017/02/18/aws-installing-aws-client-using-homebrew/](http://www.chrisjmendez.com/2017/02/18/aws-installing-aws-client-using-homebrew/)\n\n## A bit longer way...\n\n```\n$ brew install python3\n$ python3 --version\n```\n\n```\n$ sudo mkdir /usr/local/Frameworks\n$ sudo chown $(whoami):admin /usr/local/Frameworks\n```\n\n```\n$ brew link python\n```\n\n```\nError: pip3: command not found \n$ brew postinstall python3\n$ pip3 --version\n```\n\nURL: [https://docs.aws.amazon.com/cli/latest/userguide/cli-install-macos.html](https://docs.aws.amazon.com/cli/latest/userguide/cli-install-macos.html)",
  "//using SLExtensions.Input;\n\n//namespace Vts.Modeling.Input\n//{\n    //public static class Commands\n    //{\n    //    static Commands()\n    //    {\n    //        Modeling_SetGaussianBeamSize = new Command(\"Modeling_SetGaussianBeamSize\");\n    //    }\n\n    //    public static Command Modeling_SetGaussianBeamSize { get; private set; }\n\n    //}\n//}\n",
  "export { default as Print } from './Print';\n",
  "package ru.alex9127.app.activities;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.content.*;\nimport android.os.AsyncTask;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.widget.*;\nimport java.io.*;\n\nimport ru.alex9127.app.R;\nimport ru.alex9127.app.database.HistoryDataBase;\n\npublic class MainActivity extends AppCompatActivity {\n    public int getDataResult;\n    public static long startTime;\n    public static HistoryDataBase databaseConnector;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        databaseConnector = new HistoryDataBase(this);\n    }\n\n    public void startNew(View v) {\n        new GetData().execute();\n    }\n\n    public void quit(View v) {\n        finish();\n        System.exit(0);\n    }\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n        super.onActivityResult(requestCode, resultCode, data);\n        if (data!= null && data.hasExtra(\"Result\")) {\n            switch (data.getStringExtra(\"Result\")) {\n                case \"Won\":\n                    Toast.makeText(this, \"You completed the game!\",\n                            Toast.LENGTH_LONG).show();\n                    break;\n                case \"Lost\":\n                    Toast.makeText(this, \"Game over\",\n                            Toast.LENGTH_LONG).show();\n            }\n            SharedPreferences p = getSharedPreferences(\"preferences.xml\",\n                    Context.MODE_PRIVATE);\n            SharedPreferences.Editor e = p.edit();\n            e.putInt(\"Coins\", p.getInt(\"Coins\", 0) +\n                    data.getIntExtra(\"Coins gotten\", 0));\n            e.apply();\n        }\n        new SaveData().execute();\n    }\n\n    public void continueExisting(View view) {\n        new GetDataWithSave().execute();\n    }\n\n    public void upgrade(View view) {\n        Intent i = new Intent(this, UpgradeActivity.class);\n        startActivity(i);\n    }\n\n    class GetData extends AsyncTask<Void, Integer, Integer> {\n        protected Integer doInBackground(Void... args) {\n            return databaseConnector.sum();\n        }\n\n        @Override\n        protected void onPostExecute(Integer i) {\n            getDataResult = i;\n            startTime = System.currentTimeMillis();\n            Intent intent = new Intent(MainActivity.this, GameActivity.class);\n            intent.putExtra(\"Time\", getDataResult);\n            intent.putExtra(\"Name\", ((EditText) findViewById(R.id.enterName)).getText().toString());\n            startActivityForResult(intent, 0);\n        }\n    }\n\n    class GetDataWithSave extends AsyncTask<Void, Integer, Integer> {\n        protected Integer doInBackground(Void... args) {\n            return databaseConnector.sum();\n        }\n\n        @Override\n        protected void onPostExecute(Integer i) {\n            String contents = \"\";\n            try {\n                FileInputStream fis = MainActivity.this.openFileInput(\"saveData.json\");\n                InputStreamReader inputStreamReader = new InputStreamReader(fis);\n                StringBuilder stringBuilder = new StringBuilder();\n                try (BufferedReader reader = new BufferedReader(inputStreamReader)) {\n                    String line = reader.readLine();\n                    while (line!= null) {\n                        stringBuilder.append(line).append('\\n');\n                        line = reader.readLine();\n                    }\n                } catch (IOException e) {\n                    Toast.makeText(MainActivity.this, \"Error occurred reading data from saveData.json\",\n                            Toast.LENGTH_SHORT).show();\n                } finally {\n                    contents = stringBuilder.toString();\n                }\n            } catch (FileNotFoundException e) {\n                Toast.makeText(MainActivity.this, \"File saveData.json not found\",\n                        Toast.LENGTH_SHORT).show();\n            }\n            if (!contents.equals(\"\")) {\n                getDataResult = i;\n                Intent intent = new Intent(MainActivity.this, GameActivity.class);\n                intent.putExtra(\"Name\", ((EditText) findViewById(R.id.enterName)).getText().toString());\n                intent.putExtra(\"Save\", contents);\n                intent.putExtra(\"Time\", getDataResult);\n                startTime = System.currentTimeMillis();\n                startActivityForResult(intent, 0);\n            }\n        }\n    }\n\n    public static class SaveData extends AsyncTask<Void, Integer, Void> {\n        protected Void doInBackground(Void... args) {\n            databaseConnector.insert((int) ((System.currentTimeMillis() - startTime) / 1000));\n            return null;\n        }\n    }\n}",
  "# Generated by Django 3.1.7 on 2021-04-07 20:01\n\nfrom django.db import migrations, models\n\n\nclass Migration(migrations.Migration):\n\n    dependencies = [\n        ('accounts', '0014_auto_20210405_0225'),\n    ]\n\n    operations = [\n        migrations.AddField(\n            model_name='profile',\n            name='github_link',\n            field=models.URLField(blank=True, null=True, verbose_name='Github URL'),\n        ),\n        migrations.AlterField(\n            model_name='customuser',\n            name='username',\n            field=models.CharField(max_length=100, unique=True, verbose_name='Username'),\n        ),\n    ]\n",
  "require \"mox_api/version\"\nrequire'mox_api/configuration'\n\nclass MoxApi\n  \n\n  def MoxApi.config(&block)\n    yield(MoxApi.configuration)\n  end\n\n\n  def MoxApi.configuration\n    @configuration ||= MoxApi::Configuration.new\n  end\nend\n",
  "// @flow\nimport styled from'styled-components';\nimport { typography, colors, gridSize, math } from '@findable/theme';\n\n/**\n * Provide a styled container for field components\n */\nconst FieldWrapper = styled.div`\n  margin-top: ${gridSize}px;\n`;\n\n/**\n * Provide a styled Label for field components\n */\nexport const Label = styled.label`\n  ${typography.h200()} display: inline-block;\n  margin-bottom: ${math.multiply(gridSize, 0.5)}px;\n  margin-top: 0;\n`;\n\nexport const RequiredIndicator = styled.span`\n  color: ${colors.R400};\n  padding-left: ${math.multiply(gridSize, 0.25)}px;\n`;\n\nexport default FieldWrapper;\n",
  "(function() {\n  angular.module('wdApp.apps.counties', []).controller('CountiesController', \n  ['$scope', 'SysMgmtData', 'toastr', 'toastrConfig',\n\tfunction($scope, SysMgmtData, toastr, toastrConfig) {\n\t\t//why?\n\t\tvar cvm = this;\t\n\t\tvar fetch_url = WebDaptiveAppConfig.base_county_url +  WebDaptiveAppConfig.fetch_url;\n\t\tvar refresh_url =  WebDaptiveAppConfig.base_county_url +  WebDaptiveAppConfig.refresh_url;\n\t\tvar create_url =  WebDaptiveAppConfig.base_county_url +  WebDaptiveAppConfig.create_url;\n\t\tvar update_url =  WebDaptiveAppConfig.base_county_url +  WebDaptiveAppConfig.update_url;\t\n\t\tvar delete_url =  WebDaptiveAppConfig.base_county_url +  WebDaptiveAppConfig.delete_url;\t\t\n\t\tcvm.isActive = false;\n\t\tvar skipPage = false;\t//used to ensure not calling server multiple times\n\t\ttoastrConfig.closeButton = true;\t\t\n\t\t\n\t\t//form model data\n\t\tcvm.county = {\n\t\t\tid: '',\n\t\t\tdescription: ''\n\t\t};\n\t\t\n\t\t//pagination Options\n\t\tvar paginationOptions = {\n\t\t\tpageNumber: 1,\n\t\t\tpageSize: 20,\n\t\t};\t\t\n\t\t\n\t\t//grid column defs\n\t\tvar countyColumnDefs = [\n\t\t\t{displayName: \"County Id\", field: \"id\", enableColumnMenu: false, enableSorting: false, maxWidth: 200},\n\t\t\t{displayName: \"County Description\", field: \"description\", enableColumnMenu: false, enableSorting: false, cellTooltip: true}\n\t\n\t\t];\n\t\t\n \t\t//grid options\n\t\tcvm.countyGridOptions = {\n\t\t\tcolumnDefs: countyColumnDefs,\n\t\t\tenableFullRowSelection: true,\n\t\t\tenableRowHeaderSelection: false,\n\t\t\tmultiSelect: false,\t\t\t\n\t\t\tpaginationPageSizes: [20],\t\t\t\n\t\t\tpagingPageSize: 20,\n\t\t\tuseExternalPagination: true,\n\t\t\tenableColumnResizing: true,\n\t\t\tonRegisterApi: function (gridApi) {\n\t\t\t\t//why is this needed\n\t\t\t\t$scope.gridApi = gridApi;\n\t\t\t\t//grid row select function\t\t\t\t\n\t\t\t\tgridApi.selection.on.rowSelectionChanged($scope,function(row){\n\t\t\t\t\tcvm.county.id = row.entity.id;\n\t\t\t\t\tcvm.county.description = row.entity.description;\n\t\t\t\t\t//console.log(row);\n\t\t\t\t});\t\n\t\t\t\tgridApi.pagination.on.paginationChanged($scope, function (newPage, pageSize) {\n\t\t\t\t\t//this events fires anytime page number is changed pay attention to the logic and api to figure out the why\t\t\t\t\t\n\t\t\t\t\t//console.log(\"np1: \" + newPage + \" skipPage \" + skipPage);\n\t\t\t\t\tif (!skipPage)\n\t\t\t\t\t{\t\t\n\t\t\t\t\t\tpaginationOptions.pageNumber = newPage;\n\t\t\t\t\t\tpaginationOptions.pageSize = pageSize;\n\t\t\t\t\t\tprocessPostData(fetch_url, new qat.model.pagedInquiryRequest(newPage - 1, true), false);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tskipPage = false;\n\t\t\t\t\t\t//console.log(\"np2: \" + newPage + \" skipPage \" + skipPage);\t\t\t\t\t\t\n\t\t\t\t\t}\t\t\n\t\t\t\t});\n\t\t\t}\t\t\t\n\t\t};\n\t\t\n\t\t//initial data load\n\t\tprocessPostData(fetch_url, new qat.model.pagedInquiryRequest( 0, true), true);\n\t\t\n\t\t//reusable data methods\n\t\t//reusable processGetData (refresh,delete)\n\t\tfunction processGetData(_url, _skip)\n\t\t{\n\t\t\t//console.log(_url);\t\t\t\n\t\t\tSysMgmtData.processGetPageData(_url,  function(res){\n\t\t\t\tvar dataThisPage = (res.counties)?  res.counties : new Array();\n\t\t\t\tcvm.gList =  dataThisPage;\t\n\t\t\t\tcvm.countyGridOptions.data = dataThisPage;\t\n\t\t\t\tcvm.isActive = false;\t\t\t\t\t\n\t\t\t\tcvm.countyGridOptions.totalItems = (res)? res.resultsSetInfo.totalRowsAvailable : 0;\n\t\t\t\tskipPage = _skip;\t\t\t\t\n\t\t\t\t//this events causes paginationChanged to be fired so a special switch is used to prevent server double call\t\t\t\t\t\n\t\t\t\tcvm.countyGridOptions.paginationCurrentPage = (res)? res.resultsSetInfo.startPage + 1 : 0;\t\n\t\t\t\t//console.log(res.resultsSetInfo);\t\n\t\t\t\tskipPage =  false;\t\t\t\t\t\n\t\t\t});\t\t\t\t\n\t\t};\t\n\n\t\t//reusable processGetData (insert, update, pagedFetch)\n\t\tfunction processPostData(_url, _req, _skip)\n\t\t{\n\t\t\t//console.log(_url);\t\n\t\t\tSysMgmtData.processPostPageData(_url, _req, function(res){\n\t\t\t\t\t//console.log(\"ppdcc\");\t\t\t\t\n\t\t\t\t\t//console.log(res);\t\t\t\t\n\t\t\t\t\tvar dataThisPage = (res.counties)?  res.counties : new Array();\n\t\t\t\t\tcvm.gList =  dataThisPage;\t\n\t\t\t\t\tcvm.countyGridOptions.data = dataThisPage;\n\t\t\t\t\tcvm.isActive = false;\t\n\t\t\t\t\tcvm.countyGridOptions.totalItems = (res)? res.resultsSetInfo.totalRowsAvailable : 0;\t\n\t\t\t\t\tskipPage = _skip;\n\t\t\t\t\t//this events causes paginationChanged to be fired so a special switch is used to prevent server double call\n\t\t\t\t\tcvm.countyGridOptions.paginationCurrentPage = (res)? res.resultsSetInfo.startPage + 1 : 0;\t\n\t\t\t\t\t//console.log(res.resultsSetInfo);\t\n\t\t\t\t\tskipPage =  false;\t\t\t\t\t\t\n\t\t\t});\t\t\t\n\n\t\t};\t\n\n\t\t\n\t\t//refresh county function\n\t\tcvm.refreshCounties = function(refreshCount) {\n\t\t\tcvm.isActive =!cvm.isActive;\n\t\t\t//clear form data\n\t\t\tcvm.clearForm();\t\t\n\t\t\tvar send_url = refresh_url + \"?refreshInt=\" + refreshCount + \"&retList=true&retPaged=true\";\n\t\t\tprocessGetData(send_url, true);\n\t\t};\t\t\t\n\t\t\n\t\t//form methods\n\t\t//reusable clear form logic\n\t\tcvm.clearForm = function (){\n\t\t\t//clear data\n\t\t\tcvm.county.id = \"\";\n\t\t\tcvm.county.description = \"\";\n\t\t\t//set form to pristine\n\t\t\tcvm.form_county.$setPristine();\t\n\t\t\t//clear grid selection //why?\n\t\t\t$scope.gridApi.selection.clearSelectedRows();\n\t\t};\n\t\t\n\t\t//reusable button form logic\t\t\n\t\tcvm.processButtons = function(_btnType){\t\n\t\t\t//console.log(_btnType);\t\t\n\t\t\tif (cvm.form_county.$valid)\n\t\t\t{\t\n\t\t\t\tswitch (_btnType) {\n\t\t\t\t//Add Button\t\t\t\t\t\t\t\n\t\t\t\tcase 'A':\n\t\t\t\t\tprocessPostData(create_url,  new qat.model.reqCounty( new qat.model.county(cvm.county.id, cvm.county.description),true, true), true);\t\n\t\t\t\t\tbreak;\n\t\t\t\t//Update Button\t\t\t\t\t\t\n\t\t\t\tcase 'U':\n\t\t\t\t\tprocessPostData(update_url,  new qat.model.reqCounty( new qat.model.county(cvm.county.id, cvm.county.description),true, true), true);\t\n\t\t\t\t\tbreak;\n\t\t\t\t//Delete Button\t\n\t\t\t\tcase 'D':\n\t\t\t\t\tvar send_url = delete_url + \"?countyId=\" + cvm.county.id + \"&retList=true&retPaged=true\";\n\t\t\t\t\tprocessGetData(send_url, true);\n\t\t\t\t\tbreak;\t\n\t\t\t\t//List Button\t\n\t\t\t\tcase 'L':\n\t\t\t\t\tprocessPostData(fetch_url, new qat.model.pagedInquiryRequest( 0, true), true);\n\t\t\t\t\tbreak;\t\t\t\t\t\n\t\t\t\tdefault: \n\t\t\t\t\tconsole.log('Invalid button type:'+ _btnType);\t\t\t\t\t\n\t\t\t\t};\n\t\t\t\t//clear the form\n\t\t\t\tcvm.clearForm();\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif (_btnType == 'L'){\n\t\t\t\t\tprocessPostData(fetch_url, new qat.model.pagedInquiryRequest( 0, true), true);\n\t\t\t\t\t//clear the form\n\t\t\t\t\tcvm.clearForm();\n\t\t\t\t}\n\t\t\t\telse{\t\n\t\t\t\t\ttoastr.error('County form error, please correct and resubmit.', 'Error');\n\t\t\t\t}\t\n\t\t\t}\t\t\n\t\t};\n\t\t\n",
  "import java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport javax.annotation.Generated;\nimport com.fasterxml.jackson.annotation.JsonCreator;\nimport com.fasterxml.jackson.annotation.JsonInclude;\nimport com.fasterxml.jackson.annotation.JsonProperty;\nimport com.fasterxml.jackson.annotation.JsonPropertyOrder;\nimport com.fasterxml.jackson.annotation.JsonValue;\nimport org.apache.commons.lang.builder.EqualsBuilder;\nimport org.apache.commons.lang.builder.HashCodeBuilder;\nimport org.apache.commons.lang.builder.ToStringBuilder;\n\n@JsonInclude(JsonInclude.Include.NON_NULL)\n@Generated(\"org.jsonschema2pojo\")\n@JsonPropertyOrder({\n    \"name\",\n    \"type\",\n    \"aggregate\",\n    \"timeUnit\",\n    \"bin\",\n    \"scale\",\n    \"axis\",\n    \"band\",\n    \"sort\"\n})\npublic class X {\n\n    /**\n     * \n     * (Required)\n     * \n     */\n    @JsonProperty(\"name\")\n    private String name;\n    /**\n     * \n     * (Required)\n     * \n     */\n    @JsonProperty(\"type\")\n    private X.Type type;\n    @JsonProperty(\"aggregate\")\n    private X.Aggregate aggregate;\n    @JsonProperty(\"timeUnit\")\n    private X.TimeUnit timeUnit;\n    @JsonProperty(\"bin\")\n    private Bin bin = null;\n    @JsonProperty(\"scale\")\n    private Scale scale;\n    @JsonProperty(\"axis\")\n    private Axis axis;\n    @JsonProperty(\"band\")\n    private Band band;\n    @JsonProperty(\"sort\")\n    private List<Sort> sort = new ArrayList<Sort>();\n\n    /**\n     * \n     * (Required)\n     * \n     * @return\n     *     The name\n     */\n    @JsonProperty(\"name\")\n    public String getName() {\n        return name;\n    }\n\n    /**\n     * \n     * (Required)\n     * \n     * @param name\n     *     The name\n     */\n    @JsonProperty(\"name\")\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public X withName(String name) {\n        this.name = name;\n        return this;\n    }\n\n    /**\n     * \n     * (Required)\n     * \n     * @return\n     *     The type\n     */\n    @JsonProperty(\"type\")\n    public X.Type getType() {\n        return type;\n    }\n\n    /**\n     * \n     * (Required)\n     * \n     * @param type\n     *     The type\n     */\n    @JsonProperty(\"type\")\n    public void setType(X.Type type) {\n        this.type = type;\n    }\n\n    public X withType(X.Type type) {\n        this.type = type;\n        return this;\n    }\n\n    /**\n     * \n     * @return\n     *     The aggregate\n     */\n    @JsonProperty(\"aggregate\")\n    public X.Aggregate getAggregate() {\n        return aggregate;\n    }\n\n    /**\n     * \n     * @param aggregate\n     *     The aggregate\n     */\n    @JsonProperty(\"aggregate\")\n    public void setAggregate(X.Aggregate aggregate) {\n        this.aggregate = aggregate;\n    }\n\n    public X withAggregate(X.Aggregate aggregate) {\n        this.aggregate = aggregate;\n        return this;\n    }\n\n    /**\n     * \n     * @return\n     *     The timeUnit\n     */\n    @JsonProperty(\"timeUnit\")\n    public X.TimeUnit getTimeUnit() {\n        return timeUnit;\n    }\n\n    /**\n     * \n     * @param timeUnit\n     *     The timeUnit\n     */\n    @JsonProperty(\"timeUnit\")\n    public void setTimeUnit(X.TimeUnit timeUnit) {\n        this.timeUnit = timeUnit;\n    }\n\n    public X withTimeUnit(X.TimeUnit timeUnit) {\n        this.timeUnit = timeUnit;\n        return this;\n    }\n\n    /**\n     * \n     * @return\n     *     The bin\n     */\n    @JsonProperty(\"bin\")\n    public Bin getBin() {\n        return bin;\n    }\n\n    /**\n     * \n     * @param bin\n     *     The bin\n     */\n    @JsonProperty(\"bin\")\n    public void setBin(Bin bin) {\n        this.bin = bin;\n    }\n\n    public X withBin(Bin bin) {\n        this.bin = bin;\n        return this;\n    }\n\n    /**\n     * \n     * @return\n     *     The scale\n     */\n    @JsonProperty(\"scale\")\n    public Scale getScale() {\n        return scale;\n    }\n\n    /**\n     * \n     * @param scale\n     *     The scale\n     */\n    @JsonProperty(\"scale\")\n    public void setScale(Scale scale) {\n        this.scale = scale;\n    }\n\n    public X withScale(Scale scale) {\n        this.scale = scale;\n        return this;\n    }\n\n    /**\n     * \n     * @return\n     *     The axis\n     */\n    @JsonProperty(\"axis\")\n    public Axis getAxis() {\n        return axis;\n    }\n\n    /**\n     * \n     * @param axis\n     *     The axis\n     */\n    @JsonProperty(\"axis\")\n    public void setAxis(Axis axis) {\n        this.axis = axis;\n    }\n\n    public X withAxis(Axis axis) {\n        this.axis = axis;\n        return this;\n    }\n\n    /**\n     * \n     * @return\n     *     The band\n     */\n    @JsonProperty(\"band\")\n    public Band getBand() {\n        return band;\n    }\n\n    /**\n     * \n     * @param band\n     *     The band\n     */\n    @JsonProperty(\"band\")\n    public void setBand(Band band) {\n        this.band = band;\n    }\n\n    public X withBand(Band band) {\n        this.band = band;\n        return this;\n    }\n\n    /**\n     * \n     * @return\n     *     The sort\n     */\n    @JsonProperty(\"sort\")\n    public List<Sort> getSort() {\n        return sort;\n    }\n\n    /**\n     * \n     * @param sort\n     *     The sort\n     */\n    @JsonProperty(\"sort\")\n    public void setSort(List<Sort> sort) {\n        this.sort = sort;\n    }\n\n    public X withSort(List<Sort> sort) {\n        this.sort = sort;\n        return this;\n    }\n\n    @Override\n    public String toString() {\n        return ToStringBuilder.reflectionToString(this);\n    }\n\n    @Override\n    public int hashCode() {\n        return new HashCodeBuilder().append(name).append(type).append(aggregate).append(timeUnit).append(bin).append(scale).append(axis).append(band).append(sort).toHashCode();\n    }\n\n    @Override\n    public boolean equals(Object other) {\n        if (other == this) {\n            return true;\n        }\n        if ((other instanceof X) == false) {\n            return false;\n        }\n        X rhs = ((X) other);\n        return new EqualsBuilder().append(name, rhs.name).append(type, rhs.type).append(aggregate, rhs.aggregate).append(timeUnit, rhs.timeUnit).append(bin, rhs.bin).append(scale, rhs.scale).append(axis, rhs.axis).append(band, rhs.band).append(sort, rhs.sort).isEquals();\n    }\n\n    @Generated(\"org.jsonschema2pojo\")\n    public static enum Aggregate {\n\n        AVG(\"avg\"),\n        SUM(\"sum\"),\n        MEDIAN(\"median\"),\n        MIN(\"min\"),\n        MAX(\"max\"),\n        COUNT(\"count\");\n        private final String value;\n        private static Map<String, X.Aggregate> constants = new HashMap<String, X.Aggregate>();\n\n        static {\n            for (X.Aggregate c: values()) {\n                constants.put(c.value, c);\n            }\n        }\n\n        private Aggregate(String value) {\n            this.value = value;\n        }\n\n        @JsonValue\n        @Override\n        public String toString() {\n            return this.value;\n        ",
  "\"\"\"Training script for the WaveNet network on the VCTK corpus.\n\nThis script trains a network with the WaveNet using data from the VCTK corpus,\nwhich can be freely downloaded at the following site (~10 GB):\nhttp://homepages.inf.ed.ac.uk/jyamagis/page3/page58/page58.html\n\"\"\"\n\nfrom __future__ import print_function\n\nimport argparse\nfrom datetime import datetime\nimport json\nimport os\nimport sys\nimport time\n\nimport tensorflow as tf\nfrom tensorflow.python.client import timeline\n\nfrom wavenet import WaveNetModel, AudioReader, optimizer_factory\n\nBATCH_SIZE = 1\nGPU_NUMS = 1\nDATA_DIRECTORY = './VCTK-Corpus'\nLOGDIR_ROOT = './logdir'\nCHECKPOINT_EVERY = 50\nNUM_STEPS = int(10)\nLEARNING_RATE = 1e-3\nWAVENET_PARAMS = './wavenet_params.json'\nSTARTED_DATESTRING = \"{0:%Y-%m-%dT%H-%M-%S}\".format(datetime.now())\nSAMPLE_SIZE = 100000\nL2_REGULARIZATION_STRENGTH = 0\nSILENCE_THRESHOLD = 0.3\nEPSILON = 0.001\nMOMENTUM = 0.9\n\n\ndef get_arguments():\n    def _str_to_bool(s):\n        \"\"\"Convert string to bool (in argparse context).\"\"\"\n        if s.lower() not in ['true', 'false']:\n            raise ValueError('Argument needs to be a '\n                             'boolean, got {}'.format(s))\n        return {'true': True, 'false': False}[s.lower()]\n\n\n    parser = argparse.ArgumentParser(description='WaveNet example network')\n    parser.add_argument('--batch_size', type=int, default=BATCH_SIZE,\n                        help='How many wav files to process at once.')\n    parser.add_argument('--gpu_nums', type=int, default=GPU_NUMS,\n                        help='How many GPU to use to train the model.')\n    parser.add_argument('--data_dir', type=str, default=DATA_DIRECTORY,\n                        help='The directory containing the VCTK corpus.')\n    parser.add_argument('--store_metadata', type=bool, default=False,\n                        help='Whether to store advanced debugging information '\n                        '(execution time, memory consumption) for use with '\n                        'TensorBoard.')\n    parser.add_argument('--logdir', type=str, default=None,\n                        help='Directory in which to store the logging '\n                        'information for TensorBoard. '\n                        'If the model already exists, it will restore '\n                        'the state and will continue training. '\n                        'Cannot use with --logdir_root and --restore_from.')\n    parser.add_argument('--logdir_root', type=str, default=None,\n                        help='Root directory to place the logging '\n                        'output and generated model. These are stored '\n                        'under the dated subdirectory of --logdir_root. '\n                        'Cannot use with --logdir.')\n    parser.add_argument('--restore_from', type=str, default=None,\n                        help='Directory in which to restore the model from. '\n                        'This creates the new model under the dated directory '\n                        'in --logdir_root. '\n                        'Cannot use with --logdir.')\n    parser.add_argument('--checkpoint_every', type=int, default=CHECKPOINT_EVERY,\n                        help='How many steps to save each checkpoint after')\n    parser.add_argument('--num_steps', type=int, default=NUM_STEPS,\n                        help='Number of training steps.')\n    parser.add_argument('--learning_rate', type=float, default=LEARNING_RATE,\n                        help='Learning rate for training.')\n    parser.add_argument('--wavenet_params', type=str, default=WAVENET_PARAMS,\n                        help='JSON file with the network parameters.')\n    parser.add_argument('--sample_size', type=int, default=SAMPLE_SIZE,\n                        help='Concatenate and cut audio samples to this many '\n                       'samples.')\n    parser.add_argument('--l2_regularization_strength', type=float,\n                        default=L2_REGULARIZATION_STRENGTH,\n                        help='Coefficient in the L2 regularization. '\n                        'Disabled by default')\n    parser.add_argument('--silence_threshold', type=float,\n                        default=SILENCE_THRESHOLD,\n                        help='Volume threshold below which to trim the start '\n                        'and the end from the training set samples.')\n    parser.add_argument('--optimizer', type=str, default='adam',\n                        choices=optimizer_factory.keys(),\n                        help='Select the optimizer specified by this option.')\n    parser.add_argument('--momentum', type=float,\n                        default=MOMENTUM, help='Specify the momentum to be '\n                        'used by sgd or rmsprop optimizer. Ignored by the '\n                        'adam optimizer.')\n    parser.add_argument('--histograms', type=_str_to_bool, default=False,\n                         help='Whether to store histogram summaries.')\n    parser.add_argument('--gc_channels', type=int, default=None,\n                        help='Number of global condition channels.')\n    return parser.parse_args()\n\n\ndef save(saver, sess, logdir, step):\n    model_name ='model.ckpt'\n    checkpoint_path = os.path.join(logdir, model_name)\n    print('Storing checkpoint to {}...'.format(logdir), end=\"\")\n    sys.stdout.flush()\n\n    if not os.path.exists(logdir):\n        os.makedirs(logdir)\n\n    saver.save(sess, checkpoint_path, global_step=step)\n    print(' Done.')\n\n\ndef load(saver, sess, logdir):\n    print(\"Trying to restore saved checkpoints from {}...\".format(logdir),\n          end=\"\")\n\n    ckpt = tf.train.get_checkpoint_state(logdir)\n    if ckpt:\n        print(\"  Checkpoint found: {}\".format(ckpt.model_checkpoint_path))\n        global_step = int(ckpt.model_checkpoint_path\n                         .split('/')[-1]\n                         .split('-')[-1])\n        print(\"  Global step was: {}\".format(global_step))\n        print(\"  Restoring...\", end=\"\")\n        saver.restore(sess, ckpt.model_checkpoint_path)\n        print(\" Done.\")\n        return global_step\n    else:\n        print(\" No checkpoint found.\")\n        return None\n\n\ndef get_default_logdir(logdir_root):\n    logdir = os.path.join(logdir_root, 'train', STARTED_DATESTRING)\n    return logdir\n\n\ndef validate_directories(args):\n    \"\"\"Validate and arrange directory related arguments.\"\"\"\n\n    # Validation\n    if args.logdir and args.logdir_root:\n        raise ValueError(\"--logdir and --logdir_root cannot be \"\n                         \"specified at the same time.\")\n\n    if args.logdir and args.restore_from:\n        raise ValueError(\n            \"--logdir and --restore_from cannot be specified at the same \"\n            \"time. This is to keep your previous model from unexpected \"\n            \"overwrites.\\n\"\n            \"Use --logdir_root to specify the root of the directory which \"\n            \"will be automatically created with current date and time, or use \"\n            \"only --logdir to just continue the training from the last \"\n            \"checkpoint.\")\n\n    # Arrangement\n    logdir_root = args.logdir_root\n    if logdir_root is None:\n        logdir_root = LOGDIR_ROOT\n\n    logdir = args.logdir\n    if logdir is None:\n        logdir = get_default_logdir(logdir_root)\n        print('Using default logdir: {}'.format(logdir))\n\n    restore_from = args.restore_from\n    if restore_from is None:\n        # args.logdir and args.restore_from are exclusive,\n        # so it is guaranteed the logdir here is newly created.\n        restore_from = logdir\n\n    return {\n        'logdir': logdir,\n        'logdir_root': args.logdir_root,",
  "body{\n    background: #fffcfa;\n}\n.investigation{\n    width: 100%;\n    height: 0.8rem;\n    text-align: center;\n    line-height: 0.8rem;\n    background-color: #ffffff;\n    box-shadow: 0px 0px 2px 0px \n    #f2f0ef;\n}\n.investigation span{\n    font-size: 0.28rem;\n    color: #333333;\n}\n.box{\n    width:100%;\n    min-height:100vh;\n    position: relative; \n}\n.model{\n    position: absolute;\n    width:100%;\n    min-height:100%;\n    background: #000;\n    opacity: 0.5;\n    z-index: 1000; \n    display: none;\n}\n.text,.test,.more{\n    position: absolute;\n    width:4.2rem;\n    height:1.44rem;\n    background: #fff;\n    z-index: 2000; \n    top:41%;\n    left: 1.65rem;\n    padding-top: 0.76rem;\n    display: none;\n}\n.fail{\n    position: absolute;\n    width:6.9rem;\n    height:6.9rem;\n    background: #fff;\n    z-index: 2000; \n    top:10%;\n    left:0.3rem;\n    padding-top: 0.76rem;\n    font-size: 0.3rem;\n    display: none;\n}\n.failTitle{\n    position: absolute;\n    width:6.9rem;\n    height:1.02rem;\n    line-height: 1.02rem;\n    background: #fff;\n    z-index: 2000; \n    top:0rem;\n    left:0rem;\n    text-align: center;\n}\n.reason{\n    position: absolute;\n    width:6.9rem;\n    height:5rem;\n    line-height: 1.02rem;\n    background: #fff;\n    z-index: 2000; \n    top:1.02rem;\n    left:0rem;\n    text-align: center;\n}\n.edit{\n    position: absolute;\n    width:2rem;\n    height:0.58rem;\n    line-height:0.58rem;\n    background:#f28c1e;\n    color: #fff;\n    z-index: 2000; \n    top:6.02rem;\n    left:38%;\n    text-align: center;\n    margin: 0 auto;\n}\n.err{\n    position: fixed;\n    width:6.9rem;\n    height:0.68rem;\n    line-height:0.68rem;\n    background:#f28c1e;\n    color: #fff;\n    z-index: 1000; \n    bottom: 1.5rem;\n    text-align: center;\n    margin: 0 auto;\n    font-size: 0.3rem;\n    left: 0.3rem;\n    display: none;\n}\n.close,.test_x{\n    width:0.4rem;\n    height: 0.4rem;\n    background: #fff;\n    position: absolute;\n    z-index: 200;\n    right: 0.1rem;\n    top:0.1rem;\n    border:1px solid #333;\n    border-radius: 50%;\n    text-align: center;\n    line-height: 0.35rem;\n    font-size: 0.4rem;\n}\n.titleText,.test_tit{\n    width:2.5rem;\n    margin: 0 auto;\n    font-size: 0.3rem;\n    color: #333;\n    text-align: center;\n}\nform ul li{\n    background: #fff;\n    padding: 0.1px;\n    margin-top: 0.2rem;\n}\nform ul li p{\n    font-size: 0.30rem;\n    color: #333333;\n    margin: 0.2rem 0 0.19rem 0.31rem;\n}\nform ul li input{\n\twidth: 6.5rem;\n    height: 0.64rem;\n    border:none;\n    border: 1px solid #ddd;\n\tbackground-color: #ffffff; \n    border-radius: 2px;\n    margin-left: 0.31rem;\n    margin-bottom: 0.2rem;\n    text-indent: 0.3rem;\n    font-size: 0.28rem;\n\tcolor: #999999;\n    outline: none;\n}\ntextarea{\n    margin-left: 0.31rem;\n    margin-bottom: 0.2rem;\n    width: 6.2rem;\n    border: 1px solid #f2f3f4;\n    height: 2rem;\n    padding: 0.2rem;\n    resize: none;\n    outline: none;\n    font-size: 0.28rem;\n\tcolor: #999999;\n}\n/* input::-webkit-input-placeholder{\n    text-indent: 0.3rem;\n} */\n.wrap{\n    width: 5.68rem;\n    height: 1.68rem;\n    /*background: #f0f0f0;*/\n    padding: 0.1px;\n    margin: 0.1rem 0 0.5rem 0.31rem;\n    position: relative;\n    z-index: 100;\n}\n.vip_jia{\n    width: 1.68rem;\n    height: 1.68rem;\n    background: #f0f0f0;\n    padding: 0.1px;\n    margin: 0.1rem 0 0.5rem 0.31rem;\n    /*position: relative;*/\n    z-index: 100;\n}\n.del{\n    font-size: 0.26rem;\n    position: absolute;\n    left: 2.7rem;\n    top:0.8rem;\n}\n#file0{\n    width:1.68rem;\n    height: 1.68rem;\n    /*background: red;*/\n    position: absolute;\n    top:0;\n    left: 0;\n    opacity: 0;\n\n}\n.vip_jia img{\n    width: 0.79rem;\n    height: 0.79rem;\n    margin: 0.45rem 0 0 0.45rem;\n}\n.book{\n    font-size: 0.30rem;\n    color: #333333;\n    display: inline-block;\n    margin-left: 0.31rem;\n}\na{\n    color:#fff;\n}\n.vip_two{\n    height: 0.68rem;\n    width: 6.9rem;\n    margin: 0.29rem auto 0 auto;\n    position: relative;\n}\n#file1{\n    position: absolute;\n    right: 0.3rem;\n     width: 3.4rem;\n    height: 0.68rem;\n    opacity: 0;\n}\n.vip_two span{\n    width: 3.4rem;\n    height: 0.68rem;\n    background-image: linear-gradient(\n\t\t#e95412, \n\t\t#e95412), \n\tlinear-gradient(\n\t\t#e95412, \n        #e95412);\n    display: inline-block;\n    text-align: center;\n    line-height: 0.58rem;\n    color: #fff;\n    font-size: 0.28rem;\n}\nli h6{\n    font-size: 0.24rem;\n    color: #999999;\n    font-weight: normal;\n    padding: 0.2rem 0.32rem 0.1rem 0.3rem;\n}\nli h5{\n    padding: 0 0.32rem 0.3rem 0.3rem;\n    font-size: 0.24rem;\n    color: #999999;\n    font-weight: normal;\n}\n.submit{\n    width: 6.90rem;\n\theight: 0.68rem;\n\tbackground: #e95412;\n    border-radius: 4px;\n    line-height: 0.68rem;\n    border: 1px solid #e95412;\n    margin-left: 0.3rem;\n    color: #fff;\n    font-size: 0.28rem;\n    margin-bottom: 0.3rem;\n    text-align: center;\n}\n.feiyan{\n    width: 100%;\n    height: 0.6rem;\n    line-height: 0.6rem;\n    text-align",
  "package com.collect.dto;\n\nimport lombok.AllArgsConstructor;\nimport lombok.Getter;\n\n/**\n * @author Heo, Jin Han\n * @since 2018-04-05\n */\n@AllArgsConstructor\n@Getter\npublic class JwtDto {\n\n  private final String token;\n}\n",
  "handler.flightDetailsGet = function (ctx) {\n    ctx.isAuth = auth.isAuth();\n    ctx.username = sessionStorage.getItem('username');\n    ctx.userId = sessionStorage.getItem('userId');\n    let flightId = ctx.params.flightId;\n    flightId = flightId.slice(1);\n\n    flightService.loadFlightDetails(flightId)\n       .then((flight) => {\n            ctx._id = flight['_id'];\n            ctx.creator = flight[\"_acl\"][\"creator\"];\n            ctx.destination = flight[\"destination\"];\n            ctx.origin = flight[\"origin\"];\n            ctx.departureDate = flight[\"departureDate\"];\n            ctx.departureTime = flight[\"departureTime\"];\n            ctx.seats = flight['seats'];\n            ctx.cost = flight['cost'];\n            ctx.image = flight[\"image\"];\n\n            ctx.isAuthor = ctx.creator === ctx.userId;\n\n            ctx.loadPartials({\n                header: './templates/common/header.hbs',\n                flight: './templates/partials/flight.hbs',\n                footer: './templates/common/footer.hbs'\n            }).then(function () {\n                this.partial('./templates/flightDetails.hbs');\n            });\n        })\n};",
  "<?php\n\nreturn [\n\n    /*\n    |--------------------------------------------------------------------------\n    | Password Reset Language Lines\n    |--------------------------------------------------------------------------\n    |\n    | The following language lines are the default lines which match reasons\n    | that are given by the password broker for a password update attempt\n    | has failed, such as for an invalid token or invalid new password.\n    |\n    */\n\n    'quick_summary' => 'Quick Summary',\n    'categories' => 'Categories',\n    'home' => 'Home',\n    'adress' => 'Szeged,Majus 1  Street 48',\n   'subtitle' => 'Where you find me always!',\n    'description_title' => 'Property description',\n    'price' => 'The Price ',\n    'gender' => 'Gender ',\n   'male' => 'Male',\n    'female' => 'Female',\n    'is_injected' => 'Injected',\n    'it_is_injected' => 'Yes',\n    'it_is_not_injected' => 'No',\n    'born_date' => 'Born Date',\n    'color' => 'Color',\n    'creation_date' => 'Created At',\n    'updation_date' => 'Updated At',\n    'form_about' => \"He is a professional dog-chower,who is making this business since 2005.His patients always become their goods with satisfaction,and after the purchase also gives tips and references.\",\n    'our_company' => 'attributes',\n    'truthly' =>'solidity',\n    'knowledge' => 'knowledge',\n    'precision' => 'precision',\n   'modernity' =>'modernity',\n    'higeny' => 'hygiene',\n   'references' =>'references',\n   'money' => 'rare colors',\n    'contacts' => 'connections',\n   'market' =>'market supply',\n    'contact_agent' => 'Take an offer to this product',\n    'our_categories' => 'Our Categories',\n    'professional_man' => 'dog-fancier'\n];\n",
  "package utility\n\nimport (\n\t\"math/rand\"\n\t\"time\"\n)\n\n// ZeroTime represents 0 in epoch time\nvar ZeroTime time.Time = time.Unix(0, 0)\n\n// MaxTime represents the latest useful golang date (219248499-12-06 15:30:07.999999999 +0000 UTC)\nvar MaxTime time.Time = time.Unix(1<<63-62135596801, 999999999)\n\n// IsZeroTime checks that a time is either equal to golang ZeroTime or\n// UTC ZeroTime.\nfunc IsZeroTime(t time.Time) bool {\n\treturn t.Equal(ZeroTime) || t.IsZero()\n}\n\n// fromNanoSeconds returns milliseconds of a duration for queries in the database.\nfunc FromNanoseconds(duration time.Duration) int64 {\n\treturn int64(duration) / 1000000\n}\n\n// fromNanoSeconds returns milliseconds of a duration for queries in the database.\nfunc ToNanoseconds(duration time.Duration) time.Duration {\n\treturn duration * 1000000\n}\n\n// FromPythonTime returns a time.Time that corresponds to the float style\n// python time which is <seconds>.<fractional_seconds> from unix epoch.\nfunc FromPythonTime(pyTime float64) time.Time {\n\tsec := int64(pyTime)\n\ttoNano := int64(1000000000)\n\tasNano := int64(pyTime * float64(toNano))\n\tnano := asNano % toNano\n\tres := time.Unix(sec, nano)\n\treturn res\n}\n\n// ToPythonTime returns a number in the format that python's time.time() returns\n// as a float with <seconds>.<fractional_seconds>\nfunc ToPythonTime(t time.Time) float64 {\n\tif IsZeroTime(t) {\n\t\treturn float64(0)\n\t}\n\ttimeAsInt64 := t.UnixNano()\n\tfromNano := float64(1000000000)\n\n\tres := float64(timeAsInt64) / fromNano\n\treturn res\n}\n\n// JitterInterval returns a duration that some value between the\n// interval and 2x the interval.\nfunc JitterInterval(interval time.Duration) time.Duration {\n\treturn time.Duration(rand.Float64()*float64(interval)) + interval\n}\n\n// RoundPartOfDay produces a time value with the hour value\n// rounded down to the most recent interval.\nfunc RoundPartOfDay(n int) time.Time { return findPartHour(time.Now(), n) }\n\n// RoundPartOfHour produces a time value with the minute value\n// rounded down to the most recent interval.\nfunc RoundPartOfHour(n int) time.Time { return findPartMin(time.Now(), n) }\n\n// RoundPartOfMinute produces a time value with the second value\n// rounded down to the most recent interval.\nfunc RoundPartOfMinute(n int) time.Time { return findPartSec(time.Now(), n) }\n\n// this implements the logic of RoundPartOfDay, but takes time as an\n// argument for testability.\nfunc findPartHour(now time.Time, num int) time.Time {\n\tvar hour int\n\n\tif num > now.Hour() || num > 12 || num <= 0 {\n\t\thour = 0\n\t} else {\n\t\thour = now.Hour() - (now.Hour() % num)\n\t}\n\n\treturn time.Date(now.Year(), now.Month(), now.Day(), hour, 0, 0, 0, time.UTC)\n}\n\n// this implements the logic of RoundPartOfHour, but takes time as an\n// argument for testability.\nfunc findPartMin(now time.Time, num int) time.Time {\n\tvar min int\n\n\tif num > now.Minute() || num > 30 || num <= 0 {\n\t\tmin = 0\n\t} else {\n\t\tmin = now.Minute() - (now.Minute() % num)\n\t}\n\n\treturn time.Date(now.Year(), now.Month(), now.Day(), now.Hour(), min, 0, 0, time.UTC)\n}\n\n// this implements the logic of RoundPartOfMinute, but takes time as an\n// argument for testability.\nfunc findPartSec(now time.Time, num int) time.Time {\n\tvar sec int\n\n\tif num > now.Second() || num > 30 || num <= 0 {\n\t\tsec = 0\n\t} else {\n\t\tsec = now.Second() - (now.Second() % num)\n\t}\n\n\treturn time.Date(now.Year(), now.Month(), now.Day(), now.Hour(), now.Minute(), sec, 0, time.UTC)\n\n}\n\n// Creates and returns a time.Time corresponding to the start of the UTC day containing the given date.\nfunc GetUTCDay(date time.Time) time.Time {\n\t// Convert to UTC.\n\tdate = date.In(time.UTC)\n\t// Create a new time.Time for the beginning of the day.\n\tyear, month, day := date.Date()\n\treturn time.Date(year, month, day, 0, 0, 0, 0, time.UTC)\n}\n\n// Creates and returns a time.Time corresponding to the start of the UTC hour containing the given date.\nfunc GetUTCHour(date time.Time) time.Time {\n\t// Convert to UTC.\n\tdate = date.In(time.UTC)\n\t// Create a new time.Time for the beginning of the hour.\n\tyear, month, day := date.Date()\n\thour := date.Hour()\n\treturn time.Date(year, month, day, hour, 0, 0, 0, time.UTC)\n}\n",
  "---\ntitle: Fall 2020 Planning Update | June 12\nsubtitle: \ndate: 2020-06-11\nlink: >-\n  https://president.utexas.edu/messages-speeches-2020/fall-2020-planning-update-june-12\ncountryCode: us\nstatus: published\ninstituteSlug: us-utexas\n---\n![](https://president.utexas.edu/sites/default/files/twitter_pres_emblem.png)\n\nJune 12, 2020\n\nDear Staff Members,\n\nIt\u2019s been nearly two weeks since I started as interim President, and I wanted to write to you directly to let you know how much I value and appreciate your incredible work. I also want to make clear that I am aware of many of the challenges you are facing during this unprecedented time.\n\nThis has been a hard few months \u2014 on so many fronts \u2014 for our community, but for many of our staff members, it has been even harder. The COVID-19 crisis has transformed our world and our work. You have been asked to focus on your UT assignments to support our students and research mission, while managing important and challenging personal matters like child and elder care, and grappling with the uncertainty of potential budget reductions. Some staff members have remained on campus. Many more have moved to remote work arrangements. And some have received temporary furloughs from their assignments.\n\nI wish I could announce a specific day and time when we would all return to campus, our offices would reopen and the solutions we seek could be achieved instantaneously. But that\u2019s simply not the case.\n\nInstead, I am asking the leadership in all units across campus to look closely at the vital roles each staff member plays; assess what functions can still be done at a high level remotely through the summer and into the fall; determine what other roles should be brought back to campus once many of our students and faculty members return; and make phased decisions about when offices can safely reopen in person.\n\nSupervisors will seek your input and ideas. They will also assess the specific health needs of our people and how they may be affected by a return to campus \u2014 even with social distancing measures and office density guidelines, face coverings required and increased capacity for testing and tracing. We will also monitor local school districts\u2019 plans and the status of child care throughout the area.\n\nAs a university, we need to develop our plans with a laser focus on both the health of our community members and our vital education and research missions. Once we get past the immediate hurdles for reopening in the fall, we will also more fully consider different long-term options for teleworking and flexible schedules for UT employees.\n\nYou are an integral part of that process, but I recognize it can be hard to continue to bring enthusiasm and energy to your work when we don\u2019t yet have a clear path forward. The main thing I want to make sure you understand is there will not be a specific date when we will all simultaneously return to campus. Instead, the continued and gradual return of our staff will be assessed through conversations with, and analysis by, the leadership of each unit.\n\nMoving forward, I will do my best to communicate clearly and keep you informed of any decisions the university makes. I know this isn\u2019t just your job \u2014 it\u2019s a major part of your life, and you wouldn\u2019t be here if you didn\u2019t believe in our ability to do things that are truly special. And I want to hear from you, listen to your concerns and encourage you to fill out our upcoming staff survey.\n\nWhile I cannot guarantee much about the immediate future, I can tell you that The University of Texas will return to being the vibrant, world-changing place we have always known and loved. We are blessed with many core strengths across the university, and our UT staff members are prominent among them.\n\nOn behalf of our students, alumni and the state of Texas, I can\u2019t thank you enough for all you do for us \u2014 on campus, online, in the labs, in our facilities and everywhere else we do the work that changes the world.\n\nSincerely yours,\n\nJay Hartzell\n\nInterim President",
  "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from '../services/auth.service';\n\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n    constructor(private auth: AuthService) { }\n\n    public canActivate(\n        _: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot,\n    ): Observable<boolean> | Promise<boolean> | boolean {\n        if (!this.auth.authenticated) {\n            return this.auth.authenticate();\n        }\n        return this.auth.authenticated;\n    }\n\n}\n",
  "# Copyright (c) 2020, salesforce.com, inc.\n# All rights reserved.\n# SPDX-License-Identifier: BSD-3-Clause\n# For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\nfrom __future__ import division  # Use floating point for math calculations\nfrom CTFd.plugins.challenges import BaseChallenge, CHALLENGE_CLASSES\nfrom CTFd.plugins import register_plugin_assets_directory\nfrom CTFd.plugins.flags import get_flag_class\nfrom CTFd.models import (\n    db,\n    Solves,\n    Fails,\n    Flags,\n    Challenges,\n    ChallengeFiles,\n    Tags,\n    Hints,\n)\nfrom CTFd.utils.user import get_ip\nfrom CTFd.utils.uploads import delete_file\nfrom CTFd.utils.modes import get_model\nfrom flask import Blueprint\nimport math\nfrom os import environ\nimport base64\nimport requests\nimport hmac\nimport hashlib\nfrom time import time\nfrom flask import (\n    request,\n    url_for,\n    json\n)\nimport uuid\n\n\n\nclass IntegratedChallengeClass(BaseChallenge):\n    id = \"integrated\"  # Unique identifier used to register challenges\n    name = \"integrated\"  # Name of a challenge type\n    templates = {  # Templates used for each aspect of challenge editing & viewing\n        \"create\": \"/plugins/integrated_challenges/assets/create.html\",\n        \"update\": \"/plugins/integrated_challenges/assets/update.html\",\n        \"view\": \"/plugins/integrated_challenges/assets/view.html\",\n    }\n    scripts = {  # Scripts that are loaded when a template is loaded\n        \"create\": \"/plugins/integrated_challenges/assets/create.js\",\n        \"update\": \"/plugins/integrated_challenges/assets/update.js\",\n        \"view\": \"/plugins/integrated_challenges/assets/view.js\",\n    }\n    # Route at which files are accessible. This must be registered using register_plugin_assets_directory()\n    route = \"/plugins/integrated_challenges/assets/\"\n    # Blueprint used to access the static_folder directory.\n    blueprint = Blueprint(\n        \"integrated\", __name__, template_folder=\"templates\", static_folder=\"assets\"\n    )\n\n    @staticmethod\n    def create(request):\n        \"\"\"\n        This method is used to process the challenge creation request.\n\n        :param request:\n        :return:\n        \"\"\"\n        data = request.form or request.get_json()\n        challenge = IntegratedChallenge(**data)\n\n        db.session.add(challenge)\n        db.session.commit()\n\n        return challenge\n\n    @staticmethod\n    def read(challenge):\n        \"\"\"\n        This method is in used to access the data of a challenge in a format processable by the front end.\n\n        :param challenge:\n        :return: Challenge object, data dictionary to be returned to the user\n        \"\"\"\n        challenge = IntegratedChallenge.query.filter_by(id=challenge.id).first()\n        returnTo = str.format(\"{0}{1}**result**#{2}\",request.url_root, url_for('challenges.listing'), challenge.name).replace(\"//\",\"/\")\n        nonces= uuid.uuid4().hex\n        eventId = environ.get('EVENT_ID')\n        messages = nonces+eventId+challenge.challengeName+returnTo\n        sig = hmac.new(str(environ.get('CTF_KEY')).encode('utf-8'), msg=messages.encode('utf-8'),digestmod=hashlib.sha256).hexdigest()\n        validatorURL=str(environ.get('VALIDATOR_URL'))\n        testResult = request.args.get('testResult')\n        success = False\n        flag = \"\"\n        if not testResult:\n            try: \n                data = json.loads(testResult)\n                if data['success']==True:\n                    flag = data['flag']\n            except:\n                print(str.format(\"Error loading: {0}\", testResult))\n        data = {\n            'id': challenge.id,\n            'name': challenge.name,\n            'value': challenge.value,\n            'challengeName': challenge.challengeName,\n            'description': challenge.description,\n            'category': challenge.category,\n           'state': challenge.state,\n           'max_attempts': challenge.max_attempts,\n            'type': challenge.type,\n           'returnTo' : returnTo,\n            'eventId' : eventId,\n           'sig' : sig,\n            'validatorURL' : validatorURL,\n            'nonce' : nonces,\n            'testResult' : testResult,\n           'success' : success,\n            'flag' : flag,\n            'type_data': {\n                'id': IntegratedChallengeClass.id,\n                'name': IntegratedChallengeClass.name,\n                'templates': IntegratedChallengeClass.templates,\n               'scripts': IntegratedChallengeClass.scripts,\n            }\n        }\n        return data\n\n    @staticmethod\n    def update(challenge, request):\n        \"\"\"\n        This method is used to update the information associated with a challenge. This should be kept strictly to the\n        Challenges table and any child tables.\n\n        :param challenge:\n        :param request:\n        :return:\n        \"\"\"\n        data = request.form or request.get_json()\n        for attr, value in data.items():\n            setattr(challenge, attr, value)\n\n        db.session.commit()\n        return challenge\n\n    @staticmethod\n    def delete(challenge):\n        \"\"\"\n        This method is used to delete the resources used by a challenge.\n\n        :param challenge:\n        :return:\n        \"\"\"\n        Fails.query.filter_by(challenge_id=challenge.id).delete()\n        Solves.query.filter_by(challenge_id=challenge.id).delete()\n        Flags.query.filter_by(challenge_id=challenge.id).delete()\n        files = ChallengeFiles.query.filter_by(challenge_id=challenge.id).all()\n        for f in files:\n            delete_file(f.id)\n        ChallengeFiles.query.filter_by(challenge_id=challenge.id).delete()\n        Tags.query.filter_by(challenge_id=challenge.id).delete()\n        Hints.query.filter_by(challenge_id=challenge.id).delete()\n        IntegratedChallenge.query.filter_by(id=challenge.id).delete()\n        Challenges.query.filter_by(id=challenge.id).delete()\n        db.session.commit()\n\n    @staticmethod\n    def attempt(challenge, request):\n        \"\"\"\n        This method is used to check whether a given input is right or wrong. It does not make any changes and should\n        return a boolean for correctness and a string to be shown to the user. It is also in charge of parsing the\n        user's input from the request itself.\n\n        :param challenge: The Challenge object from the database\n        :param request: The request the user submitted\n        :return: (boolean, string)\n        \"\"\"\n        data = request.form or request.get_json()\n        submission = data[\"submission\"].strip()\n        flags = Flags.query.filter_by(challenge_id=challenge.id).all()\n        for flag in flags:\n            if get_flag_class(flag.type).compare(flag, submission):\n                return True, \"Correct\"\n        return False, \"Incorrect\"\n\n    @staticmethod\n    def solve(user, team, challenge, request):\n        \"\"\"\n        This method is used to insert Solves into the database in order to mark a challenge as solved.\n\n        :param team: The Team object from the database\n        :param chal: The Challenge object from the database\n        :param request: The request the user submitted\n        :return:\n        \"\"\"\n        chal = IntegratedChallenge.query.filter_by(id=challenge.id).first()\n        data = request.form or request.get_json()\n        submission = data['submission'].strip()\n\n        Model = get_model()\n\n        solve = Solves(\n            user_id=user.id,\n            team_id=team.id if team else None,\n            challenge_id=challenge.id,\n            ip=get_ip(req=request),\n            provided=submission\n        )\n        db.session.add(solve)\n\n\n        db.session.commit()\n        db.session.close()\n\n    @staticmethod\n    def fail(user, team, challenge, request",
  "/**\n * This file is refactored into TypeScript based on\n * https://github.com/preactjs/wmr/blob/main/packages/wmr/src/lib/rollup-plugin-container.js\n */\n\n/**\nhttps://github.com/preactjs/wmr/blob/master/LICENSE\n\nMIT License\n\nCopyright (c) 2020 The Preact Authors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\nimport fs from 'fs'\nimport { resolve, join } from 'path'\nimport { Plugin } from '../plugin'\nimport {\n  InputOptions,\n  MinimalPluginContext,\n  OutputOptions,\n  ModuleInfo,\n  NormalizedInputOptions,\n  ChangeEvent,\n  PartialResolvedId,\n  ResolvedId,\n  PluginContext as RollupPluginContext,\n  LoadResult,\n  SourceDescription,\n  EmittedFile,\n  SourceMap,\n  RollupError\n} from 'rollup'\nimport * as acorn from 'acorn'\nimport acornClassFields from 'acorn-class-fields'\nimport acornNumericSeparator from 'acorn-numeric-separator'\nimport acornStaticClassFeatures from 'acorn-static-class-features'\nimport { RawSourceMap } from '@ampproject/remapping/dist/types/types'\nimport { combineSourcemaps } from '../utils'\nimport MagicString from'magic-string'\nimport { FSWatcher } from 'chokidar'\nimport {\n  createDebugger,\n  ensureWatchedFile,\n  generateCodeFrame,\n  isExternalUrl,\n  normalizePath,\n  numberToPos,\n  prettifyUrl,\n  timeFrom\n} from '../utils'\nimport { FS_PREFIX } from '../constants'\nimport chalk from 'chalk'\nimport { ResolvedConfig } from '../config'\nimport { buildErrorMessage } from './middlewares/error'\n\nexport interface PluginContainerOptions {\n  cwd?: string\n  output?: OutputOptions\n  modules?: Map<string, { info: ModuleInfo }>\n  writeFile?: (name: string, source: string | Uint8Array) => void\n}\n\nexport interface PluginContainer {\n  options: InputOptions\n  buildStart(options: InputOptions): Promise<void>\n  watchChange(id: string, event?: ChangeEvent): void\n  resolveId(\n    id: string,\n    importer?: string,\n    skip?: Set<Plugin>,\n    ssr?: boolean\n  ): Promise<PartialResolvedId | null>\n  transform(\n    code: string,\n    id: string,\n    inMap?: SourceDescription['map'],\n    ssr?: boolean\n  ): Promise<SourceDescription | null>\n  load(id: string, ssr?: boolean): Promise<LoadResult | null>\n  close(): Promise<void>\n}\n\ntype PluginContext = Omit<\n  RollupPluginContext,\n  // not documented\n  | 'cache'\n  // deprecated\n  | 'emitAsset'\n  | 'emitChunk'\n  | 'getAssetFileName'\n  | 'getChunkFileName'\n  | 'isExternal'\n  |'moduleIds'\n  |'resolveId'\n>\n\nexport let parser = acorn.Parser.extend(\n  acornClassFields,\n  acornStaticClassFeatures,\n  acornNumericSeparator\n)\n\nexport async function createPluginContainer(\n  { plugins, logger, root, build: { rollupOptions } }: ResolvedConfig,\n  watcher?: FSWatcher\n): Promise<PluginContainer> {\n  const isDebug = process.env.DEBUG\n\n  const seenResolves: Record<string, true | undefined> = {}\n  const debugResolve = createDebugger('vite:resolve')\n  const debugPluginResolve = createDebugger('vite:plugin-resolve', {\n    onlyWhenFocused: 'vite:plugin'\n  })\n  const debugPluginTransform = createDebugger('vite:plugin-transform', {\n    onlyWhenFocused: 'vite:plugin'\n  })\n\n  // ---------------------------------------------------------------------------\n\n  const MODULES = new Map()\n  const watchFiles = new Set<string>()\n\n  // get rollup version\n  const rollupPkgPath = resolve(require.resolve('rollup'), '../../package.json')\n  const minimalContext: MinimalPluginContext = {\n    meta: {\n      rollupVersion: JSON.parse(fs.readFileSync(rollupPkgPath, 'utf-8'))\n       .version,\n      watchMode: true\n    }\n  }\n\n  function warnIncompatibleMethod(method: string, plugin: string) {\n    logger.warn(\n      chalk.cyan(`[plugin:${plugin}] `) +\n        chalk.yellow(\n          `context method ${chalk.bold(\n            `${method}()`\n          )} is not supported in serve mode. This plugin is likely not vite-compatible.`\n        )\n    )\n  }\n\n  // we should create a new context for each async hook pipeline so that the\n  // active plugin in that pipeline can be tracked in a concurrency-safe manner.\n  // using a class to make creating new contexts more efficient\n  class Context implements PluginContext {\n    meta = minimalContext.meta\n    ssr = false\n    _activePlugin: Plugin | null\n    _activeId: string | null = null\n    _activeCode: string | null = null\n    _resolveSkips?: Set<Plugin>\n\n    constructor(initialPlugin?: Plugin) {\n      this._activePlugin = initialPlugin || null\n    }\n\n    parse(code: string, opts: any = {}) {\n      return parser.parse(code, {\n        sourceType:'module',\n        ecmaVersion: 2020,\n        locations: true,\n       ...opts\n      })\n    }\n\n    async resolve(\n      id: string,\n      importer?: string,\n      options?: { skipSelf?: boolean }\n    ) {\n      let skips: Set<Plugin> | undefined\n      if (options?.skipSelf && this._activePlugin) {\n        skips = new Set(this._resolveSkips)\n        skips.add(this._activePlugin)\n      }\n      let out = await container.resolveId(id, importer, skips, this.ssr)\n      if (typeof out ==='string') out = { id: out }\n      return out as ResolvedId | null\n    }\n\n    getModuleInfo(id: string) {\n      let mod = MODULES.get(id)\n      if (mod) return mod.info\n      mod = {\n        /** @type {import('rollup').ModuleInfo} */\n        // @ts-ignore-next\n        info: {}\n      }\n      MODULES.set(id, mod)\n      return mod.info\n    }\n\n    getModuleIds() {\n      return MODULES.keys()\n    }\n\n    addWatchFile(id: string) {\n      watchFiles.add(id)\n      if (watcher) ensureWatchedFile(watcher, id, root)\n    }\n\n    getWatchFiles() {\n      return [...watchFiles]\n    }\n\n    emitFile(assetOrFile: EmittedFile) {\n      warnIncompatibleMethod(`emitFile`, this._activePlugin!.name)\n      return ''\n    }\n\n    setAssetSource() {\n      warnIncompatibleMethod(`setAssetSource`, this._activePlugin!.name)\n    }\n\n    getFileName() {\n      warnIncompatibleMethod(`getFileName`, this._activePlugin!.name)\n      return ''\n    }\n\n    warn(\n      e: string | RollupError,\n      position?: number | { column: number; line: number }\n    ) {\n      const err = formatError(e, position, this)\n      const msg = buildErrorMessage(\n        err,\n        [chalk.yellow(`",
  "- \ud83d\udc4b Hi, I\u2019m @kasir-barati\n- \ud83d\udc40 I\u2019m interested in Node.js, JavaScript, Coaching, Teaching, Docker, Linux\n- \ud83c\udf31 I\u2019m currently learning asp.net core 5.0, Docker-Compose, Dockerfile\n- \ud83d\udc9e\ufe0f I\u2019m looking to collaborate on Node.js projects, PaaS systems, JavaScript projects\n- \ud83d\udceb How to reach me? my mail: node.js.developers.kh@gmail.com, Telegram: @mjbKhorasani\n\n<!---\nkasir-barati/kasir-barati is a \u2728 special \u2728 repository because its `README.md` (this file) appears on your GitHub profile.\nYou can click the Preview link to take a look at your changes.\n--->\n",
  "package com.k15t.pat.registraton.constants;\n\n/**\n * Constants file\n * \n * @author Sumanth\n *\n */\npublic final class RegistrationConstants {\n\tpublic static final String SUCCESS = \"success\";\n\tpublic static final String SUCCESS_MESSAGE = \"Registration is successful.\";\n\n\tpublic static final String NOTIFY = \"notify\";\n\tpublic static final String NOTIFY_MESSAGE = \"You are already registered.\";\n\n\tpublic static final String REGISTRATION_DETAILS = \"regDetails\";\n}\n",
  "// Generated by the protocol buffer compiler.  DO NOT EDIT!\n// source: google/cloud/datalabeling/v1beta1/data_labeling_service.proto\n\npackage com.google.cloud.datalabeling.v1beta1;\n\npublic interface PauseEvaluationJobRequestOrBuilder extends\n    // @@protoc_insertion_point(interface_extends:google.cloud.datalabeling.v1beta1.PauseEvaluationJobRequest)\n    com.google.protobuf.MessageOrBuilder {\n\n  /**\n   * <pre>\n   * Required. Name of the evaluation job that is going to be paused. Format:\n   * \"projects/&lt;var&gt;{project_id}&lt;/var&gt;/evaluationJobs/&lt;var&gt;{evaluation_job_id}&lt;/var&gt;\"\n   * </pre>\n   *\n   * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {... }</code>\n   * @return The name.\n   */\n  java.lang.String getName();\n  /**\n   * <pre>\n   * Required. Name of the evaluation job that is going to be paused. Format:\n   * \"projects/&lt;var&gt;{project_id}&lt;/var&gt;/evaluationJobs/&lt;var&gt;{evaluation_job_id}&lt;/var&gt;\"\n   * </pre>\n   *\n   * <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {... }</code>\n   * @return The bytes for name.\n   */\n  com.google.protobuf.ByteString\n      getNameBytes();\n}\n",
  "!function(t){function e(i){if(n[i])return n[i].exports;var o=n[i]={i:i,l:!1,exports:{}};return t[i].call(o.exports,o,o.exports,e),o.l=!0,o.exports}var n={};e.m=t,e.c=n,e.d=function(t,n,i){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:i})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,\"a\",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p=\"\",e(e.s=44)}([function(t,e){t.exports=function(t){return\"object\"==typeof t?null!==t:\"function\"==typeof t}},function(t,e){var n=t.exports={version:\"2.5.1\"};\"number\"==typeof __e&&(__e=n)},function(t,e,n){var i=n(33)(\"wks\"),o=n(20),s=n(4).Symbol,r=\"function\"==typeof s;(t.exports=function(t){return i[t]||(i[t]=r&&s[t]||(r?s:o)(\"Symbol.\"+t))}).store=i},function(t,e,n){var i=n(4),o=n(1),s=n(12),r=n(5),a=function(t,e,n){var l,u,c,h=t&a.F,d=t&a.G,p=t&a.S,f=t&a.P,g=t&a.B,m=t&a.W,v=d?o:o[e]||(o[e]={}),y=v.prototype,b=d?i:p?i[e]:(i[e]||{}).prototype;d&&(n=e);for(l in n)(u=!h&&b&&void 0!==b[l])&&l in v||(c=u?b[l]:n[l],v[l]=d&&\"function\"!=typeof b[l]?n[l]:g&&u?s(c,i):m&&b[l]==c?function(t){var e=function(e,n,i){if(this instanceof t){switch(arguments.length){case 0:return new t;case 1:return new t(e);case 2:return new t(e,n)}return new t(e,n,i)}return t.apply(this,arguments)};return e.prototype=t.prototype,e}(c):f&&\"function\"==typeof c?s(Function.call,c):c,f&&((v.virtual||(v.virtual={}))[l]=c,t&a.R&&y&&!y[l]&&r(y,l,c)))};a.F=1,a.G=2,a.S=4,a.P=8,a.B=16,a.W=32,a.U=64,a.R=128,t.exports=a},function(t,e){var n=t.exports=\"undefined\"!=typeof window&&window.Math==Math?window:\"undefined\"!=typeof self&&self.Math==Math?self:Function(\"return this\")();\"number\"==typeof __g&&(__g=n)},function(t,e,n){var i=n(7),o=n(28);t.exports=n(8)?function(t,e,n){return i.f(t,e,o(1,n))}:function(t,e,n){return t[e]=n,t}},function(t,e,n){var i=n(0);t.exports=function(t){if(!i(t))throw TypeError(t+\" is not an object!\");return t}},function(t,e,n){var i=n(6),o=n(51),s=n(52),r=Object.defineProperty;e.f=n(8)?Object.defineProperty:function(t,e,n){if(i(t),e=s(e,!0),i(n),o)try{return r(t,e,n)}catch(t){}if(\"get\"in n||\"set\"in n)throw TypeError(\"Accessors not supported!\");return\"value\"in n&&(t[e]=n.value),t}},function(t,e,n){t.exports=!n(9)(function(){return 7!=Object.defineProperty({},\"a\",{get:function(){return 7}}).a})},function(t,e){t.exports=function(t){try{return!!t()}catch(t){return!0}}},function(t,e){var n={}.hasOwnProperty;t.exports=function(t,e){return n.call(t,e)}},function(t,e){t.exports={}},function(t,e,n){var i=n(26);t.exports=function(t,e,n){if(i(t),void 0===e)return t;switch(n){case 1:return function(n){return t.call(e,n)};case 2:return function(n,i){return t.call(e,n,i)};case 3:return function(n,i,o){return t.call(e,n,i,o)}}return function(){return t.apply(e,arguments)}}},function(t,e,n){var i=n(14),o=n(16);t.exports=function(t){return i(o(t))}},function(t,e,n){var i=n(15);t.exports=Object(\"z\").propertyIsEnumerable(0)?Object:function(t){return\"String\"==i(t)?t.split(\"\"):Object(t)}},function(t,e){var n={}.toString;t.exports=function(t){return n.call(t).slice(8,-1)}},function(t,e){t.exports=function(t){if(void 0==t)throw TypeError(\"Can't call method on  \"+t);return t}},function(t,e,n){var i=n(18),o=Math.min;t.exports=function(t){return t>0?o(i(t),9007199254740991):0}},function(t,e){var n=Math.ceil,i=Math.floor;t.exports=function(t){return isNaN(t=+t)?0:(t>0?i:n)(t)}},function(t,e,n){var i=n(33)(\"keys\"),o=n(20);t.exports=function(t){return i[t]||(i[t]=o(t))}},function(t,e){var n=0,i=Math.random();t.exports=function(t){return\"Symbol(\".concat(void 0===t?\"\":t,\")_\",(++n+i).toString(36))}},function(t,e,n){var i=n(7).f,o=n(10),s=n(2)(\"toStringTag\");t.exports=function(t,e,n){t&&!o(t=n?t:t.prototype,s)&&i(t,s,{configurable:!0,value:e})}},function(t,e,n){var i=n(16);t.exports=function(t){return Object(i(t))}},function(t,e,n){var i=n(12),o=n(14),s=n(22),r=n(17),a=n(83);t.exports=function(t,e){var n=1==t,l=2==t,u=3==t,c=4==t,h=6==t,d=5==t||h,p=e||a;return function(e,a,f){for(var g,m,v=s(e),y=o(v),b=i(a,f,3),P=r(y.length),_=0,x=n?p(e,P):l?p(e,0):void 0;P>_;_++)if((d||_ in y)&&(g=y[_],m=b(g,_,v),t))if(n)x[_]=m;else if(m)switch(t){case 3:return!0;case 5:return g;",
  " class Solution {\n    public String XXX(String s) {\n        if(s.equals(\"\")){\n            return \"\";\n        }\n        int length = s.length();\n        //dp[i][j] \u8868\u793a \u4ece\u7b2ci \u5230 \u7b2cj \u7684\u5b50\u4e32\u662f\u5426\u4e3a\u56de\u6587\u5b50\u4e32\n        boolean[][] dp = new boolean[length][length];\n        //\u521d\u59cb\u5316 \u90fd\u4e3a true\n        for(boolean[] a: dp){\n            Arrays.fill(a,true);\n        }\n        int start = 0;\n        int max_len = 1;\n        //\u5148\u904d\u5386\u5217\uff0c\u5728\u904d\u5386\u884c\uff0c\u5426\u5219\u4f1a\u51fa\u9519\n        for(int j =0; j<length; j++){\n            for(int i=0; i<length; i++){\n                if(i>=j){\n                    continue;\n                }\n                if(i+1 == j && s.charAt(i) == s.charAt(j)){\n                    dp[i][j] = true;\n                }else{\n                    // abba\n                    dp[i][j] = dp[i+1][j-1] && s.charAt(i) == s.charAt(j);\n                }\n                if(dp[i][j] && j-i+1 > max_len){\n                    max_len = j-i+1;\n                    start = i;\n                }\n            }\n        }\n        return new String(s.toCharArray(), start, max_len);\n    }\n}\n\n",
  "package generator\n\nimport (\n\t\"embed\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"strings\"\n\n\t\"github.com/pkg/errors\"\n)\n\n//go:embed templates/*\nvar templates embed.FS\n\ntype Language int\n\nconst (\n\tTypescript = iota\n\tGo\n\tPython\n\tCsharp\n)\n\nfunc (l Language) String() string {\n\treturn [...]string{\"typescript\", \"go\", \"python\", \"csharp\"}[l]\n}\n\ntype Generator struct {\n\tlanguage    Language\n\tpackageName string\n\tdir         string\n}\n\nfunc NewGenerator(lang string, name string, dir string) (*Generator, error) {\n\tvar l Language\n\tswitch lang {\n\tcase \"typescript\":\n\t\tl = Typescript\n\tcase \"go\":\n\t\tl = Go\n\tcase \"csharp\":\n\t\treturn nil, errors.New(\"csharp is not yet supported\")\n\tcase \"python\":\n\t\tl = Python\n\tdefault:\n\t\treturn nil, errors.New(fmt.Sprintf(\"unknown language input: %s\", lang))\n\t}\n\tg := &Generator{\n\t\tlanguage:    l,\n\t\tpackageName: name,\n\t\tdir:         dir,\n\t}\n\treturn g, nil\n}\n\nfunc (g *Generator) Generate() error {\n\tdest := filepath.Join(g.dir, g.packageName)\n\t_ = os.Mkdir(dest, 0755)\n\n\tvar templateDir string\n\tswitch g.language {\n\tcase Typescript:\n\t\ttemplateDir = \"typescript\"\n\tcase Go:\n\t\ttemplateDir = \"go\"\n\tcase Python:\n\t\ttemplateDir = \"python\"\n\tdefault:\n\t\treturn fmt.Errorf(\"unsupported language: %s\", g.language)\n\t}\n\n\ttemplateRoot := filepath.Join(\".\", \"templates\", templateDir)\n\n\ttemplateDirEntries, err := templates.ReadDir(templateRoot)\n\tif err!= nil {\n\t\treturn err\n\t}\n\n\tfor _, entry := range templateDirEntries {\n\t\terr = copyAndReplace(entry, dest, templateRoot, \"\", g.packageName)\n\t\tif err!= nil {\n\t\t\tfmt.Println(\"there was an error\")\n\t\t\treturn err\n\t\t}\n\t}\n\n\treturn nil\n}\n\ntype replacement struct {\n\tsrc  string\n\tdest string\n}\n\n// TODO - remove once go embed supports \"all\": https://github.com/golang/go/issues/43854\n// https://github.com/golang/go/issues/45197\nvar replacements = []replacement{\n\t{\n\t\tsrc:  \"not_a_go.mod\",\n\t\tdest: \"go.mod\",\n\t},\n\t{\n\t\tsrc:  \"not__init__.py\",\n\t\tdest: \"__init__.py\",\n\t},\n\t{\n\t\tsrc:  \"not__main__.py\",\n\t\tdest: \"__main__.py\",\n\t},\n\t{\n\t\tsrc:  \"not_utilities.py\",\n\t\tdest: \"_utilities.py\",\n\t},\n}\n\nfunc copyAndReplace(entry os.DirEntry, destRoot, templateRoot, subpath, packageName string) error {\n\tsubpath = filepath.Join(subpath, entry.Name())\n\tdest := filepath.Join(destRoot, subpath)\n\tdest = strings.ReplaceAll(dest, \"xyz\", packageName)\n\n\tfor _, rep := range replacements {\n\t\tdest = strings.ReplaceAll(dest, rep.src, rep.dest)\n\t}\n\n\tsrc := filepath.Join(templateRoot, subpath)\n\n\tif entry.IsDir() {\n\t\t_ = os.Mkdir(dest, 0755)\n\n\t\tentries, err := templates.ReadDir(src)\n\t\tif err!= nil {\n\t\t\treturn err\n\t\t}\n\t\tfor _, e := range entries {\n\t\t\terr = copyAndReplace(e, destRoot, templateRoot, subpath, packageName)\n\t\t\tif err!= nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t}\n\t} else {\n\t\tb, err := templates.ReadFile(src)\n\t\tcontents := string(b)\n\t\tcontents = strings.ReplaceAll(contents, \"xyz\", packageName)\n\n\t\tif err!= nil {\n\t\t\treturn err\n\t\t}\n\t\terr = ioutil.WriteFile(dest, []byte(contents), 0755)\n\t\tif err!= nil {\n\t\t\treturn err\n\t\t}\n\t}\n\n\treturn nil\n}\n",
  "<?php\n\nnamespace App\\Http\\Controllers\\Owner;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Models\\Shop;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Auth;\nuse Illuminate\\Support\\Facades\\Storage;\nuse InterventionImage;\nuse App\\Http\\Requests\\UploadImageRequest;\n\nuse function Psy\\sh;\n\nclass ShopController extends Controller\n{\n    public function __construct()\n    {\n        $this->middleware('auth:owners');\n\n        $this->middleware(function ($request, $next) {\n            // dd($request->route());\n            $id = $request->route()->parameter('shop'); //shop\u306eid\u53d6\u5f97 \n            if (!is_null($id)) { // null\u5224\u5b9a \n                $shopsOwnerId = Shop::findOrFail($id)->owner->id;\n                $shopId = (int)$shopsOwnerId; // \u30ad\u30e3\u30b9\u30c8 \u6587\u5b57\u5217\u2192\u6570\u5024\u306b\u578b\u5909\u63db \n                $ownerId = Auth::id();\n                if ($shopId!== $ownerId) { // \u540c\u3058\u3067\u306a\u304b\u3063\u305f\u3089 \n                    abort(404); // 404\u753b\u9762\u8868\u793a \n                }\n            }\n            return $next($request);\n        });\n    }\n\n    public function index()\n    {\n        // phpinfo();\n        $owner_id = Auth::id();\n        $shops = Shop::where('owner_id', $owner_id)->get();\n\n        return view('owner.shops.index', compact('shops'));\n    }\n\n    public function edit($id)\n    {\n        // dd(Shop::findOrFail($id));\n        $shop = Shop::findOrFail($id);\n        return view('owner.shops.edit', compact('shop'));\n    }\n\n    public function update(UploadImageRequest $request, $id)\n    {\n        $imageFile = $request->image; //\u4e00\u6642\u4fdd\u5b58 \n        if (!is_null($imageFile) && $imageFile->isValid()) {\n            Storage::putFile('public/shops', $imageFile);\n        }\n\n        return redirect()->route('owner.shops.index');\n    }\n}\n",
  "import { useState, useCallback, PropsWithChildren } from'react'\nimport styled from'styled-components'\nimport ImageCarousel, {\n  PageLabel,\n  CarouselImageMeta,\n} from '@titicaca/image-carousel'\nimport { Container, Responsive, ImageSource } from '@titicaca/core-elements'\nimport { useEventTrackingContext } from '@titicaca/react-contexts'\nimport { useTripleClientMetadata } from '@titicaca/react-triple-client-interfaces'\nimport { ImageMeta } from '@titicaca/type-definitions'\n\nimport CtaOverlay from './cta-overlay'\n\nconst SHOW_CTA_FROM_INDEX = 5\n\nconst FixedRatioContainer = styled.div<{ ratio: number }>`\n  padding-top: ${({ ratio }) => 100 * ratio}%;\n  width: 100%;\n`\n\nconst FixedRatioContent = styled.div<{ ratio: number }>`\n  margin-top: -${({ ratio }) => 100 * ratio}%;\n`\n\nfunction FixedRatio({ ratio, children }: PropsWithChildren<{ ratio: number }>) {\n  return (\n    <FixedRatioContainer ratio={ratio}>\n      <FixedRatioContent ratio={ratio}>{children}</FixedRatioContent>\n    </FixedRatioContainer>\n  )\n}\n\nexport default function Carousel({\n  images,\n  totalImagesCount,\n  onImageClick,\n  onCtaClick,\n  onImagesFetch,\n  optimized,\n  borderRadius = 6,\n  height,\n}: {\n  images: CarouselImageMeta[]\n  totalImagesCount: number\n  onImageClick: (image: ImageMeta) => void\n  onCtaClick: () => void\n  onImagesFetch: () => void\n  optimized?: boolean\n  borderRadius?: number\n  height?: number\n}) {\n  const app = useTripleClientMetadata()\n  const { trackEvent, trackSimpleEvent } = useEventTrackingContext()\n  const [currentPage, setCurrentPage] = useState(0)\n  const visibleImages = app? images : images.slice(0, SHOW_CTA_FROM_INDEX + 1)\n\n  const handleImageClick = useCallback(() => {\n    if (!app && currentPage === SHOW_CTA_FROM_INDEX) {\n      return onCtaClick()\n    }\n\n    onImageClick(images[currentPage])\n  }, [onImageClick, onCtaClick, images, currentPage, app])\n\n  const handlePageChange = useCallback(\n    ({ index }) => {\n      if (index === currentPage) {\n        return\n      }\n\n      setCurrentPage(index)\n\n      if (!app && index === SHOW_CTA_FROM_INDEX) {\n        return trackSimpleEvent({ action: '\ub300\ud45c\uc0ac\uc9c4_\uc571\uc5d0\uc11c\ub354\ubcf4\uae30_\ub178\ucd9c' })\n      }\n\n      const currentImage = images[index]\n\n      if (currentImage) {\n        const { attachmentId } = currentImage\n        const action = '\ub300\ud45c\uc0ac\uc9c4\uc120\ud0dd'\n        const label = `\uc2a4\uc640\uc774\ud504${attachmentId? `_\uc0ac\uc6a9\uc790\ub4f1\ub85d` : ''}`\n\n        trackEvent({\n          fa: {\n            action,\n            label,\n           ...(attachmentId? { attachment_id: attachmentId } : {}),\n          },\n          ga: ['\ub300\ud45c\uc0ac\uc9c4_\uc2a4\uc640\uc774\ud504'],\n        })\n      }\n\n      if (app && index > images.length - 5) {\n        onImagesFetch()\n      }\n    },\n    [\n      setCurrentPage,\n      currentPage,\n      images,\n      app,\n      onImagesFetch,\n      trackEvent,\n      trackSimpleEvent,\n    ],\n  )\n\n  const ConditionalPageLabel = app\n   ? undefined\n    : ({ currentIndex }: { currentIndex: number }) =>\n       !totalImagesCount || currentIndex === SHOW_CTA_FROM_INDEX? null : (\n          <PageLabel currentIndex={currentPage} totalCount={totalImagesCount} />\n        )\n\n  const CTA = ({ currentIndex }: { currentIndex: number }) =>\n   !app && currentIndex === SHOW_CTA_FROM_INDEX? <CtaOverlay /> : null\n\n  return (\n    <>\n      <Responsive maxWidth={706}>\n        <FixedRatio ratio={0.6}>\n          <ImageCarousel\n            images={visibleImages}\n            currentPage={currentPage}\n            displayedTotalCount={totalImagesCount}\n            borderRadius={borderRadius}\n            onImageClick={handleImageClick}\n            onMoveEnd={handlePageChange}\n            ImageSource={ImageSource}\n            showMoreRenderer={CTA}\n            pageLabelRenderer={ConditionalPageLabel}\n            optimized={optimized}\n            height={height}\n          />\n        </FixedRatio>\n      </Responsive>\n      <Responsive minWidth={707}>\n        <Container minHeight={400}>\n          <ImageCarousel\n            images={visibleImages}\n            currentPage={currentPage}\n            displayedTotalCount={totalImagesCount}\n            borderRadius={borderRadius}\n            size=\"large\"\n            onImageClick={handleImageClick}\n            onMoveEnd={handlePageChange}\n            ImageSource={ImageSource}\n            showMoreRenderer={CTA}\n            pageLabelRenderer={ConditionalPageLabel}\n            optimized={optimized}\n          />\n        </Container>\n      </Responsive>\n    </>\n  )\n}\n",
  "pd.crosstab(index=cast['year'], columns=cast['type']).plot(kind='area');",
  "from cursor import loader\nfrom cursor import data\nfrom cursor import device\nfrom cursor import path\nfrom cursor import filter\nfrom cursor import renderer\n\n\ndef save_wrapper(pc, projname, fname):\n    folder = data.DataDirHandler().jpg(projname)\n    jpeg_renderer = renderer.JpegRenderer(folder)\n\n    jpeg_renderer.render(pc, scale=4.0, thickness=3)\n    jpeg_renderer.save(fname)\n\n\nif __name__ == \"__main__\":\n    recs = data.DataDirHandler().recordings()\n    loader = loader.Loader(directory=recs, limit_files=None)\n    all_paths = loader.all_paths()\n\n    sorter = filter.Sorter(param=filter.Sorter.SHANNON_DIRECTION_CHANGES, reverse=True)\n    all_paths.sort(sorter)\n\n    pc = path.PathCollection()\n\n    counter = 0\n    for p in all_paths[90:100]:\n        p.layer = counter\n        pc.add(p)\n\n        counter += 1\n\n    device.SimpleExportWrapper().ex(\n        pc,\n        device.PlotterType.DIY_PLOTTER,\n        device.PaperSize.LANDSCAPE_A1,\n        100,\n        \"genuary\",\n        f\"4_code_golf_ALL_{pc.hash()}\",\n    )\n",
  "from django.contrib import admin\nfrom django.forms import BaseInlineFormSet\nfrom django_mptt_admin.admin import DjangoMpttAdmin\n\nfrom backend.models import FolderPermission, Folder\n\n\nclass FolderPermissionInline(admin.TabularInline):\n    model = FolderPermission\n\n\nclass FolderInheritedPermissionInlineFormSet(BaseInlineFormSet):\n\n    def __init__(self, *args, **kwargs):\n        super(FolderInheritedPermissionInlineFormSet, self).__init__(*args, **kwargs)\n        # Get FolderPermission objects which reference any ancestor folders\n        #.order_by('folder__lft') make use of MPTT lft to make them appear in same order as in tree\n        instance = kwargs['instance']\n        if instance.parent:\n            ancestors = instance.parent.get_ancestors(include_self=True)\n            self.queryset = FolderPermission.objects.filter(folder__in=ancestors).order_by('folder__lft')\n\n\n\nclass FolderInheritedPermissionInline(admin.TabularInline):\n    model = FolderPermission\n    extra = 0\n\n    verbose_name_plural = 'Inherited permissions'\n\n    fields = ['get_folderbc', 'group', 'user', ]\n    readonly_fields = ['get_folderbc', ]\n\n    def get_folderbc(self, obj):\n        if obj.pk:\n            return FolderPermission.objects.get(pk=obj.pk).folder.breadcrumbs\n        else:\n            return \"\"\n\n    get_folderbc.short_description = \"Defined in\"\n    get_folderbc.allow_tags = True\n\n    formset = FolderInheritedPermissionInlineFormSet\n\n    def has_change_permission(self, request, obj=None):\n        return False\n\n    def has_add_permission(self, request, obj=None):\n        return False\n\n    def has_delete_permission(self, request, obj=None):\n        return False\n\n    def get_readonly_fields(self, request, obj=None):\n        return list(super().get_fields(request, obj))\n\n\n@admin.register(Folder)\nclass FolderModelAdmin(DjangoMpttAdmin):\n    list_display = ['name', 'breadcrumbs']\n    readonly_fields = ('breadcrumbs',)\n    inlines = (\n        FolderPermissionInline,\n        FolderInheritedPermissionInline,\n    )\n\n    def render_change_form(self, request, context, *args, **kwargs):\n        context['after_related_objects'] = \"Hello there\"\n        return super(FolderModelAdmin, self).render_change_form(request, context, args, kwargs)\n",
  "CREATE INDEX i_report_smoke_report_tag ON smoke_report_tag (smoke_report, tag);\n\n",
  "---\ntitle: DEMO\n---\n\n# \u7b7e\u540d\n\n## \u6a2a\u5c4f\n\n```tsx\nimport React, { useEffect, useState } from'react';\nimport Signature from'signature-canvas';\nimport { TestData } from '../test/data/index';\n\nconst App: React.FC = () => {\n  const [canvas, setCanvas] = useState();\n  useEffect(() => {\n    const signature = new Signature({\n      container: 'canvas',\n      width: 667,\n      height: 375,\n      backgroundColor: '#f5f5f5',\n      onEnd: () => {\n        console.log('end');\n      }\n    });\n    setCanvas(signature);\n  }, []);\n\n  // undo\n  const unDo = () => {\n    canvas.undo();\n  };\n\n  // clear\n  const clear = () => {\n    canvas.clear();\n  };\n\n  // toDataURL\n  const toData = () => {\n    const data = canvas.toDataURL();\n    let a = document.createElement('a');\n    a.href = data;\n    a.download = '\u7b7e\u540d.png';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    a = null;\n  };\n\n  // reset\n  const reset = () => {\n    canvas.initData(TestData);\n  };\n\n  return (\n    <>\n      <canvas id=\"canvas\" />\n      <div>\n        <button onClick={unDo} style={{ marginRight: 24 }}>\n          \u64a4\u9500\n        </button>\n        <button onClick={clear} style={{ marginRight: 24 }}>\n          \u6e05\u9664\n        </button>\n        <button onClick={toData} style={{ marginRight: 24 }}>\n          \u4e0b\u8f7d\n        </button>\n        <button onClick={reset}>\u91cd\u7f6e\u6570\u636e</button>\n      </div>\n    </>\n  );\n};\nexport default App;\n```\n\n## \u7ad6\u5c4f\n\n```tsx\nimport React, { useEffect, useState } from'react';\nimport Signature from'signature-canvas';\n\nconst App: React.FC = () => {\n  const [canvas, setCanvas] = useState();\n\n  useEffect(() => {\n    const signature = new Signature({\n      container: 'canvas-1',\n      width: 667,\n      height: 375,\n      rotate: 90,\n      backgroundColor: '#f5f5f5',\n      onEnd: () => {\n        console.log('end');\n      }\n    });\n    setCanvas(signature);\n  }, []);\n\n  // undo\n  const unDo = () => {\n    canvas.undo();\n  };\n\n  // clear\n  const clear = () => {\n    canvas.clear();\n  };\n\n  // toDataURL\n  const toData = () => {\n    const data = canvas.toDataURL();\n    let a = document.createElement('a');\n    a.href = data;\n    a.download = '\u7b7e\u540d.png';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    a = null;\n  };\n  const width = 667;\n  const height = 420;\n  const style = {\n    width,\n    height,\n    transform: `rotate(90deg) translate(${(width - height) / 2}px, ${(width - height) / 2}px)`,\n  };\n  return (\n    <div style={{ width: 700, height: 700 }}>\n      <div style={style}>\n        <canvas id=\"canvas-1\" />\n        <div>\n          <button onClick={unDo} style={{ marginRight: 24 }}>\n            \u64a4\u9500\n          </button>\n          <button onClick={clear} style={{ marginRight: 24 }}>\n            \u6e05\u9664\n          </button>\n          <button onClick={toData}>\u4e0b\u8f7d</button>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default App;\n```\n\n## API\n\n| \u53c2\u6570 | \u8bf4\u660e | \u7c7b\u578b | \u9ed8\u8ba4\u503c |\n| --- | --- | --- | --- |\n| container | \u753b\u5e03 id \u6216\u753b\u5e03\u5b9e\u4f8b | string \\| \u00a0HTMLCanvasElement | - |\n| width | \u753b\u5e03\u5bbd\u5ea6 | number | 400 |\n| height | \u753b\u5e03\u9ad8\u5ea6 | number | 200 |\n| penColor | \u753b\u7b14\u989c\u8272 | string | blank |\n| backgroundColor | \u753b\u5e03\u80cc\u666f\u8272 | string | #fff |\n| rotate | \u753b\u5e03\u65cb\u8f6c\u89d2\u5ea6\uff0c\u652f\u6301[0,90,-90,180,-180] | number | 0 |\n| minWidth | \u753b\u7b14\u6700\u5c0f\u503c | number | 1 |\n| maxWidth | \u753b\u7b14\u6700\u5927\u503c | number | 4 |\n| deafultWidth | \u753b\u5e03\u8d77\u59cb\u503c(\u6bcf\u6b21\u89e6\u78b0\u753b\u5e03\u65f6\u7684\u5927\u5c0f)\uff0c\u5efa\u8bae\u4e0d\u5c0f\u4e8e\u6700\u5c0f\u503c\uff0c\u4e14\u4e0d\u5927\u4e8e\u6700\u5927\u503c\u3002 | number | 3 |\n| backgroundImage | \u753b\u5e03\u80cc\u666f\u8bbe\u7f6e | backgroundImage | - |\n| onBegin | \u5f00\u59cb\u7ed8\u5236\u51fd\u6570\uff0c\u591a\u6b21\u89e6\u53d1 | (e: MouseEvent \\| Touch)=>void | - |\n| onEnd | \u7ed8\u5236\u7ed3\u675f\u51fd\u6570\uff0c\u591a\u6b21\u89e6\u53d1 | (e: MouseEvent \\| \u00a0Touch)=>void | - |\n| clear | \u6e05\u9664\u753b\u5e03 | () => void | - |\n| undo | \u64a4\u9500 | () => void | - |\n| toDataURL | \u83b7\u53d6\u753b\u5e03\u6570\u636e\uff0cBase64 | (type = 'image/png', encoderOptions?: number) =>\u00a0string | - |\n| getHistory | \u83b7\u53d6\u753b\u5e03\u6808\u6570\u636e | () =>\u00a0string[] | - |\n| isEmpty | \u5224\u65ad\u753b\u5e03\u662f\u5426\u4e3a\u7a7a | () => boolean | - |\n| initData | \u521d\u59cb\u5316\u753b\u5e03\u6570\u636e\uff0cBase64 | (string) => void | - |\n| offEvent | \u53d6\u6d88\u753b\u5e03\u7684\u76d1\u542c\u4e8b\u4ef6 | () => void | - |\n\n### <br />\n\n### backgroundImage\n\n| \u5c5e\u6027 | \u8bf4\u660e                     | \u7c7b\u578b   | \u9ed8\u8ba4\u503c |\n| ---- | ------------------------ | ------ | ------ |\n| src  | \u80cc\u666f\u56fe\u7247\u5730\u5740             | string | -      |\n| x    | \u80cc\u666f\u56fe\u8ddd\u79bb\u753b\u5e03\u5de6\u4fa7\u7684\u8ddd\u79bb | number | 0      |\n| y    | \u80cc\u666f\u56fe\u8ddd\u79bb\u753b\u5e03\u4e0a\u4fa7\u7684\u8ddd\u79bb | number | 0      |\n",
  "import numpy as np\nimport torch\nfrom torch.utils.data.sampler import WeightedRandomSampler\n\n\nclass RolloutStorage(object):\n    def __init__(self, config):\n        self.obs = torch.zeros([config.max_buff,  *config.state_shape], dtype=torch.uint8)\n        self.next_obs = torch.zeros([config.max_buff,  *config.state_shape], dtype=torch.uint8)\n        self.rewards = torch.zeros([config.max_buff,  1])\n        self.actions = torch.zeros([config.max_buff, 1])\n        self.actions = self.actions.long()\n        self.masks = torch.ones([config.max_buff,  1])\n        # Masks that indicate whether it's a true terminal state\n        # or time limit end state\n        self.num_steps = config.max_buff\n        self.step = 0\n        self.current_size = 0\n\n    def add(self, obs, actions, rewards, next_obs, masks):\n        self.obs[self.step].copy_(torch.tensor(obs[None,:], dtype=torch.uint8).squeeze(0).squeeze(0))\n        self.next_obs[self.step].copy_(torch.tensor(next_obs[None,:], dtype=torch.uint8).squeeze(0).squeeze(0))\n        self.actions[self.step].copy_(torch.tensor(actions, dtype=torch.float))\n        self.rewards[self.step].copy_(torch.tensor(rewards, dtype=torch.float))\n        self.masks[self.step].copy_(torch.tensor(masks, dtype=torch.float))\n        self.step = (self.step + 1) % self.num_steps\n        self.current_size = min(self.current_size + 1, self.num_steps)\n\n    def sample(self, mini_batch_size=None):\n        indices = np.random.randint(0, self.current_size, mini_batch_size)\n        obs_batch = self.obs[indices]\n        obs_next_batch = self.next_obs[indices]\n        actions_batch = self.actions[indices]\n        rewards_batch = self.rewards[indices]\n        masks_batch = self.masks[indices]\n        return obs_batch, obs_next_batch, actions_batch, rewards_batch, masks_batch, indices\n\n\nclass PrioritizedRolloutStorage(RolloutStorage):\n    \"\"\"prioritized experience replay buffer\"\"\"\n\n    def __init__(self, config):\n        super().__init__(config)\n\n        self.weights = torch.zeros([config.max_buff, 1])\n        self.alpha = config.buff_alpha\n        self.beta = config.buff_beta\n\n        self.weight_max = 1\n        self._eps = torch.finfo(torch.float32).eps\n\n    def add(self, obs, actions, rewards, next_obs, masks):\n        # init weight\n        self.weights[self.step] = self.weight_max ** self.alpha\n        # add normal data\n        super().add(obs, actions, rewards, next_obs, masks)\n\n    def sample(self, mini_batch_size=None):\n        mini_batch_size = mini_batch_size or 1\n        indices = np.array(list(WeightedRandomSampler(\n            self.weights[0:self.current_size].view(-1), mini_batch_size, replacement=True)))\n        obs_batch = self.obs[indices]\n        obs_next_batch = self.next_obs[indices]\n        actions_batch = self.actions[indices]\n        rewards_batch = self.rewards[indices]\n        masks_batch = self.masks[indices]\n\n        return obs_batch, obs_next_batch, actions_batch, rewards_batch, masks_batch, indices\n\n    def update_weight(self, indices, weight):\n        weight = (torch.abs(weight) + self._eps).clone().detach().cpu()\n        self.weights[indices].copy_(weight ** self.alpha)\n        self.weight_max = max(self.weight_max, weight.max())\n\n    def update_beta(self, beta):\n        self.beta = beta\n\n    def get_weight(self, indices):\n        \"\"\"calculate the importance sampling weight\"\"\"\n        return (self.weights[indices] / self.weights.sum() * len(self.weights)) ** (-self.beta) / self.weight_max\n",
  "package net.renfei.api.account.entity;\n\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport lombok.Data;\n\n/**\n * \u6ce8\u518c\u5bf9\u8c61\n *\n * @author RenFei\n */\n@Data\n@ApiModel(value = \"\u6ce8\u518c\u8bf7\u6c42\u5bf9\u8c61\")\npublic class SignUpVO {\n    /**\n     * \u624b\u673a\u3001\u90ae\u7bb1\n     */\n    @ApiModelProperty(value = \"\u624b\u673a\u3001\u90ae\u7bb1\")\n    private String name;\n    /**\n     * \u5bc6\u7801/\u9a8c\u8bc1\u7801\uff08\u5982\u679c\u4f7f\u7528\u624b\u673a\u3001\u90ae\u7bb1\u6ce8\u518c\u5c31\u662f\u9a8c\u8bc1\u7801\uff09\n     */\n    @ApiModelProperty(value = \"\u5bc6\u7801/\u9a8c\u8bc1\u7801\uff08\u5982\u679c\u4f7f\u7528\u624b\u673a\u3001\u90ae\u7bb1\u6ce8\u518c\u5c31\u662f\u9a8c\u8bc1\u7801\uff09\")\n    private String passwd;\n}\n",
  "# Prediction Metrics\n\nThis project implements several metrics to measure the prediction\nquality of probabilistic models that are implemented using TensorFlow.\n\nThere are two uses of predictive metrics:\n\n1.  _Model evaluation_: assessing the quality of your probabilistic model on a\n    validation or test set.\n2.  _Model training_: you can use the loss functions defined in this project to\n    train probabilistic classification and regression models.\n\nTo use it, import the desired submodule. For example, in order to use the\nregression scores, use\n\n```python\nfrom uncertainty_metrics import regression\n```\n\n## Table of Contents\n\n[TOC]\n\n## Key Concepts\n\n### Proper Scoring Rules {#proper-scoring-rules}\n\n_Proper scoring rules_ are loss functions for probabilistic predictions.\nFormally, a proper scoring rule is a function which assign a numerical score\n$$S(P,y)$$ to a predicted distribution $$P$$ and a realized value $$y$$.\nAssuming that data instances are generated according to an unknown distribution,\n$$(x_i,y_i) \\sim Q$$, we would evaluate $$S(P(y|x_i),y_i)$$.\n\nCommon examples of proper scoring rules include the log-likelihood, the Brier\nscore, and the continuous ranked probability score (CRPS).\n\n__Reference__\n\n* _Tilmann Gneiting_ and _Adrian E. Raftery_, \"Strictly Proper Scoring Rules,\n  Prediction, and Estimation\", Journal of the American Statistical Association\n  (JASA), 2007.\n  [(PDF)](https://www.stat.washington.edu/raftery/Research/PDF/Gneiting2007jasa.pdf)\n\n### Calibration {#calibration}\n\n_Calibration_ refers to a frequentist property of probabilistic predictions being correct _on average_.  Intuitively, when predicting a binary outcome using a model, if we group all predictions where the outcome is believed to be 80 percent probable, then within this group we should, on average, see this outcome become true 80 percent of the time.  A model with this property is said to be well-calibrated.\n\nFormally, calibration can best be defined in terms of measuring the difference between a conditional predictive distribution and the true conditional distribution, where\nthe conditioning is done with respect to a set defined as a function of the prediction.\nFor $$(x,y) \\sim Q$$, with $$x \\in \\mathcal{X}$$, we consider $$\\gamma = f(x)$$ a function of the prediction.\nFor example, $$\\gamma$$ could be the vector of logits of a classifier, or a function thereof.  (In practice it will often be a discretization of a continuous quantity.)\n\nThen, the _true conditional distribution_ $$q(y|\\gamma)$$ corresponds to the true distribution over $$y$$ over the subset\n$$\\mathcal{X}_{\\gamma} := \\{x \\in \\mathcal{X} \\,|\\, f(x) = \\gamma\\}$$, i.e.\n\n$$q(y|\\gamma) =\n\\frac{\\mathbb{E}_{x \\sim Q}[\\mathbb{1}_{\\{f(x)=\\gamma\\}} \\, q(y|x)]}{Q(\\mathcal{X}_{\\gamma})}.$$\n\nThe _model predictive conditional distribution_ $$p(y|\\gamma)$$ is likewise given as\n\n$$p(y|\\gamma) =\n\\frac{\\mathbb{E}_{x \\sim Q}[\\mathbb{1}_{\\{f(x)=\\gamma\\}} \\, p(y|x)]}{Q(\\mathcal{X}_{\\gamma})}.$$\n\nThe _reliability_ of a probabilistic prediction system is now defined as an expected difference between the two quantities,\n\n$$\\textrm{Reliability} = \\mathbb{E}_{(x,y) \\sim Q}[\nD(q(y|\\gamma(x)) \\,\\|\\, p(y|\\gamma(x)))].$$\n\nA reliability of zero means that the model is perfectly calibrated: the predictions are on average correct.\nIn practice the reliability needs to be estimated: none of the expectations are available analytically.  Most importantly, to estimate the true conditional distribution requires discretization of the set of predictions.\n\n__Reference__\n\n* _Jochen Brocker_, \"Reliability, sufficiency, and the decomposition of proper scores\",\n  Quarterly Journal of the Royal Meteorological Society, 2009.\n  [(PDF)](https://rmets.onlinelibrary.wiley.com/doi/pdf/10.1002/qj.456)\n\n### Mutual Information {#mutual-information}\n\nMutual information is a way to measure the spread or _disagreement_ of an\nensemble $$\\{p(y|x; \\theta^{(m)})\\}^M_{m=1}$$. These metrics are used after or\nduring model training to estimate the predictive performance on the\nhold-out/test set. We differ between two mutual information based metrics,\n_model uncertainty_ and _knowledge uncertainty_. Model uncertainty estimates the\nmutual information between the categorical label $$y$$ and the model parameters\n$$\\theta$$, whereas knowledge uncertainty is the mutual information between the\ncategorical label $$y$$ and parameters $$\\pi$$ of the categorical distribution.\nBoth model and knowledge uncertainty can be expressed as the difference of the\ntotal uncertainty and the expected data uncertainty, where total uncertainty is\nthe entropy of expected predictive distribution and expected data uncertainty is\nthe expected entropy of individual predictive distribution.\n\nFormally, given an ensemble model $$\\{p(y|x^*,\\theta^{(m)})\\}_{m=1}^M$$ trained\non a finite dataset $$D$$, model uncertainty for a test input $$x^*$$ is defined\nas:\n\n$$ MI[y, \\theta|x^*, D] =\n\\mathcal{H}(\\mathbb{E}_{p(\\theta|D)}[p(y|x^*,\\theta)]) -\n\\mathbb{E}_{p(\\theta|D)}[\\mathcal{H}(p(u|x^*, \\theta))] $$\n\nThe total uncertainty will be high whenever the model is uncertain - both in\nregions of severe class overlap and out-of-domain. However, model uncertainty,\nthe difference between total and expected data uncertainty, will be non-zero iff\nthe ensemble disagrees.\n\nKnowledge uncertainty estimates the mutual information between between the\ncategorical output $$y$$ and the parameters $$\\pi$$ of the categorical\ndistribution. Malinin et al. introduced this metric specifically for ensemble\ndistribution distillation. It behaves exactly the same way as model uncertainty,\nbut the spread is now explicitly due to distributional uncertainty, rather than\nmodel uncertainty. Given $$p(\\pi|x^*, \\hat{\\theta}) = \\textrm{Dir}(\\pi|\\alpha)$$\nwhich models a Dirichlet distribution over the categorical output distribution\n$$\\pi$$, knowledge uncertainty is defined as:\n\n$$\nMI[y, \\pi|x^*, \\hat{\\theta}] =\n\\mathcal{H}(\\mathbb{E}_{p(\\pi| x^*, \\hat{\\theta})}[p(y|\\pi)]) -\n\\mathbb{E}_{p(\\pi|x^*,\\hat{\\theta})}[\\mathcal{H}(p(y|\\pi))]\n$$\n\n__Reference__\n\n*   _Stefan Depeweg, Jos\u00e9 Miguel Hern\u00e1ndez-Lobato, Finale Doshi-Velez, and\n    Steffen Udluft_, \"Decomposition of uncertainty for active learning and\n    reliable reinforcement learning in stochastic systems\", stat 1050, 2017.\n    [(PDF)](https://proceedings.mlr.press/v80/depeweg18a/depeweg18a.pdf)\n\n*   _Andrey Malinin, Bruno Mlodozeniec and Mark Gales_, \"Ensemble Distribution\n    Distillation.\", arXiv:1905.00076, 2019.\n    [(PDF)](https://arxiv.org/pdf/1905.00076.pdf)\n\n### Information Criteria {#information-criteria}\n\n_Information criteria_ are used after or during model training to estimate the predictive performance on future holdout data.  They can be useful for selecting among multiple possible models or to perform hyperparameter optimization.  There are also strong connections between [cross validation estimates](https://en.wikipedia.org/wiki/Cross-validation_(statistics)) and some information criteria.\n\n__Reference__\n\n* _Sumio Watanabe_, \"Mathematical Theory of Bayesian Statistics\",\n  CRC Press, 2018.\n\n## API: Scoring Rules\n\n### Brier score {#brier-score}\n\nThe Brier score for discrete labels is defined as follows: given a predicted\nprobability vector $$P = (p_1,p_2,\\dots,p_L)$$ and given a realized value $$y\n\\in \\{1,2,\\dots,L\\}$$ the brier score is\n\n$$S_{\\textrm{Brier}}(P,y) = -2 p_y + \\sum_{i=1}^L p_i^2.$$\n\nHere is an example of how to use the Brier score as loss function for a\nclassifier. Suppose you have a classifier implemented in Tensorflow and your\ncurrent training code looks like\n\n```python\n  per_example_loss = tf.nn.sparse_softmax_cross_ent",
  "def model_opts(parser):\n\n    parser.add_argument('-config', default='lcsts.yaml', type=str,\n                        help=\"config file\")\n    parser.add_argument('-gpus', default=[], nargs='+', type=int,\n                        help=\"Use CUDA on the listed devices.\")\n    parser.add_argument('-restore', default='', type=str,\n                        help=\"restore checkpoint\")\n    parser.add_argument('-seed', type=int, default=1234,\n                        help=\"Random seed\")\n    parser.add_argument('-model', default='seq2seq', type=str,\n                        help=\"Model selection\")\n    parser.add_argument('-mode', default='train', type=str,\n                        help=\"Mode selection\")\n    parser.add_argument('-module', default='seq2seq', type=str,\n                        help=\"Module selection\")\n    parser.add_argument('-log', default='', type=str,\n                        help=\"log directory\")\n    parser.add_argument('-num_processes', type=int, default=4,\n                        help=\"number of processes\")\n    parser.add_argument('-refF', default='', type=str,\n                        help=\"reference file\")\n    parser.add_argument('-unk', action='store_true', help='replace unk')\n    parser.add_argument('-char', action='store_true', help='char level decoding')\n    parser.add_argument('-length_norm', action='store_true', help='replace unk')\n    parser.add_argument('-pool_size', type=int, default=0, help=\"pool size of maxout layer\")\n    parser.add_argument('-scale', type=float, default=1, help=\"proportion of the training set\")\n    parser.add_argument('-max_split', type=int, default=0, help=\"max generator time steps for memory efficiency\")\n    parser.add_argument('-split_num', type=int, default=0, help=\"split number for splitres\")\n    parser.add_argument('-pretrain', default='', type=str, help=\"load pretrain encoder\")\n\n\ndef convert_to_config(opt, config):\n    opt = vars(opt)\n    for key in opt:\n        if key not in config:\n            config[key] = opt[key]\n",
  "#ifndef GLWIDGET_H\n#define GLWIDGET_H\n\n// Qt\n#include <QOpenGLWidget>\n#include <QOpenGLFunctions_2_1>\n#include <QPaintEvent>\n\n// local\n#include \"scene.h\"\n\nclass GlViewer : public QOpenGLWidget, public QOpenGLFunctions_2_1\n{\n    Q_OBJECT\n\nprivate:\n    Scene* m_scene;\n\n    // toggles\n    bool m_view_points;\n    bool m_view_tolerance;\n    bool m_view_vertices;\n    bool m_view_edges;\n    bool m_view_ghost_edges;\n    bool m_view_edge_cost;\n    bool m_view_edge_priority;\n    bool m_view_bins;\n    bool m_view_foot_points;\n    bool m_view_relocation;\n    bool m_view_edge_relevance;\n\n    // interactive modes\n    bool m_insert_points;\n\n    // rendering options\n    double m_line_thickness;\n    double m_point_size;\n    double m_vertex_size;\n\n    // camera\n    double m_scale;\n    double m_center_x, m_center_y;\n\n    // mouse\n    QPoint m_mouse_click;\n    QPoint m_mouse_move;\n    Point m_mouse_pick;\n\npublic:\n    GlViewer(QWidget *parent);\n\n    void set_scene(Scene* pScene) { m_scene = pScene; }\n\n    void set_camera(const double x, const double y, const double s)\n    {\n        m_center_x = x;\n        m_center_y = y;\n        m_scale = s;\n    }\n\n    // options\n    double& line_thickness() { return m_line_thickness; }\n    const double& line_thickness() const { return m_line_thickness; }\n\n    double& point_size() { return m_point_size; }\n    const double& point_size() const { return m_point_size; }\n\n    double& vertex_size() { return m_vertex_size; }\n    const double& vertex_size() const { return m_vertex_size; }\n\n    // toggles\n    void toggle_view_points() { m_view_points =!m_view_points; }\n\n    void toggle_view_tolerance() { m_view_tolerance =!m_view_tolerance; }\n\n    void toggle_view_vertices() { m_view_vertices =!m_view_vertices; }\n\n    void toggle_view_edges() { m_view_edges =!m_view_edges; }\n\n    void toggle_view_ghost_edges() { m_view_ghost_edges =!m_view_ghost_edges; }\n\n    void toggle_view_edge_cost() { m_view_edge_cost =!m_view_edge_cost; }\n\n    void toggle_view_edge_priority() {\n      m_view_edge_priority =!m_view_edge_priority;\n    }\n\n    void toggle_view_bins () { m_view_bins =!m_view_bins; }\n\n    void toggle_view_foot_points() { m_view_foot_points =!m_view_foot_points; }\n\n    void toggle_view_relocation() { m_view_relocation =!m_view_relocation; }\n\n    void toggle_view_edge_relevance() { m_view_edge_relevance =!m_view_edge_relevance; }\n\n    void toggle_insert_points() { m_insert_points =!m_insert_points; }\n\nprotected:\n    // GL\n    void paintGL();\n    void initializeGL();\n    void resizeGL(int width, int height);\n\n    // mouse\n    void wheelEvent(QWheelEvent *event);\n    void mouseMoveEvent(QMouseEvent *event);\n    void mousePressEvent(QMouseEvent *event);\n    void mouseReleaseEvent(QMouseEvent *event);\n\n    void sample_mouse_path(const QPoint& point);\n    void move_camera(const QPoint& p0, const QPoint& p1);\n    void convert_to_world_space(const QPoint& point, double &x, double &y);\n};\n\n#endif\n",
  "import * as React from'react';\nimport {\n    Alert,\n    AlertIcon,\n    Button,\n    Box,\n    Container,\n    Stack,\n    VStack,\n    Skeleton,\n  } from '@chakra-ui/react';\nimport Head from 'next/head';\nimport PageHeader from '@/components/page-header';\n\nimport {\n    useDisclosure\n  } from \"@chakra-ui/react\"\n\nimport EmptyPane from '@/components/empty-pane';\n\nimport { GET_LIST, CANCEL_ACCESS } from './queries'\n\n//import { useAppContext } from '@/pages/context'\n\nconst { useEffect, useState } = React\n\nimport { styles } from '@/shared/styles/devportal.css'\n\nimport graphql from '@/shared/services/graphql'\n\nimport List from './list'\n\nconst customStyles = {\n    content : {\n      top                   : '30%',\n      left                  : '20%',\n      right                 : '20%',\n      bottom                : 'auto',\n      transformx             : 'translate(-50%, -50%)'\n    },\n    overlay: {\n    }\n};\n\nconst MyApplicationsPage = () => {\n\n    const [{ state, data}, setState] = useState({ state: 'loading', data: null });\n\n    const fetch = () => {\n        graphql(GET_LIST, {})\n       .then(({ data }) => {\n            setState({ state: 'loaded', data });\n        })\n       .catch((err) => {\n            setState({ state: 'error', data: null });\n        });\n    };\n    \n    useEffect(fetch, []);\n\n    const cancelRequest = (id) => {\n        graphql(CANCEL_ACCESS, {id})\n       .then(({ data }) => {\n            fetch()\n        })\n       .catch((err) => {\n            console.log(err)\n            fetch()\n        });\n    };\n    \n    const { isOpen, onOpen, onClose } = useDisclosure()\n\n    const actions = [\n    ]\n    return (\n        <>\n        <Head>\n          <title>API Program Services | API Access</title>\n        </Head>\n        <Container maxW=\"6xl\">\n            <Stack spacing={10} className=\"m-5\">\n                <Alert status=\"info\">\n                    <AlertIcon />\n                    List of the BC Government Service APIs that you have access to.\n                </Alert>\n            </Stack>\n\n  \n          <PageHeader title=\"API Access\" actions={actions}>\n          </PageHeader>\n  \n          <Box mt={5}>\n            { data && data.allServiceAccesses.filter(s => s.productEnvironment!= null).length == 0 && (\n                <Box gridColumnStart=\"1\" gridColumnEnd=\"4\">\n                <EmptyPane\n                    title=\"No Access to any APIs Yet.\"\n                    message=\"Go find an API to try in our API Directory!\"\n                    action={false}\n                />\n                </Box>                \n            )}\n            <List data={data} state={state} refetch={fetch} cancelRequest={cancelRequest} />\n\n          </Box>\n        </Container>\n        </>\n\n    )\n}\n\nexport default MyApplicationsPage;\n",
  "package pers.wossge.mall.product.dao;\n\nimport pers.wossge.mall.common.entity.pms.PmsSkuSaleAttrValueEntity;\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\nimport org.apache.ibatis.annotations.Mapper;\n\n/**\n * sku\u9500\u552e\u5c5e\u6027&\u503c\n * \n * @author wossge\n * @email wossge@hotmail.com\n * @date 2020-07-21 00:53:15\n */\n@Mapper\npublic interface PmsSkuSaleAttrValueDao extends BaseMapper<PmsSkuSaleAttrValueEntity> {\n\t\n}\n",
  "var React = require('react');\nvar { Dimensions } = require('react-native');\n\nvar device = Dimensions.get('window');\nvar scale;\n\nif (device.width <= 414) {\n    //Android smartphones\n    scale = device.width / 414;\n} else{\n    //Android tablets\n    scale = 1;\n}\n\nmodule.exports = { scale: scale };\n\n",
  "\ninterface commonState {\n\n};\n\nconst commonState = (\n  state: commonState = {\n\n  },\n  action: any\n): commonState => {\n  switch (action.type) {\n    default:\n      return {\n       ...state\n      };\n  }\n};\n\nexport { commonState };\n",
  "---\nlayout: slide\ntitle: \"welcome 2 our 2nd slide\"\n---\nchange 5th line\n",
  "CREATE TABLE cargo \n(\ncodigo INT NOT NULL,\nnome VARCHAR(50),\nsalario INT NOT NULL,\n\n);\n\nINSERT INTO cargo VALUES (01,'Advogado','3000,00')\nINSERT INTO cargo VALUES (02,'Analista de Sistemas',4000,00)\nINSERT INTO cargo VALUES (03,'Contador',1000,00)\nINSERT INTO cargo VALUES (04,'Engenheiro',4000,00)\nINSERT INTO cargo VALUES (05,'Programador',1500,00)\nINSERT INTO cargo VALUES (06,'Medico',4000,00)\nINSERT INTO cargo VALUES (07,'Auxiliar de Escrit\u00f3rio',400,00)\n",
  "import { Params, RouterStateSnapshot } from '@angular/router';\nimport { ActionReducerMap, createFeatureSelector, MetaReducer } from '@ngrx/store';\nimport * as fromRouter from '@ngrx/router-store';\nimport { environment } from '../../environments/environment';\nimport { ActivatedRouteSnapshot } from '@angular/router/src/router_state';\nimport { storeFreeze } from 'ngrx-store-freeze';\n\n\nexport interface RouterStateUrl {\n  url: string;\n  queryParams: Params;\n  params: Params;\n}\n\nexport interface State {\n  router: fromRouter.RouterReducerState<RouterStateUrl>;\n}\n\nexport const reducers: ActionReducerMap<State> = {\n  router: fromRouter.routerReducer\n};\n\nexport const getRouterState = createFeatureSelector<fromRouter.RouterReducerState<RouterStateUrl>>('router');\n\nexport class CustomSerializer implements fromRouter.RouterStateSerializer<RouterStateUrl> {\n  serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n    const { url } = routerState;\n    const { queryParams } = routerState.root;\n\n    let state: ActivatedRouteSnapshot = routerState.root;\n    while (state.firstChild) {\n      state = state.firstChild;\n    }\n    const { params } = state;\n\n    return { url, queryParams, params };\n  }\n}\n\nexport const metaReducers: MetaReducer<any>[] =!environment.production\n ? [storeFreeze]\n  : [];\n",
  "# \ud83d\udd8b Gylphy\nDraw text as graphics using custom fonts.\n\n## API Documentation\n\nUnder development. For now check out `./demo/demo.js` for usage.\n\n## How to develop and build\n\n```bash\nnpm run build:prod    # Build library for portable use.\nnpm run dev    # Run the demo as a live dev server.\n```\n\n## Version History\n\n#### v0.1.11\n- Converting to NPM package.\n\n#### v0.1.10\n- Bug fix for strokeWidth issue.\n\n#### v0.1.9\n- Bug fix for row masks.\n\n#### v0.1.8\n- Fixed row mask issue in Safari.\n\n#### v0.1.7\n- Fixed issue where row elements couldn't be moved separate from a row mask.\n\n#### v0.1.6\n- Added support for masking rows of text.\n- Fixed bug where dropshadow were getting cut off.\n\n#### v0.1.5\n- Added more styling support: \n    - Dropshadow: offset, blur, color, and opacity.\n    - Stroke: color, linecap, width, and opacity.\n- Added \"boundingBox\" switch for showing the bounding box of the gliphy text element.",
  "import {UnitBase} from './abstract-unit-base';\nimport {makeNonEnumerable} from '../utils/funcs';\nimport {KOf, UnitConfig} from '../models';\nimport {Selection} from './selection';\n\n/**\n * Base for non-primitive Units.\n *\n * - NonPrimitiveUnitBase extends {@link UnitBase}\n * - Which further extends {@link Base} and `Observable`\n *\n * @category 2. Abstract\n */\nexport abstract class NonPrimitiveUnitBase<\n  T,\n  K extends KOf<T> = KOf<T>,\n  V extends T[K] = T[K]\n> extends UnitBase<T> {\n  protected constructor(config?: UnitConfig<T>) {\n    super(config);\n\n    makeNonEnumerable(this);\n  }\n\n  /**\n   * Returns the names of the properties of the current {@link value} using `Object.keys`. \\\n   *\n   * In case of a GenericUnit,\n   * if current {@link value} is null or undefined, it returns an empty `array`, \\\n   * where `Object.keys` would have failed.\n   *\n   * @category Common List/Dict/Generic Units\n   */\n  objectKeys(): string[] {\n    return this.rawValue() == null? [] : Object.keys(this.rawValue());\n  }\n\n  /**\n   * Returns an `array` of key/values of the properties of the current {@link value} using `Object.entries`. \\\n   *\n   * In case of a GenericUnit,\n   * if current {@link value} is null or undefined, it returns an empty `array`, \\\n   * where `Object.entries` would have failed.\n   *\n   * @category Common List/Dict/Generic Units\n   */\n  objectEntries(): [string, V][] {\n    return this.rawValue() == null? [] : Object.entries(this.value());\n  }\n\n  /**\n   * Returns an `array` of values of the properties of the current {@link value} using `Object.values`. \\\n   *\n   * In case of a GenericUnit,\n   * if current {@link value} is null or undefined, it returns an empty `array`, \\\n   * where `Object.values` would have failed.\n   *\n   * @category Common List/Dict/Generic Units\n   */\n  objectValues(): V[] {\n    return this.rawValue() == null? [] : Object.values(this.value());\n  }\n\n  // tslint:disable:max-line-length\n  // prettier-ignore\n  select<K1 extends KOf<T>>(k1: K1): Selection<T[K1], this>;\n  // prettier-ignore\n  select<K1 extends KOf<T>, K2 extends KOf<T[K1]>>(k1: K1, k2: K2): Selection<T[K1][K2], this>;\n  // prettier-ignore\n  select<K1 extends KOf<T>, K2 extends KOf<T[K1]>, K3 extends KOf<T[K1][K2]>>(k1: K1, k2: K2, k3: K3): Selection<T[K1][K2][K3], this>;\n  // using 'keyof' instead of 'KOf' for K4 onwards https://github.com/microsoft/TypeScript/issues/34933\n  // prettier-ignore\n  select<K1 extends KOf<T>, K2 extends KOf<T[K1]>, K3 extends KOf<T[K1][K2]>, K4 extends keyof T[K1][K2][K3]>(k1: K1, k2: K2, k3: K3, k4: K4): Selection<T[K1][K2][K3][K4], this>;\n  // prettier-ignore\n  select<K1 extends KOf<T>, K2 extends KOf<T[K1]>, K3 extends KOf<T[K1][K2]>, K4 extends keyof T[K1][K2][K3], K5 extends keyof T[K1][K2][K3][K4]>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5): Selection<T[K1][K2][K3][K4][K5], this>;\n  // prettier-ignore\n  select<K1 extends KOf<T>, K2 extends KOf<T[K1]>, K3 extends KOf<T[K1][K2]>, K4 extends keyof T[K1][K2][K3], K5 extends keyof T[K1][K2][K3][K4]>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5,...path: (string | number)[]): Selection<any, this>;\n  // tslint:enable:max-line-length\n  /**\n   * Select a nested property at a certain path in the Unit's {@link value}.\n   * It doesn't fail even if a value in middle of the path is undefined.\n   *\n   * It can be used to create an Observable to listen to changes in a nested property\n   * using {@link Selection.asObservable} method.\n   *\n   * It provides static value access through the {@link Selection.value} method.\n   * It can be helpful when the Unit is configured to be immutable,\n   * as you only clone the nested property instead of the whole value.\n   *\n   * @example\n   * ```typescript\n   * // create a Unit\n   * const unit = new DictUnit();\n   *\n   * // create a selection\n   * const selection = unit.select('a', 'b', 0);\n   * // create an Observable\n   * const selection$ = selection.asObservable();\n   * // subscribe to the selector\n   * selection.subscribe(value => console.log(value)) // logs undefined immediately\n   *\n   * // dispatch a value\n   * unit.dispatch({a: {b: ['hi', 'there']}});\n   * // 'hi' will get logged to the console\n   *\n   * // update a value on a different path\n   * unit.set('c', 'other');\n   * // the selector won't be triggered by this\n   * ```\n   *\n   * @param path Property keys and indexes of the path you want to select.\n   * @returns A {@link Selection} object of the selected property or path.\n   *\n   * @category Common List/Dict/Generic Units\n   */\n  select(...path: (string | number)[]): Selection<any, this> {\n    return new Selection(this, path);\n  }\n}\n",
  "require \"sourcify\"\nrequire \"patched/version\"\n\nmodule Patched\n\n  def self.included(receiver)\n    receiver.extend ClassMethods\n  end\n\n  def self.refinements\n    @refinements ||= {}\n  end\n\n  def self.new_refinement(receiver, class_to_refine, &block)\n    refinement = Module.new\n    refinement.module_eval <<-RB, __FILE__, __LINE__\n      refine #{class_to_refine} do\n        #{block.to_source(strip_enclosure: true, ignore_nested: true)}\n      end\n    RB\n\n    module_name = \"#{receiver}::#{class_to_refine}\"\n    self.refinements[module_name] = refinement\n  end\n\n  module ClassMethods\n    def patched(klass, &block)\n      Patched.new_refinement(self, klass, &block)\n    end\n  end\n\nend\n",
  "\ufeffusing System;\nusing System.Collections.Generic;\nusing FlixOneProductServices.Core.Model;\n\nnamespace FlixOneProductServices_Test.Fake\n{\n    public class ProductData\n    {\n        public IEnumerable<ProductViewModel> GetProducts()\n        {\n            var productVm = new List<ProductViewModel>\n            {\n                new ProductViewModel\n                {\n                    CategoryId = Guid.NewGuid(),\n                    CategoryDescription = \"Category Description\",\n                    CategoryName = \"Category Name\",\n                    ProductDescription = \"Product Description\",\n                    ProductId = Guid.NewGuid(),\n                    ProductImage = \"Image full path\",\n                    ProductName = \"Product Name\",\n                    ProductPrice = 112M\n                },\n                new ProductViewModel\n                {\n                    CategoryId = Guid.NewGuid(),\n                    CategoryDescription = \"Category Description-01\",\n                    CategoryName = \"Category Name-01\",\n                    ProductDescription = \"Product Description-01\",\n                    ProductId = Guid.NewGuid(),\n                    ProductImage = \"Image full path\",\n                    ProductName = \"Product Name-01\",\n                    ProductPrice = 12M\n                }\n            };\n\n            return productVm;\n        }\n\n        public IEnumerable<Product> GetProductList()\n        {\n            return new List<Product>\n            {\n                new Product\n                {\n                    Category = new Category(),\n                    CategoryId = Guid.NewGuid(),\n                    Description = \"Product Description-01\",\n                    Id = Guid.NewGuid(),\n                    Image = \"image full path\",\n                    Name = \"Product Name-01\",\n                    Price = 12M\n                },\n                new Product\n                {\n                    Category = new Category(),\n                    CategoryId = Guid.NewGuid(),\n                    Description = \"Product Description-02\",\n                    Id = Guid.NewGuid(),\n                    Image = \"image full path\",\n                    Name = \"Product Name-02\",\n                    Price = 125M\n                }\n            };\n        }\n    }\n}",
  "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Fun With Html Canvas</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n\n<body>\n    <canvas id=\"draw\" width=\"800\" height=\"800\"></canvas>\n\n    <script>      \n        const canvas = document.querySelector('#draw');\n        const ctx = canvas.getContext('2d');\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n        ctx.strokeStyle = '#BADA55';\n        ctx.lineJoin = 'round';\n        ctx.lineCap = 'round';\n        ctx.lineWidth = 100;\n        ctx.globalCompositeOperation ='multiply';\n\n        let isDrawing = false;\n        let lastX = 0;\n        let lastY = 0;\n        let hue = 0;\n        let direction = true;\n\n        function draw(e) {\n            if (!isDrawing) return;\n            console.log(e);\n            ctx.strokeStyle = `hsl(${hue}, 100%, 50%)`;\n            //ctx.lineWidth = hue;\n            ctx.beginPath();\n            ctx.moveTo(lastX, lastY);\n            ctx.lineTo(e.offsetX, e.offsetY);\n            ctx.stroke();\n            [lastX, lastY] = [e.offsetX, e.offsetY];\n\n            hue++;\n            if (hue >= 360) {\n                hue = 0;\n            }\n\n            if (ctx.lineWidth >= 100 || ctx.lineWidth <= 1) {\n                direction =!direction;\n            }\n\n            if (direction) {\n                ctx.lineWidth++;\n            } else {\n                ctx.lineWidth--;\n            }\n        }\n\n        canvas.addEventListener('mousedown', (e) => {\n            isDrawing = true;\n            [lastX, lastY] = [e.offsetX, e.offsetY];\n        });\n\n\n        canvas.addEventListener('mousemove', draw);\n        canvas.addEventListener('mouseup', () => isDrawing = false);\n        canvas.addEventListener('mouseout', () => isDrawing = false);\n    </script>\n</body>\n\n</html>",
  "<!-- MODALS -->\n<div class=\"modal fade\" id=\"modalGenBarcode\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title\"><i class=\"fa fa-qrcode\"></i> Generate QR Code</h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n          <center>\n            <img src=\"data:image/png;base64, {!! base64_encode(QrCode::format('png')\n                      ->size(150)->errorCorrection('H')\n                      ->generate('0'))!!}\" id=\"imgGenBarcode\" style=\"max-width: 200px;\">\n            <br>\n            <label id=\"lblGenBarcodeVal\">...</label>\n          </center>\n      </div>\n      <div class=\"modal-footer justify-content-between\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\n        <button type=\"submit\" id=\"btnPrintBarcode\" class=\"btn btn-primary\"><i id=\"iBtnPrintBarcodeIcon\" class=\"fa fa-print\"></i> Print</button>\n      </div>\n    </div>\n    <!-- /.modal-content -->\n  </div>\n  <!-- /.modal-dialog -->\n</div>\n<!-- /.modal -->\n\n  <!-- MODALS -->\n<div class=\"modal fade\" id=\"modalLogout\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content modal-sm\">\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title\"><i class=\"fa fa-user\"></i> Logout</h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <form method=\"post\" id=\"formSignOut\">\n        @csrf\n        <div class=\"modal-body\">\n          <label>Are you sure to logout?</label>\n        </div>\n        <div class=\"modal-footer justify-content-between\">\n          <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">No</button>\n          <button type=\"submit\" id=\"btnSignOut\" class=\"btn btn-primary\"><i id=\"iBtnSignOutIcon\" class=\"fa fa-check\"></i> Yes</button>\n        </div>\n      </form>\n    </div>\n    <!-- /.modal-content -->\n  </div>\n  <!-- /.modal-dialog -->\n</div>\n<!-- /.modal -->\n\n<script type=\"text/javascript\">\n  $(document).ready(function(){\n    $(\"#formSignOut\").submit(function(event){\n      event.preventDefault();\n      SignOut();\n    });\n\n    $(\"body\").css({\"overflow-y\" : \"auto\"});\n    $(document).on(\"hidden.bs.modal\", function () {\n        $(\"body\").addClass(\"modal-open\");\n        $(\"body\").css({\"overflow-y\" : \"auto\"});\n    });\n    $(document).on(\"show.bs.modal\", function () {\n        $(\"body\").css({\"overflow-y\" : \"hidden\"});\n    });\n  });\n</script>",
  "//setInterval ir\u00e1 rodar uma fun\u00e7\u00e3o N vezes\n//depois de X milissegundos\n\nconst timeOut = 1000\nconst cheking = () => console.log('checking')\n\nsetInterval(cheking, timeOut)",
  "# -*- coding: utf-8 -*-\nfrom __future__ import absolute_import\n\nfrom.api import Api\n\nclass Client(object):\n    \"\"\"Interact with API.\"\"\"\n\n    def __init__(self, apikey, api_version='3.1'):\n       \n        \"\"\"\n        Initializer.\n\n        :param apikey: Pingdom api key\n        \"\"\"\n        self.api = Api(apikey, api_version)\n\n    def get_check(self, checkid, include_teams = False):\n        check = self.api.send(method=\"get\", resource=\"checks\", \\\n        resourceid=checkid, params={\"include_teams\": include_teams})[\"check\"]\n        return check\n\n    def get_checks(self, tags):\n        checks = self.api.send(method=\"get\", resource = \"checks\", \\\n        data=tags)[\"checks\"]\n        return checks\n\n    def create_check(self, obj):\n        response = self.api.send(method='post', resource='checks', data=obj)['check']\n        return response\n\n    # def delete_check(self, check):\n    #     if not check._id:\n    #         raise Exception(\"CheckNotFound %s\" % check.name)\n    #     self.api.send(method='delete', resource='checks', resource_id=check._id)\n\n    def update_check(self, check, changes):\n        ## Caches current version of check\n        if changes:\n            cached = self.api.send(method='get', resource=\"checks\", resource_id=check)['check']\n            update = self.api.send(method='put', resource='checks', resource_id=check, data=changes)\n            ## Gets updated version of the check\n            verify = self.api.send(method='get', resource=\"checks\", resource_id=check)['check']\n            if cached!= verify and update['message'] == \"Modification of check was successful!\":\n                response = [update['message'], verify]\n                return response\n            elif cached == verify:\n                response = \"There were no changes made!\"\n                return response\n            else:\n                response = \"There seems to be an issue with Pingdom!\"\n                return  response\n        else:\n            response = \"No changes were specified!\"\n            return response\n \n    def get_maintenance(self, window_id):\n        value = str(window_id)\n        response = self.api.send(method = 'get', resource ='maintenance', resource_id = value)\n        return response\n\n    def create_maintenance(self, obj):\n         response = self.api.send(method = 'post', resource ='maintenance', data = obj)['maintenance']\n         return response\n",
  "#include <stdint.h>\n#include <stdlib.h>\n#include <stdio.h>\n#include <oracle/oracle.h>\n#include <oracle/pd.h>\n#include <oracle/normal.h>\n#include <pc/mem_map.hpp>\n#include <pc/jtree.hpp>\n#include <pc/net_socket.hpp>\n#include <math.h>\n#include <iostream>\n\nusing namespace pc;\n\nint usage()\n{\n  std::cerr << \"usage: test_qset <test.json>\" << std::endl;\n  return 1;\n}\n\nvoid init_prm( pc_prm_t *p )\n{\n  // scale factors\n  uint64_t m = 1UL;\n  for( uint32_t i=0;i!= PC_FACTOR_SIZE; ++i ) {\n    p->fact_[i] = m;\n    m *= 10UL;\n  }\n  // square roots\n  pd_t val[1];\n  for( uint32_t i=0; i!= PC_MAX_SEND_LATENCY; ++i ) {\n    pd_new( val, i+1, 0 );\n    pd_sqrt( val, val, p->fact_ );\n    pd_adjust( val, val, -9, p->fact_ );\n    p->cdecay_[i] = val->v_;\n  }\n  // normal dist. lookups\n  for( unsigned i=0;i!= PC_NORMAL_SIZE;++i ) {\n    p->norm_[i] = ntable_[i];\n  }\n}\n\nint main( int argc,char** argv )\n{\n  if ( argc < 2 ) {\n    return usage();\n  }\n  // initialize param table\n  pc_prm_t prm[1];\n  init_prm( prm );\n\n  // construct calculator\n  pc_qs_t qs[1];\n  pd_t m[1], s[1];\n  pc_qs_new( qs, prm );\n\n  // construct quotes\n  mem_map mf;\n  std::string file = argv[1];\n  mf.set_file(file );\n  if (!mf.init() ) {\n    std::cerr << \"test_qset: failed to read file[\" << file << \"]\"\n              << std::endl;\n    return 1;\n  }\n  jtree pt;\n  pt.parse( mf.data(), mf.size() );\n  if (!pt.is_valid() ) {\n    std::cerr << \"test_qset: failed to parse file[\" << file << \"]\"\n              << std::endl;\n    return 1;\n  }\n  int expo = pt.get_int( pt.find_val( 1, \"exponent\" ) );\n  uint32_t qt =pt.find_val( 1, \"quotes\" );\n  for( uint32_t it = pt.get_first( qt ); it; it = pt.get_next( it ) ) {\n    int64_t px = pt.get_int( pt.find_val( it,  \"price\"  ) );\n    int64_t conf = pt.get_uint( pt.find_val( it, \"conf\" ) );\n    int64_t sdiff = pt.get_int( pt.find_val( it, \"slot_diff\" ) );\n    pd_new_scale( m, px, expo );\n    pd_new_scale( s, conf, expo );\n\n    // multiply by sqrt(slot_diff) since this is what upd_aggregate does\n    pd_t t[1];\n    pd_new( t, prm->cdecay_[sdiff>0?sdiff-1:0], -9 );\n    pd_mul( s, s, t );\n\n    // add quote\n    pc_qs_add( qs, m, s );\n  }\n  pc_qs_calc( qs );\n\n  expo = std::min( qs->m_->e_, qs->s_->e_ );\n  if ( expo <= 0 ) expo = -9;\n  pd_adjust( qs->m_, qs->m_, expo, prm->fact_ );\n  pd_adjust( qs->s_, qs->s_, expo, prm->fact_ );\n\n  // generate result\n  json_wtr jw;\n  jw.add_val( json_wtr::e_obj );\n  jw.add_key( \"exponent\", (int64_t)expo );\n  jw.add_key( \"price\", qs->m_->v_ );\n  jw.add_key( \"conf\", qs->s_->v_ );\n  jw.pop();\n  net_buf *hd, *tl;\n  jw.detach( hd, tl );\n  while( hd ) {\n    net_buf *nxt = hd->next_;\n    std::cout.write( hd->buf_, hd->size_ );\n    hd->dealloc();\n    hd = nxt;\n  }\n  std::cout << std::endl;\n\n  return 0;\n}\n",
  "<?php\n\nnamespace App\\Controller;\n\nuse App\\Entity\\Car;\nuse App\\Form\\CarType;\nuse App\\Repository\\CarRepository;\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController;\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\nuse Symfony\\Component\\Routing\\Annotation\\Route;\n\n/**\n * @Route(\"/car\")\n */\nclass CarController extends AbstractController\n{\n    /**\n     * @Route(\"/\", name=\"car_index\", methods={\"GET\"})\n     */\n    public function index(CarRepository $carRepository): Response\n    {\n        return $this->render('car/index.html.twig', [\n            'cars' => $carRepository->findAll(),\n        ]);\n    }\n\n    /**\n     * @Route(\"/new\", name=\"car_new\", methods={\"GET\",\"POST\"})\n     */\n    public function new(Request $request): Response\n    {\n        $car = new Car();\n        $form = $this->createForm(CarType::class, $car);\n        $form->handleRequest($request);\n\n        if ($form->isSubmitted() && $form->isValid()) {\n            $entityManager = $this->getDoctrine()->getManager();\n            $entityManager->persist($car);\n            $entityManager->flush();\n\n            return $this->redirectToRoute('car_index');\n        }\n\n        return $this->render('car/new.html.twig', [\n            'car' => $car,\n            'form' => $form->createView(),\n        ]);\n    }\n\n    /**\n     * @Route(\"/{id}\", name=\"car_show\", methods={\"GET\"})\n     */\n    public function show(Car $car): Response\n    {\n        return $this->render('car/show.html.twig', [\n            'car' => $car,\n        ]);\n    }\n\n    /**\n     * @Route(\"/{id}/edit\", name=\"car_edit\", methods={\"GET\",\"POST\"})\n     */\n    public function edit(Request $request, Car $car): Response\n    {\n        $form = $this->createForm(CarType::class, $car);\n        $form->handleRequest($request);\n\n        if ($form->isSubmitted() && $form->isValid()) {\n            $this->getDoctrine()->getManager()->flush();\n\n            return $this->redirectToRoute('car_index');\n        }\n\n        return $this->render('car/edit.html.twig', [\n            'car' => $car,\n            'form' => $form->createView(),\n        ]);\n    }\n\n    /**\n     * @Route(\"/{id}\", name=\"car_delete\", methods={\"DELETE\"})\n     */\n    public function delete(Request $request, Car $car): Response\n    {\n        if ($this->isCsrfTokenValid('delete'.$car->getId(), $request->request->get('_token'))) {\n            $entityManager = $this->getDoctrine()->getManager();\n            $entityManager->remove($car);\n            $entityManager->flush();\n        }\n\n        return $this->redirectToRoute('car_index');\n    }\n}\n",
  "---\nexternal help file: ILAssembler-help.xml\nonline version: https://docs.microsoft.com/en-us/dotnet/api/system.reflection.emit.opcodes.newarr\nschema: 2.0.0\n---\n\n# newarr\n\n## SYNOPSIS\n\nPushes an object reference to a new zero-based, one-dimensional array whose elements are of a specific type onto the evaluation stack.\n\n## SYNTAX\n\n```powershell\nnewarr <signature>\n```\n\n## DESCRIPTION\n\nThe following table lists the instruction's hexadecimal and Microsoft Intermediate Language (MSIL) assembly format, along with a brief reference summary:\n\n| Format     | Assembly Format |\n| ---------- | --------------- |\n| 8D < `T` > | newarr `etype`  |\n\n The stack transitional behavior, in sequential order, is:\n\n1.  The number of elements in the array is pushed onto the stack.\n\n2.  The number of elements is popped from the stack and the array is created.\n\n3.  An object reference to the new array is pushed onto the stack.\n\n The `newarr` instruction pushes an object reference (type `O`) to a new zero-based, one-dimensional array whose elements are of type `etype` (a metadata token describing the type). The number of elements in the new array should be specified as a `native int`. Valid array indexes range from zero to the maximum number of elements minus one.\n\n The elements of an array can be any type, including value types.\n\n Zero-based, one-dimensional arrays of numbers are created using a metadata token referencing the appropriate value type (`System.Int32`, and so on). Elements of the array are initialized to 0 of the appropriate type.\n\n Nonzero-based one-dimensional arrays and multidimensional arrays are created using `newobj` rather than `newarr`. More commonly, they are created using the methods of the `System.Array` class in the.NET Framework.\n\n `System.OutOfMemoryException` is thrown if there is insufficient memory to satisfy the request.\n\n `System.OverflowException` is thrown if `numElems` is less than 0.\n\n## PARAMETERS\n\n### -signature\n\nSpecifies the target signature.\n\n```yaml\nType: signature\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n```\n\n## INPUTS\n\n### None\n\nThis function cannot be used with the pipeline.\n\n## OUTPUTS\n\n### None\n\nThis function cannot be used with the pipeline.\n\n## NOTES\n\n## RELATED LINKS\n",
  "# shell\u7f16\u7a0b\u6ce8\u610f\u4e8b\u9879\n\n# shell\u53d8\u91cf\n\nShell \u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u5b9a\u4e49\u53d8\u91cf\u7684\u65b9\u5f0f\uff1a\n\n```\nvariable=value\nvariable='value'\nvariable=\"value\"\n```\n\nvariable \u662f\u53d8\u91cf\u540d\uff0cvalue \u662f\u8d4b\u7ed9\u53d8\u91cf\u7684\u503c\u3002\u5982\u679c value \u4e0d\u5305\u542b\u4efb\u4f55\u7a7a\u767d\u7b26\uff08\u4f8b\u5982\u7a7a\u683c\u3001Tab\u7f29\u8fdb\u7b49\uff09\uff0c\u90a3\u4e48\u53ef\u4ee5\u4e0d\u4f7f\u7528\u5f15\u53f7\uff1b\u5982\u679c value \u5305\u542b\u4e86\u7a7a\u767d\u7b26\uff0c\u90a3\u4e48\u5c31\u5fc5\u987b\u4f7f\u7528\u5f15\u53f7\u5305\u56f4\u8d77\u6765\u3002\n\n## \u6ce8\u610f1\uff1a\u8d4b\u503c\u53f7\u7684\u5468\u56f4\u4e0d\u80fd\u6709\u7a7a\u683c\n\n\u8d4b\u503c\u53f7 = \u7684\u5468\u56f4\u4e0d\u80fd\u6709\u7a7a\u683c\uff0c\u9519\u8bef\u5199\u6cd5\uff1a`variable = value`\n\n## \u6ce8\u610f2\uff1a\u5355\u5f15\u53f7\u548c\u53cc\u5f15\u53f7\u7684\u533a\u522b\n\n```shell\n#!/bin/bash\n\nh=\"hello\"\nw=\"world\"\nhw1=\"hw is ${h} ${w}\"\nhw2='hw is ${h} ${w}'\necho $hw1\necho $hw2\n```\n\n\u8fd0\u884c\u7ed3\u679c\uff1a\n`hw is hello world`\n`hw is ${h} ${w}`\n\n- \u4ee5\u5355\u5f15\u53f7`\u2018 \u2019`\u5305\u56f4\u7684\u53d8\u91cf\u4e3a\u7eaf\u5b57\u7b26\uff0c\u4e0d\u4f1a\u5bf9\u91cc\u9762\u7684\u53d8\u91cf\u6216\u8005\u547d\u4ee4\u8fdb\u884c\u89e3\u6790\u3002\n- \u4ee5\u53cc\u5f15\u53f7`\u201c \u201d`\u5305\u56f4\u7684\u53d8\u91cf\uff0c\u8f93\u51fa\u65f6\u5148\u89e3\u6790\u91cc\u9762\u7684\u53d8\u91cf\u548c\u547d\u4ee4\uff0c\u800c\u4e0d\u662f\u628a\u53cc\u5f15\u53f7\u4e2d\u7684\u53d8\u91cf\u540d\u548c\u547d\u4ee4\u539f\u6837\u8f93\u51fa\u3002\n\n\n\n## \u5c06\u547d\u4ee4\u7684\u7ed3\u679c\u8d4b\u503c\u7ed9\u53d8\u91cf\n\nShell \u4e5f\u652f\u6301\u5c06\u547d\u4ee4\u7684\u6267\u884c\u7ed3\u679c\u8d4b\u503c\u7ed9\u53d8\u91cf\uff0c\u5e38\u89c1\u7684\u6709\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\uff1a\n\n```shell\nvariable=`command`\nvariable=$(command)\n```\n\n\u7b2c\u4e00\u79cd\u65b9\u5f0f\u628a\u547d\u4ee4\u7528\u53cd\u5f15\u53f7\u5305\u56f4\u8d77\u6765\uff0c\u53cd\u5f15\u53f7\u548c\u5355\u5f15\u53f7\u975e\u5e38\u76f8\u4f3c\uff0c\u5bb9\u6613\u4ea7\u751f\u6df7\u6dc6\uff0c\u6240\u4ee5\u4e0d\u63a8\u8350\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\uff1b\n\n\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u628a\u547d\u4ee4\u7528`$()`\u5305\u56f4\u8d77\u6765\uff0c\u533a\u5206\u66f4\u52a0\u660e\u663e\uff0c\u6240\u4ee5\u63a8\u8350\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u3002\n\n## \u53ea\u8bfb\u53d8\u91cf\n\n\u4f7f\u7528 **readonly** \u547d\u4ee4\u53ef\u4ee5\u5c06\u53d8\u91cf\u5b9a\u4e49\u4e3a\u53ea\u8bfb\u53d8\u91cf\uff0c\u53ea\u8bfb\u53d8\u91cf\u7684\u503c\u4e0d\u80fd\u88ab\u6539\u53d8\u3002\n\n\u4e0b\u9762\u7684\u4f8b\u5b50\u5c1d\u8bd5\u66f4\u6539\u53ea\u8bfb\u53d8\u91cf\uff0c\u7ed3\u679c\u62a5\u9519\uff1a\n\n```shell\n#!/bin/bash\nh=\"hello\"\nreadonly h\nh=\"hi\"\n```\n\n\u8fd0\u884c\u811a\u672c\uff0c\u7ed3\u679c\u4f1a\u63d0\u793ah\u4e3a\u53ea\u8bfb\u53d8\u91cf\n\n## \u5220\u9664\u53d8\u91cf\n\n\u4f7f\u7528 **unset** \u547d\u4ee4\u53ef\u4ee5\u5220\u9664\u53d8\u91cf\u3002\u8bed\u6cd5\uff1a\n\n```shell\nunset variable_name\n```\n\n\u53d8\u91cf\u88ab\u5220\u9664\u540e\u4e0d\u80fd\u518d\u6b21\u4f7f\u7528\uff1b`unset` \u547d\u4ee4\u4e0d\u80fd\u5220\u9664\u53ea\u8bfb\u53d8\u91cf\u3002\n\n## \u53d8\u91cf\u7c7b\u578b\n\n\u8fd0\u884cshell\u65f6\uff0c\u4f1a\u540c\u65f6\u5b58\u5728\u4e09\u79cd\u53d8\u91cf\uff1a\n\n#### 1) \u5c40\u90e8\u53d8\u91cf\n\n\u5c40\u90e8\u53d8\u91cf\u5728\u811a\u672c\u6216\u547d\u4ee4\u4e2d\u5b9a\u4e49\uff0c\u4ec5\u5728\u5f53\u524dshell\u5b9e\u4f8b\u4e2d\u6709\u6548\uff0c\u5176\u4ed6shell\u542f\u52a8\u7684\u7a0b\u5e8f\u4e0d\u80fd\u8bbf\u95ee\u5c40\u90e8\u53d8\u91cf\u3002\n\n#### 2) \u73af\u5883\u53d8\u91cf\n\n\u6240\u6709\u7684\u7a0b\u5e8f\uff0c\u5305\u62ecshell\u542f\u52a8\u7684\u7a0b\u5e8f\uff0c\u90fd\u80fd\u8bbf\u95ee\u73af\u5883\u53d8\u91cf\uff0c\u6709\u4e9b\u7a0b\u5e8f\u9700\u8981\u73af\u5883\u53d8\u91cf\u6765\u4fdd\u8bc1\u5176\u6b63\u5e38\u8fd0\u884c\u3002\u5fc5\u8981\u7684\u65f6\u5019shell\u811a\u672c\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u73af\u5883\u53d8\u91cf\u3002\n\n#### 3) shell\u53d8\u91cf\n\nshell\u53d8\u91cf\u662f\u7531shell\u7a0b\u5e8f\u8bbe\u7f6e\u7684\u7279\u6b8a\u53d8\u91cf\u3002shell\u53d8\u91cf\u4e2d\u6709\u4e00\u90e8\u5206\u662f\u73af\u5883\u53d8\u91cf\uff0c\u6709\u4e00\u90e8\u5206\u662f\u5c40\u90e8\u53d8\u91cf\uff0c\u8fd9\u4e9b\u53d8\u91cf\u4fdd\u8bc1\u4e86shell\u7684\u6b63\u5e38\u8fd0\u884c\n\n# Shell\u53c2\u6570\u4f20\u9012\n\n| \u53d8\u91cf | \u542b\u4e49                                                         |\n| ---- | ------------------------------------------------------------ |\n| $0   | \u5f53\u524d\u811a\u672c\u7684\u6587\u4ef6\u540d                                             |\n| $n   | \u4f20\u9012\u7ed9\u811a\u672c\u6216\u51fd\u6570\u7684\u53c2\u6570\u3002n \u662f\u4e00\u4e2a\u6570\u5b57\uff0c\u8868\u793a\u7b2c\u51e0\u4e2a\u53c2\u6570\u3002\u4f8b\u5982\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f$1\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f$2\u3002 |\n| $#   | \u4f20\u9012\u7ed9\u811a\u672c\u6216\u51fd\u6570\u7684\u53c2\u6570\u4e2a\u6570\u3002                                 |\n| $*   | \u4f20\u9012\u7ed9\u811a\u672c\u6216\u51fd\u6570\u7684\u6240\u6709\u53c2\u6570\u3002\u8fd9\u4e9b\u53c2\u6570\u662f\u4e00\u6574\u4e2a\u5b57\u7b26\u4e32           |\n| $@   | \u4f20\u9012\u7ed9\u811a\u672c\u6216\u51fd\u6570\u7684\u6240\u6709\u53c2\u6570\u3002\u88ab\u53cc\u5f15\u53f7(\" \")\u5305\u542b\u65f6\uff0c\u4e0e $* \u7a0d\u6709\u4e0d\u540c\uff0c\u4e0b\u9762\u5c06\u4f1a\u8bb2\u5230\u3002 |\n| $?   | \u4e0a\u4e2a\u547d\u4ee4\u7684\u9000\u51fa\u72b6\u6001\uff0c\u6216\u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002                         |\n| $$   | \u5f53\u524dShell\u8fdb\u7a0bID\u3002\u5bf9\u4e8e Shell \u811a\u672c\uff0c\u5c31\u662f\u8fd9\u4e9b\u811a\u672c\u6240\u5728\u7684\u8fdb\u7a0bID\u3002 |\n\n## $* \u548c $@ \u7684\u533a\u522b\n\n`$* `\u548c `$@ `\u90fd\u8868\u793a\u4f20\u9012\u7ed9\u51fd\u6570\u6216\u811a\u672c\u7684\u6240\u6709\u53c2\u6570\uff0c\u4e0d\u88ab\u53cc\u5f15\u53f7(\" \")\u5305\u542b\u65f6\uff0c\u90fd\u4ee5`\"$1\" \"$2\" \u2026 \"$n\"` \u7684\u5f62\u5f0f\u8f93\u51fa\u6240\u6709\u53c2\u6570\u3002\n\n\u4f46\u662f\u5f53\u5b83\u4eec\u88ab\u53cc\u5f15\u53f7(\" \")\u5305\u542b\u65f6\uff0c`\"$*\"` \u4f1a\u5c06\u6240\u6709\u7684\u53c2\u6570\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\uff0c\u4ee5`\"$1 $2 \u2026 $n\"`\u7684\u5f62\u5f0f\u8f93\u51fa\u6240\u6709\u53c2\u6570\uff1b`\"$@\"` \u4f1a\u5c06\u5404\u4e2a\u53c2\u6570\u5206\u5f00\uff0c\u4ee5`\"$1\" \"$2\" \u2026 \"$n\"` \u7684\u5f62\u5f0f\u8f93\u51fa\u6240\u6709\u53c2\u6570\u3002\n\n## \u9000\u51fa\u72b6\u6001\n\n`$?` \u53ef\u4ee5\u83b7\u53d6\u4e0a\u4e00\u4e2a\u547d\u4ee4\u7684\u9000\u51fa\u72b6\u6001\u3002\u6240\u8c13\u9000\u51fa\u72b6\u6001\uff0c\u5c31\u662f\u4e0a\u4e00\u4e2a\u547d\u4ee4\u6267\u884c\u540e\u7684\u8fd4\u56de\u7ed3\u679c\u3002\n\n\u9000\u51fa\u72b6\u6001\u662f\u4e00\u4e2a\u6570\u5b57\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5927\u90e8\u5206\u547d\u4ee4\u6267\u884c\u6210\u529f\u4f1a\u8fd4\u56de 0\uff0c\u5931\u8d25\u8fd4\u56de 1\u3002\n\n\u4e0d\u8fc7\uff0c\u4e5f\u6709\u4e00\u4e9b\u547d\u4ee4\u8fd4\u56de\u5176\u4ed6\u503c\uff0c\u8868\u793a\u4e0d\u540c\u7c7b\u578b\u7684\u9519\u8bef\u3002\n\n\n\n\n\nbsub\n\n-I -R \n\n# source",
  "//\n//  FFRtmp.cpp\n//  iOS_Test\n//\n//  Created by DV on 2019/11/4.\n//  Copyright \u00a9 2019 iOS. All rights reserved.\n//\n\n#include \"FFRtmp.hpp\"\n\n\n\n//MARK: - <-- Initializer -->\nFFRtmp::FFRtmp() {\n    av_register_all();\n    avformat_network_init();\n    \n\n    \n    this->formatCtx = avformat_alloc_context();\n}\n\nFFRtmp::~FFRtmp() {\n    avformat_network_deinit();\n}\n\n\n//MARK: - <-- Public -->\nint FFRtmp::connectToUrl(char* url) {\n    return this->openSocket(url);\n}\n\nint FFRtmp::disconnect() {\n    return this->closeSocket();\n}\n\n\nint FFRtmp::sendData(char *bytes, size_t size) {\n    \n    AVPacket pkt;\n    \n    memcpy(&pkt, bytes, size);\n    pkt.size = (int)size;\n    \n    \n    av_write_frame(this->formatCtx, &pkt);\n    \n    \n    \n    return 1;\n}\n\n\n//MARK: - <-- Private -->\nint FFRtmp::openSocket(char* url) {\n    int ret = 0;\n    \n    ret = avformat_open_input(&this->formatCtx, NULL, NULL, NULL);\n    ret = avformat_alloc_output_context2(&this->formatCtx, NULL, \"flv\", url);\n    \n    ret = avformat_write_header(this->formatCtx, NULL);\n    \n    return 0;\n}\n\nint FFRtmp::closeSocket() {\n    \n    av_write_trailer(this->formatCtx);\n    \n    \n    return 0;\n}\n",
  "<!DOCTYPE html>\n\n<html>\n<head>\n<meta charset=\"UTF-8\">\n\n<title>class Jekyll::Drops::SiteDrop - RDoc Documentation</title>\n\n<script type=\"text/javascript\">\n  var rdoc_rel_prefix = \"../../\";\n  var index_rel_prefix = \"../../\";\n</script>\n\n<script src=\"../../js/navigation.js\" defer></script>\n<script src=\"../../js/search.js\" defer></script>\n<script src=\"../../js/search_index.js\" defer></script>\n<script src=\"../../js/searcher.js\" defer></script>\n<script src=\"../../js/darkfish.js\" defer></script>\n\n<link href=\"../../css/fonts.css\" rel=\"stylesheet\">\n<link href=\"../../css/rdoc.css\" rel=\"stylesheet\">\n\n\n<body id=\"top\" role=\"document\" class=\"class\">\n<nav role=\"navigation\">\n  <div id=\"project-navigation\">\n    <div id=\"home-section\" role=\"region\" title=\"Quick navigation\" class=\"nav-section\">\n  <h2>\n    <a href=\"../../index.html\" rel=\"home\">Home</a>\n  </h2>\n\n  <div id=\"table-of-contents-navigation\">\n    <a href=\"../../table_of_contents.html#pages\">Pages</a>\n    <a href=\"../../table_of_contents.html#classes\">Classes</a>\n    <a href=\"../../table_of_contents.html#methods\">Methods</a>\n  </div>\n</div>\n\n    <div id=\"search-section\" role=\"search\" class=\"project-section initially-hidden\">\n  <form action=\"#\" method=\"get\" accept-charset=\"utf-8\">\n    <div id=\"search-field-wrapper\">\n      <input id=\"search-field\" role=\"combobox\" aria-label=\"Search\"\n             aria-autocomplete=\"list\" aria-controls=\"search-results\"\n             type=\"text\" name=\"search\" placeholder=\"Search\" spellcheck=\"false\"\n             title=\"Type to search, Up and Down to navigate, Enter to load\">\n    </div>\n\n    <ul id=\"search-results\" aria-label=\"Search Results\"\n        aria-busy=\"false\" aria-expanded=\"false\"\n        aria-atomic=\"false\" class=\"initially-hidden\"></ul>\n  </form>\n</div>\n\n  </div>\n\n  \n\n  <div id=\"class-metadata\">\n    \n    \n<div id=\"parent-class-section\" class=\"nav-section\">\n  <h3>Parent</h3>\n\n  <p class=\"link\"><a href=\"Drop.html\">Jekyll::Drops::Drop</a>\n</div>\n\n    \n    \n<div id=\"extends-section\" class=\"nav-section\">\n  <h3>Extended With Modules</h3>\n\n  <ul class=\"link-list\">\n    <li><span class=\"extend\">Forwardable</span>\n  </ul>\n</div>\n\n    \n<!-- Method Quickref -->\n<div id=\"method-list-section\" class=\"nav-section\">\n  <h3>Methods</h3>\n\n  <ul class=\"link-list\" role=\"directory\">\n    <li class=\"calls-super\" ><a href=\"#method-i-5B-5D\">#[]</a>\n    <li ><a href=\"#method-i-collections\">#collections</a>\n    <li ><a href=\"#method-i-config\">#config</a>\n    <li ><a href=\"#method-i-documents\">#documents</a>\n    <li ><a href=\"#method-i-html_pages\">#html_pages</a>\n    <li class=\"calls-super\" ><a href=\"#method-i-key-3F\">#key?</a>\n    <li ><a href=\"#method-i-posts\">#posts</a>\n    <li ><a href=\"#method-i-related_posts\">#related_posts</a>\n  </ul>\n</div>\n\n  </div>\n</nav>\n\n<main role=\"main\" aria-labelledby=\"class-Jekyll::Drops::SiteDrop\">\n  <h1 id=\"class-Jekyll::Drops::SiteDrop\" class=\"class\">\n    class Jekyll::Drops::SiteDrop\n  </h1>\n\n  <section class=\"description\">\n    \n  </section>\n\n  <section id=\"5Buntitled-5D\" class=\"documentation-section\">\n\n\n\n    <section class=\"attribute-method-details\" class=\"method-section\">\n      <header>\n        <h3>Attributes</h3>\n      </header>\n\n      <div id=\"attribute-i-current_document\" class=\"method-detail\">\n        <div class=\"method-heading attribute-method-heading\">\n          <span class=\"method-name\">current_document</span><span\n            class=\"attribute-access-type\">[W]</span>\n        </div>\n\n        <div class=\"method-description\">\n        \n        </div>\n      </div>\n    </section>\n\n\n     <section id=\"public-instance-5Buntitled-5D-method-details\" class=\"method-section\">\n       <header>\n         <h3>Public Instance Methods</h3>\n       </header>\n\n      <div id=\"method-i-5B-5D\" class=\"method-detail \">\n        <div class=\"method-heading\">\n          <span class=\"method-name\">[]</span><span\n            class=\"method-args\">(key)</span>\n          <span class=\"method-click-advice\">click to toggle source</span>\n        </div>\n\n        <div class=\"method-description\">\n          \n            <div class=\"method-calls-super\">\n              Calls superclass method\n              <a href=\"Drop.html#method-i-5B-5D\"><code>Jekyll::Drops::Drop#[]</code></a>\n            </div>\n\n          <div class=\"method-source-code\" id=\"5B-5D-source\">\n            <pre><span class=\"ruby-comment\"># File jekyll/drops/site_drop.rb, line 15</span>\n<span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier ruby-title\">[]</span>(<span class=\"ruby-identifier\">key</span>)\n  <span class=\"ruby-keyword\">if</span> <span class=\"ruby-identifier\">key</span> <span class=\"ruby-operator\">!=</span> <span class=\"ruby-string\">&quot;posts&quot;</span> <span class=\"ruby-operator\">&amp;&amp;</span> <span class=\"ruby-ivar\">@obj</span>.<span class=\"ruby-identifier\">collections</span>.<span class=\"ruby-identifier\">key?</span>(<span class=\"ruby-identifier\">key</span>)\n    <span class=\"ruby-ivar\">@obj</span>.<span class=\"ruby-identifier\">collections</span>[<span class=\"ruby-identifier\">key</span>].<span class=\"ruby-identifier\">docs</span>\n  <span class=\"ruby-keyword\">else</span>\n    <span class=\"ruby-keyword\">super</span>(<span class=\"ruby-identifier\">key</span>)\n  <span class=\"ruby-keyword\">end</span>\n<span class=\"ruby-keyword\">end</span></pre>\n          </div>\n        </div>\n\n\n      </div>\n\n      <div id=\"method-i-collections\" class=\"method-detail \">\n        <div class=\"method-heading\">\n          <span class=\"method-name\">collections</span><span\n            class=\"method-args\">()</span>\n          <span class=\"method-click-advice\">click to toggle source</span>\n        </div>\n\n        <div class=\"method-description\">\n          \n\n          <div class=\"method-source-code\" id=\"collections-source\">\n            <pre><span class=\"ruby-comment\"># File jekyll/drops/site_drop.rb, line 37</span>\n<span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier ruby-title\">collections</span>\n  <span class=\"ruby-ivar\">@site_collections</span> <span class=\"ruby-operator\">||=</span> <span class=\"ruby-ivar\">@obj</span>.<span class=\"ruby-identifier\">collections</span>.<span class=\"ruby-identifier\">values</span>.<span class=\"ruby-identifier\">sort_by</span>(<span class=\"ruby-operator\">&amp;</span><span class=\"ruby-value\">",
  "/*\nCopyright 2014 The Kubernetes Authors All rights reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\npackage install\n\nimport (\n\t\"encoding/json\"\n\t\"testing\"\n\n\t\"k8s.io/kubernetes/pkg/api/latest\"\n\t\"k8s.io/kubernetes/pkg/apis/componentconfig\"\n)\n\nfunc TestCodec(t *testing.T) {\n\tdaemonSet := componentconfig.KubeProxyConfiguration{}\n\t// We do want to use package latest rather than testapi here, because we\n\t// want to test if the package install and package latest work as expected.\n\tdata, err := latest.GroupOrDie(\"componentconfig\").Codec.Encode(&daemonSet)\n\tif err!= nil {\n\t\tt.Fatalf(\"unexpected error: %v\", err)\n\t}\n\tother := componentconfig.KubeProxyConfiguration{}\n\tif err := json.Unmarshal(data, &other); err!= nil {\n\t\tt.Fatalf(\"unexpected error: %v\", err)\n\t}\n\tif other.APIVersion!= latest.GroupOrDie(\"componentconfig\").GroupVersion || other.Kind!= \"KubeProxyConfiguration\" {\n\t\tt.Errorf(\"unexpected unmarshalled object %#v\", other)\n\t}\n}\n\nfunc TestInterfacesFor(t *testing.T) {\n\tif _, err := latest.GroupOrDie(\"componentconfig\").InterfacesFor(\"\"); err == nil {\n\t\tt.Fatalf(\"unexpected non-error: %v\", err)\n\t}\n\tfor i, groupVersion := range append([]string{latest.GroupOrDie(\"componentconfig\").GroupVersion}, latest.GroupOrDie(\"componentconfig\").GroupVersions...) {\n\t\tif vi, err := latest.GroupOrDie(\"componentconfig\").InterfacesFor(groupVersion); err!= nil || vi == nil {\n\t\t\tt.Fatalf(\"%d: unexpected result: %v\", i, err)\n\t\t}\n\t}\n}\n\nfunc TestRESTMapper(t *testing.T) {\n\tif v, k, err := latest.GroupOrDie(\"componentconfig\").RESTMapper.VersionAndKindForResource(\"kubeproxyconfiguration\"); err!= nil || v!= \"componentconfig/v1alpha1\" || k!= \"KubeProxyConfiguration\" {\n\t\tt.Errorf(\"unexpected version mapping: %s %s %v\", v, k, err)\n\t}\n\n\tif m, err := latest.GroupOrDie(\"componentconfig\").RESTMapper.RESTMapping(\"KubeProxyConfiguration\", \"\"); err!= nil || m.APIVersion!= \"componentconfig/v1alpha1\" || m.Resource!= \"kubeproxyconfigurations\" {\n\t\tt.Errorf(\"unexpected version mapping: %#v %v\", m, err)\n\t}\n\n\tfor _, groupVersion := range latest.GroupOrDie(\"componentconfig\").GroupVersions {\n\t\tmapping, err := latest.GroupOrDie(\"componentconfig\").RESTMapper.RESTMapping(\"KubeProxyConfiguration\", groupVersion)\n\t\tif err!= nil {\n\t\t\tt.Errorf(\"unexpected error: %v\", err)\n\t\t}\n\n\t\tif mapping.Resource!= \"kubeproxyconfigurations\" {\n\t\t\tt.Errorf(\"incorrect resource name: %#v\", mapping)\n\t\t}\n\t\tif mapping.APIVersion!= groupVersion {\n\t\t\tt.Errorf(\"incorrect groupVersion: %v\", mapping)\n\t\t}\n\n\t\tinterfaces, _ := latest.GroupOrDie(\"componentconfig\").InterfacesFor(groupVersion)\n\t\tif mapping.Codec!= interfaces.Codec {\n\t\t\tt.Errorf(\"unexpected codec: %#v, expected: %#v\", mapping, interfaces)\n\t\t}\n\t}\n}\n",
  "@extends('layouts.layout')\n\n@section('content')\n<!-- Search form -->\n<div class=\"row tm-row\">\n                <div class=\"col-12\">\n                    <form  class=\"form-inline tm-mb-80 tm-search-form\">                \n                        <input class=\"form-control tm-search-input\" name=\"search\" type=\"text\" placeholder=\"Search...\" aria-label=\"Search\">\n                        <button class=\"tm-search-button\" type=\"submit\">\n                            <i class=\"fas fa-search tm-search-icon\" aria-hidden=\"true\"></i>\n                        </button>                                \n                    </form>\n                </div>                \n</div>\n@if(session('mssg'))\n    <p style=\"color:red\">{{session('mssg')}}</p>\n@endif\n<div class=\"row tm-row\">\n    @foreach($posts as $post)\n    <article class=\"col-12 col-md-6 tm-post\">\n        @auth\n            @if (auth()->user()->id === $post->user->id)\n            <span>\n                <a href=\"{{route('edit',$post)}}\">Edit</a>\n                <form action=\"{{route('destroy',$post)}}\" method=\"post\">\n                    @method('delete')\n                    @csrf\n                    <input type=\"submit\" value=\" Delete\">\n                </form>\n            </span>\n            @endif\n        @endauth\n        <hr class=\"tm-hr-primary\">\n        <a href=\"{{route('post',$post)}}\" class=\"effect-lily tm-post-link tm-pt-60\">\n            <div class=\"tm-post-link-inner\">\n                <img src=\"{{asset($post->image)}}\" alt=\"Image\" class=\"img-fluid\">                            \n            </div>\n            <span class=\"position-absolute tm-new-badge\">New</span>\n            <h2 class=\"tm-pt-30 tm-color-primary tm-post-title\">{{$post->title}}</h2>\n        </a>                    \n        <p class=\"tm-pt-30\">\n                {!!$post->body!!}\n        </p>\n        <div class=\"d-flex justify-content-between tm-pt-45\">\n            <span class=\"tm-color-primary\">Travel. Events</span>\n            <span class=\"tm-color-primary\">{{$post->created_at->diffForHumans()}}</span>\n        </div>\n        <hr>\n        <div class=\"d-flex justify-content-between\">\n            <span>36 comments</span>\n            <span>by {{$post->user->name}}</span>\n        </div>\n    </article>\n    @endforeach\n    @if($posts->isEmpty())\n    <p>There Is No Posts</p>\n    @endif\n    \n\n    <!-- <article class=\"col-12 col-md-6 tm-post\">\n        <hr class=\"tm-hr-primary\">\n        <a href=\"post.html\" class=\"effect-lily tm-post-link tm-pt-60\">\n            <div class=\" tm-post-link-inner\">\n                <img src=\"{{asset('img/img-02.jpg')}}\" alt=\"Image\" class=\"img-fluid\">                            \n            </div>\n            <span class=\"position-absolute tm-new-badge\">New</span>\n            <h2 class=\"tm-pt-30 tm-color-primary tm-post-title\">Multi-purpose blog template</h2>\n        </a>                    \n        <p class=\"tm-pt-30\">\n            <a rel=\"nofollow\" href=\"https://templatemo.com/tm-553-xtra-blog\" target=\"_blank\">Xtra Blog</a>  is a multi-purpose HTML CSS template from TemplateMo website. \n            Blog list, single post, about, contact pages are included. Left sidebar fixed width and content area is a fluid full-width.\n        </p>\n        <div class=\"d-flex justify-content-between tm-pt-45\">\n            <span class=\"tm-color-primary\">Creative. Design. Business</span>\n            <span class=\"tm-color-primary\">June 16, 2020</span>\n        </div>\n        <hr>\n        <div class=\"d-flex justify-content-between\">\n            <span>48 comments</span>\n            <span>by Admin Sam</span>\n        </div>\n    </article>\n    <article class=\"col-12 col-md-6 tm-post\">\n        <hr class=\"tm-hr-primary\">\n        <a href=\"post.html\" class=\"effect-lily tm-post-link tm-pt-20\">\n            <div class=\"tm-post-link-inner\">\n                <img src=\"{{asset('img/img-03.jpg')}}\" alt=\"Image\" class=\"img-fluid\">\n            </div>\n            <h2 class=\"tm-pt-30 tm-color-primary tm-post-title\">How can you apply Xtra Blog</h2>\n        </a>                    \n        <p class=\"tm-pt-30\">\n            You are <u>allowed</u> to convert this template as any kind of CMS theme or template for your custom website builder. \n            You can also use this for your clients. Thank you for choosing us.\n        </p>\n        <div class=\"d-flex justify-content-between tm-pt-45\">\n            <span class=\"tm-color-primary\">Music. Audio</span>\n            <span class=\"tm-color-primary\">June 11, 2020</span>\n        </div>\n        <hr>\n        <div class=\"d-flex justify-content-between\">\n            <span>24 comments</span>\n            <span>by John Walker</span>\n        </div>\n    </article>\n    <article class=\"col-12 col-md-6 tm-post\">\n        <hr class=\"tm-hr-primary\">\n        <a href=\"post.html\" class=\"effect-lily tm-post-link tm-pt-20\">\n            <div class=\"tm-post-link-inner\">\n                <img src=\"{{asset('img/img-04.jpg')}}\" alt=\"Image\" class=\"img-fluid\">\n            </div>\n            <h2 class=\"tm-pt-30 tm-color-primary tm-post-title\">A little restriction to apply</h2>\n        </a>                    \n        <p class=\"tm-pt-30\">\n            You are <u>not allowed</u> to re-distribute this template as a downloadable ZIP file on any template collection\n            website. This is strongly prohibited as we worked hard for this template. Please contact TemplateMo for more information.\n        </p>\n        <div class=\"d-flex justify-content-between tm-pt-45\">\n            <span class=\"tm-color-primary\">Artworks. Design</span>\n            <span class=\"tm-color-primary\">June 4, 2020</span>\n        </div>\n        <hr>\n        <div class=\"d-flex justify-content-between\">\n            <span>72 comments</span>\n            <span>by Admin Sam</span>\n        </div>\n    </article>\n    <article class=\"col-12 col-md-6 tm-post\">\n        <hr class=\"tm-hr-primary\">\n        <a href=\"post.html\" class=\"effect-lily tm-post-link tm-pt-20\">\n            <div class=\"tm-post-link-inner\">\n                <img src=\"{{asset('img/img-05.jpg')}}\" alt=\"Image\" class=\"img-fluid\">\n            </div>\n            <h2 class=\"tm-pt-30 tm-color-primary tm-post-title\">Color hexa values of Xtra Blog</h2>\n        </a>                    \n        <p class=\"tm-pt-30\">\n            If you wish to kindly support us, please contact us or contribute a small PayPal amount to info [at] templatemo.com that is helpful for us.\n            <br>\n            Title #099 New #0CC <br>\n            <span class=\"tm-color-primary\">Text #999 Line #CCC Next #0CC Prev #F0F0F0</span>\n        </p>\n        <div class=\"d-flex justify-content-between tm-pt-45\">\n            <span class=\"tm-color-primary\">Creative. Video. Audio</span>\n            <span class=\"tm-color-primary\">May 31, 2020</span>\n        </div",
  "package cmd\n\n/*\nCopyright \u00a9 2020 Peter Howe <pnhowe@gmail.com>\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport (\n\t\"github.com/spf13/cobra\"\n\t\"strconv\"\n)\n\nvar complexVirtualBoxCmd = &cobra.Command{\n\tUse:   \"virtualbox\",\n\tShort: \"Work with VirtualBox Complexes\",\n}\n\nvar complexVirtualBoxGetCmd = &cobra.Command{\n\tUse:   \"get\",\n\tShort: \"Get VirtualBox Complexes\",\n\tArgs:  complexArgCheck,\n\tRunE: func(cmd *cobra.Command, args []string) error {\n\t\tcomplexID := args[0]\n\t\tc := getContractor()\n\t\tdefer c.Logout()\n\n\t\tr, err := c.VirtualboxVirtualBoxComplexGet(complexID)\n\t\tif err!= nil {\n\t\t\treturn err\n\t\t}\n\t\toutputDetail(r, `Name:               {{.Name}}\nDescription:        {{.Description}}\nType:               {{.Type}}\nState:              {{.State}}\nSite:               {{.Site | extractID}}\nBuiltPercentage:    {{.BuiltPercentage}}\nMembers:            {{.Members}}\nVirtualboxUsername: {{.VirtualboxUsername}}\nVirtualboxPassword: {{.VirtualboxPassword}}\nCreated:            {{.Created}}\nUpdated:            {{.Updated}}\n`)\n\n\t\treturn nil\n\t},\n}\n\nvar complexVirtualBoxCreateCmd = &cobra.Command{\n\tUse:   \"create\",\n\tShort: \"Create New VirtualBox Complex\",\n\tRunE: func(cmd *cobra.Command, args []string) error {\n\t\tc := getContractor()\n\t\tdefer c.Logout()\n\n\t\to := c.VirtualboxVirtualBoxComplexNew()\n\t\to.Name = detailName\n\t\to.Description = detailDescription\n\t\to.BuiltPercentage = detailBuiltPercentage\n\t\to.VirtualboxUsername = detailUsername\n\t\to.VirtualboxPassword = detailPassword\n\n\t\tif detailSite!= \"\" {\n\t\t\tr, err := c.SiteSiteGet(detailSite)\n\t\t\tif err!= nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t\to.Site = r.GetID()\n\t\t}\n\n\t\tfor _, v := range detailMembers {\n\t\t\ts, err := c.BuildingStructureGet(strconv.Itoa(v))\n\t\t\tif err!= nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t\to.Members = append(o.Members, s.GetID())\n\t\t}\n\n\t\tif err := o.Create(); err!= nil {\n\t\t\treturn err\n\t\t}\n\n\t\toutputKV(map[string]interface{}{\"id\": o.GetID()})\n\n\t\treturn nil\n\t},\n}\n\nvar complexVirtualBoxUpdateCmd = &cobra.Command{\n\tUse:   \"update\",\n\tShort: \"Update VirtualBox Complex\",\n\tArgs:  complexArgCheck,\n\tRunE: func(cmd *cobra.Command, args []string) error {\n\t\tfieldList := []string{}\n\t\tcomplexID := args[0]\n\t\tc := getContractor()\n\t\tdefer c.Logout()\n\n\t\to, err := c.VirtualboxVirtualBoxComplexGet(complexID)\n\t\tif err!= nil {\n\t\t\treturn err\n\t\t}\n\n\t\tif detailDescription!= \"\" {\n\t\t\to.Description = detailDescription\n\t\t\tfieldList = append(fieldList, \"description\")\n\t\t}\n\n\t\tif detailBuiltPercentage!= 0 {\n\t\t\to.BuiltPercentage = detailBuiltPercentage\n\t\t\tfieldList = append(fieldList, \"built_percentage\")\n\t\t}\n\n\t\tif detailUsername!= \"\" {\n\t\t\to.VirtualboxUsername = detailUsername\n\t\t\tfieldList = append(fieldList, \"virtualbox_username\")\n\t\t}\n\n\t\tif detailPassword!= \"\" {\n\t\t\to.VirtualboxPassword = detailPassword\n\t\t\tfieldList = append(fieldList, \"virtualbox_password\")\n\t\t}\n\n\t\tif detailSite!= \"\" {\n\t\t\tr, err := c.SiteSiteGet(detailSite)\n\t\t\tif err!= nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t\to.Site = r.GetID()\n\t\t\tfieldList = append(fieldList, \"site\")\n\t\t}\n\n\t\tif len(detailMembers) > 0 {\n\t\t\tfor _, v := range detailMembers {\n\t\t\t\ts, err := c.BuildingStructureGet(strconv.Itoa(v))\n\t\t\t\tif err!= nil {\n\t\t\t\t\treturn err\n\t\t\t\t}\n\t\t\t\to.Members = append(o.Members, s.GetID())\n\t\t\t}\n\t\t\tfieldList = append(fieldList, \"members\")\n\t\t}\n\n\t\tif err := o.Update(fieldList); err!= nil {\n\t\t\treturn err\n\t\t}\n\n\t\treturn nil\n\t},\n}\n\nfunc init() {\n\tcomplexTypes[\"virtualbox\"] = complexTypeEntry{\"/api/v1/VirtualBox/\", \"0.1\"}\n\n\tcomplexVirtualBoxCreateCmd.Flags().StringVarP(&detailName, \"name\", \"l\", \"\", \"Locator of New VirtualBox Complex\")\n\tcomplexVirtualBoxCreateCmd.Flags().StringVarP(&detailSite, \"site\", \"s\", \"\", \"Site of New VirtualBox Complex\")\n\tcomplexVirtualBoxCreateCmd.Flags().StringVarP(&detailDescription, \"description\", \"d\", \"\", \"Description of New VirtualBox Complex\")\n\tcomplexVirtualBoxCreateCmd.Flags().IntVarP(&detailBuiltPercentage, \"builtperc\", \"b\", 80, \"Built Percentage of New VirtualBox Complex\\n(Percentage of Built Members at which the complex is considered built)\")\n\tcomplexVirtualBoxCreateCmd.Flags().IntSliceVarP(&detailMembers, \"members\", \"m\", []int{}, \"Members of the new VirtualBox Complex, specify for each member\")\n\tcomplexVirtualBoxCreateCmd.Flags().StringVarP(&detailUsername, \"username\", \"u\", \"\", \"VirtualBox Username of New VirtualBox Complex\")\n\tcomplexVirtualBoxCreateCmd.Flags().StringVarP(&detailPassword, \"password\", \"p\", \"\", \"VirtualBox Password of New VirtualBox Complex\")\n\n\tcomplexVirtualBoxUpdateCmd.Flags().StringVarP(&detailSite, \"site\", \"s\", \"\", \"Update the Site of Complex with value\")\n\tcomplexVirtualBoxUpdateCmd.Flags().StringVarP(&detailDescription, \"description\", \"d\", \"\", \"Update the Description of VirtualBox Complex with value\")\n\tcomplexVirtualBoxUpdateCmd.Flags().IntVarP(&detailBuiltPercentage, \"builtperc\", \"b\", 0, \"Update the Built Percentage of VirtualBox Complex with value\")\n\tcomplexVirtualBoxUpdateCmd.Flags().IntSliceVarP(&detailMembers, \"members\", \"m\", []int{}, \"Update the Members of the VirtualBox Complex, specify for each member\")\n\tcomplexVirtualBoxUpdateCmd.Flags().StringVarP(&detailUsername, \"username\", \"u\", \"\", \"Update the VirtualBox Username of the VirtualBox Complex with value\")\n\tcomplexVirtualBoxUpdateCmd.Flags().StringVarP(&detailPassword, \"password\", \"p\", \"\", \"Update the VirtualBox Password of the VirtualBox Complex with value\")\n\n\tcomplexCmd.AddCommand(complexVirtualBoxCmd)\n\tcomplexVirtualBoxCmd.AddCommand(complexVirtualBoxGetCmd)\n\tcomplexVirtualBoxCmd.AddCommand(complexVirtualBoxCreateCmd)\n\tcomplexVirtualBoxCmd.AddCommand(complexVirtualBoxUpdateCmd)\n}\n",
  "/*!\n *  \\~chinese\n *  @header IEMContactManager.h\n *  @abstract \u6b64\u534f\u8bae\u5b9a\u4e49\u4e86\u597d\u53cb\u76f8\u5173\u64cd\u4f5c\n *  @author Hyphenate\n *  @version 3.00\n *\n *  \\~english\n *  @header IEMContactManager.h\n *  @abstract The protocol defines the operations of contact\n *  @author Hyphenate\n *  @version 3.00\n */\n\n#import <Foundation/Foundation.h>\n\n#import \"EMCommonDefs.h\"\n#import \"EMContactManagerDelegate.h\"\n\n@class EMError;\n\n/*!\n *  \\~chinese\n *  \u597d\u53cb\u76f8\u5173\u64cd\u4f5c\n *\n *  \\~english\n *  Contact Management\n */\n@protocol IEMContactManager <NSObject>\n\n@required\n\n#pragma mark - Delegate\n\n/*!\n *  \\~chinese\n *  \u6dfb\u52a0\u56de\u8c03\u4ee3\u7406\n *\n *  @param aDelegate  \u8981\u6dfb\u52a0\u7684\u4ee3\u7406\n *  @param aQueue     \u6267\u884c\u4ee3\u7406\u65b9\u6cd5\u7684\u961f\u5217\n *\n *  \\~english\n *  Add delegate\n *\n *  @param aDelegate  Delegate\n *  @param aQueue     The queue of call delegate method\n */\n- (void)addDelegate:(id<EMContactManagerDelegate>)aDelegate\n      delegateQueue:(dispatch_queue_t)aQueue;\n\n/*!\n *  \\~chinese\n *  \u79fb\u9664\u56de\u8c03\u4ee3\u7406\n *\n *  @param aDelegate  \u8981\u79fb\u9664\u7684\u4ee3\u7406\n *\n *  \\~english\n *  Remove delegate\n *\n *  @param aDelegate  Delegate\n */\n- (void)removeDelegate:(id)aDelegate;\n\n/*!\n *  \\~chinese\n *  \u83b7\u53d6\u672c\u5730\u5b58\u50a8\u7684\u6240\u6709\u597d\u53cb\n *\n *  @result \u597d\u53cb\u5217\u8868<NSString>\n *\n *  \\~english\n *  Get all contacts\n *\n *  @result Contact list<EMGroup>\n */\n- (NSArray *)getContacts;\n\n/*!\n *  \\~chinese\n *  \u4ece\u672c\u5730\u83b7\u53d6\u9ed1\u540d\u5355\u5217\u8868\n *\n *  @result \u9ed1\u540d\u5355\u5217\u8868<NSString>\n *\n *  \\~english\n *  Get the blacklist of blocked users\n *\n *  @result Blacklist<EMGroup>\n */\n- (NSArray *)getBlackList;\n\n#pragma mark - Sync method\n\n/*!\n *  \\~chinese\n *  \u4ece\u670d\u52a1\u5668\u83b7\u53d6\u6240\u6709\u7684\u597d\u53cb\n *\n *  \u540c\u6b65\u65b9\u6cd5\uff0c\u4f1a\u963b\u585e\u5f53\u524d\u7ebf\u7a0b\n *\n *  @param pError \u9519\u8bef\u4fe1\u606f\n *\n *  @return \u597d\u53cb\u5217\u8868<NSString>\n *\n *  \\~english\n *  Get all the contacts from the server\n *\n *  Synchronization method will block the current thread\n *\n *  @param pError Error\n *\n *  @return Contact list<NSString>\n */\n- (NSArray *)getContactsFromServerWithError:(EMError **)pError;\n\n/*!\n *  \\~chinese\n *  \u6dfb\u52a0\u597d\u53cb\n *\n *  \u540c\u6b65\u65b9\u6cd5\uff0c\u4f1a\u963b\u585e\u5f53\u524d\u7ebf\u7a0b\n *\n *  @param aUsername  \u8981\u6dfb\u52a0\u7684\u7528\u6237\n *  @param aMessage   \u9080\u8bf7\u4fe1\u606f\n *\n *  @return \u9519\u8bef\u4fe1\u606f\n *\n *  \\~english\n *  Add a contact with invitation message\n *\n *  Synchronization method will block the current thread\n *\n *  @param aUsername  The user to add\n *  @param aMessage   Invitation message\n *\n *  @return Error\n */\n- (EMError *)addContact:(NSString *)aUsername\n                message:(NSString *)aMessage;\n\n/*!\n *  \\~chinese\n *  \u5220\u9664\u597d\u53cb\n *\n *  \u540c\u6b65\u65b9\u6cd5\uff0c\u4f1a\u963b\u585e\u5f53\u524d\u7ebf\u7a0b\n *\n *  @param aUsername \u8981\u5220\u9664\u7684\u597d\u53cb\n *  @param aIsDeleteConversation \u662f\u5426\u5220\u9664\u4f1a\u8bdd\n *\n *  @return \u9519\u8bef\u4fe1\u606f\n *\n *  \\~english\n *  Delete a contact\n *\n *  Synchronization method will block the current thread\n *\n *  @param aUsername The user to delete\n *  @param aIsDeleteConversation Delete the conversation or not\n *\n *  @return Error\n */\n- (EMError *)deleteContact:(NSString *)aUsername\n          isDeleteConversation:(BOOL)aIsDeleteConversation;\n\n/*!\n *  \\~chinese\n *  \u4ece\u670d\u52a1\u5668\u83b7\u53d6\u9ed1\u540d\u5355\u5217\u8868\n *\n *  \u540c\u6b65\u65b9\u6cd5\uff0c\u4f1a\u963b\u585e\u5f53\u524d\u7ebf\u7a0b\n *\n *  @param pError \u9519\u8bef\u4fe1\u606f\n *\n *  @return \u9ed1\u540d\u5355\u5217\u8868<NSString>\n *\n *  \\~english\n *  Get the blacklist from the server\n *\n *  Synchronization method will block the current thread\n *\n *  @param pError Error\n *\n *  @return Blacklist<NSString>\n */\n- (NSArray *)getBlackListFromServerWithError:(EMError **)pError;\n\n/*!\n *  \\~chinese\n *  \u5c06\u7528\u6237\u52a0\u5165\u9ed1\u540d\u5355\n *\n *  \u540c\u6b65\u65b9\u6cd5\uff0c\u4f1a\u963b\u585e\u5f53\u524d\u7ebf\u7a0b\n *\n *  @param aUsername \u8981\u52a0\u5165\u9ed1\u547d\u5355\u7684\u7528\u6237\n *  @param aBoth     \u662f\u5426\u540c\u65f6\u5c4f\u853d\u53d1\u7ed9\u5bf9\u65b9\u7684\u6d88\u606f\n *\n *  @return \u9519\u8bef\u4fe1\u606f\n *\n *  \\~english\n *  Add a user to blacklist\n *\n *  Synchronization method will block the current thread\n *\n *  @param aUsername Block user\n *  @param aBoth     if aBoth is YES, then hide user and block messages from blocked user; if NO, then hide user from blocked user\n *\n *  @return Error\n */\n- (EMError *)addUserToBlackList:(NSString *)aUsername\n               relationshipBoth:(BOOL)aBoth;\n\n/*!\n *  \\~chinese\n *  \u5c06\u7528\u6237\u79fb\u51fa\u9ed1\u540d\u5355\n *\n *  \u540c\u6b65\u65b9\u6cd5\uff0c\u4f1a\u963b\u585e\u5f53\u524d\u7ebf\u7a0b\n *\n *  @param aUsername \u8981\u79fb\u51fa\u9ed1\u547d\u5355\u7684\u7528\u6237\n *\n *  @return \u9519\u8bef\u4fe1\u606f\n *\n *  \\~english\n *  Remove user out of blacklist\n *\n *  Synchronization method will block the current thread\n *\n *  @param aUsername Unblock user\n *\n *  @return Error\n */\n- (EMError *)removeUserFromBlackList:(NSString *)aUsername;\n\n/*!\n *  \\~chinese\n *  \u540c\u610f\u52a0\u597d\u53cb\u7684\u7533\u8bf7\n *\n *  \u540c\u6b65\u65b9\u6cd5\uff0c\u4f1a\u963b\u585e\u5f53\u524d\u7ebf\u7a0b\n *\n *  @param aUsername \u7533\u8bf7\u8005\n *\n *  @return \u9519\u8bef\u4fe1\u606f\n *\n *  \\~english\n *  Accept a friend request\n *\n *  Synchronization method will block the current thread\n *\n *  @param aUsername User who initiated the friend request\n *\n *  @return Error\n */\n- (EMError *)acceptInvitationForUsername:(NSString *)aUsername;\n\n/*!\n *  \\~chinese\n *  \u62d2\u7edd\u52a0\u597d\u53cb\u7684\u7533\u8bf7\n *\n *  \u540c\u6b65\u65b9\u6cd5\uff0c\u4f1a\u963b\u585e\u5f53\u524d\u7ebf\u7a0b\n *\n *  @param aUsername \u7533\u8bf7\u8005\n *\n *  @return \u9519\u8bef\u4fe1\u606f\n *\n *  \\~english\n *  Decline a friend request\n *\n *  Synchronization method will block the current thread\n *\n *  @param aUsername User who initiated the friend request\n *\n *  @return Error\n *\n * Please use the new method \n * - (void)declineFriendRequestFromUser:(NSString *)aUsername\n *                           completion:(void (^)(NSString *aUsername, EMError *aError))aCompletionBlock;\n */\n- (EMError *)declineInvitationForUsername:(NSString *)aUsername;\n\n#pragma mark - Async method\n\n/*!\n *  \\~chinese\n *  \u4ece\u670d\u52a1\u5668\u83b7\u53d6\u6240\u6709\u7684\u597d\u53cb\n *\n *  @param aCompletionBlock \u5b8c\u6210\u7684\u56de\u8c03\n *\n *  \\~english\n *  Get all contacts from the server\n *\n *  @param aCompletionBlock The callback block of completion\n *\n */\n- (void)getCont",
  "<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n    <title>waters</title>\n    <link href='http://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,700,300italic,400italic,700italic|Source+Code+Pro:300,400,700' rel='stylesheet' type='text/css'>\n<link rel=\"stylesheet\" href=\"../assets/css/bootstrap.css\">\n<link rel=\"stylesheet\" href=\"../assets/css/jquery.bonsai.css\">\n<link rel=\"stylesheet\" href=\"../assets/css/main.css\">\n<link rel=\"stylesheet\" href=\"../assets/icon-font/icons.css\">\n<script type=\"text/javascript\" src=\"../assets/js/jquery-2.1.0.min.js\"></script>\n<script type=\"text/javascript\" src=\"../assets/js/bootstrap.js\"></script>\n<script type=\"text/javascript\" src=\"../assets/js/jquery.bonsai.js\"></script>\n\n  </head>\n  <body>\n    <div>\n\n      <!-- Name Title -->\n\n      <h1>waters</h1>\n\n      <!-- Type and Stereotype -->\n\n      <section style=\"margin-top:.5em;\">\n        <span class=\"alert alert-info\">\n          <span class=\"node-icon staruml-icon icon-ERDEntity\"></span>\n          ERDEntity\n        </span>\n        \n      </section>\n\n      <!-- Path -->\n\n      <section style=\"margin-top: 10px\">\n        \n        \n        \n          \n          <span class=\"label label-info\"><a href='cf9c8b720f3815adeccaf3ef6e48c6c4.html'><span class='node-icon staruml-icon icon-Project'></span>GewaesserInfo</a></span>\n        \n          <span>::</span>\n          <span class=\"label label-info\"><a href='4697d57f8a6ebc99cb8b1ee6fee45f04.html'><span class='node-icon staruml-icon icon-ERDDataModel'></span>Data Model</a></span>\n        \n          <span>::</span>\n          <span class=\"label label-info\"><a href='b4ef1225d3f6d023d787536c9e4cd433.html'><span class='node-icon staruml-icon icon-ERDEntity'></span>waters</a></span>\n        \n      </section>\n\n      <!-- Diagram -->\n\n      \n\n      <!-- Description -->\n\n      \n      <section>\n        <h3>Description</h3>\n        <div>\n          \n            <span class=\"label label-info\">none</span>\n          \n        </div>\n      </section>\n      \n\n      <!-- Specification -->\n\n      \n\n      <!-- Directed Relationship -->\n\n      \n\n      <!-- Undirected Relationship -->\n\n      \n\n      <!-- Classifier -->\n\n      \n\n      <!-- Interface -->\n\n      \n\n      <!-- Component -->\n\n      \n\n      <!-- Node -->\n\n      \n\n      <!-- Actor -->\n\n      \n\n      <!-- Use Case -->\n\n      \n\n      <!-- Template Parameters -->\n\n      \n\n      <!-- Literals -->\n\n      \n\n      <!-- Attributes -->\n\n      \n\n      <!-- Operations -->\n\n      \n\n      <!-- Receptions -->\n\n      \n\n      <!-- Extension Points -->\n\n      \n\n      <!-- Parameters -->\n\n      \n\n      <!-- Diagrams -->\n\n      \n      \n\n      <!-- Behavior -->\n\n      \n\n      <!-- Action -->\n\n      \n\n      <!-- Interaction -->\n\n      \n\n      <!-- CombinedFragment -->\n\n      \n\n      <!-- Activity -->\n\n      \n\n      <!-- State Machine -->\n\n      \n\n      <!-- State Machine -->\n\n      \n\n      <!-- State -->\n\n      \n\n      <!-- Vertex -->\n\n      \n\n      <!-- Transition -->\n\n      \n\n      <!-- Data Model (ERD) -->\n\n      \n\n      <!-- Columns (ERD) -->\n\n      \n      <section>\n        <h3>Columns</h3>\n        \n        <table class=\"table table-striped table-bordered\">\n          <tr>\n            <th width=\"20%\">Name</th>\n            <th width=\"20%\">Type</th>\n            <th width=\"10%\">Primary Key</th>\n            <th width=\"10%\">Foreign Key</th>\n            <th width=\"20%\">Reference To</th>\n            <th width=\"10%\">Nullable</th>\n            <th width=\"10%\">Unique</th>\n          </tr>\n          \n          <tr>\n            <td><a href=\"8d66e66920ffc0c90c827b8f8b6f553b.html\">id</a></td>\n            <td>INTEGER</td>\n            <td><span class='label label-info'>true</span></td>\n            <td><span class='label label-info'>false</span></td>\n            <td>\n              \n              <span class='label label-info'>null</span>\n            </td>\n            <td><span class='label label-info'>false</span></td>\n            <td><span class='label label-info'>false</span></td>\n          </tr>\n          \n          <tr>\n            <td><a href=\"caac1d85ecf231ddd8ab57ea8f3d45e0.html\">user_id</a></td>\n            <td>INTEGER</td>\n            <td><span class='label label-info'>false</span></td>\n            <td><span class='label label-info'>true</span></td>\n            <td>\n              \n              <span class='label label-info'>null</span>\n            </td>\n            <td><span class='label label-info'>false</span></td>\n            <td><span class='label label-info'>false</span></td>\n          </tr>\n          \n          <tr>\n            <td><a href=\"783fa385652d947731e5313ef5bc0dcb.html\">current_id</a></td>\n            <td>INTEGER</td>\n            <td><span class='label label-info'>false</span></td>\n            <td><span class='label label-info'>true</span></td>\n            <td>\n              \n              <span class='label label-info'>null</span>\n            </td>\n            <td><span class='label label-info'>false</span></td>\n            <td><span class='label label-info'>false</span></td>\n          </tr>\n          \n          <tr>\n            <td><a href=\"2844186859e5a01dd2ef415a0a2004d8.html\">tide_id</a></td>\n            <td>INTEGER</td>\n            <td><span class='label label-info'>false</span></td>\n            <td><span class='label label-info'>true</span></td>\n            <td>\n              \n              <span class='label label-info'>null</span>\n            </td>\n            <td><span class='label label-info'>false</span></td>\n            <td><span class='label label-info'>false</span></td>\n          </tr>\n          \n          <tr>\n            <td><a href=\"6f47ae67ed5abf948e86924ed9eea385.html\">name</a></td>\n            <td>VARCHAR</td>\n            <td><span class='label label-info'>false</span></td>\n            <td><span class='label label-info'>false</span></td>\n            <td>\n              \n              <span class='label label-info'>null</span>\n            </td>\n            <td><span class='label label-info'>false</span></td>\n            <td><span class='label label-info'>false</span></td>\n          </tr>\n          \n          <tr>\n            <td><a href=\"3e194a0151554345e172f0be378e58df.html\">description</a></td>\n            <td>TEXT</td>\n            <td><span class='label label-info'>false</span></td>\n            <td><span class='label label-info'>false</span></td>\n            <td>\n              \n              <span class='label label-info'>null</span>\n            </td>\n            <td><span class='label label-info'>false</span></td>\n            <td><span class='label label-info'>false</span></td>\n          </tr>\n          \n          <tr>\n            <td><a href=\"f98d813d73f19e6885f472a92",
  "\ufeffusing System;\r\nusing FluentAssertions;\r\nusing Sirh3e.Rust.Option;\r\nusing Xunit;\r\n\r\nnamespace Sirh3e.Rust.Test.Option\r\n{\r\n    public partial class OptionUnitTest\r\n    {\r\n        private struct Point : IEquatable<Point>\r\n        {\r\n            public readonly double X;\r\n            public readonly double Y;\r\n\r\n            public Point(double x, double y)\r\n            {\r\n                X = x;\r\n                Y = y;\r\n            }\r\n\r\n            public struct Factory\r\n            {\r\n                public static Point New(double x, double y)\r\n                {\r\n                    return new Point(x, y);\r\n                }\r\n            }\r\n\r\n            public bool Equals(Point other)\r\n            {\r\n                return X.Equals(other.X) && Y.Equals(other.Y);\r\n            }\r\n\r\n            public override bool Equals(object obj)\r\n            {\r\n                return obj is Point other && Equals(other);\r\n            }\r\n\r\n            public override int GetHashCode()\r\n            {\r\n#if NET2_1_OR_GREATER\r\n                return HashCode.Combine(X, Y);\r\n#else\r\n                //Thx to https://rehansaeed.com/gethashcode-made-easy/\r\n                var hashCode = 17;\r\n\r\n                hashCode = hashCode * 23 + X.GetHashCode();\r\n                hashCode = hashCode * 23 + Y.GetHashCode();\r\n\r\n                return hashCode;\r\n#endif\r\n            }\r\n\r\n            public static bool operator ==(Point left, Point right)\r\n            {\r\n                return left.Equals(right);\r\n            }\r\n\r\n            public static bool operator!=(Point left, Point right)\r\n            {\r\n                return!left.Equals(right);\r\n            }\r\n        }\r\n\r\n        [Fact]\r\n        public void Option_ZipWith()\r\n        {\r\n            var x = Option<double>.Some(17.5);\r\n\r\n            x.IsSome.Should().BeTrue();\r\n            x.IsNone.Should().BeFalse();\r\n\r\n            var y = Option<double>.Some(42.7);\r\n\r\n            y.IsSome.Should().BeTrue();\r\n            y.IsNone.Should().BeFalse();\r\n\r\n            x.ZipWith(y, Point.Factory.New).Should().BeEquivalentTo(Option<Point>.Some(new Point(17.5, 42.7)));\r\n            x.ZipWith(Option<double>.None, Point.Factory.New).Should().BeEquivalentTo(Option<Point>.None);\r\n        }\r\n\r\n        [Fact]\r\n        public void Option_ZipWith_Helper_Point_Equals()\r\n        {\r\n            var x = new Point(412263.269, 399111.36);\r\n            var y = new Point(412263.269, 399111.36);\r\n\r\n            x.Equals(y).Should().BeTrue();\r\n        }\r\n\r\n        [Fact]\r\n        public void Option_ZipWith_Helper_Point_Equals_Object()\r\n        {\r\n            var x = new Point(412263.269, 399111.36);\r\n            var y = new Point(412263.269, 399111.36);\r\n\r\n            x.Equals(y as object).Should().BeTrue();\r\n        }\r\n\r\n        [Fact]\r\n        public void Option_ZipWith_Helper_Point_HashCode()\r\n        {\r\n            var x = new Point(412263.269, 399111.36);\r\n            var y = new Point(412263.269, 399111.36);\r\n\r\n            x.GetHashCode().Should().Be(y.GetHashCode());\r\n        }\r\n\r\n        [Fact]\r\n        public void Option_ZipWith_Helper_Point_Operator_Equals()\r\n        {\r\n            var x = new Point(412263.269, 399111.36);\r\n            var y = new Point(412263.269, 399111.36);\r\n\r\n            (x == y).Should().BeTrue();\r\n        }\r\n\r\n        [Fact]\r\n        public void Option_ZipWith_Helper_Point_Operator_Not_Equals()\r\n        {\r\n            var x = new Point(412263.269, 399111.36);\r\n            var y = new Point(412263.269, 399111.36);\r\n\r\n            (x!= y).Should().BeFalse();\r\n        }\r\n    }\r\n}",
  "@REM This batch file has been generated by the IAR Embedded Workbench\n@REM C-SPY Debugger, as an aid to preparing a command line for running\n@REM the cspybat command line utility using the appropriate settings.\n@REM\n@REM Note that this file is generated every time a new debug session\n@REM is initialized, so you may want to move or rename the file before\n@REM making changes.\n@REM\n@REM You can launch cspybat by typing the name of this batch file followed\n@REM by the name of the debug file (usually an ELF/DWARF or UBROF file).\n@REM\n@REM Read about available command line parameters in the C-SPY Debugging\n@REM Guide. Hints about additional command line parameters that may be\n@REM useful in specific cases:\n@REM   --download_only   Downloads a code image without starting a debug\n@REM                     session afterwards.\n@REM   --silent          Omits the sign-on message.\n@REM   --timeout         Limits the maximum allowed execution time.\n@REM \n\n\n\"C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.0\\common\\bin\\cspybat\" \"C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.0\\arm\\bin\\armproc.dll\" \"C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.0\\arm\\bin\\armjlink.dll\"  %1 --plugin \"C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.0\\arm\\bin\\armbat.dll\" --device_macro \"C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.0\\arm\\config\\debugger\\ST\\STM32L1xx.dmac\" --flash_loader \"C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.0\\arm\\config\\flashloader\\ST\\FlashSTM32L15xxB.board\" --backend -B \"--endian=little\" \"--cpu=Cortex-M3\" \"--fpu=None\" \"-p\" \"C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 7.0\\arm\\CONFIG\\debugger\\ST\\STM32L152xB.ddf\" \"--drv_verify_download\" \"--semihosting\" \"--device=STM32L152xB\" \"--drv_communication=USB0\" \"--drv_interface_speed=2048\" \"--jlink_reset_strategy=0,0\" \"--drv_interface=SWD\" \"--drv_catch_exceptions=0x000\" \"--drv_swo_clock_setup=48000000,0,2000000\" \n\n\n",
  "package frc.robot;\n\nimport java.util.ArrayList;\n\nimport com.ctre.phoenix.motorcontrol.ControlMode;\nimport com.ctre.phoenix.motorcontrol.can.WPI_TalonFX;\nimport com.kauailabs.navx.frc.AHRS;\nimport frc.robot.config.Constants;\nimport frc.robot.utilities.Utils;\n\nimport edu.wpi.first.wpilibj.PIDController;\nimport edu.wpi.first.wpilibj.PIDOutput;\nimport edu.wpi.first.wpilibj.SPI;\nimport edu.wpi.first.wpilibj.Solenoid;\nimport edu.wpi.first.wpiutil.math.MathUtil;\n\n@SuppressWarnings(\"all\")\npublic class DriveTrain implements PIDOutput {\n    private static WPI_TalonFX rightMotorFront, rightMotorBack, leftMotorFront, leftMotorBack;\n    private static AHRS gyro;\n    private static PIDController gyropid;\n    public static DriveTrain instance = null;\n\n    private static double m_quickStopAccumulator;\n\n    //Gets instance and creates it if it is Null\n    public static DriveTrain getInstance() {\n        if (instance == null) {\n            instance = new DriveTrain();\n            return instance;\n        }\n\n        return instance;\n    }\n\n    //Constructor that is run once\n    public DriveTrain() {\n\n        // Drive train motors\n        rightMotorFront = new WPI_TalonFX(Constants.DT_TALON_RIGHTFRONT);\n        rightMotorBack = new WPI_TalonFX(Constants.DT_TALON_RIGHTBACK);\n\n        leftMotorFront = new WPI_TalonFX(Constants.DT_TALON_LEFTFRONT);\n        leftMotorBack = new WPI_TalonFX(Constants.DT_TALON_LEFTBACK);\n\n        gyro = new AHRS(SPI.Port.kMXP);\n        gyropid = new PIDController(1, 0, 0, gyro, this);\n        gyropid.setInputRange(-180f, 180f);\n        gyropid.setOutputRange(-1.0, 1.0);\n\n        gyropid.setAbsoluteTolerance(2d);\n        gyropid.setContinuous(true);\n        \n        rightMotorBack.follow(rightMotorFront);\n        leftMotorBack.follow(leftMotorFront);\n\n    }\n\n    /**\n     * \n     * @return gyro angle\n     */\n    public static double getAngle() {\n        return gyro.getAngle();\n    }\n\n    /**\n     * @return Resets gyro Yaw and Angle\n     */\n    public static void resetGyro() {\n        gyro.reset();\n    }\n\n    public static void disablePID() {\n        gyropid.disable();\n    }\n\n    //Tank Drive used for limelight lineup\n    public static void drive(double powerLeft, double powerRight) {\n        leftMotorFront.set(ControlMode.PercentOutput, powerLeft);\n        rightMotorFront.set(ControlMode.PercentOutput, powerRight);\n    }\n\n    /**\n     * @return gyro is connected\n     */\n    public static boolean isConnected() {\n        return gyro.isConnected();\n    }\n\n    //Drive straight method used for auton\n    public static void driveStraight(double power) {\n        if (power > 0) {\n            if (getAngle() > Constants.DRIVE_STRAIGHT_CONSTANT)\n                drive(power *.80, -power * 1.15);\n            else if (getAngle() < -Constants.DRIVE_STRAIGHT_CONSTANT)\n                drive(power * 1.15, -power *.85);\n            else\n                drive(power, -power);\n        } else {\n            if (getAngle() > Constants.DRIVE_STRAIGHT_CONSTANT)\n                drive(power * 1.15, -power *.85);\n            else if (getAngle() < -Constants.DRIVE_STRAIGHT_CONSTANT)\n                drive(power *.8, -power * 1.15);\n            else\n                drive(power, -power);\n        }\n    }\n\n    /**\n     *\n     * @param xSpeed      The robot's speed along the X axis [-1.0..1.0]. Forward is\n     *                    positive.\n     * @param zRotation   The robot's rotation rate around the Z axis [-1.0..1.0].\n     *                    Clockwise is positive.\n     * @param isQuickTurn If set, overrides constant-curvature turning for\n     *                    turn-in-place maneuvers.\n     */\n    //Curvature Code that you can copy and paste for next year\n    @SuppressWarnings({ \"ParameterName\", \"PMD.CyclomaticComplexity\" })\n    public static void curvatureDrive(double xSpeed, double zRotation, boolean isQuickTurn) {\n\n        xSpeed = MathUtil.clamp(xSpeed, -1.0, 1.0);\n\n        zRotation = MathUtil.clamp(zRotation, -1.0, 1.0);\n\n        double angularPower;\n        boolean overPower;\n\n        if (isQuickTurn) {\n            if (Math.abs(xSpeed) < Constants.kDefaultQuickStopThreshold) {\n                m_quickStopAccumulator = (1 - Constants.kDefaultQuickStopAlpha) * m_quickStopAccumulator\n                        + Constants.kDefaultQuickStopAlpha * MathUtil.clamp(zRotation, -1.0, 1.0) * 2;\n            }\n            overPower = true;\n            angularPower = zRotation * 0.7;\n        } else {\n            overPower = false;\n            angularPower = Math.abs(xSpeed) * zRotation - m_quickStopAccumulator;\n\n            if (m_quickStopAccumulator > 1) {\n                m_quickStopAccumulator -= 1;\n            } else if (m_quickStopAccumulator < -1) {\n                m_quickStopAccumulator += 1;\n            } else {\n                m_quickStopAccumulator = 0.0;\n            }\n        }\n\n        double leftMotorOutput = xSpeed + angularPower;\n        double rightMotorOutput = xSpeed - angularPower;\n\n        // If rotation is overpowered, reduce both outputs to within acceptable range\n        if (overPower) {\n            if (leftMotorOutput > 1.0) {\n                rightMotorOutput -= leftMotorOutput - 1.0;\n                leftMotorOutput = 1.0;\n            } else if (rightMotorOutput > 1.0) {\n                leftMotorOutput -= rightMotorOutput - 1.0;\n                rightMotorOutput = 1.0;\n            } else if (leftMotorOutput < -1.0) {\n                rightMotorOutput -= leftMotorOutput + 1.0;\n                leftMotorOutput = -1.0;\n            } else if (rightMotorOutput < -1.0) {\n                leftMotorOutput -= rightMotorOutput + 1.0;\n                rightMotorOutput = -1.0;\n            }\n        }\n\n        // Normalize the wheel speeds\n        double maxMagnitude = Math.max(Math.abs(leftMotorOutput), Math.abs(rightMotorOutput));\n        if (maxMagnitude > 1.0) {\n            leftMotorOutput /= maxMagnitude;\n            rightMotorOutput /= maxMagnitude;\n        }\n\n        leftMotorFront.set(ControlMode.PercentOutput, leftMotorOutput * 1);\n        rightMotorFront.set(ControlMode.PercentOutput, rightMotorOutput * 1 * -1);\n    }\n\n    public static double getAHRS() {\n        return gyro.getAngle();\n    }\n\n    public static double getEncoderDistanceRight() {\n        return rightMotorFront.getSelectedSensorPosition();\n    }\n\n    public static double getEncoderDistanceLeft() {\n        return leftMotorFront.getSelectedSensorPosition();\n    }\n\n    public static double getVelocityRight() {\n        return rightMotorFront.getSelectedSensorVelocity();\n    }\n\n    public static double getVelocityLeft() {\n        return leftMotorFront.getSelectedSensorVelocity();\n    }\n\n    public static double getAvgVelocity() {\n        // System.out.println(\"LEFT: \" + encoderLeftFront.getVelocity());\n        return (leftMotorFront.getSelectedSensorVelocity());\n    }\n\n    public static double getEncoderAverage() {\n        if (Math.abs(getEncoderDistanceLeft()) > Math.abs(",
  "<?php\n\n/*\n * eclipse-wiki\n */\n\nnamespace App\\MapLayer;\n\n/**\n * Decorates info from Map recipe iterator for thumbnailing SVG battlemap\n */\nclass IteratorDecorator implements \\Iterator\n{\n\n    protected $iter;\n\n    /**\n     * Ctor\n     * @param Iterator $iter any Iterator\n     * @param callable $strat a callable that will be called with one argument : Iterator::current()\n     */\n    public function __construct(\\Iterator $iter)\n    {\n        $this->iter = $iter;\n    }\n\n    /**\n     * Returns the current element of the iterator decorated by the callable\n     * @return mixed\n     */\n    public function current()\n    {\n        /** @var \\Symfony\\Component\\Finder\\SplFileInfo $info */\n        $info = $this->iter->current();\n\n        return new ThumbnailMap($info);\n    }\n\n    // next methods are just redirections\n    public function key()\n    {\n        return $this->iter->key();\n    }\n\n    public function next(): void\n    {\n        $this->iter->next();\n    }\n\n    public function rewind(): void\n    {\n        $this->iter->rewind();\n    }\n\n    public function valid(): bool\n    {\n        return $this->iter->valid();\n    }\n\n}\n",
  "require './planetwars.rb'\n\ndef naive_strategy(pw)\n  # don't do anything if any of the following is true:\n  # (1) we have more than three fleets in flight\n  # (2) we don't have any planets left\n  # (3) we have captured every planet\n  return if pw.my_fleets.length >= 3\n  return if pw.my_planets.length == 0\n  return if pw.not_my_planets.length == 0\n  \n  # get a list of planets owned by me, sorted from weakest to strongest\n  my_planets = pw.my_planets.sort_by {|x| x.num_ships }\n  # get a list of planets that aren't mine, from strongest to weakest\n  other_planets = pw.not_my_planets.sort_by {|x| 1.0/(1+x.num_ships) }\n\n  # send half of the ships from my weakest planet to my strongest one\n  source = my_planets[-1].planet_id\n  source_ships = my_planets[-1].num_ships\n  dest = other_planets[-1].planet_id\n  if source >= 0 and dest >= 0 \n    num_ships = source_ships / 2\n    pw.issue_order(source, dest, num_ships)\n  end\nend\n\ndef do_turn(pw)\n  naive_strategy(pw)\nend\n\nmap_data = ''\nloop do\n  current_line = gets.strip rescue break\n  if current_line.length >= 2 and current_line[0..1] == \"go\"\n    pw = PlanetWars.new(map_data)\n    do_turn(pw)\n    pw.finish_turn\n    map_data = ''\n  else\n    map_data += current_line + \"\\n\"\n  end\nend\n",
  "package com.txt.video.widget.adapter.base.animation;\n\nimport android.animation.Animator;\nimport android.animation.ObjectAnimator;\nimport android.view.View;\n\n\n\n/**\n * https://github.com/CymChad/BaseRecyclerViewAdapterHelper\n */\npublic class SlideInRightAnimation implements BaseAnimation {\n    @Override\n    public Animator[] getAnimators(View view) {\n        return new Animator[]{\n                ObjectAnimator.ofFloat(view, \"translationX\", view.getRootView().getWidth(), 0)\n        };\n    }\n}\n",
  "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { BUSINESS_ROUTES } from './../_routes';\n\nimport { CoreModule } from './../core/core.module';\nimport { BusinessComponent } from './business.component';\nimport { BusinessDetailComponent } from './business-detail/business-detail.component';\nimport { BusinessVenuesComponent } from './business-venues/business-venues.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CoreModule,\n    RouterModule.forChild(BUSINESS_ROUTES)\n  ],\n  declarations: [\n    BusinessComponent,\n    BusinessDetailComponent,\n    BusinessVenuesComponent\n  ]\n})\nexport class BusinessModule { }",
  "# 2020 Collegeville Workshop on Scientific Software Report\n\n## To come.\n\n#### [Back to Main Page](../../index.md)\n",
  ".data\n\t\n\t#int arr[MAX_SIZE];\n\tarr:.space 400 # MAX_SIZE is 100, it can be modified.(400=100*4).\n\tsubset:.space 400 #for bonus part\n\tpos:.asciiz \"Possible!\"\n\tnotPos:.asciiz \"Not possible!\"\n\tmsg1:.asciiz \"Enter size of Array:\"\n\tmsg2:.asciiz \"Enter target sum number:\"\n\tmsg3:.asciiz \"Enter array elements one by one\\n\"\n\topPar:.asciiz \"( \"\n\tclsPar:.asciiz \")\"\n\tspace:.asciiz \" \"\n\tnewLine:.asciiz \"\\n\"\n\t# don't use memory for other variables for better performance.\n\t# I will use registers to store and retrieve the other variables.\n.text\n\nmain:\n\t#int arraySize ==> t0 register\n\t#int num ==> t1 register\n\t#int returnVal ==> t3 register.\n\t\n\t#cin >> arraySize;\n\tli $v0, 4\n\tla $a0, msg1\n\tsyscall\n\tli $v0, 5\n\tsyscall\n\tmove $t0, $v0\n\tsll $t0, $t0, 2 # multiply arraySize with 4 to traverse array in misp\n\t\n\t#cin >> num;\n\tli $v0, 4\n\tla $a0, msg2\n\tsyscall\n\tli $v0, 5\n\tsyscall\n\tmove $t1, $v0\n\t\n\t#for(int i = 0; i < arraySize; ++i) { cin >> arr[i];}\n\tli $v0, 4\n\tla $a0, msg3\n\tsyscall\n\taddi $s0, $zero, 0 # int i = 0\n\tLoop:\n\t\tbeq $s0, $t0, AfterLoop # i < arraySize\n\t\tli $v0, 5\n\t\tsyscall\n\t\tmove $t2, $v0\n\t\tsw $t2, arr($s0) # cin >> arr[i]\n\t   \taddi $s0, $s0, 4 # ++i\n\t   \tj Loop\n\t   \t\n\tAfterLoop:\n\t\t#adjust the arguments\n\t\tmove $a0,$t1 # a0 is num\n\t\tmove $a2, $t0 # a2 is arraySize\n\t\t#arr is global in misp\n\t\t\n\t\t# returnVal = CheckSumPossibility(num, arr, arraySize); \n\t\tjal CheckSumPossibility \n\t\tmove $t3,$v0\n\t\t\n\t\t# if(returnVal == 1){ cout << \"Possible!\" << endl;}\n\t\tbeq $t3,1 Possible \n\t\t# else{cout << \"Not possible!\" << endl;}\n\t\tli $v0, 4\n\t\tla $a0, notPos\n\t\tsyscall\n\t\t# exit the program(return 0)\n\t\tli $v0,10\n\t\tsyscall\t\n\t\t\n# write possible with subset\t\nPossible:\n\t#cout << \"Possible!\"\n\tli $v0, 4\n\tla $a0, pos\n\tsyscall\n\t#cout << \" \";\n\tli $v0,4\n\tla $a0,space \n\tsyscall\n\t# cout << \"(\";\n\tli $v0,4\n\tla $a0,opPar\n\tsyscall\n\taddi $t7, $zero, 0 # int i = 0\n\tLoop4:\n\t\tbeq $t7, $a3, AfterLoop4 # i < size \n\t\tlw $t2, subset($t7)\n\t   \tli $v0,1 #cout << arr[i];\n\t   \tmove $a0,$t2\n\t   \tsyscall\n\t   \tli $v0,4\n\t   \tla $a0,space #cout << \" \";\n\t   \tsyscall\n\t   \taddi $t7, $t7, 4 # i++  \n\t   \tj Loop4\n\tAfterLoop4:\n\t\t# cout << \")\" ;\n\t\tli $v0,4\n\t   \tla $a0,clsPar\n\t   \tsyscall\n\t   \t# cout << endl;\n\t   \tli $v0,4\n\t   \tla $a0,newLine\n\t   \tsyscall\t\n# exit the program(return 0)\nli $v0,10\nsyscall\nCheckSumPossibility:\n\t#save return adress\n\taddi $sp, $sp, -4\n\tsw $ra,0($sp)\n\t\n\t# int total_sum = 0, current_sum = 0, index = 0, res = 0 k = 0;\n\tli $a1,0 # k (subset index)\n\t# since we already run out of argument registers we have to use temp register for arguments\n\tli $t4,0 # total_sum\n\tli $t5,0 # current_sum\n\tli $t6,0 # index\n\tli $v1,0 # res\n\t\n\t# Calculate total sum of given array\n\t# for(int i = 0; i < size; ++i) { total_sum += arr[i];}\n\taddi $t7, $zero, 0 # int i = 0\n\tLoop2:\n\t\tbeq $t7, $a2, AfterLoop2 # i < size \n\t\tlw $t2, arr($t7)\n\t   \tadd $t4, $t4, $t2 #total_sum += arr[i]\n\t   \taddi $t7, $t7, 4 # i++  \n\t   \tj Loop2\n\t   \t\n\tAfterLoop2:\n\t\t#if (num <= 0)\n\t\tbgt $a0,$zero,secondIf\n\treturn0:\t\n\t\t#return 0;\n\t\tmove $v0,$v1 #return res with v0 register \n\t\tlw $ra, 0($sp)\n\t\taddi $sp, $sp, 4\n\t\tjr $ra\n\tsecondIf:\n\t\t# if (total_sum < num)\n\t\tbge $t4,$a0,thirdIf\n\t\tj return0\n\tthirdIf:\n\t\t# if (total_sum == num)\n\t\tbne $t4,$a0,checkWithBacktracking\n\t\tj return1\n\tcheckWithBacktracking:\n\t\t# call recursive function\t \n\t\tjal CheckSumPossibilityHelper\n\t\t# return res;\n\t\tmove $v0,$v1 #return res with v0 register \n\t\tlw $ra, 0($sp)\n\t\taddi $sp, $sp, 4\n\t\tjr $ra\n\treturn1:\n\t\t# copy orijinal array as subset\n\t\taddi $t7, $zero, 0 # int i = 0\n\t\tLoop3:\n\t\t\tbeq $t7, $a2, AfterLoop3 # i < size \n\t\t\tlw $t2, arr($t7)\n\t   \t\tsw $t2, subset($t7) # subset[i] = arr[i]\n\t   \t\taddi $t7, $t7, 4 # i++  \n\t   \t\tj Loop3\n\t\tAfterLoop3:\n\t   \t\t# return 1;\n\t\t\tli $v1,1 # res\n\t\t\tmove $v0,$v1 #return res with v0 register\n\t\t\tmove $a3,$a2 # k = size \n\t\t\tlw $ra, 0($sp)\n\t\t\taddi $sp, $sp, 4\n\t\t\tjr $ra\n\t\t\t\nCheckSumPossibilityHelper:\n\t\t# parameters and registers as in contract.\n\t\t\n\t\t# num = a0\t# total_sum = t4\n\t\t# k = a1\t# current_sum = t5 = 0\n\t\t# size = a2\t# index = t6 = 0\n\t\t# res = v1\t# t0,t1,t2,t3,t7 are free to use.\n\t\t# arr = arr\t# subset = subset = empty\n\t\t\n\t\t#save imptortant parameters in stack\n\t\taddi $sp, $sp, -20\n\t\tsw $ra, 0($sp) # return adress\n\t\tsw $t4, 4($sp) # total_sum\n\t\tsw $t5, 8($sp) # current_sum\n\t\tsw $t6, 12($sp) # index\n\t\tsw $a1, 16($sp) # k (subset index)\n\t\t\n\t\t#if (current_sum == num)\n\t\tbne $t5,$a0,checkSum\n\t\t#return 1;\n\t\tmove $a3,$a1\n\t\tli $v1,1\n\t\tj return\n\t\t\n\t\tcheckSum:\n\t\t\t# if (current_sum == 0)\n\t\t\tbne $t4,$zero,secondBase\n\t\t\t# k = 0;\n\t\t\tli $a1,0\n\t\tsecondBase:\n\t\t\t# if (index >= size)\n\t\t\tblt $t6,$a2,recurPart\n\t\t\t# return;\n\t\t\tj return\n\t\t# else\t\n\t\trecurPart:\n\t\t\t",
  "\ufeffnamespace SIS.HTTP.Cookies\n{\n    using System.Collections.Generic;\n\n    public class HttpCookieCollection : IHttpCookieCollection\n    {\n        private const string HttpCookieSeparator = \"; \";\n\n        private readonly Dictionary<string, HttpCookie> cookies;\n\n        public HttpCookieCollection()\n        {\n            this.cookies = new Dictionary<string, HttpCookie>();\n        }\n\n        public void Add(HttpCookie cookie)\n        {\n            this.cookies.Add(cookie.Key, cookie);\n        }\n\n        public bool ContainsCookie(string key)\n        {\n            return this.cookies.ContainsKey(key);\n        }\n\n        public HttpCookie GetCookie(string key)\n        {\n            return this.cookies.GetValueOrDefault(key, null);\n        }\n\n        public bool HasCookies()\n        {\n            return this.cookies.Count > 0;\n        }\n\n        public override string ToString()\n        {\n            return string.Join(HttpCookieSeparator, this.cookies.Values);\n        }\n    }\n}\n",
  "import styled from'styled-components/macro'\n\nimport { Card, CardPage, FadeInFromTop, primaryColor } from '../../styles'\n\nexport const ChangePasswordStyled = styled.div``\n\nexport const ChangePasswordCard = styled.div`\n  max-width: 370px;\n  margin: 44px auto 0;\n  padding: 0 20px;\n\n  @media (max-width: 998px) {\n    margin: 28px auto 0;\n  }\n`\nexport const ChangePasswordSeparator = styled.div`\n  height: 10px;\n`\n\nexport const Row = styled.div`\n  margin-top: 20px;\n\n  @media (max-width: 1200px) {\n    margin-top: 19px;\n  }\n`\n\nexport const ChangePasswordTitle = styled(FadeInFromTop)`\n  margin-top: 70px;\n  font-size: 48px;\n  line-height: 58px;\n  font-weight: bold;\n  text-align: center;\n  color: white;\n\n  h1 {\n    margin: 0;\n  }\n\n  @media (max-width: 998px) {\n    margin-top: 35px;\n  }\n\n`\n\nexport const ChangePasswordSignUp = styled.div`\n  margin-top: 10px;\n  text-align: center;\n  display: grid;\n  grid-template-columns: auto auto;\n  grid-gap: 10px;\n\n  > a {\n    color: ${primaryColor}!important;\n  }\n`\n\nexport const BtnContainer = styled.div`\n  margin-top: 43px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n\n  @media (max-width: 1200px) {\n    margin-top: 43px;\n  }\n\n  button {\n    width: 185px;\n    height: 62px;\n  }\n`\n",
  "/*\n * Copyright 2017 Netflix, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.netflix.sstableadaptor;\n\nimport com.google.common.collect.ArrayListMultimap;\nimport com.google.common.collect.Multimap;\nimport com.netflix.sstableadaptor.config.CassandraTable;\nimport com.netflix.sstableadaptor.sstable.SSTableSingleReader;\nimport com.netflix.sstableadaptor.sstable.SSTableSingleWriter;\nimport com.netflix.sstableadaptor.util.SSTableUtils;\nimport org.apache.cassandra.config.CFMetaData;\nimport org.apache.cassandra.config.ColumnDefinition;\nimport org.apache.cassandra.db.BufferClustering;\nimport org.apache.cassandra.db.Clustering;\nimport org.apache.cassandra.db.DecoratedKey;\nimport org.apache.cassandra.db.SerializationHeader;\nimport org.apache.cassandra.db.marshal.Int32Type;\nimport org.apache.cassandra.db.marshal.UTF8Type;\nimport org.apache.cassandra.db.partitions.PartitionUpdate;\nimport org.apache.cassandra.db.rows.BTreeRow;\nimport org.apache.cassandra.db.rows.BufferCell;\nimport org.apache.cassandra.db.rows.Cell;\nimport org.apache.cassandra.db.rows.EncodingStats;\nimport org.apache.cassandra.db.rows.Row;\nimport org.apache.cassandra.db.rows.Unfiltered;\nimport org.apache.cassandra.db.rows.UnfilteredRowIterator;\nimport org.apache.cassandra.dht.Murmur3Partitioner;\nimport org.apache.cassandra.io.sstable.Descriptor;\nimport org.apache.cassandra.io.sstable.ISSTableScanner;\nimport org.apache.cassandra.io.sstable.SSTableTxnWriter;\nimport org.apache.cassandra.io.sstable.format.SSTableFlushObserver;\nimport org.apache.cassandra.io.sstable.format.SSTableFormat;\nimport org.apache.cassandra.io.sstable.format.SSTableReader;\nimport org.apache.cassandra.io.sstable.format.SSTableWriter;\nimport org.apache.cassandra.io.util.FileUtils;\nimport org.apache.cassandra.utils.Pair;\nimport org.junit.AfterClass;\nimport org.junit.BeforeClass;\nimport org.junit.Test;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport java.io.IOException;\nimport java.nio.ByteBuffer;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\n\n\n//TODO: Also need to add some assertions to verify data writing correction\n\n/**\n *\n * Test writing out a new SSTable file locally.\n */\npublic class TestSSTableDataWriter extends TestBaseSSTableFunSuite {\n    private static final Logger LOGGER = LoggerFactory.getLogger(TestSSTableDataWriter.class);\n\n    /**\n     * Setting up resources prior to running any tests.\n     *\n     * @throws Exception when we cannot initialize the resources\n     */\n    @BeforeClass\n    public static void setup() throws Exception {\n        LOGGER.info(\"Running TestSSTableDataWriter setup...\");\n        TestBaseSSTableFunSuite.setup();\n    }\n\n    /**\n     * Tear down resources after all tests.\n     *\n     * @throws Exception when teardown has an issue\n     */\n    @AfterClass\n    public static void teardown() throws Exception {\n        LOGGER.info(\"Tearing TestSSTableDataWriter down...\");\n        TestBaseSSTableFunSuite.teardown();\n    }\n\n\n    /******************************************************\n     * 1. Input data\n     * This is the schema definition of the table that is used to generate the non-compressed input data:\n     * <p>\n     * CREATE TABLE bills_nc (\n     * user text,\n     * balance int static,\n     * expense_id int,\n     * amount int,\n     * name text,\n     * PRIMARY KEY (user, expense_id))\n     * WITH compression = {'sstable_compression' : '' };\n     * <p>\n     * <p>\n     * 2. Compressing and producing output data\n     * Running this main will convert data file under src/test/resources/data/bills_compress/mc-6-big-Data.db\n     * in to the corresponding compressed file, using LZ4 compression, along with auxiliary\n     * files (CompressionInfo.db, Index.db, etc).\n     * <p>\n     * The output is under cassanrda/compresseddata/cassandra/data directory\n     * <p>\n     * 3. Verification\n     * Since this is C* 3.0 format, you should use sstabledump command to dump out the json contents\n     * for both intput data and output data to verify.\n     * %>sstabledump cassandra/data/mc-1-big-Data.db\n     * and\n     * %>sstabledump cassandra/compresseddata/cassandra/data/mc-1-big-Data.db\n     *******************************************************/\n    @Test\n    public void testWritingToLocalSSTable() {\n        final String inputSSTableFullPathFileName = CASS3_DATA_DIR + \"keyspace1/bills_compress/mc-6-big-Data.db\";\n        LOGGER.info(\"Input file name: \" + inputSSTableFullPathFileName);\n\n        final Descriptor inputSSTableDescriptor = Descriptor.fromFilename(inputSSTableFullPathFileName,\n                                                                TestBaseSSTableFunSuite.HADOOP_CONF);\n        SSTableWriter writer = null;\n\n        try {\n            SSTableSingleReader reader = new SSTableSingleReader(inputSSTableFullPathFileName,\n                                                                 \"casspactor\",\n                                                                 \"bills_nc\",\n                                                                 TestBaseSSTableFunSuite.HADOOP_CONF);\n            final CFMetaData inputCFMetaData = reader.getCfMetaData();\n            final ISSTableScanner currentScanner = reader.getSSTableScanner();\n            final SSTableReader inputSStable = reader.getSstableReader();\n\n            //Create writer\n            final CFMetaData outputCFMetaData = SSTableUtils.createNewCFMetaData(inputSSTableDescriptor, inputCFMetaData);\n            writer = SSTableUtils.createSSTableWriter(inputSSTableDescriptor, outputCFMetaData, inputSStable);\n\n            while (currentScanner.hasNext()) {\n                final UnfilteredRowIterator row = currentScanner.next();\n                writer.append(row);\n            }\n            writer.finish(false);\n        } catch (IOException e) {\n            e.printStackTrace(System.err);\n        } finally {\n            FileUtils.closeQuietly(writer);\n        }\n    }\n\n    /**\n     * Test creating sstable files using SSTableTxnWriter.\n     * @throws IOException\n     */\n    @Test\n    public void testCreatingSSTableWithTnx() throws IOException {\n        final String inputSSTableFullPathFileName = CASS3_DATA_DIR + \"keyspace1/bills_compress/mc-6-big-Data.db\";\n\n        final Descriptor descriptor = Descriptor.fromFilename(inputSSTableFullPathFileName,\n                                                              TestBaseSSTableFunSuite.HADOOP_CONF);\n        final CFMetaData inputCFMetaData =\n                SSTableUtils.metaDataFromSSTable(inputSSTableFullPathFileName,\n                                                        \"casspactor\",\n                                                        \"bills_compress\",\n                                                        Collections.<String>emptyList(),\n                                                        Collections.<String>emptyList(),\n                                                        TestBase",
  "<?php\n\nnamespace App;\n\nuse App\\Http\\Traits\\UsesUuid;\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Medicine extends Model\n{\n    protected $table='medicines';\n    use UsesUuid;\n    protected $keyType ='string';\n    public $incrementing = false;\n    protected $guarded = [];\n    public $timestamps=false;\n\n\n    public function recipe(){\n        return $this->hasMany(Recipe::class);\n    }\n}\n",
  "//\n// Copyright 2022 The Sigstore Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nuse anyhow::Result;\nuse tracing::info;\n\nuse super::client::Client;\nuse crate::crypto;\nuse crate::registry::ClientConfig;\n\n/// A builder that generates Client objects.\n///\n/// ## Rekor integration\n///\n/// Rekor integration can be enabled by specifying Rekor's public key.\n/// This can be provided via the [`ClientBuilder::with_rekor_pub_key`] method.\n///\n/// > Note well: currently this library is not able to retrieve the key from Sigstore's\n/// > TUF repository like `cosign` does. This will be done in the near future.\n///\n/// ## Fulcio integration\n///\n/// Fulcio integration can be enabled by specifying Fulcio's certificate.\n/// This can be provided via the [`ClientBuilder::with_fulcio_cert`] method.\n///\n/// > Note well: currently this library is not able to retrieve the certificate from Sigstore's\n/// > TUF repository like `cosign` does. This will be done in the near future.\n#[derive(Default)]\npub struct ClientBuilder {\n    oci_client_config: ClientConfig,\n    rekor_pub_key: Option<String>,\n    fulcio_cert: Option<Vec<u8>>,\n    cert_email: Option<String>,\n}\n\nimpl ClientBuilder {\n    /// Specify the public key used by Rekor.\n    ///\n    /// Currently this library is not able to retrieve the key from Sigstore's\n    /// TUF repository like `cosign` does. This will be done in the near future.\n    ///\n    /// In the meantime, end users of the library can fetch the key in a secure\n    /// way by using `cosign initialize`.\n    /// This will place the key under `~/.sigstore/root/targets/rekor.pub`.\n    pub fn with_rekor_pub_key(mut self, key: &str) -> Self {\n        self.rekor_pub_key = Some(key.to_string());\n        self\n    }\n\n    /// Specify the certificate used by Fulcio.\n    ///\n    /// Currently this library is not able to retrieve the certificate from Sigstore's\n    /// TUF repository like `cosign` does. This will be done in the near future.\n    ///\n    /// In the meantime, end users of the library can fetch the certificate in a secure\n    /// way by using `cosign initialize`.\n    /// This will place the key under `~/.sigstore/root/targets/fulcio.crt.pem`.\n    pub fn with_fulcio_cert(mut self, cert: &[u8]) -> Self {\n        self.fulcio_cert = Some(cert.to_owned());\n        self\n    }\n\n    /// Optional - the configuration to be used by the OCI client.\n    ///\n    /// This can be used when dealing with registries that are not using\n    /// TLS termination, or are using self-signed certificates.\n    pub fn with_oci_client_config(mut self, config: ClientConfig) -> Self {\n        self.oci_client_config = config;\n        self\n    }\n\n    /// Optional: the email expected in a valid fulcio cert\n    pub fn with_cert_email(mut self, cert_email: Option<&str>) -> Self {\n        self.cert_email = cert_email.map(String::from);\n        self\n    }\n\n    pub fn build(self) -> Result<Client> {\n        let rekor_pub_key = match self.rekor_pub_key {\n            None => {\n                info!(\"rekor public key not provided\");\n                None\n            }\n            Some(der) => Some(crypto::new_verification_key(&der)?),\n        };\n\n        let fulcio_pub_key_der = match self.fulcio_cert {\n            None => {\n                info!(\"The fulcio cert has not been provided\");\n                None\n            }\n            Some(cert) => Some(crypto::extract_public_key_from_pem_cert(&cert)?),\n        };\n\n        let cert_email = self.cert_email.clone();\n\n        let oci_client =\n            oci_distribution::client::Client::new(self.oci_client_config.clone().into());\n        Ok(Client {\n            registry_client: Box::new(crate::registry::OciClient {\n                registry_client: oci_client,\n            }),\n            rekor_pub_key,\n            fulcio_pub_key_der,\n            cert_email,\n        })\n    }\n}\n",
  "#!/usr/bin/env python3\n\n# SPDX-FileCopyrightText: 2009 Fermi Research Alliance, LLC\n# SPDX-License-Identifier: Apache-2.0\n\n\"\"\"\nProject:\n   glideinWMS\n\n Description:\n   unit test for glideinwms/creation/factoryXmlConfig.py\n\n Author:\n   Dennis Box dbox@fnal.gov\n\"\"\"\n\n\nimport unittest\n\nimport xmlrunner\n\nfrom glideinwms.creation.lib.factoryXmlConfig import (\n    CondTarElement,\n    Config,\n    EntryElement,\n    EntrySetElement,\n    FactAttrElement,\n    FactFileElement,\n    FrontendElement,\n    parse,\n)\n\nXML = \"fixtures/factory/glideinWMS.xml\"\nXML_ENTRY = \"fixtures/factory/config.d/Dev_Sites.xml\"\nXML_ENTRY2 = \"fixtures/factory/config.d/Dev_Sites2.xml\"\n\n\nclass TestFactAttrElement(unittest.TestCase):\n    def setUp(self):\n        self.conf = parse(XML)\n        self.attr_el_list = self.conf.get_child_list(\"attrs\")\n\n    def test_validate(self):\n        for fact_attr_element in self.attr_el_list:\n            fact_attr_element.validate()\n            self.assertTrue(isinstance(fact_attr_element, FactAttrElement))\n\n\nclass TestFactFileElement(unittest.TestCase):\n    def setUp(self):\n        self.conf = parse(XML)\n        self.files = self.conf.get_child_list(\"files\")\n\n    def test_validate(self):\n        for fact_file_element in self.files:\n            fact_file_element.validate()\n            self.assertTrue(isinstance(fact_file_element, FactFileElement))\n\n\nclass TestCondTarElement(unittest.TestCase):\n    def setUp(self):\n        self.conf = parse(XML)\n        self.ctl = self.conf.get_child_list(\"condor_tarballs\")\n\n    def test_validate(self):\n        for cte in self.ctl:\n            cte.validate()\n            self.assertTrue(\"arch\" in cte)\n            self.assertTrue(\"version\" in cte)\n            self.assertTrue(\"os\" in cte)\n            self.assertTrue(\"base_dir\" in cte or \"tar_file\" in cte)\n            self.assertTrue(isinstance(cte, CondTarElement))\n            del cte[\"base_dir\"]\n            try:\n                cte.validate()\n            except RuntimeError as err:\n                pass\n\n\nclass TestFrontendElement(unittest.TestCase):\n    def setUp(self):\n        self.conf = parse(XML)\n        self.sec = self.conf.get_child(\"security\")\n        self.frontends = self.sec.get_child_list(\"frontends\")\n\n    def test_validate(self):\n        for frontend_element in self.frontends:\n            frontend_element.validate()\n            self.assertTrue(\"name\" in frontend_element)\n            self.assertTrue(\"identity\" in frontend_element)\n            self.assertTrue(isinstance(frontend_element, FrontendElement))\n\n\nclass TestEntryElement(unittest.TestCase):\n    def setUp(self):\n        self.conf = parse(XML)\n        self.eel = self.conf.get_child_list(\"entries\")\n\n    def test_getName(self):\n        for entry_element in self.eel:\n            self.assertNotEqual(\"\", entry_element.getName())\n            self.assertNotEqual(None, entry_element.getName())\n\n    def test_validate(self):\n        for entry_element in self.eel:\n            entry_element.validate()\n            self.assertTrue(\"gridtype\" in entry_element)\n            self.assertTrue(\"gatekeeper\" in entry_element)\n            self.assertTrue(\"auth_method\" in entry_element)\n            self.assertTrue(\"enabled\" in entry_element)\n            self.assertTrue(isinstance(entry_element, EntryElement))\n\n    def test_validate_sub_elements(self):\n        for entry_element in self.eel:\n            entry_element.validate_sub_elements()\n\n\nclass TestEntrySetElement(unittest.TestCase):\n    def setUp(self):\n        self.conf = parse(XML)\n        self.esl = self.conf.get_child_list(\"entry_sets\")\n        self.el = self.conf.get_child_list(\"entries\")\n        self.assertTrue(len(self.esl) > 0)\n\n    def test_validate_entry_sets(self):\n        for entry_set_element in self.esl:\n            entry_set_element.validate()\n            # self.assertTrue(isinstance(entry_set_element, EntrySetElement))\n\n    def test_validate_entries(self):\n        for entry_set_element in self.el:\n            entry_set_element.validate()\n            # self.assertTrue(isinstance(entry_set_element, EntrySetElement))\n\n\n# pylint: disable=maybe-no-member\n\n\nclass TestConfig(unittest.TestCase):\n    def setUp(self):\n        self.config = parse(XML)\n\n    def test___init__(self):\n        self.assertTrue(isinstance(self.config, Config))\n\n    def test_get_client_log_dirs(self):\n        dirs = self.config.get_client_log_dirs()\n        self.assertTrue(isinstance(dirs, dict))\n\n    def test_get_client_proxy_dirs(self):\n        dirs = self.config.get_client_proxy_dirs()\n        self.assertTrue(isinstance(dirs, dict))\n\n    def test_get_entries(self):\n        entries = self.config.get_entries()\n        self.assertTrue(isinstance(entries, list))\n\n    def test_get_log_dir(self):\n        log_dir = self.config.get_log_dir()\n        self.assertEqual(\"fixtures/factory/log/server\", log_dir)\n\n    def test_get_monitor_dir(self):\n        monitor_dir = self.config.get_monitor_dir()\n        self.assertEqual(\"fixtures/factory/web-area/monitor\", monitor_dir)\n\n    def test_get_stage_dir(self):\n        stage_dir = self.config.get_stage_dir()\n        self.assertEqual(\"fixtures/factory/web-area/stage\", stage_dir)\n\n    def test_get_submit_dir(self):\n        submit_dir = self.config.get_submit_dir()\n        self.assertEqual(\"fixtures/factory/work-dir\", submit_dir)\n\n    def test_get_web_url(self):\n        url = self.config.get_web_url()\n        self.assertEqual(\"http://fermicloud380.fnal.gov/factory/stage\", url)\n\n    def test_set_client_log_dirs(self):\n        self.config.set_client_log_dirs()\n\n    def test_set_client_proxy_dirs(self):\n        self.config.set_client_proxy_dirs()\n\n    def test_set_log_dir(self):\n        self.config.set_log_dir()\n\n    def test_set_monitor_dir(self):\n        self.config.set_monitor_dir()\n\n    def test_set_stage_dir(self):\n        self.config.set_stage_dir()\n\n    def test_set_submit_dir(self):\n        self.config.set_submit_dir()\n\n    def test_set_web_url(self):\n        self.config.set_web_url()\n\n    def test_validate(self):\n        self.config.validate()\n\n\n# pylint: enable=maybe-no-member\n\n\nclass TestParse(unittest.TestCase):\n    def test_parse(self):\n        parse(XML)\n        try:\n            parse(XML_ENTRY)\n        except RuntimeError:\n            pass\n\n\nif __name__ == \"__main__\":\n    unittest.main(testRunner=xmlrunner.XMLTestRunner(output=\"unittests-reports\"))\n",
  "@extends('genral.layouts.mainlayout')\n@section('title') <title>Tour length</title>\n <style>\n .dropzone {\n    min-height: 150px;\n    border: 2px dotted rgba(0, 0, 0, 0.3);\n    background: white;\n    padding: 20px 59px;\n}\n\n\n.btn-file {\n    position: relative;\n    overflow: hidden;\n}\n.btn-file input[type=file] {\n    position: absolute;\n    top: 0;\n    right: 0;\n    min-width: 100%;\n    min-height: 100%;\n    font-size: 100px;\n    text-align: right;\n    filter: alpha(opacity=0);\n    opacity: 0;\n    outline: none;\n    background: white;\n    cursor: inherit;\n    display: block;\n}\n\n\n </style>\n@endsection\n\n\n\n@section('content')\n <!-- Content Wrapper. Contains page content -->\n <div class=\"content-wrapper\">\n        <!-- Content Header (Page header) -->\n        <section class=\"content-header\">\n          <h1>\n           Add Tour length\n            <small>Preview</small>\n          </h1>\n          <ol class=\"breadcrumb\">\n            <li><a href=\"dashboard\"><i class=\"fa fa-dashboard\"></i> Home</a></li>\n            <li><a href=\"dashboard\">Forms</a></li>\n            <li class=\"active\">General Elements</li>\n          </ol>\n        </section>\n\n        <!-- Main content -->\n        <section class=\"content\"    style=\"    min-height: 160px;\" >\n          <div class=\"row\">\n            @if(Session::has('msg'))\n              {!!  Session::get(\"msg\")!!}\n            @endif\n\n            @if ($errors->any())\n                <div class=\"alert alert-danger\">\n                    <ul>\n                        @foreach ($errors->all() as $error)\n                            <li>{{ $error }}</li>\n                        @endforeach\n                    </ul>\n                </div>\n            @endif\n              <!-- general form elements -->\n              <div class=\"box box-primary\">\n                <div class=\"box-header\">\n                <form role=\"form\" action=\"{{url('add_tour_length')}}\" method=\"post\" enctype=\"multipart/form-data\">\n                {{ csrf_field() }}\n                  <div class=\"box-body\">\n                        <div class=\"col-md-4\">\n                            <div class=\"form-group\">\n                              <label for=\"name\">Days</label>\n                              <input type=\"text\" class=\"form-control\"  maxlength=\"3\" onkeyup=\"set_night_value()\" onkeypress=\"return restrictAlphabets(event);\"  required id=\"no_of_day\" name=\"no_of_day\" placeholder=\"day..\">\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-4\">\n                             <div class=\"form-group\">\n                               <label for=\"email\">Night</label>\n                               <input type=\"text\" class=\"form-control\" maxlength=\"3\"  onkeyup=\"set_day_value()\" onkeypress=\"return restrictAlphabets(event);\" required id=\"no_of_night\" name=\"no_of_night\" placeholder=\"night..\">\n                              </div>\n                        </div>\n                        <div class=\"col-md-4\" style=\"padding-top:24px; \">\n                           <button type=\"submit\" class=\"btn btn-primary \">Add length</button>\n                        </div>\n                        \n                 </div>\n\n                </form>\n                </div><!-- /.box-header -->\n              </div><!-- /.box -->\n\n\n          </div>   <!-- /.row -->\n        </section><!-- /.content -->\n\n\n\n         <!-- Main content -->\n         <section class=\"content\">\n          <div class=\"row\">\n            <div class=\"col-xs-12\">\n\n\n              <div class=\"box\">\n                <div class=\"box-header\">\n                  <h3 class=\"box-title\">All length List</h3> <div class=\"pull-right alertmessage\"></div>\n                </div><!-- /.box-header -->\n                <div class=\"box-body\">\n                @if(isset($all_tour_length))\n                  <table id=\"example1\" class=\"table table-bordered table-striped\">\n                    <thead>\n                      <tr>\n                       \n                        <th>Number Of  Days</th>\n                       \n                        <th>Number Of Night</th>\n                       \n                        <!-- <th style=\"width: 60px;\" >Action</th> -->\n                      </tr>\n                    </thead>\n                    <tbody>\n                     @foreach($all_tour_length as $value)\n                      <tr id=\"row_{{$value->id}}\">\n                        <td>{{$value->no_of_day}}</td>\n                        <td>{{$value->no_of_night}}</td>\n                        <!-- <td>\n                        <a href=\"javascript:void(0);\" title=\"delete\" onclick=\"delete_tour_length({{$value->id}});\" ><i class=\"fa fa-trash text-danger\"></i>&nbsp;&nbsp;\n                        \n                        <a href=\"{{url('edit_tour_length/'.$value->id)}}\" title=\"edit\"><i class=\"fa fa-edit text-success\"></i></a>\n                        </td> -->\n                      </tr>\n                      @endforeach\n\n                    </tbody>\n                   \n                  </table>\n\n\n                  @else\n                  <h5 class=\"box-title text-danger\">There is no data.</h3>\n                  @endif\n                </div><!-- /.box-body -->\n              </div><!-- /.box -->\n            </div><!-- /.col -->\n          </div><!-- /.row -->\n        </section><!-- /.content -->\n\n      </div><!-- /.content-wrapper -->\n\n\n\n \n      <!-- Modal -->\n    <div class=\"modal fade\" id=\"my_map_Modal\" role=\"dialog\">\n        <div class=\"modal-dialog modal-lg\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n              <h4 class=\"modal-title\">Select Address</h4>\n            </div>\n            <form action=\"{{url('booking')}}\"  method=\"post\" >\n            {{ csrf_field() }}\n              <div class=\"modal-body\" style=\"padding:0px; \" >\n                <input type=\"hidden\"  name=\"event_date\"  id=\"event_date\" />\n                <div id=\"myMap\" style=\"height:435px;  width:100%;     position: static; \"></div>\n                <input id=\"map_address\" type=\"text\" style=\"width:600px; display:none; \"/><br/>\n                <input type=\"hidden\" id=\"latitude\" placeholder=\"Latitude\"/>\n                <input type=\"hidden\" id=\"longitude\" placeholder=\"Longitude\"/>\n              </div>\n            <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">Done</button>\n            </div>\n            </form>\n          </div>\n        </div>\n      </div>\n\n@endsection\n\n\n@section('customjs')\n\n\n    <script type=\"text/javascript\">\n\n\n\n\n       \n\n   \n     \n\n   \n   \n\n\n      //     restrict Alphabets  \n      function restrictAlphabets(e){\n          var x=e.which||e.keycode; \n          if((x>=48 && x<=57) || x==8 ||\n            (x>=35 && x<=40)|| x==46)\n            return true;\n          else\n            return false;\n      }\n\n        function set_night_value()\n        {\n            var days_val=$(\"#no_of_day\").val(); \n           \n           if(days_val){$(\"#no_of_night\").val(parseInt(days_val)-1)}\n        }\n        function set_day_value()\n        {\n            var night_val=$(\"#no_of_night\").val(); \n           \n           if(night_val){$(\"#no_of_day\").val(parseInt(night_val)+1)}\n        }\n      //  For   Bootstrap  datatable \n      $(function () {\n\n        $('#example1').dataTable({\n          \"ordering\": false,\n          \"bPaginate\": true,\n          \"bLengthChange\": false,\n          \"bFilter\": true,\n          \"bSort\": true,\n          \"b",
  "#ifndef ravicomp_ALLOCATOR_H\n#define ravicomp_ALLOCATOR_H\n\n/*\n * allocate.c - simple space-efficient blob allocator.\n *\n * Copyright (C) 2003 Transmeta Corp.\n *               2003-2004 Linus Torvalds\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n * Simple allocator for data that doesn't get partially free'd.\n * The tokenizer and parser allocate a _lot_ of small data structures\n * (often just two-three bytes for things like small integers),\n * and since they all depend on each other you can't free them\n * individually _anyway_. So do something that is very space-\n * efficient: allocate larger \"blobs\", and give out individual\n * small bits and pieces of it with no maintenance overhead.\n */\n/*\n * Portions Copyright (C) 2017-2021 Dibyendu Majumdar\n */\n#ifndef ravicomp_ALLOCATE_H\n#define ravicomp_ALLOCATE_H\n\n#include <stddef.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\ntypedef struct AllocationBlob AllocationBlob;\nstruct AllocationBlob {\n\tAllocationBlob *next;\n\tsize_t left, offset;\n\tunsigned char data[];\n};\n\n/*\n * Our \"blob\" allocator works on chunks that are multiples\n * of this size (the underlying allocator may be a mmap that\n * cannot handle smaller chunks, for example, so trying to\n * allocate blobs that aren't aligned is not going to work).\n */\n#define CHUNK 32768\n\ntypedef struct Allocator {\n\tconst char *name_;\n\tAllocationBlob *blobs_;\n\tsize_t size_;\n\tunsigned int alignment_;\n\tunsigned int chunking_;\n\tvoid *freelist_;\n\tsize_t allocations, total_bytes, useful_bytes;\n} Allocator;\n\nextern void raviX_allocator_init(Allocator *A, const char *name, size_t size, unsigned int alignment,\n\t\t\t\t unsigned int chunking);\n\nextern void *raviX_allocator_allocate(Allocator *A, size_t extra);\n\nextern void raviX_allocator_free(Allocator *A, void *entry);\n\nextern void raviX_allocator_show_allocations(Allocator *A);\n\nextern void raviX_allocator_drop_all_allocations(Allocator *A);\n\nextern void raviX_allocator_destroy(Allocator *A);\n\nextern void raviX_allocator_transfer(Allocator *A, Allocator *transfer_to);\n\n/*\nReallocate array from old_n to new_n. If new_n is 0 then array memory is freed.\nIf new_n is greater than old_n then old data is copied across and the\nadditional allocated space is zeroed out so caller can rely on the extra space being\ninitialized to zeros.\n*/\nextern void *raviX_realloc_array(void *oldp, size_t element_size, size_t old_n, size_t new_n);\n/*\nDelete n elements starting at i from array a of size array_size, where sizeof(each element) is element_size.\nThe freed up space will be zero initialized. Returns the new array_size.\n*/\nextern size_t raviX_del_array_element(void *p, size_t element_size, size_t array_size, size_t i, size_t n);\n\n/* structure of a node */\n#define DECLARE_ARRAY(array_type, TYPE)                                                                                \\\n\ttypedef struct array_type {                                                                                    \\\n\t\tunsigned allocated;                                                                                    \\\n\t\tunsigned count;                                                                                        \\\n\t\tTYPE *data;                                                                                            \\\n\t} array_type\n#define array_push(A, value)                                                                                           \\\n\t{                                                                                                              \\\n\t\tif ((A)->count == (A)->allocated) {                                                                    \\\n\t\t\tunsigned newsize = (A)->allocated += 10;                                                       \\\n\t\t\t(A)->data = raviX_realloc_array((A)->data, sizeof((A)->data[0]), (A)->allocated, newsize);     \\\n\t\t\t(A)->allocated = newsize;                                                                      \\\n\t\t}                                                                                                      \\\n\t\t(A)->data[(A)->count++] = value;                                                                       \\\n\t}\n#define array_clearmem(A)                                                                                              \\\n\t{                                                                                                              \\\n\t\traviX_realloc_array((A)->data, sizeof((A)->data[0]), (A)->allocated, 0);                               \\\n\t\t(A)->data = NULL;                                                                                      \\\n\t\t(A)->allocated = 0;                                                                                    \\\n\t\t(A)->count = 0;                                                                                        \\\n\t}\n\n#ifdef __cplusplus\n}\n#endif\n\n#endif\n\n#endif",
  "\n<!DOCTYPE html>\n<html>\n<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no\" />\n    <title>\u7ed3\u7b97\u652f\u4ed8 - {wc:$webname}\u89e6\u5c4f\u7248</title>\n    <meta content=\"app-id=518966501\" name=\"apple-itunes-app\" />\n    <meta content=\"yes\" name=\"apple-mobile-web-app-capable\" />\n    <meta content=\"black\" name=\"apple-mobile-web-app-status-bar-style\" />\n    <meta content=\"telephone=no\" name=\"format-detection\" />\n    <link href=\"http://wei.34qy.com/CSS/comm.css?v=130715\" rel=\"stylesheet\" type=\"text/css\" /><link href=\"http://wei.34qy.com/MyCart/CSS/cartList.css?v=130726\" rel=\"stylesheet\" type=\"text/css\" /><script src=\"http://wei.34qy.com/JS/jquery190.js\" language=\"javascript\" type=\"text/javascript\"></script><script id=\"pageJS\" data=\"http://wei.34qy.com/MyCart/JS/Payment.js\" language=\"javascript\" type=\"text/javascript\"></script>\n</head>\n<body>\n<div class=\"h5-yygcms-v1\">\n    \n<!-- \u680f\u76ee\u9875\u9762\u9876\u90e8 -->\n\n\n<!-- \u5185\u9875\u9876\u90e8 -->\n\n    <header class=\"g-header\">\n        <div class=\"head-l\">\n\t        <a href=\"javascript:;\" onClick=\"history.go(-1)\" class=\"z-HReturn\"><s></s><b>\u8fd4\u56de</b></a>\n        </div>\n        <h2>\u7ed3\u7b97\u652f\u4ed8</h2>\n        <div class=\"head-r\">\n\t        \n        </div>\n    </header>\n\n    <input name=\"hidShopMoney\" type=\"hidden\" id=\"hidShopMoney\" value=\"1.00\" />\n    <input name=\"hidBalance\" type=\"hidden\" id=\"hidBalance\" value=\"0.00\" />\n    <input name=\"hidPoints\" type=\"hidden\" id=\"hidPoints\" value=\"52\" />\n    <section class=\"clearfix g-pay-lst\">\n\t\t<ul>\n\t\t\n\t\t\t<li>\n\t\t\t    <a href=\"/product/19208.html/\" class=\"gray6\">(\u7b2c2\u671f)\u7d22\u5c3c\uff08SONY\uff09Xperia Z1 L39h 3G\u624b\u673a WCDMA/GSM</a>\n\t\t\t    <span>\n\t\t\t        <em class=\"orange arial\">1</em>\u4eba\u6b21\n\t\t\t    </span>\n\t\t\t</li>\n\t\t\n\t\t</ul>\n\t\t<p class=\"g-pay-Total gray9\">\u5408\u8ba1\uff1a<span class=\"orange arial Fb F16\">1.00</span> \u5143</p>\n\t\t<p class=\"g-pay-bline\"></p>\n    </section>\n    <section class=\"clearfix g-Cart\">\n\t    <article class=\"clearfix m-round g-pay-ment\">\n\t\t    <ul id=\"ulPayway\">\n\t\t\t    <li class=\"gray6 z-pay-ff z-pay-grayC\"><i id=\"spPoints\" class=\"z-pay-mentDis\" sel=\"0\"></i><span>\u60a8\u7684\u798f\u5206\u4e0d\u8db3\uff08\u60a8\u7684\u798f\u5206\uff1a52\uff09</span></li><li class=\"gray6 z-pay-ye z-pay-grayC\"><a href=\"/member/recharge.html\" class=\"z-pay-Recharge\">\u53bb\u5145\u503c</a><span>\u60a8\u7684\u4f59\u989d\u4e0d\u8db3\uff08\u8d26\u6237\u4f59\u989d\uff1a0.00 \u5143\uff09</span></li>\n\t\t    </ul>\n\t    </article>\n\t    <article id=\"bankList\" class=\"clearfix mt10 m-round g-pay-ment g-bank-ct\">\n\t\t    <ul>\n\t\t\t    <li class=\"gray6 z-pay-grayC\"><s class=\"z-arrow\"></s>\u9009\u62e9\u7f51\u94f6\u652f\u4ed8</li>\n\t\t\t    <li class=\"gray9\" style=\"display:none;\"><i class=\"z-bank-Roundsel\"><s></s></i>\u62db\u5546\u94f6\u884c</li>\n\t\t\t    <li class=\"gray9\" style=\"display:none;\"><i class=\"z-bank-Round\"><s></s></i>\u94f6\u8054\u652f\u4ed8</li>\n\t\t    </ul>\n\t    </article>\n\t    <div class=\"g-Total-bt\">\n\t\t    <a id=\"btnPay\" href=\"javascript:;\" class=\"orgBtn\">\u786e\u8ba4\u652f\u4ed8</a>\n\t    </div>\n    </section>\n    \n{wc:templates \"mobile/index\",\"footer\"}\n<script language=\"javascript\" type=\"text/javascript\">\nvar Base={head:document.getElementsByTagName(\"head\")[0]||document.documentElement,Myload:function(B,A){this.done=false;B.onload=B.onreadystatechange=function(){if(!this.done&&(!this.readyState||this.readyState===\"loaded\"||this.readyState===\"complete\")){this.done=true;A();B.onload=B.onreadystatechange=null;if(this.head&&B.parentNode){this.head.removeChild(B)}}}},getScript:function(A,C){var B=function(){};if(C!=undefined){B=C}var D=document.createElement(\"script\");D.setAttribute(\"language\",\"javascript\");D.setAttribute(\"type\",\"text/javascript\");D.setAttribute(\"src\",A);this.head.appendChild(D);this.Myload(D,B)},getStyle:function(A,B){var B=function(){};if(callBack!=undefined){B=callBack}var C=document.createElement(\"link\");C.setAttribute(\"type\",\"text/css\");C.setAttribute(\"rel\",\"stylesheet\");C.setAttribute(\"href\",A);this.head.appendChild(C);this.Myload(C,B)}}\nfunction GetVerNum(){var D=new Date();return D.getFullYear().toString().substring(2,4)+'.'+(D.getMonth()+1)+'.'+D.getDate()+'.'+D.getHours()+'.'+(D.getMinutes()<10?'0':D.getMinutes().toString().substring(0,1))}\nBase.getScript('http://wei.34qy.com/JS/Bottom.js?v='+GetVerNum());\n</script>\n\n<script language=\"javascript\" type=\"text/javascript\">\n\n  var Path = new Object();\n\n  Path.Skin=\"{G_TEMPLATES_STYLE}\";  \n\n  Path.Webpath = \"{WEB_PATH}\";\n\n  Path.imgpath = \"{G_WEB_PATH}/data\";\n\n  \n\nvar Base={head:document.getElementsByTagName(\"head\")[0]||document.documentElement,Myload:function(B,A){this.done=false;B.onload=B.onreadystatechange=function(){if(!this.done&&(!this.readyState||this.readyState===\"loaded\"||this.readyState===\"complete\")){this.done=true;A();B.onload=B.onreadystatechange=null;if(this.head&&B.parentNode){this.head.removeChild(B)}}}},getScript:function(A,C){var B=function(){};if(C!=undefined){B=C}var D=document.createElement(\"script\");D.setAttribute(\"language\",\"javascript\");D.setAttribute(\"type\",\"text/javascript\");D.setAttribute(\"src\",A);this.head.appendChild(D);this.Myload(D,B)},getStyle:function(A,B){var B=function(){};if(callBack!=undefined){B=callBack}var C=document.createElement(\"link\");C.setAttribute(\"type\",\"text/css\");C.setAttribute(\"rel\",\"stylesheet\");C.setAttribute(\"href\",A);this.head.appendChild(C);this.Myload(C,B)}}\n\nfunction GetVerNum(){var D=new Date();return D.getFullYear().toString().substring(2,4)+'.'+(D.getMonth()+1)+'.'+D.getDate()+'.'+D.getHours()+'.'+(D.getMinutes()<10?'0':D.getMinutes().toString().substring(0,",
  "\ufeffnamespace TrainsOnline.Api.SoapEndpoints.Interfaces\n{\n    using System.ServiceModel;\n    using System.Threading.Tasks;\n    using MediatR;\n    using TrainsOnline.Api.SoapEndpoints.Core;\n    using TrainsOnline.Application.Handlers.AuthenticationHandlers.Commands.ResetPassword;\n    using TrainsOnline.Application.Handlers.AuthenticationHandlers.Queries.GetResetPasswordToken;\n    using TrainsOnline.Application.Handlers.AuthenticationHandlers.Queries.GetValidToken;\n\n    [ServiceContract]\n    public interface IAuthenticationSoapEndpointService : ISoapEndpointService\n    {\n        [OperationContract]\n        Task<JwtTokenModel> Login(LoginRequest model);\n\n        [OperationContract]\n        Task<string> ResetPasswordStep1(SendResetPasswordRequest request);\n\n        [OperationContract]\n        Task<Unit> ResetPasswordStep2(ResetPasswordRequest request);\n    }\n}",
  "<!DOCTYPE html>\n<!--THIS IS THE CORRECT TOP NAV v3 -->\n<nav class=\"navbar navbar-expand-md navbar-light fixed-top\" style=\"background-color: #F6E2D5\">\n    <a class=\"navbar-brand\" href=\"index.html\">\n        <img src=\"images/hi.png\" alt=\"logo\">\n    </a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n        <div class=\"navbar-nav\">\n            <a class=\"nav-item nav-link active\" href=\"index.html\">home <span class=\"sr-only\">(current)</span></a>\n            <a class=\"nav-item nav-link\" href=\"about.html\">about</a>\n            <li class=\"nav-item dropdown\">\n                <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                tips\n                </a>\n                <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                <a class=\"dropdown-item\" href=\"tips.html\"> how to play </a>\n                <a class=\"dropdown-item\" href=\"zoom_fat.html\"> fight zoom fatigue</a>\n                <!-- <div class=\"dropdown-divider\"></div>\n                <a class=\"dropdown-item\" href=\"#\"> faq </a> -->\n                </div>\n            </li>\n            <a class=\"nav-item nav-link lets_play\" href=\"categories.html\">let's play</a>\n        </div>\n    </div>\n</nav>",
  "# Operator\n\n## TrueHD 5.1\n\n**2015 \u2022 16 \u2022 1h 28m \u2022 Thriller, Action, Drama \u2022 mobe1969**\n\nWhen the daughter of veteran 911 call center operator Pamela, and her estranged husband Jeremy, a Senior Police Officer, is kidnapped and held hostage, they are left desperate, with no choice but to follow the kidnapper's rules: send messages through dispatch for all police and fire units to scatter to remote locations throughout the city where they are met with chaos. Not knowing who or why, the one thing they do know is if they fail to discreetly collaborate with one another - they will be solely responsible for facilitating the biggest crime in the city's history. Now they must race against the clock to make the choice of their lives - save the city - or save their daughter.\n\n[TMDB](362185)\n\n![img 0](https://gitlab.com/Mobe1969/beq-reports/-/raw/master/Movies/Operator%20%282015%29%20TrueHD%205.1.jpg)\n\n",
  "# API\n\n- [Settings](#settings)\n    - [canvas](#canvas)\n    - [injectStyle](#injectstyle)\n    - [onPreTask](#onpretask)\n    - [onEnd](#onend)\n    - [title](#title)\n    - [preloadImages](#preloadimages)\n    - [skip](#skip)\n    - [skin](#skin)\n    - [logger](#logger)\n- [Tasks](#tasks)\n    - [Quest](#quest)\n    - [Message](#message)\n    - [Post](#post)\n- [Inheritance](#inheritance)\n- [Custom tasks](#custom-tasks)\n    - [Plugging in](#plugging-in)\n    - [Activator function](#activator-function)\n    - [Custom Task Example](#custom-task-example)\n- [Project Implicit Build](#project-implicit-build)\n    - [logger.url](#loggerurl)\n    - [mTurk](#mturk)\n\nThe miManager is responsible for managing several piTasks sequentially. It uses the same API used throughout Minno tasks.\n\n### Settings\nSettings allow you to control the generic way that the player works. Change the settings using the `addSettings` function. The first argument to the function is always the name of the setting, the second argument is the setting values. In case the setting is an object, subsequent objects will extend each other so that settings may be progressively added.\nAll the functions within settings are invoked using angular. This means that you have access to any service you like, as well as some specific assets. [In order to access the services](https://docs.angularjs.org/api/auto/service/$injector) simply use arguments with the appropriate name. For instance, this is how you would access `$rootScope`:\n\n```javascript\nfunction onEnd($rootScope){\n    $rootScope.$emit('end!!');\n}\n```\n\n#### canvas\n`canvas` takes an object that describes the style of the task environment. Each property of the object changes a different style element.\n\nProperty            | Changes\n-------             | -----------\nbackground          | The overall background color.\ncanvasBackground    | Default canvas background color.\nfontColor           | Default font color.\nfontSize            | Default font size.\n\n```javascript\nAPI.addSettings('canvas', {\n    fontSize: '2em'\n});\n```\n\nIn case you need to fine tune the styles even further you can add css rules into the raw HTML. Support for dynamically adding CSS is planned but not yet supported.\n\n#### injectStyle\nInjects a string of css into the page.\n\n```javascript\nAPI.addSettings('injectStyle', '[pi-quest] label {font-size:1.2em; font-weight:normal;}');\n```\n\n#### onPreTask\n`onPreTask` is a function to be called before each task is called.\n\n```javascript\nAPI.addSettings('onPreTask', function(currentTask){\n    doSomethingWith(currentTask);\n});\n```\n\nAsset       | Description\n-------     | -----------\ncurrentTask | The current task object\nprevTask    | The previous task object (this may be used as a post task action as well...)\n\n#### onEnd\n`onEnd` is a function to be called as soon as the task sequence ends.\n\n```javascript\nAPI.addSettings('onEnd', function(){\n    // Do something: for instance, redirect to'my/url.js'\n    location.href ='my/url.js';\n});\n```\n\nAsset       | Description\n-------     | -----------\ncurrentTask | The current (last) task object\n\n#### title\n`title` is a string to be used as the page title (the name displayed on the tag).\n\n```javascript\nAPI.addSettings('title', 'My Manager Title');\n```\n\n#### preloadImages\nAccepts an array of image urls to preload. The manager will **not** wait until all images are loaded, but it will make images displayed later in the manager sequence be displayed significantly faster.\n\n```javascript\nAPI.addSettings('preloadImages', ['my/image/url/imageName.png','my/other/url/otherImage.jpg']);\n```\n\n#### skip\nWhether to activate the skip and refresh option. If activated, clicking `ctrl r` reloads the current task (this feature may not be supported on older browsers), clicking `escape` and then the right or left arrows skips to the next or previous tasks.\n\n```javascript\nAPI.addSettings('skip', true);\n```\n\n#### skin\nAdd a skin to your project. Skins change the way that your tasks look. Currently the only skins that we support are `simple` and `demo`.\n\n```javascript\nAPI.addSettings('skin', 'demo');\n```\n\n### Tasks\nThe basic unit in miManager is the **task**. The manager currently supports several types of tasks; `quest`, `message` and `post`. You should just cue them into the sequence (you can use mixers to your hearts content as well).\n\nProperty    | Description\n----------- | -------------\nname        | Task name.\ntype        | Type of task (quest/message).\npre         | A function to invoke before the task (may return a promise).\nload        | A function to invoke as soon as the task is loaded (may return a promise).\npost        | A function to invoke after the task (may return a promise).\ncanvas      | A canvas object (as defined under [settings](#canvas)) to invoke at the beginning of the task and remove \ntitle       | A string to be used as the page title (the name displayed on the tag). It is reset at the end of the task.\npreText\t    | A template to be expanded before the task\npostText    | A template to be expanded after the task\n\n#### quest\n\nProperty    | Description\n----------- | -------------\nscript      | The actual script object for the quest task.\nscriptUrl   | The url for the quest script.\n\n#### message\nProperty    | Description\n----------- | -------------\ntemplate    | the actual html to display as a string.\ntemplateUrl | The url for the message html file.\nkeys        | Controls the proceed key: either a key (i.e. `'a'`) a keyCode (i.e. `65`) or an array of such (i.e. `['a','b']`).\n\n#### Post\nproperty        | description\n--------------- | ------------\nurl             | The url we intend to post to.\npath            | A path within the global to the object that you want to send. For example: `\"iat.feedback\"` will post the object `feedback` from `global.iat`.\ndata            | A raw object to be posted to the server. You may use templates in order to construct it.\n\n#### postCsv\nThis task posts all data gathered by your study as a csv to a given url.\n\nEach log will be logged to a separate row.\nEach property will have a separate column.\nEach row has a unique column called taskName that holds the appropriate task name.\n\nproperty        | description\n--------------- | ------------\nurl             | The url we intend to post to.\n\n```javascript\n{type:'postCsv', url:'csv.php'}\n```\n\nWhen using this setting, make sure set `logger.url` to `null` in your individual tasks, or else they will attempt to post individually in addition to your csv post.\n\nYou may want to use this task in conjection with the csv [simple server](https://github.com/minnojs/simple-minno-server).\n\n### Inheritance\nmiManager uses the same inheritance system used by miQuest. It has one type of set: the task set. In order to create task sets use `addTasksSet(set, list)`.\n\n### Custom tasks\nThe miManager allows the creation of custom tasks. The format is fairly simple though you probably need at least some experience with programing for it. \n\n#### Plugging in\nmiManager manages the task sequence for you as well as loading the task script (if needed). There are several ways to plug a new task into miManager, the all involve passing the activator function to the manager in various ways.\n\n1. You can pass the activator function as a script.\n2. You can pass it as the play property of the script object ().\n3. You can set it into the `taskActivateProvider` using `taskActivateProvider.set(taskName, activatorFunction)` during the configuration stage of the angular flow (This is worth the trouble mainly if you intend to use this task many times).\n\n#### Activator function\nThe activator function is the function that is responsible for the activation of your task as well as for the communication with miManager.\n\nIt should:\n* Run your task (just do whatever you like).\n* Return a function that may be used to force the end of the task.\n* Call the `done` function whenever it is done.\n\nThe activator function is invoked using [angular dependency injection](https://docs.angularjs.org/guide/di), so you can use any of the angular [annotation](https://docs.angularjs.org/guide/di#dependency-",
  "//\n// Created by aeternum on 9/5/21.\n//\n\n#ifndef VULKANAPI_INSTANCE_H\n#define VULKANAPI_INSTANCE_H\n\n#include <vulkan/vulkan.h>\n\n#include <vector>\n\nnamespace VulkanApi\n{\n    class Instance\n    {\n    public:\n        Instance(const std::initializer_list<const char*>& validationLayers);\n        virtual ~Instance();\n\n        inline VkInstance& GetVkInstance() { return m_Instance; }\n        inline VkDebugUtilsMessengerEXT& GetVkDebugMessenger() { return m_DebugMessenger; }\n\n        inline const std::vector<const char*>& GetValidationLayers() const { return m_ValidationLayers; }\n        inline bool GetValidationLayersEnabled() const { return m_EnableValidationLayers; }\n\n    private:\n        bool CheckValidationLayerSupport() noexcept;\n        std::vector<const char*> GetRequiredExtension() const noexcept;\n\n        static void PopulateDebugMessengerCreateInfo(VkDebugUtilsMessengerCreateInfoEXT& createInfo);\n\n    private:\n        std::vector<const char*> m_ValidationLayers;\n        std::vector<VkLayerProperties> m_AvailableLayers;\n\n        VkInstance m_Instance;\n        VkDebugUtilsMessengerEXT m_DebugMessenger;\n\n#ifdef VULKAN_API_DEBUG\n        bool m_EnableValidationLayers = true;\n#else\n        bool m_EnableValidationLayers = false;\n#endif\n    };\n}\n\n\n#endif //VULKANAPI_INSTANCE_H\n",
  "//=============================================================================\n/// Copyright (c) 2017-2020 Advanced Micro Devices, Inc. All rights reserved.\n/// \\author AMD Developer Tools Team\n/// \\file\n/// \\brief Header for a mini recent trace widget.\n//=============================================================================\n\n#ifndef QTCOMMON_CUSTOM_WIDGETS_RECENT_TRACE_MINI_WIDGET_H_\n#define QTCOMMON_CUSTOM_WIDGETS_RECENT_TRACE_MINI_WIDGET_H_\n\n#include <QWidget>\n#include <QLabel>\n#include <QSignalMapper>\n#include <QVBoxLayout>\n\n#include \"utils/common_definitions.h\"\n\n#include \"scaled_push_button.h\"\n\n/// Widget that represents a single trace in the recent traces pane\nclass RecentTraceMiniWidget : public QWidget\n{\n    Q_OBJECT\n\npublic:\n    /// Explicit constructor.\n    /// \\param parent The color picker widget's parent.\n    explicit RecentTraceMiniWidget(QWidget* parent = nullptr);\n\n    /// Destructor.\n    virtual ~RecentTraceMiniWidget();\n\n    /// Set the trace information for this widget from a RecentFileData object.\n    /// \\param file The file this widget is going to show trace data from.\n    void SetFile(const RecentFileData& file);\n\n    /// Retrieve the path of the trace file associated with this widget.\n    /// \\returns The path string.\n    virtual QString GetPath() const;\n\n    /// Overridden sizeHint which returns the size of ScaledPushButton.\n    /// \\return The desired size of this widget.\n    virtual QSize sizeHint() const Q_DECL_OVERRIDE;\n\nprotected:\n    QVBoxLayout*      widget_layout_;  ///< This widget's layout containing all stuff\n    ScaledPushButton* path_button_;    ///< Button with file path text\n\n    /// Reimplemented the fontChange event to pass the font\n    /// on to the path button.\n    virtual void changeEvent(QEvent* event) Q_DECL_OVERRIDE;\n\nprivate:\n    QSignalMapper* path_signal_mapper_;  ///< Path label signal mapper\n\nsignals:\n    void clicked(QString);\n};\n\n#endif  // QTCOMMON_CUSTOM_WIDGETS_RECENT_TRACE_MINI_WIDGET_H_\n",
  "module.exports = function log(msg) {\n    console.log('[redux-create-action-index]'+ msg);\n};\n",
  "# Electrum - lightweight Bitcoin client\n# Copyright (C) 2011 Thomas Voegtlin\n# Copyright (C) 2019 Neil Booth\n#\n# Permission is hereby granted, free of charge, to any person\n# obtaining a copy of this software and associated documentation files\n# (the \"Software\"), to deal in the Software without restriction,\n# including without limitation the rights to use, copy, modify, merge,\n# publish, distribute, sublicense, and/or sell copies of the Software,\n# and to permit persons to whom the Software is furnished to do so,\n# subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be\n# included in all copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\n\nimport enum\nfrom io import BytesIO\nimport struct\nfrom typing import Any, Dict, List, Optional, Sequence, Tuple, Union\n\nimport attr\nfrom bitcoinx import (\n    Address, base58_encode_check, bip32_key_from_string, BIP32PublicKey, classify_output_script,\n    der_signature_to_compact, double_sha256, hash160, hash_to_hex_str, InvalidSignatureError,\n    Ops, P2PK_Output, P2SH_Address, pack_byte, pack_le_int32, pack_le_uint32, pack_list,\n    PrivateKey, PublicKey, push_int, push_item, Script, SigHash, Tx, TxInput, TxOutput,\n    read_le_uint32, read_le_int32, read_le_int64, read_list, read_varbytes, unpack_le_uint16,\n)\n\nfrom.bitcoin import ScriptTemplate\nfrom.constants import ScriptType\nfrom.logs import logs\nfrom.networks import Net\nfrom.script import AccumulatorMultiSigOutput\n\nNO_SIGNATURE = b'\\xff'\ndummy_public_key = PublicKey.from_bytes(bytes(range(3, 36)))\ndummy_signature = bytes(72)\n\nlogger = logs.get_logger(\"transaction\")\n\n\nclass TxSerialisationFormat(enum.IntEnum):\n    RAW = 0\n    HEX = 1\n    JSON = 2\n    JSON_WITH_PROOFS = 3\n\n\nTxFileExtensions = {\n    TxSerialisationFormat.RAW: \"txn\",\n    TxSerialisationFormat.HEX: \"txt\",\n    TxSerialisationFormat.JSON: \"json\",\n    TxSerialisationFormat.JSON_WITH_PROOFS: \"json\",\n}\n\nTxSerialisedType = Union[bytes, str, Dict]\n\n\ndef classify_tx_output(tx_output: TxOutput) -> ScriptTemplate:\n    # This returns a P2PKH_Address, P2SH_Address, P2PK_Output, OP_RETURN_Output,\n    # P2MultiSig_Output or Unknown_Output\n    return classify_output_script(tx_output.script_pubkey, Net.COIN)\n\n\ndef script_to_display_text(script: Script, kind: ScriptTemplate) -> str:\n    if isinstance(kind, Address):\n        text = kind.to_string()\n    elif isinstance(kind, P2PK_Output):\n        text = kind.public_key.to_hex()\n    else:\n        text = script.to_asm()\n    return text\n\ndef tx_output_to_display_text(tx_output: TxOutput) -> Tuple[str, ScriptTemplate]:\n    kind = classify_tx_output(tx_output)\n    text = script_to_display_text(tx_output.script_pubkey, kind)\n    return text, kind\n\n\n@attr.s(slots=True, repr=True)\nclass TransactionContext:\n    invoice_id: Optional[int] = attr.ib(default=None)\n    description: Optional[str] = attr.ib(default=None)\n    prev_txs: Dict[bytes, 'Transaction'] = attr.ib(default=attr.Factory(dict))\n\n\nclass XPublicKeyType(enum.IntEnum):\n    UNKNOWN = 0\n    OLD = 1\n    BIP32 = 2\n    PRIVATE_KEY = 3\n\n\nclass XPublicKey:\n    \"\"\"\n    This is responsible for keeping the abstracted form of the public key, where relevant\n    so that anything signing can reconcile where the public key comes from. It applies to\n    three types of keystore, imported private keys, BIP32 and the old style.\n    \"\"\"\n\n    _old_mpk: Optional[bytes] = None\n    _bip32_xpub: Optional[str] = None\n    _derivation_path: Optional[Sequence[int]] = None\n    _pubkey_bytes: Optional[bytes] = None\n\n    def __init__(self, **kwargs) -> None:\n        if \"pubkey_bytes\" in kwargs:\n            assert isinstance(kwargs[\"pubkey_bytes\"], bytes)\n            self._pubkey_bytes = kwargs[\"pubkey_bytes\"]\n        elif \"bip32_xpub\" in kwargs:\n            assert isinstance(kwargs[\"bip32_xpub\"], str)\n            self._bip32_xpub = kwargs[\"bip32_xpub\"]\n            self._derivation_path = tuple(kwargs[\"derivation_path\"])\n        elif \"old_mpk\" in kwargs:\n            assert isinstance(kwargs[\"old_mpk\"], bytes)\n            self._old_mpk = kwargs[\"old_mpk\"]\n            self._derivation_path = tuple(kwargs[\"derivation_path\"])\n        else:\n            raise ValueError(f'invalid XPublicKey: {kwargs!r}')\n        self.to_public_key()\n\n    @classmethod\n    def from_dict(cls, data: Dict[str, Any]) -> 'XPublicKey':\n        kwargs = data.copy()\n        if \"pubkey_bytes\" in kwargs:\n            kwargs[\"pubkey_bytes\"] = bytes.fromhex(kwargs[\"pubkey_bytes\"])\n        if \"old_mpk\" in kwargs:\n            kwargs[\"old_mpk\"] = bytes.fromhex(kwargs[\"old_mpk\"])\n        return cls(**kwargs)\n\n    @classmethod\n    def from_bytes(cls, raw: bytes) -> 'XPublicKey':\n        \"\"\" In addition to importing public keys, we also support the legacy Electrum\n        serialisation, except for the case of addresses. \"\"\"\n        kwargs: Dict[str, Any] = {}\n        kind = raw[0]\n        if kind in {0x02, 0x03, 0x04}:\n            kwargs['pubkey_bytes'] = raw\n        elif kind == 0xff:\n            # 83 is 79 + 2 + 2.\n            assert len(raw) == 83, f\"got {len(raw)}\"\n            kwargs[\"bip32_xpub\"] = base58_encode_check(raw[1:79])\n            kwargs[\"derivation_path\"] = tuple(unpack_le_uint16(raw[n: n+2])[0]\n                for n in (79, 81))\n        elif kind == 0xfe:\n            assert len(raw) == 69\n            kwargs[\"old_mpk\"] = raw[1:65]  # The public key bytes without the 0x04 prefix\n            kwargs[\"derivation_path\"] = tuple(unpack_le_uint16(raw[n: n+2])[0] for n in (65, 67))\n        else:\n            kwargs[\"extended_kind\"] = hex(raw[0])\n        return cls(**kwargs)\n\n    @classmethod\n    def from_hex(cls, text: str) -> 'XPublicKey':\n        raw = bytes.fromhex(text)\n        return cls.from_bytes(raw)\n\n    def to_dict(self) -> Dict[str, Any]:\n        d: Dict[str, Any] = {}\n        if self._pubkey_bytes is not None:\n            d[\"pubkey_bytes\"] = self._pubkey_bytes.hex()\n        if self._old_mpk is not None:\n            d[\"old_mpk\"] = self._old_mpk.hex()\n            d[\"derivation_path\"] = self._derivation_path\n        if self._bip32_xpub is not None:\n            d[\"bip32_xpub\"] = self",
  "package pod\n\nimport (\n\tlog \"github.com/sirupsen/logrus\"\n\tcorev1 \"k8s.io/api/core/v1\"\n\t\"k8s.io/apimachinery/pkg/api/errors\"\n\tmetav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\t\"k8s.io/client-go/kubernetes\"\n\n\t\"github.com/caicloud/cyclone/pkg/meta\"\n)\n\n// IsGCPod judges whether a pod is a GC pod by check whether it has\n// label \"gc.cyclone.dev\".\nfunc IsGCPod(pod *corev1.Pod) bool {\n\tif pod == nil || pod.Labels == nil {\n\t\treturn false\n\t}\n\n\tif kind := pod.Labels[meta.LabelPodKind]; kind!= meta.PodKindGC.String() {\n\t\treturn false\n\t}\n\n\treturn true\n}\n\n// IsWorkloadPod judges whether a pod is a workload pod by check whether it has\n// label \"workload.cyclone.dev\".\nfunc IsWorkloadPod(pod *corev1.Pod) bool {\n\tif pod == nil || pod.Labels == nil {\n\t\treturn false\n\t}\n\n\tif kind := pod.Labels[meta.LabelPodKind]; kind!= meta.PodKindWorkload.String() {\n\t\treturn false\n\t}\n\n\treturn true\n}\n\n// GCPodUpdated handles GC pod update. If GC pod is terminated, it will be deleted.\nfunc GCPodUpdated(client kubernetes.Interface, pod *corev1.Pod) {\n\tif pod.Status.Phase == corev1.PodSucceeded || pod.Status.Phase == corev1.PodFailed {\n\t\tif err := client.CoreV1().Pods(pod.Namespace).Delete(pod.Name, &metav1.DeleteOptions{}); err!= nil {\n\t\t\tif errors.IsNotFound(err) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlog.WithField(\"pod\", pod.Name).Warn(\"Delete GC pod error: \", err)\n\t\t}\n\t}\n}\n",
  "// loading containers onto two ships via backtracking\r\n// code finds max loading of first ship as well as its weight\r\n// recursive version \r\n\r\n#include <iostream>\r\n#include <iterator>\r\n\r\nusing namespace std;\r\n\r\n// global variables\r\nint numberOfContainers;\r\nint *weight;\r\nint capacity;\r\nint weightOfCurrentLoading;\r\nint maxWeightSoFar;\r\nint remainingWeight;\r\nint *currentLoading;\r\nint *bestLoadingSoFar;\r\n\r\nvoid rLoad(int);\r\n\r\nint maxLoading(int *theWeight, int theNumberOfContainers,\r\n               int theCapacity, int *bestLoading)\r\n{// theWeight[1:theNumberOfContainers] gives container weights\r\n // theCapacity is capacity of ship\r\n // bestLoading[1:theNumberOfContainers] is solution array\r\n // Return weight of max loading.\r\n   // initialize global variables\r\n   numberOfContainers = theNumberOfContainers;\r\n   weight = theWeight;\r\n   capacity = theCapacity;\r\n   weightOfCurrentLoading = 0;\r\n   maxWeightSoFar = 0;\r\n   currentLoading = new int [numberOfContainers + 1];\r\n   bestLoadingSoFar = bestLoading;\r\n\r\n   // initialize remainingWeight to sum of all weights\r\n   for (int i = 1; i <= numberOfContainers; i++)\r\n      remainingWeight += weight[i];\r\n\r\n   // compute weight of best loading\r\n   rLoad(1);\r\n   return maxWeightSoFar;\r\n}\r\n\r\n// recursive function to find best loading\r\nvoid rLoad(int currentLevel)\r\n{// search from a node at currentLevel\r\n   if (currentLevel > numberOfContainers)\r\n   {// at a leaf, save better solution\r\n      for (int j = 1; j <= numberOfContainers; j++)\r\n         bestLoadingSoFar[j] = currentLoading[j];\r\n      maxWeightSoFar = weightOfCurrentLoading;\r\n      return;\r\n   }\r\n\r\n   // not at a leaf, check subtrees\r\n   remainingWeight -= weight[currentLevel];\r\n   if (weightOfCurrentLoading + weight[currentLevel] <= capacity)\r\n   {// try left subtree\r\n      currentLoading[currentLevel] = 1;\r\n      weightOfCurrentLoading += weight[currentLevel];\r\n      rLoad(currentLevel + 1);\r\n      weightOfCurrentLoading -= weight[currentLevel];\r\n   }\r\n   if (weightOfCurrentLoading + remainingWeight > maxWeightSoFar)\r\n   {\r\n      currentLoading[currentLevel] = 0; // try right subtree\r\n      rLoad(currentLevel + 1);\r\n   }\r\n   remainingWeight += weight[currentLevel];\r\n}\r\n\r\n\r\nvoid main(void)\r\n{\r\n   int w[] = {0, 7, 2, 6, 5, 4};\r\n   int c = 10;\r\n   int n = 5;\r\n   int *x = new int [n + 1];\r\n\r\n   // compute and output best loading\r\n   cout << \"Value of max loading is \" << maxLoading(w, n, c, x) << endl;\r\n   cout << \"x values are \";\r\n   copy(x + 1, x + n + 1, ostream_iterator<int>(cout, \"  \"));\r\n   cout << endl;\r\n}\r\n",
  "// Imports\n// ========================================================\nimport { Router, Request, Response } from 'express';\nimport { NotFound } from '../../utils/errorHandlers';\nimport { buildSuccessResponse } from '../../utils/helpers';\nimport dictionary from '../../utils/dictionary.json';\nimport { QUERY_ORG_MEMBER } from './queries';\nimport authMiddleware from '../../middlewares/authMiddleware';\n\n// Config\n// ========================================================\nconst router = Router();\n\n// Route\n// ========================================================\nconst ReadOrgMember = async (req: Request, res: Response) => {\n  const userId = req?.user?.sub?? undefined;\n\n  const { data } = await QUERY_ORG_MEMBER(req.params.id, userId);\n\n  return res.json(buildSuccessResponse(data));\n};\n\n// Middlewares\n// ========================================================\nrouter.get('/:orgId/members/:id', authMiddleware, ReadOrgMember);\n\n// Exports\n// ========================================================\nexport default router;\n",
  "<!DOCTYPE html>\n<html>\n<head>\n<meta charset=utf-8>\n<title>82 nips-2009-Entropic Graph Regularization in Non-Parametric Semi-Supervised Classification</title>\n</head>\n\n<body>\n<p><a title=\"nips\" href=\"../nips_home.html\">nips</a> <a title=\"nips-2009\" href=\"../home/nips2009_home.html\">nips2009</a> <a title=\"nips-2009-82\" href=\"../nips2009/nips-2009-Entropic_Graph_Regularization_in_Non-Parametric_Semi-Supervised_Classification.html\">nips2009-82</a> <a title=\"nips-2009-82-reference\" href=\"#\">nips2009-82-reference</a> knowledge-graph by maker-knowledge-mining</p><script async src=\"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></script>\n<!-- maker adsense -->\n<ins class=\"adsbygoogle\"\n     style=\"display:inline-block;width:728px;height:90px\"\n     data-ad-client=\"ca-pub-5027806277543591\"\n     data-ad-slot=\"4192012269\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<h1>82 nips-2009-Entropic Graph Regularization in Non-Parametric Semi-Supervised Classification</h1>\n<br/><p>Source: <a title=\"nips-2009-82-pdf\" href=\"http://papers.nips.cc/paper/3739-entropic-graph-regularization-in-non-parametric-semi-supervised-classification.pdf\">pdf</a></p><p>Author: Amarnag Subramanya, Jeff A. Bilmes</p><p>Abstract: We prove certain theoretical properties of a graph-regularized transductive learning objective that is based on minimizing a Kullback-Leibler divergence based loss. These include showing that the iterative alternating minimization procedure used to minimize the objective converges to the correct solution and deriving a test for convergence. We also propose a graph node ordering algorithm that is cache cognizant and leads to a linear speedup in parallel computations. This ensures that the algorithm scales to large data sets. By making use of empirical evaluation on the TIMIT and Switchboard I corpora, we show this approach is able to outperform other state-of-the-art SSL approaches. In one instance, we solve a problem on a 120 million node graph. 1</p><br/>\n<h2>reference text</h2><p>[1] O. Chapelle, B. Scholkopf, and A. Zien, Semi-Supervised Learning. MIT Press, 2007.</p>\n<p>[2] X. Zhu, \u201cSemi-supervised learning literature survey,\u201d tech. rep., Computer Sciences, University of Wisconsin-Madison, 2005.</p>\n<p>[3] M. Szummer and T. Jaakkola, \u201cPartially labeled classi\ufb01cation with Markov random walks,\u201d in Advances in Neural Information Processing Systems, vol. 14, 2001.</p>\n<p>[4] X. Zhu and Z. Ghahramani, \u201cLearning from labeled and unlabeled data with label propagation,\u201d tech. rep., Carnegie Mellon University, 2002.</p>\n<p>[5] X. Zhu, Z. Ghahramani, and J. Lafferty, \u201cSemi-supervised learning using gaussian \ufb01elds and harmonic functions,\u201d in Proc. of the International Conference on Machine Learning (ICML), 2003.</p>\n<p>[6] T. Joachims, \u201cTransductive learning via spectral graph partitioning,\u201d in Proc. of the International Conference on Machine Learning (ICML), 2003.</p>\n<p>[7] A. Corduneanu and T. Jaakkola, \u201cOn information regularization,\u201d in Uncertainty in Arti\ufb01cial Intelligence, 2003.</p>\n<p>[8] K. Tsuda, \u201cPropagating distributions on a hypergraph by dual information regularization,\u201d in Proceedings of the 22nd International Conference on Machine Learning, 2005.</p>\n<p>[9] M. Belkin, P. Niyogi, and V. Sindhwani, \u201cOn manifold regularization,\u201d in Proc. of the Conference on Arti\ufb01cial Intelligence and Statistics (AISTATS), 2005.</p>\n<p>[10] C. Bishop, ed., Neural Networks for Pattern Recognition. Oxford University Press, 1995.  8</p>\n<p>[11] A. Subramanya and J. Bilmes, \u201cSoft-supervised text classi\ufb01cation,\u201d in EMNLP, 2008.</p>\n<p>[12] R. Collobert, F. Sinz, J. Weston, L. Bottou, and T. Joachims, \u201cLarge scale transductive svms,\u201d Journal of Machine Learning Research, 2006.</p>\n<p>[13] V. Sindhwani and S. S. Keerthi, \u201cLarge scale semi-supervised linear svms,\u201d in SIGIR \u201906: Proceedings of the 29th annual international ACM SIGIR, 2006.</p>\n<p>[14] O. Delalleau, Y. Bengio, and N. L. Roux, \u201cEf\ufb01cient non-parametric function induction in semi-supervised learning,\u201d in Proc. of the Conference on Arti\ufb01cial Intelligence and Statistics (AISTATS), 2005.</p>\n<p>[15] M. Karlen, J. Weston, A. Erkan, and R. Collobert, \u201cLarge scale manifold transduction,\u201d in International Conference on Machine Learning, ICML, 2008.</p>\n<p>[16] I. W. Tsang and J. T. Kwok, \u201cLarge-scale sparsi\ufb01ed manifold regularization,\u201d in Advances in Neural Information Processing Systems (NIPS) 19, 2006.</p>\n<p>[17] A. Tomkins, \u201cKeynote speech.\u201d CIKM Workshop on Search and Social Media, 2008.</p>\n<p>[18] A. Jansen and P. Niyogi, \u201cSemi-supervised learning of speech sounds,\u201d in Interspeech, 2007.</p>\n<p>[19] T. M. Cover and J. A. Thomas, Elements of Information Theory. Wiley Series in Telecommunications, New York: Wiley, 1991.</p>\n<p>[20] Y. Bengio, O. Delalleau, and N. L. Roux, Semi-Supervised Learning, ch. Label Propogation and Quadratic Criterion. MIT Press, 2007.</p>\n<p>[21] Dempster, Laird, and Rubin, \u201cMaximum likelihood from incomplete data via the em algorithm,\u201d Journal of the Royal Statistical Society, Series B, vol. 39, no. 1, pp. 1\u201338, 1977.</p>\n<p>[22] T. Abatzoglou and B. O. Donnell, \u201cMinimization by coordinate descent,\u201d Journal of Optimization Theory and Applications, 1982.</p>\n<p>[23] W. Zangwill, Nonlinear Programming: a Uni\ufb01ed Approach. Englewood Cliffs: N.J.: Prentice-Hall International Series in Management, 1969.</p>\n<p>[24] C. F. J. Wu, \u201cOn the convergence properties of the EM algorithm,\u201d The Annals of Statistics, vol. 11, no. 1, pp. 95\u2013103, 1983.</p>\n<p>[25] I. Csiszar and G. Tusnady, \u201cInformation Geometry and Alternating Minimization Procedures,\u201d Statistics and Decisions, 1984.</p>\n<p>[26] A. K. Halberstadt and J. R. Glass, \u201cHeterogeneous acoustic measurements for phonetic classi\ufb01cation,\u201d in Proc. Eurospeech \u201997, (Rhodes, Greece), pp. 401\u2013404, 1997.</p>\n<p>[27] K. F. Lee and H. Hon, \u201cSpeaker independant phone recognition using hidden markov models,\u201d IEEE Transactions on Acoustics, Speech and Signal Processing, vol. 37, no. 11, 1989.</p>\n<p>[28] J. Godfrey, E. Holliman, and J. McDaniel, \u201cSwitchboard: Telephone speech corpus for research and development,\u201d in Proceedings of ICASSP, vol. 1, (San Francisco, California), pp. 517\u2013520, March 1992.</p>\n<p>[29] N. Deshmukh, A. Ganapathiraju, A. Gleeson, J. Hamaker, and J. Picone, \u201cResegmentation of switchboard,\u201d in Proceedings of ICSLP, (Sydney, Australia), pp. 1543\u20131546, November 1998.</p>\n<p>[30] S. Greenberg, \u201cThe Switchboard transcription project,\u201d tech. rep., The Johns Hopkins University (CLSP) Summer Research Workshop, 1995.</p>\n<p>[31] J. Friedman, J. Bentley, and R. Finkel, \u201cAn algorithm for \ufb01nding best matches in logarithmic expected time,\u201d A",
  "import Tooltip from './Tooltip';\nexport { Props } from './Tooltip';\nexport default Tooltip;\n",
  "<html>\n<head>\n<title>Nuremburg Trials</title>\n</head>\n<body bgcolor=ffffff>\n<center>\n<table width=750>\n<tr><td>\n\n<center><font size=-1><a href=\"/\">rotten</a> &gt; <a href=\"/library/\">Library</a> &gt; <a href=\"/library/history/\">History</a> &gt; <a href=\"/library/history/nazi/\">Third Reich</a> &gt; Nuremburg Trials</font><br></center>\n<hr>\n\n<p>Much of the <a href=\"/library/bio/nazi/\">Nazi leadership</a> faced the <a href=\"/library/history/nazi/executed-nazis/\">hangman</a> for their <a href=\"/library/history/war-crimes/\">war crimes</a>.\r\n</p>\n\n<hr>\n\n<center>\n<a href=\"http://www.fetishmaximus.com/\">Fetish Maximus</a> &nbsp; | &nbsp;\n<a href=\"http://www.rotten.com/\">Rotten</a> &nbsp; | &nbsp;\n<a href=\"http://www.shockumentary.com/\">Faces of Death</a> &nbsp; | &nbsp;\n<a href=\"http://www.famous-nudes.com/\">Famous Nudes</a>\n</center>\n\n</td></tr>\n</table>\n</center>\n</body>\n</html>\n",
  "//\"Requiere\"faz uma requisi\u00e7\u00e3o (Importa\u00e7\u00e3o) para \"calc\" e \"calc\" retorna o que tiver dentro \"module.exports =\"\nlet calc = require(\"./calc\");\n\n//\"Requiere\"faz uma requisi\u00e7\u00e3o (Importa\u00e7\u00e3o) para \"Soma\" e \"Soma\"o retorna que tiver dentro\n// let soma = require(\"./calc\");\n// let mult = require(\"./calc\");\n\n//Faz um corte dos 2 primeiros elementos e retorno dos 2 elementos para frente\nconst args = process.argv.slice(2);\n\n//console.log(args)\n\nlet a = Number(args[1]); //\"Number\" tranforma para qualquer tipo de n\u00famero\nlet b = Number(args[2]);\nlet c = \" \";\n\nif(args[0] == \"s\"){\n    c = calc.soma(a, b);\n\n}else if( args[0] == \"m\"){\n    c = calc.mult(a, b);\n\n}else{\n    c = \"Op\u00e7\u00e3o Inv\u00e1lida\";\n}\n\nconsole.log(c);\n\n\n\n",
  "/*\n                       * This header is generated by classdump-dyld 1.5\n                       * on Wednesday, April 14, 2021 at 2:32:28 PM Mountain Standard Time\n                       * Operating System: Version 14.4 (Build 18K802)\n                       * Image Source: /System/Library/Frameworks/TVMLKit.framework/TVMLKit\n                       * classdump-dyld is licensed under GPLv3, Copyright \u00a9 2013-2016 by Elias Limneos. Updated by Kevin Bradley.\n                       */\n\n\n#import <TVMLKit/TVMLKit-Structs.h>\n@interface _TVStackSection : NSObject {\n\n\tdouble _sectionHeight;\n\tdouble _showcaseSectionHeight;\n\tlong long _firstRowIndex;\n\tlong long _rowCount;\n\tlong long _firstItemRowIndex;\n\tUIEdgeInsets _sectionSpacing;\n\tUIEdgeInsets _showcaseSectionSpacing;\n\tTVRowMetrics _compoundRowMetrics;\n\n}\n\n@property (assign,nonatomic) double sectionHeight;                             //@synthesize sectionHeight=_sectionHeight - In the implementation block\n@property (assign,nonatomic) UIEdgeInsets sectionSpacing;                      //@synthesize sectionSpacing=_sectionSpacing - In the implementation block\n@property (assign,nonatomic) TVRowMetrics compoundRowMetrics;                  //@synthesize compoundRowMetrics=_compoundRowMetrics - In the implementation block\n@property (assign,nonatomic) double showcaseSectionHeight;                     //@synthesize showcaseSectionHeight=_showcaseSectionHeight - In the implementation block\n@property (assign,nonatomic) UIEdgeInsets showcaseSectionSpacing;              //@synthesize showcaseSectionSpacing=_showcaseSectionSpacing - In the implementation block\n@property (assign,nonatomic) long long firstRowIndex;                          //@synthesize firstRowIndex=_firstRowIndex - In the implementation block\n@property (assign,nonatomic) long long rowCount;                               //@synthesize rowCount=_rowCount - In the implementation block\n@property (assign,nonatomic) long long firstItemRowIndex;                      //@synthesize firstItemRowIndex=_firstItemRowIndex - In the implementation block\n-(id)debugDescription;\n-(long long)rowCount;\n-(void)setRowCount:(long long)arg1 ;\n-(double)sectionHeight;\n-(void)setSectionHeight:(double)arg1 ;\n-(UIEdgeInsets)sectionSpacing;\n-(void)setSectionSpacing:(UIEdgeInsets)arg1 ;\n-(TVRowMetrics)compoundRowMetrics;\n-(void)setCompoundRowMetrics:(TVRowMetrics)arg1 ;\n-(double)showcaseSectionHeight;\n-(void)setShowcaseSectionHeight:(double)arg1 ;\n-(UIEdgeInsets)showcaseSectionSpacing;\n-(void)setShowcaseSectionSpacing:(UIEdgeInsets)arg1 ;\n-(long long)firstRowIndex;\n-(void)setFirstRowIndex:(long long)arg1 ;\n-(long long)firstItemRowIndex;\n-(void)setFirstItemRowIndex:(long long)arg1 ;\n@end\n\n",
  "<?php\n\n//use yii\\widgets\\ActiveForm;\nuse app\\models\\Maspackage;\nuse kartik\\date\\DatePicker;\nuse kartik\\form\\ActiveForm;\nuse kartik\\depdrop\\DepDrop;\nuse kartik\\select2\\Select2;\nuse yii\\helpers\\ArrayHelper;\nuse yii\\helpers\\Html;\nuse app\\models\\Config;\nuse yii\\helpers\\Url;\n\n/* @var $this yii\\web\\View */\n/* @var $model app\\modules\\promise\\models\\Promise */\n/* @var $form yii\\widgets\\ActiveForm */\n\n$Config = new Config();\n$yearUnit = array();\n$levy = array();\n$monthunit = array();\n$deposit = array();\n$dayInweek = array(\n    '0' => '\u0e08\u0e31\u0e19\u0e17\u0e23\u0e4c',\n    '1' => '\u0e2d\u0e31\u0e07\u0e04\u0e32\u0e23',\n    '2' => '\u0e1e\u0e38\u0e18',\n    '3' => '\u0e1e\u0e24\u0e2b\u0e31\u0e2a\u0e1a\u0e14\u0e35',\n    '4' => '\u0e27\u0e31\u0e19\u0e28\u0e38\u0e01\u0e23\u0e4c',\n    '5' => '\u0e27\u0e31\u0e19\u0e40\u0e2a\u0e32\u0e23\u0e4c',\n    '6' => '\u0e27\u0e31\u0e19\u0e2d\u0e32\u0e17\u0e34\u0e15\u0e22\u0e4c',\n);\nfor ($i = 1; $i <= 36; $i++) {\n    if ($i <= 5) {\n        $yearUnit[$i] = $i;\n    }\n    if ($i <= 5) {\n        $levy[$i] = $i;\n    }\n    if ($i >= 12) {\n        $monthunit[$i] = $i;\n    }\n    if ($i <= 12) {\n        $deposit[$i] = $i;\n    }\n}\n//echo print_r($levy);\n?>\n\n<div class=\"promise-form\">\n    <div class=\"row\">\n        <div class=\"col-md-6 col-lg-4\">\n            <div class=\"box box-success\" id=\"box-left\">\n                <div class=\"box-header\">\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e25\u0e39\u0e01\u0e04\u0e49\u0e32</div>\n                <div class=\"box-body\">\n                    <div class=\"list-group\">\n                        <div class=\"list-group-item\">\n                            \u0e40\u0e25\u0e02\u0e17\u0e35\u0e48\u0e43\u0e1a\u0e2d\u0e19\u0e38\u0e0d\u0e32\u0e15 <span class=\"badge\"><?php echo $customer['taxnumber']?></span>\n                        </div>\n                        <div class=\"list-group-item\">\n                            \u0e01\u0e25\u0e38\u0e48\u0e21\u0e25\u0e39\u0e01\u0e04\u0e49\u0e32\n                            <span class=\"badge\"><?php echo $customer['groupcus']?></span>\n                        </div>\n                        <div class=\"list-group-item\">\n                            \u0e1b\u0e23\u0e30\u0e40\u0e20\u0e17\u0e01\u0e32\u0e23\u0e08\u0e14\u0e17\u0e30\u0e40\u0e1a\u0e35\u0e22\u0e19 <span class=\"badge\"><?php echo \\app\\models\\Vattype::findOne($customer['typeregister'])['vattype']?></span>\n                        </div>\n                        <div class=\"list-group-item\">\n                            \u0e0a\u0e37\u0e48\u0e2d\u0e25\u0e39\u0e01\u0e04\u0e49\u0e32 <br/><?php echo $customer['company']?>\n                        </div>\n                        <div class=\"list-group-item\">\n                            \u0e40\u0e1a\u0e2d\u0e23\u0e4c\u0e42\u0e17\u0e23\u0e28\u0e31\u0e1e\u0e17\u0e4c <span class=\"badge\">\n                                <?php echo ($customer['tel'])? $customer['tel'] : \"\"?>\n                                &nbsp;<?php echo ($customer['telephone'])? $customer['telephone'] : \"\"?>\n                            </span>\n                        </div>\n                        <div class=\"list-group-item\">\n                            \u0e0a\u0e37\u0e48\u0e2d\u0e1c\u0e39\u0e49\u0e1b\u0e23\u0e30\u0e2a\u0e32\u0e19\u0e07\u0e32\u0e19 <span class=\"badge\"><?php echo $customer['manager']?></span>\n                        </div>\n                        <div class=\"list-group-item\">\n                            \u0e27\u0e31\u0e19\u0e17\u0e35\u0e48\u0e25\u0e07\u0e17\u0e30\u0e40\u0e1a\u0e35\u0e22\u0e19 <span class=\"badge\"><?php echo $Config->thaidate($customer['create_date'])?></span>\n                        </div>\n                        <hr/>\n                        <div class=\"list-group-item\">\n                            User \u0e1c\u0e39\u0e49\u0e23\u0e31\u0e1a\u0e1c\u0e34\u0e14\u0e0a\u0e2d\u0e1a <span class=\"badge\"><?php echo $customer['username']?></span>\n                        </div>\n                    </div>\n                    <div class=\"well text-danger\">\n                        *\u0e2a\u0e31\u0e0d\u0e0d\u0e32\u0e08\u0e30\u0e21\u0e35\u0e1c\u0e25\u0e01\u0e47\u0e15\u0e48\u0e2d\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e21\u0e35\u0e01\u0e32\u0e23\u0e2d\u0e31\u0e1e\u0e42\u0e2b\u0e25\u0e14\u0e44\u0e1f\u0e25\u0e4c\u0e2a\u0e31\u0e0d\u0e0d\u0e32\u0e17\u0e35\u0e48\u0e21\u0e35\u0e25\u0e32\u0e22\u0e21\u0e37\u0e2d\u0e0a\u0e37\u0e48\u0e2d\u0e17\u0e31\u0e49\u0e07 2 \u0e1d\u0e48\u0e32\u0e22\u0e40\u0e02\u0e49\u0e32\u0e2a\u0e39\u0e48\u0e23\u0e30\u0e1a\u0e1a\u0e41\u0e25\u0e49\u0e27\u0e40\u0e17\u0e48\u0e32\u0e19\u0e31\u0e49\u0e19\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-6 col-lg-8\">\n            <div class=\"box box-success\">\n                <div class=\"box-header\">\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e2a\u0e31\u0e0d\u0e0d\u0e32(<?php echo $customer['groupcus']?> <?php //echo $customer['grouptype']             ?>)</div>\n                <div class=\"box-body\"  id=\"box-right\" style=\" position: relative; overflow: auto;\">\n                    <div class=\"well\">\n                        <?php\n                        //$form = ActiveForm::begin();\n                        $form = ActiveForm::begin([\n                                    'type' => ActiveForm::TYPE_VERTICAL,\n                        ]);\n                       ?>\n                        <!--\n                            <div class=\"row\">\n                                <div class=\"col-md-12 col-lg-4\">\n                        <?php //$form->field($model, 'promisenumber')->textInput(['maxlength' => true])  ?>\n                                </div>\n                                <div class=\"col-md-12 col-lg-6\">\n                        <?php //$form->field($model, 'active')->dropDownList([1 => '\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19', 0 => '\u0e44\u0e21\u0e48\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19'], [], ['options' => ['onchange' => 'getrecivetype()']])  ?>\n                                </div>\n                            </div>\n                        -->\n                        <div class=\"row\">\n                            <div class=\"col-md-6 col-lg-5\">\n                                <?=\n                                $form->field($model, 'createat')->widget(DatePicker::classname(), ['language' => 'th', 'type' => DatePicker::TYPE_INPUT, 'pluginOptions' => [\n                                        'autoclose' => true,\n                                        'format' => 'yyyy-mm-dd',\n                                        'todayHighlight' => true,\n                                    ],\n                                    'options' => ['class' => 'form-control', 'autocomplete' => 'off']]);\n                               ?>\n                            </div>\n\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-6 col-lg-5\">\n                                <?=\n                                $form->field($model, 'promisedatebegin')->widget(DatePicker::classname(), ['language' => 'th', 'type' => DatePicker::TYPE_INPUT, 'pluginOptions' => [\n                                        'autoclose' => true,\n                                        'format' => 'yyyy-mm-dd',\n                                        'todayHighlight' => true,\n                                    ],\n                                    'options' => ['class' => 'form-control', 'autocomplete' => 'off']]);\n                               ?>\n                            </div>\n                            <div class=\"col-md-6 col-lg-5\">\n                                <?=\n                                $form->field($model, 'promisedateend')->widget(DatePicker::classname(), ['language' => 'th', 'type' => DatePicker::TYPE_INPUT, 'pluginOptions' => [\n                                        'autoclose' => true,\n                                        'format' => 'yyyy-mm-dd',\n                                        'todayHighlight' => true,\n                                    ], 'options' => ['class' => 'form-control', 'autocomplete' => 'off']]);\n                               ?>\n                            </div>\n                        </div>\n\n                        <div class=\"row\">\n                            <div class=\"col-md-4 col-lg-5\">\n                                <?php\n                                $sqlPackage = \"select * from maspackage WHERE id!= '3'\";\n                                $listPackage = ArrayHelper::map(Yii::$",
  "from cocomoui import Ui_Dialog\nfrom PyQt5 import QtWidgets\n\nif __name__ == \"__main__\":\n    import sys\n    app = QtWidgets.QApplication(sys.argv)\n    app.setStyle(\"Cleanlooks\")\n    Dialog = QtWidgets.QDialog()\n    ui = Ui_Dialog()\n    ui.setupUi(Dialog)\n    Dialog.show()\n    sys.exit(app.exec_())\n",
  "from setuptools import find_packages, setup\n\nsetup(\n    name='src',\n    packages=find_packages(),\n    version='0.1.0',\n    description='To build a classification methodology to predict the quality of wafer sensors based on the given training data',\n    author='Milan Varghese George',\n    license='MIT',\n)\n",
  "/*!\n * Start Bootstrap - Business Casual v5.0.10 (https://startbootstrap.com/themes/business-casual)\n * Copyright 2013-2020 Start Bootstrap\n * Licensed under MIT (https://github.com/StartBootstrap/startbootstrap-business-casual/blob/master/LICENSE)\n */body{font-family:Lora;background-color:white;background-attachment:fixed;background-position:center;background-size:cover}h1,h2,h3,h4,h5,h6{font-family:Raleway}p{line-height:1.75}ol{font-size:9px;line-height:1}.text-faded{color:rgba(255,255,255,.3)}.site-heading{margin-top:5rem;margin-bottom:5rem;text-transform:uppercase;line-height:1;font-family:Raleway}.site-heading.site-heading-upper{color:rgba(47, 23, 15, 0.9);display:block;font-size:2rem;font-weight:800}.site-heading.site-heading-lower{color:#b34700;font-size:5rem;font-weight:100;line-height:4rem}.page-section{margin-top:5rem;margin-bottom:5rem}.section-heading{text-transform:uppercase}.section-heading.section-heading-upper{display:block;font-size:1rem;font-weight:700}.section-heading.section-heading-lower{display:block;font-size:2rem;font-weight:100}.bg-faded{background-color:rgba(255,255,255,.85)}#mainNav{background-color:#b34700;font-family:Raleway}#mainNav.navbar-brand{color:#e6a756}#mainNav.navbar-nav.nav-item.nav-link{color:rgba(255,255,255,.7);font-weight:800}#mainNav.navbar-nav.nav-item.active.nav-link{color:#e6a756}@media (min-width:992px){#mainNav.navbar-nav.nav-item.nav-link{font-size:.9rem}#mainNav.navbar-nav.nav-item.nav-link:hover{color:rgba(255,255,255,.4)}#mainNav.navbar-nav.nav-item.active.nav-link:hover{color:#e6a756}}.btn-xl{font-weight:700;font-size:.8rem;padding-top:1.5rem;padding-bottom:1.5rem;padding-left:2rem;padding-right:2rem}.intro{position:relative}@media (min-width:992px){.intro.intro-img{width:75%;float:right}.intro.intro-text{left:0;width:60%;margin-top:3rem;position:absolute}.intro.intro-text.intro-button{width:100%;left:0;position:absolute;bottom:-2rem}.intro.intro-baby-text{width:45%;5rem;position:absolute;}.intro.intro-baby-img{max-width:50%;width:75%;float:right;}}@media (min-width:1200px){.intro.intro-text{width:40%}}.cta{padding-top:5rem;padding-bottom:5rem;background-color:rgba(230,167,86,.9)}.cta.cta-inner{position:relative;padding:3rem;margin:.5rem;background-color:rgba(255,255,255,.85)}.cta.cta-inner:before{border-radius:.5rem;content:'';position:absolute;top:-.5rem;bottom:-.5rem;left:-.5rem;right:-.5rem;border:.25rem solid rgba(255,255,255,.85);z-index:-1}@media (min-width:992px){.about-heading.about-heading-img{max-width:50%;width:75%;float:left;}.about-heading.about-heading-content{width:50%;margin-top:0rem;float:right;}.about.about-img {max-width:50%;width:75%;float:right;}.about.about-text{width:35%;margin-top:1;5rem;position:absolute;}.about.about-row{display:flex;}.about.about-column{flex:50%;}@media (min-width:992px){.product-item.product-item-title{position:relative;z-index:1;margin-bottom:-3rem}.product-item.product-item-img{position:relative;z-index:0;max-width:30vw}.product-item.product-item-description{position:relative;z-index:1;margin-top:-3rem;max-width:70vw}}@media (min-width:992px){.contact.contact-img{width:100%}@media (min-width:992px){.footer{background-color:rgba(47,23,15,.9)}.text-primary{color:#e6a756!important}.bg-primary{background-color:#e6a756!important}.btn{box-shadow:0 3px 3px 0 rgba(33,37,41,.1)}.btn-primary{background-color:#e6a756;border-color:#e6a756}.btn-primary:active,.btn-primary:focus,.btn-primary:hover{background-color:#df902a;border-color:#df902a}.font-weight-light{font-weight:100!important}\n",
  "<!DOCTYPE html>\n<html lang=\"en-US\">\n<head>\n\t<meta name=\"msvalidate.01\" content=\"095D4FA2E4824BED6B22102FB8CE263E\" />\n\t<meta name=\"yandex-verification\" content=\"e9a4e56df6df93bd\" />\n\t<!-- Global site tag (gtag.js) - Google Analytics -->\n\t<script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-109518968-1\"></script>\n\t<script>\n\t  window.dataLayer = window.dataLayer || [];\n\t  function gtag(){dataLayer.push(arguments);}\n\t  gtag('js', new Date());\n\n\t  gtag('config', 'UA-109518968-1');\n\t</script>\n\t<meta charset=\"UTF-8\">\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t<meta content=\"#494949\" name=\"theme-color\">\n\t<link rel=\"profile\" href=\"http://gmpg.org/xfn/11\">\n\t<title>Mastering Python Regular Expressions &#8211; Technology and Engineering eBooks</title>\n<link rel='dns-prefetch' href='//www.google.com' />\n<link rel='dns-prefetch' href='//it-eb.com' />\n<link rel='dns-prefetch' href='//fonts.googleapis.com' />\n<link rel='dns-prefetch' href='//s.w.org' />\n<link rel=\"alternate\" type=\"application/rss+xml\" title=\"Technology and Engineering eBooks &raquo; Feed\" href=\"https://it-eb.com/feed/\" />\n<link rel=\"alternate\" type=\"application/rss+xml\" title=\"Technology and Engineering eBooks &raquo; Comments Feed\" href=\"https://it-eb.com/comments/feed/\" />\n<link rel=\"alternate\" type=\"application/rss+xml\" title=\"Technology and Engineering eBooks &raquo; Mastering Python Regular Expressions Comments Feed\" href=\"https://it-eb.com/mastering-python-regular-expressions-felix-2658/feed/\" />\n\t\t<script type=\"text/javascript\">\n\t\t\twindow._wpemojiSettings = {\"baseUrl\":\"https:\\/\\/s.w.org\\/images\\/core\\/emoji\\/2.3\\/72x72\\/\",\"ext\":\".png\",\"svgUrl\":\"https:\\/\\/s.w.org\\/images\\/core\\/emoji\\/2.3\\/svg\\/\",\"svgExt\":\".svg\",\"source\":{\"concatemoji\":\"http:\\/\\/it-eb.com\\/wp-includes\\/js\\/wp-emoji-release.min.js?ver=4.8.2\"}};\n\t\t\t!function(a,b,c){function d(a){var b,c,d,e,f=String.fromCharCode;if(!k||!k.fillText)return!1;switch(k.clearRect(0,0,j.width,j.height),k.textBaseline=\"top\",k.font=\"600 32px Arial\",a){case\"flag\":return k.fillText(f(55356,56826,55356,56819),0,0),b=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,56826,8203,55356,56819),0,0),c=j.toDataURL(),b!==c&&(k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447),0,0),b=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447),0,0),c=j.toDataURL(),b!==c);case\"emoji4\":return k.fillText(f(55358,56794,8205,9794,65039),0,0),d=j.toDataURL(),k.clearRect(0,0,j.width,j.height),k.fillText(f(55358,56794,8203,9794,65039),0,0),e=j.toDataURL(),d!==e}return!1}function e(a){var c=b.createElement(\"script\");c.src=a,c.defer=c.type=\"text/javascript\",b.getElementsByTagName(\"head\")[0].appendChild(c)}var f,g,h,i,j=b.createElement(\"canvas\"),k=j.getContext&&j.getContext(\"2d\");for(i=Array(\"flag\",\"emoji4\"),c.supports={everything:!0,everythingExceptFlag:!0},h=0;h<i.length;h++)c.supports[i[h]]=d(i[h]),c.supports.everything=c.supports.everything&&c.supports[i[h]],\"flag\"!==i[h]&&(c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&c.supports[i[h]]);c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&!c.supports.flag,c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.everything||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener(\"DOMContentLoaded\",g,!1),a.addEventListener(\"load\",g,!1)):(a.attachEvent(\"onload\",g),b.attachEvent(\"onreadystatechange\",function(){\"complete\"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);\n\t\t</script>\n\t\t<style type=\"text/css\">\nimg.wp-smiley,\nimg.emoji {\n\tdisplay: inline!important;\n\tborder: none!important;\n\tbox-shadow: none!important;\n\theight: 1em!important;\n\twidth: 1em!important;\n\tmargin: 0.07em!important;\n\tvertical-align: -0.1em!important;\n\tbackground: none!important;\n\tpadding: 0!important;\n}\n</style>\n<link rel='stylesheet' id='cd-style-css'  href='http://it-eb.com/wp-content/themes/coldbox/style.css?ver=4.8.2' type='text/css' media='all' />\n<style id='cd-style-inline-css' type='text/css'>\n.prev.post-thumbnail{background-image:url(\"https://it-eb.com/covers/b3/b38d29bd6966ddbe228d9eff27abdb23.jpg\")}\n.next.post-thumbnail{background-image:url(\"https://it-eb.com/covers/6b/6bd39a70da0ced6440390be3d9f805ef.jpg\")}\nbody { font-family: Source Sans Pro, Arial, sans-serif; }\n.entry a,.title-box a:hover,.post-meta a:hover,.post-meta.content-box a:hover,.post-btm-tags a:hover, p.post-btm-cats a:hover,.related-posts.post-category a,.related-posts.post:hover.post-title,.post-pages,.grid-view.post-inner a:hover.post-title,.standard-view.post-title:hover, ul.page-numbers,.widget #wp-calendar a,.widget.widgets-list-layout li:hover a, #comment-list.comment-author.fn a, #respond.logged-in-as a:hover,.comment-pages,.comment-pages a,.comment-pages span,.comment-body a,.comment-tabmenu.active > a,.standard-view.post-inner:hover.post-title,.widget.textwidget",
  "# Pacman\nPacman game\n\n\nlink: https://alejandro19-19.github.io/Pacman/index.html\n\nNota: solo disponible para pc\n",
  "---\r\nlayout:     post\r\ntitle:      \"\u5e74\u5ea6\u603b\u7ed3 | \u613f\u672a\u6765\u5e73\u51e1\u7684\u6bcf\u4e00\u5929\u90fd\u6709\u503c\u5f97\u56de\u5fc6\u7684\u77ac\u95f4\"\r\nsubtitle:   \"\u5e74\u5ea6\u603b\u7ed3\"\r\ndate:       2019-02-20 24:00:00\r\nauthor:     \"Lyle\"\r\nheader-img: \"img/post-bg-ndzj.jpg\"\r\nheader-mask: 0.5\r\ncatalog:     true\r\ntags:\r\n    - \u603b\u7ed3\r\n    - RSS\r\n    - \u5199\u4f5c\r\n    - \u8bbe\u8ba1\r\n    - \u5b66\u4e60\r\n---\r\n\r\n## 2018\u5e74\u5e74\u7ec8\u603b\u7ed3\r\n\r\n2018\u5e74\uff0c\u4ed4\u7ec6\u60f3\u60f3\u53ef\u80fd\u662f\u65e0\u6240\u4e8b\u4e8b\u800c\u53c8\u5f88\u4e27\u7684\u4e00\u5e74\u3002\u6709\u4e9b\u9009\u62e9\u51b3\u5b9a\u4e86\u4ee5\u540e\u7684\u65b9\u5411\uff0c\u4f46\u4e5f\u53ea\u6709\u5728\u7ecf\u4e45\u4e4b\u540e\u624d\u80fd\u8d77\u5316\u5b66\u53cd\u5e94\uff0c\u660e\u767d\u5f53\u521d\u7684\u51b3\u5b9a\u662f\u5426\u6b63\u786e\u3002\r\n\r\n> \u6bcf\u4e00\u4e2a\u6289\u62e9\u90fd\u662f\u4e00\u79cd\u4ea4\u6362\uff0c\u62ff\u4f60\u73b0\u5728\u613f\u610f\u653e\u5f03\u7684\u4e1c\u897f\uff0c\u4ea4\u6362\u4f60\u89c9\u5f97\u66f4\u91cd\u8981\u7684\u4e1c\u897f\u3002\r\n\r\n2018\u5e74\u4e0a\u534a\u5e74\u5f88\u4e27\uff0c\u56e0\u4e3a\u4e00\u4e9b\u5fc3\u6001\u7684\u539f\u56e0\uff0c\u4ece\u5fc3\u5e95\u5f00\u59cb\u6392\u65a5\u975e\u81ea\u7531\u611f\u4ee5\u53ca\u9893\u5e9f\u3002\u4e0b\u534a\u5e74\uff0c\u6362\u4e86\u65b0\u7684\u57ce\u5e02\uff0c\u5f00\u542f\u4e86\u65b0\u7684\u65c5\u9014\u3002\u8fd9\u53ef\u80fd\u770b\u8d77\u6765\u7b97\u662f\u4e00\u79cd\u9003\u907f\uff0c\u6211\u60f3\u4e5f\u8bb8\u662f\uff0c\u4f46\u66f4\u591a\u7684\u5e94\u8be5\u662f\u5f53\u4e0b\u73b0\u72b6\u7684\u4e0d\u6ee1\u3002\u5e0c\u671b\u9760\u8fd1\u90a3\u6ee1\u5929\u7684\u661f\u8fb0\uff0c\u627e\u5230\u81ea\u5df1\u6240\u8ffd\u6c42\u7684\u76ee\u6807\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u98ce\u96e8\u517c\u7a0b\u3002\r\n\r\n\u6bd5\u7adf\u6211\u4eec\u6240\u89c1\u7684\uff0c\u90fd\u662f\u5149\u554a\u3002\r\n\r\n### \u4ea7\u54c1\r\n\r\n5\u6708\u521d\u5728\u82b1\u8d39\u8fd1\u4e24\u5e74\u5fc3\u8840\u7684\u4ea7\u54c1\u4e0a\u67b6\u4e4b\u540e\uff0c\u89c9\u5f97\u7ec8\u4e8e\u5b8c\u6210\u4e86\u81ea\u5df1\u5386\u53f2\u9636\u6bb5\u7684\u4f7f\u547d\u3002\u671f\u671b\u5f00\u542f\u65b0\u7684\u5f81\u9014\u3002\u5f88\u5e78\u8fd0\u5728\u6bd5\u4e1a\u540e\u4ee5\u4ea7\u54c1\u5c97\u8fdb\u5165\u8fd9\u5bb6\u516c\u53f8\uff0c\u4ece\u800c\u5728\u540e\u7eed\u9010\u6e10\u7684\u5bf9\u4ea7\u54c1\u5c97\u4f4d\u6709\u4e86\u66f4\u6df1\u7684\u7406\u89e3\uff0c\u4e5f\u8ba4\u8bc6\u4e86\u5f88\u591a\u597d\u73a9\u6709\u8da3\u7684\u4eba\u3002\u6709\u4eba\u8bf4\u5de5\u4f5c\u5c31\u662f\u521b\u4e1a\uff0c\u6211\u89c9\u5f97\u90a3\u65f6\u5019\u7684\u6211\u5c31\u662f\u7684\u3002\u56e0\u4e3a\u5f53\u65f6\u7684\u6211\u786e\u5b9e\u662f\u5728\u8fd9\u4e48\u6267\u884c\u4e0b\u53bb\u7684\u3002\u8d77\u65e9\u8d2a\u9ed1\uff0c\u5468\u672b\u8fd1\u4e4e\u65e0\u4f11\u7684\u5168\u5929\u5019\u4e3a\u672a\u6765\u7684\u4ea7\u54c1\u804c\u4e1a\u89c4\u5212\u505a\u51c6\u5907\uff0c\u5e0c\u671b\u5728\u4ea7\u54c1\u7684\u6280\u80fd\u4e0a\u6709\u6240\u6210\u957f\u3002\u542f\u793a\u4e00\u4e2a\u65f6\u671f\u7684\u52aa\u529b\u4e5f\u8bb8\u5f53\u65f6\u672a\u80fd\u76f4\u63a5\u770b\u7684\u5230\uff0c\u4f46\u5b83\u5c31\u50cf\u9152\u4e00\u6837\uff0c\u65f6\u95f4\u8d8a\u4e45\u915d\u917f\u7684\u8d8a\u9999\u3002\u4eba\u5728\u6210\u957f\u7684\u9636\u6bb5\u91cc\uff0c\u6bcf\u4e2a\u9636\u6bb5\u90fd\u9700\u8981\u6709\u81ea\u5df1\u4e3a\u4e4b\u9a71\u52a8\u7684\u52a8\u529b\uff0c\u65e0\u8bba\u7231\u60c5\u4ea6\u6216\u7406\u60f3\u3002\r\n\r\n\u4e94\u4e00\u8282\u5047\u65e5\u540e\u79bb\u5f00\u4e86\u8001\u4e3b\u987e\uff0c\u540c\u65f6\u4e5f\u79bb\u5f00\u4e86\u6b66\u6c49\uff0c\u90a3\u4e2a\u6211\u751f\u6d3b\u4e86\u4e94\u5e74\u7684\u57ce\u5e02\uff0c\u524d\u5f80\u4e00\u4e2a\u964c\u751f\u7684\u57ce\u5e02\u3002\u6211\u60f3\u6700\u521d\u7684\u521d\u8877\u53ef\u80fd\u771f\u7684\u662f\u56e0\u4e3a\u8fd9\u4e2a\u57ce\u5e02\u771f\u7684\u6709\u5f88\u591a\u5f88\u591a\u6709\u610f\u601d\u7684\u4eba\u554a\uff0c\u770b\u5230\u4ed6\u4eec\u4f60\u5c31\u4f1a\u4e0d\u81ea\u4e3b\u7684\u60f3\u8981\u9760\u8fd1\u4ed6\u4eec\u3002\u5c31\u50cf\u5728\u4f60\u773c\u91cc\u661f\u661f\u4e00\u6837\uff0c\u5c31\u90a3\u4e48\u95ea\u95ea\u53d1\u5149\u7684\u6bcf\u5929\u6643\u554a\u6643\u3002\r\n\r\n\u676d\u5dde\u662f\u4e2a\u4e0d\u9519\u7684\u57ce\u5e02\uff0c\u90a3\u662f\u4e00\u79cd\u5728\u9aa8\u5b50\u91cc\u624d\u4f1a\u6709\u7684\u6587\u5316\u6c1b\u56f4\uff0c\u9a71\u52a8\u7740\u4f60\u5411\u524d\u3002\u65b0\u5c97\u4f4d\u65b0\u7684\u6311\u6218\uff0c\u8fdb\u519b\u7535\u5546\u884c\u4e1a\uff0c\u4e00\u4e2a\u964c\u751f\u4f46\u53c8\u503c\u5f97\u671f\u5f85\u7684\u884c\u4e1a\u3002\r\n\r\n### \u8bbe\u8ba1\r\n\r\n\u5bf9\u8bbe\u8ba1\u56e0\u4e3a\u8ba1\u5212\u7684\u9a71\u52a8\uff0c\u518d\u4e0d\u6298\u817e\u5c31\u8001\u4e86\uff0c\u55ef\u3002\u4e8e\u662f\u5f00\u59cb\u4e86\u5c1d\u8bd5\u8bbe\u8ba1\u9886\u57df\u7684\u9a71\u52a8\uff0c\u5c31\u8fd9\u4e48\u7b80\u5355\uff0c\u5f88\u591a\u4e8b\u60c5\u7684\u539f\u52a8\u529b\u5c31\u662f\u8fd9\u4e48\u7b80\u5355\uff0c\u4e0d\u8fc7\u8bbe\u8ba1\u7684\u8fd8\u4e0d\u591f\u597d\uff0c\u540e\u8fb9\u8fd8\u9700\u8981\u518d\u591a\u5c1d\u8bd5\u7ec3\u4e60\uff0c\u4e4b\u524d\u66f4\u591a\u7684\u662f\u4f7f\u7528\u539f\u578b\u5de5\u5177\u8fdb\u884c\u4ea7\u54c1\u7684\u8bbe\u8ba1\uff0c\u4e4b\u540e\u4e0d\u65ad\u7d2f\u8ba1\u5bf9\u4ea7\u54c1\u7684\u8bbe\u8ba1\u611f\uff0c\u6253\u7b97\u81ea\u5df1\u542f\u52a8\u53bb\u5c1d\u8bd5\u505a\u505a\u8bbe\u8ba1\uff0c\u5e0c\u671b\u81ea\u5df1\u6709\u4e2a\u804c\u4e1a\u4e0a\u7684\u80fd\u6709\u6240\u8fdb\u6b65\u3002\r\n\r\n- **Weather**\r\n\r\n![](https://i.loli.net/2019/03/16/5c8cb6e245df0.jpg)\r\n\r\n- **Book**\r\n\r\n![](https://i.loli.net/2019/03/16/5c8cb979ddc1d.png)\r\n\r\n### \u6280\u80fd\r\n\r\n- **\u526a\u8f91**\r\n\r\n\u5c1d\u8bd5\u8fc7\u4e00\u6b21\u526a\u8f91\u7684\u539f\u56e0\u662f\u610f\u5916\u9a71\u52a8\uff0c\u56e0\u4e3a\u6709\u5929\u542c\u5230\u4e86\u4e00\u9996\u5f88\u597d\u542c\u7684\u6b4c\uff0c\u800c\u521a\u597d\u4e5f\u6709\u4e00\u90e8\u5f88\u559c\u6b22\u7684\u52a8\u6f2b\u3002\u4e8e\u662f\uff0c\u5e72\u67f4\u70c8\u706b\uff1f\u4e00\u53d1\u4e0d\u53ef\u6536\u62fe\u3002\u964c\u751f\u7684\u5916\u5730\u53ea\u6709\u4e00\u4e2a\u4eba\u7684\u65f6\u5019\u4f1a\u611f\u89c9\u5206\u5916\u5b64\u72ec\uff0c\u55ef\uff0c\u90a3\u4e9b\u5c0f\u4f19\u4f34\u4eec\u2026\u2026\r\n\r\n[\u89c6\u9891\u5730\u5740](https://www.bilibili.com/video/av45300802/)\r\n\r\n- **RSS**\r\n\r\n\u4f5c\u4e3a\u4e92\u8054\u7f51\u4eba\uff0c\u5c24\u5176\u662f\u4ea7\u54c1\u7ecf\u7406\u9700\u8981\u65f6\u523b\u5173\u6ce8\u4e92\u8054\u7f51\u52a8\u6001\u3002\u5728\u6700\u521d\u9009\u62e9Inoreader\uff0c\u4f46\u4e3a\u975e\u4ed8\u8d39\u7528\u6237\uff0c\u5e7f\u544a\u9891\u7e41\u663e\u793a\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u7ec8\u9009\u62e9\u653e\u5f03\u3002\u5b9e\u9645\u4e0a\u5176\u66f4\u65b0\u901f\u5ea6\u548c\u8bbe\u7f6e\u5bf9\u7528\u6237\u8fd8\u662f\u5f88\u53cb\u597d\u7684\uff0c\u5982\u679c\u611f\u5174\u8da3\u7684\u5c0f\u4f19\u4f34\u53ef\u4ee5\u5c1d\u8bd5\u3002\u4f5c\u4e3a\u7b97\u662f RSS \u7684\u91cd\u5ea6\u7528\u6237\uff0c\u51e0\u5e74\u6765\u4e00\u76f4\u575a\u6301\u628a RSS \u4f5c\u4e3a\u81ea\u5df1\u6700\u91cd\u8981\u7684\u4fe1\u606f\u83b7\u53d6\u6765\u6e90\u3002App Store \u4e0a\u4e3b\u6d41\u7684 RSS \u5ba2\u6237\u7aef\u5de5\u5177\uff0c\u6211\u57fa\u672c\u90fd\u5c1d\u8bd5\u8fc7\u3002\u540e\u6765\u9009\u62e9\u4e86feedly\u4f5c\u4e3a\u4e3b\u529b\u7684\u9009\u62e9\uff0c\u4f46\u56e0\u4e3a\u67d0\u4e00\u523b\u610f\u5916\u7684feedly\u8d26\u53f7\u65e0\u6cd5\u767b\u9646Reeder\uff0c\u88ab\u8feb\u9009\u62e9\u5176\u4ed6\u7684\u65b9\u5f0f\u3002\u4f46\u4e5f\u662f\u56e0\u4e3a\u8fd9\u4e00\u6b21\u7684\u5c1d\u8bd5\uff0c\u662f\u5f88\u5e78\u8fd0\u7684\u9009\u62e9\u3002\u6240\u4ee5\u751f\u6d3b\u5c31\u662f\u8fd9\u4e48\u591a\u610f\u5916\u7ec4\u6210\u7684\uff0c\u4f60\u6c38\u8fdc\u4e0d\u77e5\u9053\u4e0b\u4e00\u523b\u4f1a\u7ed9\u4f60\u5e26\u6765\u600e\u6837\u7684\u60ca\u559c\u3002\r\n\r\n\u65b9\u6848\uff1aDocker \u4e0b\u81ea\u5efa Tiny Tiny RSS\uff0c\u76ee\u524d\u7b26\u5408\u5f53\u524d\u9700\u6c42\uff0c\u5982\u679c\u6709\u5c0f\u4f19\u4f34\u611f\u5174\u8da3\uff0c\u540e\u7eed\u4f1a\u51fa\u4e00\u7bc7\u6587\u7ae0\u8bb2\u4e00\u4e0b\u642d\u5efa\u7684\u8fc7\u7a0b\u3002\r\n\r\n### \u8db3\u8ff9\r\n\r\n**\u676d\u5dde**\r\n\r\n**\u5e7f\u5dde**\r\n\r\n**\u4e0a\u6d77**\r\n\r\n\u56e0\u7f18\u9645\u4f1a\u7684\u8d70\u8d70\u505c\u505c\uff0c\u4eca\u5e74\u53cd\u800c\u662f\u6211\u53bb\u8fc7\u6700\u591a\u5730\u65b9\u7684\u4e00\u5e74\u3002\u8bd7\u60c5\u753b\u610f\u7684\u676d\u5dde\u897f\u6e56\uff0c\u7f8e\u5473\u53ef\u53e3\u7684\u5e7f\u5dde\u7f8e\u98df\uff0c\u8fd8\u6709\u4e0d\u9760\u8c31\u9762\u57fa\u7684\u4e0a\u6d77\uff0c\u5982\u679c\u4e0b\u6b21\u9762\u57fa\uff0c\u6211\u4e00\u5b9a\u9009\u62e9\u4e0b\u5348\u548c\u591c\u95f4\u5728\u51fa\u95e8\u7ea6\uff0c\u57fa\u53cb\u7684\u751f\u6d3b\u4f5c\u606f\u592a\u4e0d\u89c4\u5f8b",
  "html {\n\tfont-size: 18px;\n}\n\nbody {\n\tfont-size: 16px;\n}\n\n.ui.main.container {\n\tmargin-top: 7em;\n\tmargin-bottom: 5em;\n}\n\n.issue.segment.result {\n\tmargin-left: 30px;\n}\n\nol, ul, li {\n\tmargin-bottom: 6px;\n}\n\n.ui.statistics > a >.statistic {\n\tdisplay: inline-flex;\n\tflex: 0 1 auto;\n\tflex-direction: column;\n\tmargin: 0 1.5em 2em;\n}\n",
  "export type HistoryScore = {\n  mode: string;\n  score: number;\n};\n",
  "'use strict';\nimport DesafiosAprobadosComponent from './desafiosAprobados.component';\nlet routes = function($stateProvider) {\n    'ngInject';\n    $stateProvider\n     .state('social.desafiosAprobados', {\n        url: '/desafiosAprobados',\n        template: '<desafios-aprobados></desafios-aprobados>'\n      });\n  }\n  \n  export default angular.module('robotica.social.desafiosAprobados', [])\n                       .config(routes)\n                       .component('desafiosAprobados', {\n                            template: require('./desafiosAprobados.html'),\n                            controller: DesafiosAprobadosComponent\n                        })\n                       .name;",
  "import React from \"react\";\nimport { Icon } from \"../UI/Icon\";\n\nconst VoteButton = props => (\n  <button {...props}>\n    Vote\n    <span />\n  </button>\n);\n\nexport const Question = ({\n  onVote,\n  author,\n  question,\n  answer,\n  children,\n  icon\n}) => {\n  const answerOptionOne = answer && answer.answer === \"optionOne\";\n  const answerOptionTwo = answer && answer.answer === \"optionTwo\";\n  const didAnswer = answerOptionOne || answerOptionTwo;\n\n  const total = question\n   ? question.optionOne.votes.length + question.optionTwo.votes.length\n    : 0;\n\n  return (\n    <>\n      <div className=\"ask\">\n        <h1>Would You Rather...</h1>\n        <hr />\n        <Icon icon={author? author.avatarURL : icon} />\n        {children || (\n          <ol className=\"choices\">\n            <li>\n              {question.optionOne.text}\n              {didAnswer? (\n                <button\n                  className={`${answerOptionOne && \"answered\"} button primary`}\n                  disabled\n                >\n                  {question.optionOne.votes.length} / {total} ({\" \"}\n                  {parseInt((question.optionOne.votes.length / total) * 100)} %)\n                </button>\n              ) : (\n                <VoteButton\n                  className={`button primary`}\n                  onClick={onVote(\"optionOne\")}\n                />\n              )}\n            </li>\n            <li className=\"vs\">VS</li>\n            <li>\n              {question.optionTwo.text}\n              {didAnswer? (\n                <button\n                  className={`${answerOptionTwo && \"answered\"} button primary`}\n                  disabled\n                >\n                  {question.optionTwo.votes.length} / {total} ({\" \"}\n                  {parseInt((question.optionTwo.votes.length / total) * 100)} %)\n                </button>\n              ) : (\n                <VoteButton\n                  className={`button primary`}\n                  onClick={onVote(\"optionTwo\")}\n                />\n              )}\n            </li>\n          </ol>\n        )}\n      </div>\n    </>\n  );\n};\n",
  "# operation\n\u62d6\u62fd\u5efa\u7ad9\u9879\u76ee\n\n\u9879\u76ee\u4f9d\u8d56\n\nnode\u73af\u5883\nless\nmysql\u6570\u636e\u5e93\n\n\u5b89\u88c5mysql \u767b\u5f55\u4fee\u6539\u5bc6\u7801\u4e3a123456\n\n\u5efa\u4e00\u4e2aoperation\u6570\u636e\u5e93\n\nCREATE TABLE pages\n(\n  id              INT unsigned NOT NULL AUTO_INCREMENT, # Unique ID for the record\n\n  name            VARCHAR(128) NOT NULL,                # Name of the page\n\n  description           VARCHAR(256) NOT NULL,                # description of the page\n\n  config           LONGTEXT NOT NULL,                # config of the page\n\n  PRIMARY KEY     (id)                                  # Make the id the primary key\n\n);\n\n\nINSERT INTO pages ( name, description, config) VALUES\n\n  ( 'page1', 'page1', '' );\n\n\u7ec4\u4ef6\u7684\u5f00\u53d1\u7528npm start\u542f\u52a8\u9879\u76ee\n\n\u5f00\u53d1\u5b8c\u7ec4\u4ef6\u7528npm run deploy\u6253\u5305\n\n\u9879\u76ee\u7684\u90e8\u7f72\u7528npm run web",
  "<?php\n\n/**\n * The Lumen framework is open-sourced software licensed under the [MIT license](https://opensource.org/licenses/MIT).\n */\n\nnamespace App;\n\nuse Illuminate\\Auth\\Authenticatable;\nuse Illuminate\\Contracts\\Auth\\Access\\Authorizable as AuthorizableContract;\nuse Illuminate\\Contracts\\Auth\\Authenticatable as AuthenticatableContract;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Laravel\\Lumen\\Auth\\Authorizable;\n\nclass User extends Model implements AuthenticatableContract, AuthorizableContract\n{\n    use Authenticatable, Authorizable;\n\n    /**\n     * The attributes that are mass assignable.\n     *\n     * @var array\n     */\n    protected $fillable = [\n        'name', 'email',\n    ];\n\n    /**\n     * The attributes excluded from the model's JSON form.\n     *\n     * @var array\n     */\n    protected $hidden = [\n        'password',\n    ];\n}\n",
  "\ufeffusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class CameraFollowPlayer : MonoBehaviour\n{\n    [Header(\"Base Stats\")]\n    public float followSpeed = 10f;\n    public float lookSpeed = 10f;\n    public Vector3 cameraOffset;\n\n    [Header(\"Player\")]\n    public Transform player;\n\n    private Vector3 lastPlayerPosition;\n\n    /// <summary>\n    /// Start is called on the frame when a script is enabled just before\n    /// any of the Update methods is called the first time.\n    /// </summary>\n    void Start() => lastPlayerPosition = player.position;\n\n    /// <summary>\n    /// This function is called every fixed framerate frame, if the MonoBehaviour is enabled.\n    /// </summary>\n    void FixedUpdate()\n    {\n        LookAtTarget();\n        MoveToTarget();\n\n        UpdateLastPlayerPosition();\n    }\n\n    private void LookAtTarget()\n    {\n        Vector3 targetPosition = player!= null? player.position : lastPlayerPosition;\n\n        Vector3 lookDirection = targetPosition - transform.position;\n        Quaternion rotation = Quaternion.LookRotation(lookDirection, Vector3.up);\n\n        transform.rotation = Quaternion.Lerp(transform.rotation, rotation, lookSpeed * Time.deltaTime);\n    }\n\n    private void MoveToTarget()\n    {\n        // Player is NULL only when destroyed\n        Vector3 targetVector = lastPlayerPosition;\n        Vector3 forwardVector = Vector3.forward;\n        Vector3 rightVector = Vector3.right;\n        Vector3 upVector = Vector3.up;\n\n        if (player!= null)\n        {\n            targetVector = player.position;\n            forwardVector = player.forward;\n            rightVector = player.right;\n            upVector = player.up;\n        }\n\n        Vector3 targetPosition = targetVector +\n            forwardVector * cameraOffset.z +\n            rightVector * cameraOffset.x +\n            upVector * cameraOffset.y;\n\n        transform.position = Vector3.Lerp(transform.position, targetPosition, followSpeed * Time.deltaTime);\n    }\n\n    private void UpdateLastPlayerPosition()\n    {\n        if (player!= null)\n            lastPlayerPosition = player.position;\n    }\n}\n",
  "#ifndef STAN_MATH_PRIM_PROB_GAUSSIAN_DLM_OBS_LPDF_HPP\n#define STAN_MATH_PRIM_PROB_GAUSSIAN_DLM_OBS_LPDF_HPP\n\n#include <stan/math/prim/meta.hpp>\n#include <stan/math/prim/err.hpp>\n#include <stan/math/prim/fun/add.hpp>\n#include <stan/math/prim/fun/dot_product.hpp>\n#include <stan/math/prim/fun/inverse_spd.hpp>\n#include <stan/math/prim/fun/log.hpp>\n#include <stan/math/prim/fun/log_determinant_spd.hpp>\n#include <stan/math/prim/fun/multiply.hpp>\n#include <stan/math/prim/fun/quad_form.hpp>\n#include <stan/math/prim/fun/quad_form_sym.hpp>\n#include <stan/math/prim/fun/square.hpp>\n#include <stan/math/prim/fun/subtract.hpp>\n#include <stan/math/prim/fun/tcrossprod.hpp>\n#include <stan/math/prim/fun/to_ref.hpp>\n#include <stan/math/prim/fun/trace_quad_form.hpp>\n#include <stan/math/prim/fun/transpose.hpp>\n#include <stan/math/prim/fun/constants.hpp>\n#include <cmath>\n\n/*\n  TODO: time-varying system matrices\n  TODO: use sequential processing even for non-diagonal obs\n  covariance.\n  TODO: add constant terms in observation.\n*/\nnamespace stan {\nnamespace math {\n/** \\ingroup multivar_dists\n * The log of a Gaussian dynamic linear model (GDLM).\n * This distribution is equivalent to, for \\f$t = 1:T\\f$,\n * \\f{eqnarray*}{\n * y_t & \\sim N(F' \\theta_t, V) \\\\\n * \\theta_t & \\sim N(G \\theta_{t-1}, W) \\\\\n * \\theta_0 & \\sim N(m_0, C_0)\n * \\f}\n *\n * If V is a vector, then the Kalman filter is applied\n * sequentially.\n *\n * @tparam T_y type of scalar\n * @tparam T_F type of design matrix\n * @tparam T_G type of transition matrix\n * @tparam T_V type of observation covariance matrix\n * @tparam T_W type of state covariance matrix\n * @tparam T_m0 type of initial state mean vector\n * @tparam T_C0 type of initial state covariance matrix\n *\n * @param y A r x T matrix of observations. Rows are variables,\n * columns are observations.\n * @param F A n x r matrix. The design matrix.\n * @param G A n x n matrix. The transition matrix.\n * @param V A r x r matrix. The observation covariance matrix.\n * @param W A n x n matrix. The state covariance matrix.\n * @param m0 A n x 1 matrix. The mean vector of the distribution\n * of the initial state.\n * @param C0 A n x n matrix. The covariance matrix of the\n * distribution of the initial state.\n * @return The log of the joint density of the GDLM.\n * @throw std::domain_error if a matrix in the Kalman filter is\n * not positive semi-definite.\n */\ntemplate <bool propto, typename T_y, typename T_F, typename T_G, typename T_V,\n          typename T_W, typename T_m0, typename T_C0,\n          require_all_eigen_matrix_dynamic_t<T_y, T_F, T_G, T_V, T_W,\n                                             T_C0>* = nullptr,\n          require_eigen_col_vector_t<T_m0>* = nullptr>\ninline return_type_t<T_y, T_F, T_G, T_V, T_W, T_m0, T_C0> gaussian_dlm_obs_lpdf(\n    const T_y& y, const T_F& F, const T_G& G, const T_V& V, const T_W& W,\n    const T_m0& m0, const T_C0& C0) {\n  using T_lp = return_type_t<T_y, T_F, T_G, T_V, T_W, T_m0, T_C0>;\n  using std::pow;\n  static const char* function = \"gaussian_dlm_obs_lpdf\";\n  check_size_match(function, \"columns of F\", F.cols(), \"rows of y\", y.rows());\n  check_size_match(function, \"rows of F\", F.rows(), \"rows of G\", G.rows());\n  check_size_match(function, \"rows of V\", V.rows(), \"rows of y\", y.rows());\n  check_size_match(function, \"rows of W\", W.rows(), \"rows of G\", G.rows());\n  check_size_match(function, \"size of m0\", m0.size(), \"rows of G\", G.rows());\n  check_size_match(function, \"rows of C0\", C0.rows(), \"rows of G\", G.rows());\n  check_square(function, \"G\", G);\n\n  const auto& y_ref = to_ref(y);\n  const auto& F_ref = to_ref(F);\n  const auto& G_ref = to_ref(G);\n  const auto& V_ref = to_ref(V);\n  const auto& W_ref = to_ref(W);\n  const auto& m0_ref = to_ref(m0);\n  const auto& C0_ref = to_ref(C0);\n\n  check_finite(function, \"y\", y_ref);\n  check_finite(function, \"F\", F_ref);\n  check_finite(function, \"G\", G_ref);\n  // TODO(anyone): incorporate support for infinite V\n  check_finite(function, \"V\", V_ref);\n  check_pos_semidefinite(function, \"V\", V_ref);\n  // TODO(anyone): incorporate support for infinite W\n  check_finite(function, \"W\", W_ref);\n  check_pos_semidefinite(function, \"W\", W_ref);\n  check_finite(function, \"m0\", m0_ref);\n  check_pos_semidefinite(function, \"C0\", C0_ref);\n  check_finite(function, \"C0\", C0_ref);\n\n  if (size_zero(y)) {\n    return 0;\n  }\n\n  int r = y.rows();  // number of variables\n  int n = G.rows();  // number of states\n\n  T_lp lp(0);\n  if (include_summand<propto>::value) {\n    lp -= HALF_LOG_TWO_PI * r * y.cols();\n  }\n\n  if (include_summand<propto, T_y, T_F, T_G, T_V, T_W, T_m0, T_C0>::value) {\n    Eigen::Matrix<T_lp, Eigen::Dynamic, 1> m{m0_ref};\n    Eigen::Matrix<T_lp, Eigen::Dynamic, Eigen::Dynamic> C{C0_ref};\n    Eigen::Matrix<T_lp, Eigen::Dynamic, 1> a(n);\n    Eigen::Matrix<T_lp, Eigen::Dynamic, Eigen::Dynamic> R(n, n);\n    Eigen::Matrix<T_lp, Eigen::Dynamic, 1> f(r);\n    Eigen::Matrix<T_lp, Eigen::Dynamic, Eigen::Dynamic> Q(r, r);\n    Eigen::Matrix<T_lp, Eigen::Dynamic, Eigen::Dynamic> Q_inv(r, r);\n    Eigen::Matrix<T_lp, Eigen::Dynamic, 1> e(r);\n    Eigen::Matrix<T_lp, Eigen::Dynamic, Eigen::Dynamic> A(n, r);\n\n    for (int i = 0; i < y.cols(); i++) {\n      // // Predict state\n      // a_t = G_t m_{t-1}\n      a = multiply(G_ref, m);\n      // R_t = G_t C_{t-1} G_t' + W_t\n      ",
  "export function isVisible(elem: HTMLElement) {\n    //https://stackoverflow.com/questions/19669786/check-if-element-is-visible-in-dom\n    if (!(elem instanceof Element)) throw Error('DomUtil: elem is not an element.');\n    const style = getComputedStyle(elem) as any;\n    if (style.display === 'none') return false;\n    if (style.visibility!== 'visible') return false;\n    if (style.opacity < 0.1) return false;\n    if (elem.offsetWidth + elem.offsetHeight + elem.getBoundingClientRect().height +\n        elem.getBoundingClientRect().width === 0) {\n        return false;\n    }\n    const elemCenter   = {\n        x: elem.getBoundingClientRect().left + elem.offsetWidth / 2,\n        y: elem.getBoundingClientRect().top + elem.offsetHeight / 2\n    };\n    if (elemCenter.x < 0) return false;\n    if (elemCenter.x > (document.documentElement.clientWidth || window.innerWidth)) return false;\n    if (elemCenter.y < 0) return false;\n    if (elemCenter.y > (document.documentElement.clientHeight || window.innerHeight)) return false;\n    const root = elem.getRootNode() as Document;\n    let pointContainer = root.elementFromPoint(elemCenter.x, elemCenter.y) as Node;\n    do {\n        if (pointContainer === elem) return true;\n    } while (pointContainer = pointContainer.parentNode);\n    return false;\n}",
  "package tilenol\n\nimport (\n\t\"os\"\n\n\t\"github.com/go-yaml/yaml\"\n)\n\n// Config is a YAML server configuration object\ntype Config struct {\n\t// Cache configures the tile server cache\n\tCache *CacheConfig `yaml:\"cache\"`\n\t// Layers configures the tile server layers\n\tLayers []LayerConfig `yaml:\"layers\"`\n}\n\n// LoadConfig loads the configuration from disk, and decodes it into a Config object\nfunc LoadConfig(configFile *os.File) (*Config, error) {\n\tdec := yaml.NewDecoder(configFile)\n\tdec.SetStrict(true)\n\tvar config Config\n\terr := dec.Decode(&config)\n\tif err!= nil {\n\t\treturn nil, err\n\t}\n\tLogger.Debugf(\"Loaded config: %+v\", config)\n\treturn &config, nil\n}\n\n// ConfigOption is a function that changes a configuration setting of the server.Server\ntype ConfigOption func(s *Server) error\n\n// ConfigFile loads a YAML configuration file from disk to set up the server\nfunc ConfigFile(configFile *os.File) ConfigOption {\n\treturn func(s *Server) error {\n\t\tconfig, err := LoadConfig(configFile)\n\t\tif err!= nil {\n\t\t\treturn err\n\t\t}\n\t\tcache, err := CreateCache(config.Cache)\n\t\tif err!= nil {\n\t\t\treturn err\n\t\t}\n\t\ts.Cache = cache\n\t\tvar layers []Layer\n\t\tfor _, layerConfig := range config.Layers {\n\t\t\tlayer, err := CreateLayer(layerConfig)\n\t\t\tif err!= nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t\tlayers = append(layers, *layer)\n\t\t}\n\t\ts.Layers = layers\n\t\treturn nil\n\t}\n}\n\n// Port changes the port number used for serving tile data\nfunc Port(port uint16) ConfigOption {\n\treturn func(s *Server) error {\n\t\ts.Port = port\n\t\treturn nil\n\t}\n}\n\n// InternalPort changes the port number used for administrative endpoints (e.g. healthcheck)\nfunc InternalPort(internalPort uint16) ConfigOption {\n\treturn func(s *Server) error {\n\t\ts.InternalPort = internalPort\n\t\treturn nil\n\t}\n}\n\n// EnableCORS configures the server for CORS (cross-origin resource sharing)\nfunc EnableCORS(s *Server) error {\n\ts.EnableCORS = true\n\treturn nil\n}\n\n// SimplifyShapes enables geometry simplification based on the requested zoom level\nfunc SimplifyShapes(s *Server) error {\n\ts.Simplify = true\n\treturn nil\n}\n",
  "package iface\n\ntype IRaftConfiguration interface {\n\tNodeID() uint64\n\tCheckQuorum() bool\n\tElectionRTT() uint64\n\tHeartbeatRTT() uint64\n\tSnapshotEntries() uint64\n\tCompactionOverhead() uint64\n\tOrderedConfigChange() bool\n\tMaxInMemLogSize() uint64\n\t//SnapshotCompressionType() string\n\t//EntryCompressionType() string\n\tDisableAutoCompactions() bool\n\n\tIsObserver() bool\n\tIsWitness() bool\n\tQuiesce() bool\n}\n",
  "<div class=\"p-relative\" style=\"min-width:60px; min-height: 50px;\">\n  <span class=\"p-absolute\" style=\"z-index:0;\">\n    <c8y-rectangle-spinner></c8y-rectangle-spinner>\n  </span>\n  <div class=\"p-relative bg-white\" style=\"z-index:1;\">\n    <img class=\"img-responsive\" ng-src=\"{{ file.dataUri }}\" />\n  </div>\n</div>\n",
  "import NodeAPIPublicNodes from \"../API/public/Node-API-Public-Nodes\";\nimport NodeAPIPublicBlocks from \"../API/public/Node-API-Public-Blocks\";\nimport NodeAPIPublicAddresses from \"../API/public/Node-API-Public-Addresses\";\nimport NodeAPIPublic from \"../API/Node-API-Public\";\n\nimport NodeAPIPrivate from \"../API/Node-API-Private\";\nimport NodeAPICallbacks from \"../API/callbacks/Node-API-Callbacks\"\nimport NodeAPIAntiDos from \"../API/anti-dos/Node-API-Anti-Dos.js\"\n\n\nclass NodeAPIRouter{\n\n    constructor(){\n\n        this._routes = [];\n        this._routesEnabled = false;\n\n    }\n\n    _addRoute (route, callback, nodeApiType, maxWeight, app, prefix, middleWare ) {\n\n        app( prefix + route, (req, res)=> NodeAPIAntiDos.protectRoute( route, () => { middleWare(req, res, callback, nodeApiType) }) );\n\n        if (this._routesEnabled)\n            this._routes.push(route);\n\n        NodeAPIAntiDos.addRouteWeight( route, maxWeight )\n\n    };\n\n    showRoutes (){\n\n        return this._routes;\n\n    };\n\n    initializeRouter(app, middleWare, prefix='', nodeApiType){\n\n\n            // respond with \"hello world\" when a GET request is made to the homepage\n        this._addRoute('', NodeAPIPublic.info, nodeApiType, 200, app, prefix, middleWare );\n\n        // Return blocks information\n        this._addRoute('blocks/between/:blocks', NodeAPIPublicBlocks.blocks, nodeApiType, 20, app, prefix, middleWare );\n\n\n        // Return block information\n        this._addRoute( 'blocks/at/:block', NodeAPIPublicBlocks.block, nodeApiType, 20, app, prefix, middleWare );\n\n        this._addRoute('address/balance/:address', NodeAPIPublicAddresses.addressBalance, nodeApiType,  200, app, prefix, middleWare ) ;\n\n        if (process.env.WALLET_SECRET_URL && typeof process.env.WALLET_SECRET_URL === \"string\" && process.env.WALLET_SECRET_URL.length >= 30) {\n\n            this._addRoute(process.env.WALLET_SECRET_URL+'/mining/balance', NodeAPIPrivate.minerBalance, nodeApiType, 100, app, prefix, middleWare );\n\n            this._addRoute(process.env.WALLET_SECRET_URL+'/wallets/import/:address/:publicKey/:privateKey', NodeAPIPrivate.walletImport, nodeApiType, 100, app, prefix, middleWare );\n\n            this._addRoute(process.env.WALLET_SECRET_URL+'/wallets/create-transaction/:from/:to/:amount/:fee', NodeAPIPrivate.walletCreateTransaction, nodeApiType, 100, app, prefix, middleWare );\n\n            this._addRoute(process.env.WALLET_SECRET_URL+'/wallets/export', NodeAPIPrivate.walletExport, nodeApiType, 100, app, prefix, middleWare );\n\n        }\n\n        // Return address info: balance, blocks mined and transactions\n        this._addRoute( 'address/:address', NodeAPIPublicAddresses.addressInfo, nodeApiType, 3, app, prefix, middleWare );\n\n        // Return address info: balance, blocks mined and transactions\n        this._addRoute('server/nodes/list', NodeAPIPublicNodes.nodesList.bind(NodeAPIPublicNodes), nodeApiType, 20, app, prefix, middleWare );\n\n        // Return blocks information\n        this._addRoute('server/nodes/blocks-propagated', NodeAPIPublicNodes.lastBlocksMined.bind(NodeAPIPublicNodes), nodeApiType, 20, app, prefix, middleWare );\n\n        // respond with \"hello\"\n        this._addRoute( 'hello', NodeAPIPublic.helloWorld, nodeApiType, 1000, app, prefix, middleWare );\n\n        // respond with \"ping\"\n        this._addRoute( 'ping', NodeAPIPublic.ping, nodeApiType, 1000, app, prefix, middleWare );\n\n        this._addRoute( 'list', this.showRoutes.bind(this), nodeApiType, 200, app, prefix, middleWare );\n\n        \n    }\n\n    initializeRouterCallbacks(app, middleWare, prefix='', nodeApiType){\n\n        this._addRoute('subscribe/address/balances',  NodeAPICallbacks.addressBalancesSubscribe.bind(NodeAPICallbacks), nodeApiType, 200, app, prefix, middleWare );\n        this._addRoute('subscribe/address/transactions',  NodeAPICallbacks.addressTransactionsSubscribe.bind(NodeAPICallbacks), nodeApiType, 100, app, prefix, middleWare );\n\n    }\n\n\n    \n}\n\nexport default new NodeAPIRouter();\n",
  "package net.cassite.f.stream;\n\npublic class HandlerRemovedException extends Exception {\n    HandlerRemovedException() {\n    }\n}\n",
  "import { Identity as AbstractIdentity } from '../Identity'\nimport { AuthFlowFailedException } from '@internal/identity/exceptions'\n\nexport class Identity extends AbstractIdentity {\n\n  /**\n   * {@inheritdoc}\n   */\n  public getRedirectUrl (path: string) : string {\n    return chrome.identity.getRedirectURL(path)\n  }\n\n  /**\n   * Performs first steps of OAuth2 flow, including authenticating user with the\n   * service provider and handling client authorization.\n   *\n   * @param url The url required by service provider to grant access token\n   * @param interactive If false, flow completes/fails silently - defaults true\n   * @return The redirect url + credentials\n   */\n  public launchAuthFlow (url: string, interactive: boolean = true) : Promise<string> {\n    return new Promise((resolve, reject) => {\n      chrome.identity.launchWebAuthFlow({ url, interactive }, response => {\n        chrome.runtime.lastError? reject(new AuthFlowFailedException()) : resolve(response)\n      })\n    })\n  }\n\n}\n",
  "const withPlugins = require(\"next-compose-plugins\");\nconst withSvgr = require(\"next-svgr\");\n\nconst nextConfig = {\n    images: {\n        domains: [\n            `${process.env.AWS_BUCKET_NAME}.s3.${process.env.AWS_REGION}.amazonaws.com`,\n        ]\n    },\n    env: {\n        AUTH0_NAMESPACE: process.env.AUTH0_NAMESPACE,\n    },\n}\n\nmodule.exports = withPlugins([withSvgr], nextConfig)\n",
  "import React, { Children, createElement } from'react';\nimport invariant from 'invariant';\n\nimport BaseField from 'uniforms/BaseField';\nimport filterDOMProps from 'uniforms/filterDOMProps';\nimport nothing from 'uniforms/nothing';\n\nimport NumField from './NumField';\nimport BoolField from './BoolField';\nimport DateField from './DateField';\nimport ListField from './ListField';\nimport NestField from './NestField';\nimport TextField from './TextField';\nimport RadioField from './RadioField';\nimport SelectField from './SelectField';\n\nconst DisplayIf = ({ children, condition }, { uniforms }) =>\n  condition(uniforms)? Children.only(children) : nothing;\nDisplayIf.contextTypes = BaseField.contextTypes;\n\nexport default class AutoField extends BaseField {\n  static displayName = 'AutoField';\n\n  getChildContextName() {\n    return this.context.uniforms.name;\n  }\n\n  render() {\n    const props = this.getFieldProps(undefined, { ensureValue: false });\n\n    if (props.component === undefined) {\n      if (props.allowedValues) {\n        if (props.checkboxes && props.fieldType!== Array) {\n          props.component = RadioField;\n        } else {\n          props.component = SelectField;\n        }\n      } else {\n        switch (props.fieldType) {\n          case Date:\n            props.component = DateField;\n            break;\n          case Array:\n            props.component = ListField;\n            break;\n          case Number:\n            props.component = NumField;\n            break;\n          case Object:\n            props.component = NestField;\n            break;\n          case String:\n            props.component = TextField;\n            break;\n          case Boolean:\n            props.component = BoolField;\n            break;\n        }\n\n        invariant(\n          props.component,\n          'Unsupported field type: %s',\n          props.fieldType.toString()\n        );\n      }\n    }\n\n    const element = createElement(props.component, this.props);\n\n    return props.condition? (\n      <DisplayIf condition={props.condition}>{element}</DisplayIf>\n    ) : (\n      element\n    );\n  }\n}\n\nfilterDOMProps.register('condition');\n",
  "<?php\n\nnamespace App\\Http\\Controllers\\User;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Job;\nuse App\\Present;\nuse App\\User;\nuse Brian2694\\Toastr\\Facades\\Toastr;\nuse Carbon\\Carbon;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Auth;\nuse Illuminate\\Support\\Str;\n\nclass DashboardController extends Controller\n{\n    public function index(){\n        $user = User::where('role_id',3)->latest()->limit(2)->get();\n        $vacancy = Job::where('status',true)->latest()->limit(4)->get();\n       $current_time = Carbon::now()->toDateString();\n       $present = Auth::user()->presents()->latest()->first();\n//        $present = Present::where('user_id',3)->get();\n        return view('user.dashboard',compact('present','current_time','user','vacancy'));\n    }\n\n    /**\n     * Present of admin.\n     *\n     * @param  int  $id\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function present()\n    {\n        $currant_date= \\Illuminate\\Support\\Carbon::now()->toDateString();\n        if ($currant_date >  '09:00:00'){\n            $attendance = \"1\";\n        }\n        else{\n            $attendance = \"0\";\n        }\n\n        $user_id = Auth::user()->id;\n\n\n        $present = new Present();\n        $present->user_id = $user_id;\n        $present->attendance =$attendance;\n        $present->save();\n        Toastr::success('Attendance is submitted successfully!','success');\n        return redirect()->back();\n\n    }\n\n}\n",
  "/*\nCopyright (c) 2019 Simon Schmidt\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\n\n/*\nImplements the ChaCha20-Poly1305 AEAD as specified in RFC 7539, and its extended nonce variant XChaCha20-Poly1305.\n\n\tEncoding = (\n\t\t\"chacha20-poly1305\"\n\t\t\"xchacha20-poly1305\"\n\t)\n*/\npackage chacha20poly1305\n\nimport (\n\t\"crypto/cipher\"\n\ticiph \"golang.org/x/crypto/chacha20poly1305\"\n\t\n\t\"github.com/mad-day/cryptoinfra/ciphersuite2\"\n\t\"github.com/mad-day/cryptoinfra/format2\"\n)\n\ntype c20p1305 int\n\nfunc (c20p1305) Keybuf() *ciphersuite2.Cipher_Buffer {\n\treturn &ciphersuite2.Cipher_Buffer{\n\t\tKey:make([]byte,32),\n\t}\n}\nfunc (c c20p1305) Encrypt(b *ciphersuite2.Cipher_Buffer) (*format2.CipherObject,error) {\n\tvar aead cipher.AEAD\n\tvar err  error\n\tswitch c {\n\tcase 0: aead,err = iciph.New(b.Key)\n\tcase 1: aead,err = iciph.NewX(b.Key)\n\tdefault: panic(\"unknown variant\")\n\t}\n\tif err!=nil { return nil,err }\n\treturn &format2.CipherObject{AEAD:aead},nil\n}\nfunc (c c20p1305) Decrypt(b *ciphersuite2.Cipher_Buffer) (*format2.CipherObject,error) { return c.Encrypt(b) }\n\n\nfunc init() {\n\tciphersuite2.RegisterCipher(\"chacha20-poly1305\",c20p1305(0))\n\tciphersuite2.RegisterCipher(\"xchacha20-poly1305\",c20p1305(1))\n}\n\n",
  "<!DOCTYPE html>\n<html data-require=\"math\">\n  <head>\n    <title>Insertion Sort Question</title>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/require.js/2.1.14/require.min.js\"></script>\n    <script src=\"../../khan-exercises/local-only/main.js\" ></script>\n  </head>\n\n  <body>\n    <div class=\"exercise\">\n      <div class=\"problems\">\n        <div id=\"InssortTFstablep\">\n          <p class=\"problem\">Answer TRUE or FALSE.\n          <p class=\"question\">\n            Insertion Sort (as the code is written in this\n            module) is a stable sorting algorithm. Recall that a stable sorting\n            algorithm maintains the relative order of records with equal keys.</p>\n          <div class=\"solution\">True</div>\n          <ul class=\"choices\" data-category=\"true\">\n            <li>True</li>\n            <li>False</li>\n          </ul>\n          <div class=\"hints\">\n            <p>Think of the behavior of every pass through the inner\n              for loop of the insertion sort if keys are equal.</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </body>\n</html>\n",
  "# -*- coding: utf-8 -*-\nfrom django.contrib.auth import login, authenticate\nfrom rest_framework import views, permissions\nfrom rest_framework.response import Response\n\nfrom server.serializers.auth.login import LoginSerializer\nfrom server.serializers.auth.user import UserSerializer\n\n\nclass LoginView(views.APIView):\n    permission_classes = (permissions.AllowAny,)\n\n    def post(self, request):\n\n        serializer = LoginSerializer(data=request.data)\n        serializer.is_valid(raise_exception=True)\n        data = serializer.validated_data\n        user = authenticate(request, **data)\n        try:\n            login(request, user)\n        except ValueError:\n            pass\n        return Response(UserSerializer(user).data)\n",
  "// Autogenerated from Pigeon (v0.1.4), do not edit directly.\n// See also: https://pub.dev/packages/pigeon\n\npackage com.bruce3x.flutter_qiniu_upload;\n\nimport io.flutter.plugin.common.BasicMessageChannel;\nimport io.flutter.plugin.common.BinaryMessenger;\nimport io.flutter.plugin.common.StandardMessageCodec;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\n/** Generated class from Pigeon. */\n@SuppressWarnings(\"unused\")\npublic class Api {\n\n  /** Generated class from Pigeon that represents data sent in messages. */\n  public static class QiniuUploadResult {\n    private String requestId;\n    public String getRequestId() { return requestId; }\n    public void setRequestId(String setterArg) { this.requestId = setterArg; }\n\n    HashMap toMap() {\n      HashMap<String, Object> toMapResult = new HashMap<>();\n      toMapResult.put(\"requestId\", requestId);\n      return toMapResult;\n    }\n    static QiniuUploadResult fromMap(HashMap map) {\n      QiniuUploadResult fromMapResult = new QiniuUploadResult();\n      Object requestId = map.get(\"requestId\");\n      fromMapResult.requestId = (String)requestId;\n      return fromMapResult;\n    }\n  }\n\n  /** Generated class from Pigeon that represents data sent in messages. */\n  public static class QiniuUploadRequest {\n    private String key;\n    public String getKey() { return key; }\n    public void setKey(String setterArg) { this.key = setterArg; }\n\n    private String token;\n    public String getToken() { return token; }\n    public void setToken(String setterArg) { this.token = setterArg; }\n\n    private String file;\n    public String getFile() { return file; }\n    public void setFile(String setterArg) { this.file = setterArg; }\n\n    HashMap toMap() {\n      HashMap<String, Object> toMapResult = new HashMap<>();\n      toMapResult.put(\"key\", key);\n      toMapResult.put(\"token\", token);\n      toMapResult.put(\"file\", file);\n      return toMapResult;\n    }\n    static QiniuUploadRequest fromMap(HashMap map) {\n      QiniuUploadRequest fromMapResult = new QiniuUploadRequest();\n      Object key = map.get(\"key\");\n      fromMapResult.key = (String)key;\n      Object token = map.get(\"token\");\n      fromMapResult.token = (String)token;\n      Object file = map.get(\"file\");\n      fromMapResult.file = (String)file;\n      return fromMapResult;\n    }\n  }\n\n  /** Generated class from Pigeon that represents data sent in messages. */\n  public static class QiniuTaskUpdate {\n    private String requestId;\n    public String getRequestId() { return requestId; }\n    public void setRequestId(String setterArg) { this.requestId = setterArg; }\n\n    private Double percent;\n    public Double getPercent() { return percent; }\n    public void setPercent(Double setterArg) { this.percent = setterArg; }\n\n    HashMap toMap() {\n      HashMap<String, Object> toMapResult = new HashMap<>();\n      toMapResult.put(\"requestId\", requestId);\n      toMapResult.put(\"percent\", percent);\n      return toMapResult;\n    }\n    static QiniuTaskUpdate fromMap(HashMap map) {\n      QiniuTaskUpdate fromMapResult = new QiniuTaskUpdate();\n      Object requestId = map.get(\"requestId\");\n      fromMapResult.requestId = (String)requestId;\n      Object percent = map.get(\"percent\");\n      fromMapResult.percent = (Double)percent;\n      return fromMapResult;\n    }\n  }\n\n  /** Generated class from Pigeon that represents data sent in messages. */\n  public static class QiniuTaskComplete {\n    private String requestId;\n    public String getRequestId() { return requestId; }\n    public void setRequestId(String setterArg) { this.requestId = setterArg; }\n\n    private String hash;\n    public String getHash() { return hash; }\n    public void setHash(String setterArg) { this.hash = setterArg; }\n\n    private String key;\n    public String getKey() { return key; }\n    public void setKey(String setterArg) { this.key = setterArg; }\n\n    HashMap toMap() {\n      HashMap<String, Object> toMapResult = new HashMap<>();\n      toMapResult.put(\"requestId\", requestId);\n      toMapResult.put(\"hash\", hash);\n      toMapResult.put(\"key\", key);\n      return toMapResult;\n    }\n    static QiniuTaskComplete fromMap(HashMap map) {\n      QiniuTaskComplete fromMapResult = new QiniuTaskComplete();\n      Object requestId = map.get(\"requestId\");\n      fromMapResult.requestId = (String)requestId;\n      Object hash = map.get(\"hash\");\n      fromMapResult.hash = (String)hash;\n      Object key = map.get(\"key\");\n      fromMapResult.key = (String)key;\n      return fromMapResult;\n    }\n  }\n\n  /** Generated class from Pigeon that represents data sent in messages. */\n  public static class QiniuTaskCancellation {\n    private String requestId;\n    public String getRequestId() { return requestId; }\n    public void setRequestId(String setterArg) { this.requestId = setterArg; }\n\n    HashMap toMap() {\n      HashMap<String, Object> toMapResult = new HashMap<>();\n      toMapResult.put(\"requestId\", requestId);\n      return toMapResult;\n    }\n    static QiniuTaskCancellation fromMap(HashMap map) {\n      QiniuTaskCancellation fromMapResult = new QiniuTaskCancellation();\n      Object requestId = map.get(\"requestId\");\n      fromMapResult.requestId = (String)requestId;\n      return fromMapResult;\n    }\n  }\n\n  /** Generated class from Pigeon that represents data sent in messages. */\n  public static class QiniuTaskError {\n    private String requestId;\n    public String getRequestId() { return requestId; }\n    public void setRequestId(String setterArg) { this.requestId = setterArg; }\n\n    private String error;\n    public String getError() { return error; }\n    public void setError(String setterArg) { this.error = setterArg; }\n\n    private Long statusCode;\n    public Long getStatusCode() { return statusCode; }\n    public void setStatusCode(Long setterArg) { this.statusCode = setterArg; }\n\n    HashMap toMap() {\n      HashMap<String, Object> toMapResult = new HashMap<>();\n      toMapResult.put(\"requestId\", requestId);\n      toMapResult.put(\"error\", error);\n      toMapResult.put(\"statusCode\", statusCode);\n      return toMapResult;\n    }\n    static QiniuTaskError fromMap(HashMap map) {\n      QiniuTaskError fromMapResult = new QiniuTaskError();\n      Object requestId = map.get(\"requestId\");\n      fromMapResult.requestId = (String)requestId;\n      Object error = map.get(\"error\");\n      fromMapResult.error = (String)error;\n      Object statusCode = map.get(\"statusCode\");\n      fromMapResult.statusCode = (statusCode == null)? null : ((statusCode instanceof Integer)? (Integer)statusCode : (Long)statusCode);\n      return fromMapResult;\n    }\n  }\n\n  /** Generated interface from Pigeon that represents a handler of messages from Flutter.*/\n  public interface QiniuHostApi {\n    QiniuUploadResult upload(QiniuUploadRequest arg);\n    void cancel(QiniuUploadResult arg);\n\n    /** Sets up an instance of `QiniuHostApi` to handle messages through the `binaryMessenger` */\n    static void setup(BinaryMessenger binaryMessenger, QiniuHostApi api) {\n      {\n        BasicMessageChannel<Object> channel =\n            new BasicMessageChannel<>(binaryMessenger, \"dev.flutter.pigeon.QiniuHostApi.upload\", new StandardMessageCodec());\n        if (api!= null) {",
  "/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\n/* \n * File:   InputHandler.h\n * Author: interloper\n *\n * Created on July 4, 2016, 5:01 PM\n */\n\n#ifndef INPUTHANDLER_H\n#define INPUTHANDLER_H\n\n#include \"Keys.h\"\n\nclass InputHandler {\npublic:\n    /**Constructors */\n    InputHandler();\n    ~InputHandler();\n    \n    /**Set */\n    void pressKey(int p_key);\n    void releaseKey(int p_keys);\n    void resetKey(int p_key);\n    \n    /**Get */\n    bool getKey(int p_key);\n    \n    /**Utilities */\n    void resetInput();\n    \nprivate:\n    bool m_keyPressed[KEYS];\n    bool m_keyUsed[KEYS];\n};\n\n#endif /* INPUTHANDLER_H */\n\n",
  "\ufeffusing Laser.Orchard.PaymentGateway.Models;\nusing Orchard;\nusing System.Collections.Generic;\nusing System;\n\npublic interface IPaymentService : IDependency {\n    List<PaymentRecord> GetPayments(int userId, bool lastToFirst = true);\n    List<PaymentRecord> GetAllPayments(bool lastToFirst = true);\n    PaymentRecord GetPayment(int paymentId);\n    PaymentRecord GetPaymentByTransactionId(string transactionId);\n    PaymentRecord GetPaymentByGuid(string paymentGuid);\n    string CreatePaymentNonce(PaymentRecord paymentData);\n    PaymentRecord DecryptPaymentNonce(string nonce);\n}",
  "import * as mysql from \"mysql\";\n\nconst env = process.env\nconst { host, port, user, password, database } = env\nconst mysqlConfig :mysql.PoolConfig = {\n    host,\n    user,\n    password,\n    database,\n    port: Number(port)\n}\n\nconst pool = mysql.createPool(mysqlConfig)\n\nconst query = (sql: string) => {\n    return new Promise<any>((resolve, reject) => {\n      pool.getConnection((error, connection) => {\n        if (error) {\n          reject(error)\n        } else {\n          connection.query(sql, (error, results) => {\n            if (error) {\n              reject(error)\n            } else {\n              resolve(results)\n            }\n            connection.release()\n          })\n        }\n      })\n    })\n  }\n\nexport const mysqlConnect = query",
  "\\documentclass[../main.tex]{subfiles}\n\n\\begin{document}\n\n\\chapter{Introduction}\n\n%Introduce the problem\nA universal issue that affects software developers is the presence of software bugs. Bugs in software can be defined as unintentional errors that cause software to perform incorrectly. Defects in software can have a serious financial impact on businesses and\nreduce the time available for developers to create new features. Bugs in software can also introduce security vulnerabilities that could lead to the leakage of user data as well a loss of reputation \\cite{briski2008minimizing}. There have been several large-scale incidents in the past involving defective software. For example, the Mars Climate Orbiter, a space probe launched by NASA in 1998 crashed on Mars due to a bug which failed to use metric measurements instead of imperial units \\cite{sauser2009projects}. Another example is the Heartbleed bug, a security vulnerability in the OpenSSL protocol which could potentially expose confidential information such as passwords and credit card numbers \\cite{durumeric2014matter}. In 1994, the Pentium FDIV bug incident caused Intel processors to produce faulty values when diving floating point values which lead to a mass recall of defective processors \\cite{pratt1995anatomy}. These examples highlight some of the large scale impacts that bugs can have and it can be very challenging to identify the vulnerabilities in the first place. \n\nA study by IBM found that the associated cost with resolving a bug in software increases depending on what phase in the development lifecycle the bug was identified \\cite{briski2008minimizing}. Moreover, software bugs that are discovered in the production phase are more costly because they can directly affect customers as opposed to bugs that occur early on in. Therefore there is a justification for being able to detect bugs as early as possible. \n\n%What is currently being done today and limitations\nSoftware developers identify bugs by performing regular testing reduce their likelihood by improving development practices. For example, unit testing involves verifying the validity of individual methods within code and these tests and can be run every time a new build is created. Development practices have also shifted from traditional waterfall methods to Agile methodologies in order to keep up with the fast pace of development cycles. Agile methodologies allow for more frequent testing as well as code reviews before integrating new features to the main product. However, a challenge with identifying bugs is that as a project grows in size, it becomes more complex to maintain. It becomes impractical to try out all possible executions of a program and running tests can become time consuming. \n\n%How can we solve it today\nTo assist developers with identifying bugs, recent research has suggested the usage of software defect prediction models \\cite{kamei2013large}. These models aim to identify regions in code that are most vulnerable to defects. Using these models, developers would be able to prioritize their testing efforts and receive continuous feedback in an automated fashion. The proposed benefits of such models are reduced time spent when reviewing code and being able to provide immediate feedback to a developer once a change is made.\n\n%Using machine learning to assist us\nIn order to create such a defect prediction model, one could leverage the capabilities of machine learning. Machine learning is the field of study concerned with algorithms that can learn from historical samples in order to predict values for unseen samples. Although machine learning has been around since the 60s, its viability has grown immensely in recent years due to advances in hardware, easy to implement open source models and a large availability of data. Machine learning algorithms are able to spot complex patterns in data to solve various tasks such as facial recognition or translation of text and are now being tested out on the task of identifying bugs \\cite{nayrolles2018clever}. In the context of identifying risky portions of code, one could use a supervised learning approach. With this technique, an algorithm is shown examples of risky and clean files and aims to predict whether a new file contains a defect. \n\n%Just-in-time defect prediction\nA proposed method for identifying risky code is Just-in-time (JIT) defect prediction. Unlike previous works which aim to make predictions at the file-level, JIT defect prediction aims to predict individual commits as being risky or not \\cite{kamei2013large}. The justification for these models is that commits tend to be smaller to review than files which can make the reviewing process simpler. Also, a problem with identifying risky files is that files can have multiple authors so it is unclear as to who should be assigned to resolve the issue. Commits on the other hand only have one author so one could assign the commit's author to resolve any potential issues. Finally, JIT prediction models can make predictions rapidly because the metrics used in the model can be extracted as soon as the commit as made. \n\n%SZZ\nWhen applying supervised learning techniques for this particular task, labelled data is required. The problem is that the majority of commits do not have any labels that indicate whether or not they caused a defect. In order to automatically label commits as \\textit{risky} or \\textit{not risky}, the \u015aliwerski Zimmermann Zeller (SZZ) algorithm can be used to obtain large datasets for building defect prediction models \\cite{sliwerski2005changes}. However, a limitation of the original algorithm is that it requires the project being analyzed to have a bug tracking database that confirms if certain commits resolve bugs. Some projects might not have this database or if they do, the information it stores might not contain data for a commit by commit basis. Instead, one could rely on the approximate SZZ (ASZZ) algorithm which removes this restriction. \n\n%Semi-supervised learning\nSince labelling commits can be quite time consuming, it would be useful to have a technique that could leverage the information contained in unlabelled commits. Semi-supervised learning is an example of a subset of machine learning algorithms that can train on both labelled and unlabelled data \\cite{zhu2005semi}. The self-training algorithm is a simple semi-supervised technique that can be applied to any classification method that outputs probabilities for its labels \\cite{zhu2007semi}. \n\n%Contributions of this work\n performing a qualitative study to  as well as performing a case study to investigate the viability of JIT defect prediction models in practice.\n\n\n\\section{Research Questions}\n\nThe purpose of this thesis is to investigate the viability of the self-training algorithm for software risk prediction. It will also perform a qualitative study to understand how software developers identify and resolve bugs. Finally, a case study will be performed to see how practical JIT defect prediction models are in an industrial environment such as King \\footnote{https://king.com/}, a game development company. The research questions that will be answered are:\n\n\\begin{itemize}\n  \\item \\textbf{RQ1:} When comparing the semi-supervised method of self-training with supervised learning techniques, how well does the semi-supervised approach perform when applied to Just-in-time defect predictions?\n  \\item \\textbf{RQ2:} How do software developers identify bugs and what are some characteristics of code that contains a bug?\n  \\item \\textbf{RQ3:} When provided with a Just-in-time defect prediction model, how accurate are the model's predictions according to software developers? \n\\end{itemize}\n\n\\section{Scope}\n\nThis project is focused on Just-in-time defect prediction models, models which predict at the commit level and only rely on commit metadata rather than analyzing the source code. The collection of new data will be done using the approximate SZZ algorithm and using a smaller set of features than those typically found in datasets for JIT defect prediction. \n\n\\section{Outline of Report}\nChapter 2 provides relevant background theory on the field of software defect prediction as well as achievements in related work. Chapter 3 describes the technical contribution that was created for this thesis project. Chapter 4 covers the methodology utilized for answering the specified research questions. Chapter 5 presents the results of these experiments and finally, chapter 6 will analyze and discuss the key findings.\n\n\\end{document}\n\n%contribution section",
  "package app.math.domain;\n\nimport java.util.ArrayList;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\npublic class Derivative {\n\tprivate String function;\n\tprivate String result;\n\tprivate ArrayList<String> terms;\n\tprivate ArrayList<String> specialTerms;\n\tprivate ArrayList<String> polynomialTerms;\n\tprivate ArrayList<String> exponentialTerms;\n\tprivate ArrayList<String> productRuleTerms;\n\tprivate ArrayList<String> chainRuleTerms;\n\tprivate ArrayList<String> chainProductRuleTerms;\n\tprivate ArrayList<String> logTerms;\n\tprivate StringBuilder derivative;\n\tprivate MatrixD powerruleMatrix;\n\n\tpublic Derivative(String function) {\n\t\tfunction = function.replaceAll(\"\\\\s\", \"\");\n\t\tfunction = function.replaceAll(\"u\", \"x\");\n\t\tthis.function = function;\n\t\tspecialTerms = new ArrayList<String>();\n\t\tpolynomialTerms = new ArrayList<String>();\n\t\tproductRuleTerms = new ArrayList<String>();\n\t\texponentialTerms = new ArrayList<String>();\n\t\tlogTerms = new ArrayList<String>();\n\t\tchainRuleTerms = new ArrayList<String>();\n\t\tchainProductRuleTerms = new ArrayList<String>();\n\t}\n\n\tprivate void specializeTerms() {\n\t\tfor (String term : terms) {\n\t\t\tif (term.matches(\"[-]?\\\\d{0,}.?\\\\d{0,}x\\\\^[-]?\\\\d{1,}\") || term.matches(\"[-]?\\\\d{0,}.?\\\\d{0,}x\")) {\n\t\t\t\tpolynomialTerms.add(term);\n\t\t\t} else if (term.matches(\"[-]?\\\\d{1,}\\\\^x\")) {\n\t\t\t\texponentialTerms.add(term);\n\t\t\t} else if (term.matches(\"[-]?(log)[_]\\\\d{1,}[{]x[}]\")) {\n\t\t\t\tlogTerms.add(term);\n\t\t\t} else {\n\t\t\t\tspecialTerms.add(term);\n\t\t\t}\n\t\t\tif (term.contains(\"*\") &&!term.contains(\"(\") &&!term.contains(\")\")) {\n\t\t\t\tproductRuleTerms.add(term);\n\t\t\t} else if (term.contains(\"(\") && term.contains(\")\") &&!term.contains(\"*\")) {\n\t\t\t\tchainRuleTerms.add(term);\n\t\t\t} else if (term.contains(\"*\") && term.contains(\"(\") && term.contains(\")\")) {\n\t\t\t\tchainProductRuleTerms.add(term);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic String derive() {\n\t\tbreakIntoTerms();\n\t\tfor (int index = 0; index < terms.size(); index++) {\n\t\t\tString term = terms.get(index);\n\t\t\tif (term.charAt(0) == '*') {\n\t\t\t\tterms.remove(index);\n\t\t\t}\n\t\t}\n\t\tspecializeTerms();\n\t\tresult = new String();\n\t\ttry {\n\t\t\tresult = powerRule();\n\t\t} catch (MatrixDimensionException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tif (result.length() > 0) {\n\t\t\tresult += \" + \";\n\t\t}\n\t\tresult += special();\n\t\tresult += exponentialNonE();\n\t\tresult += logarithmicNonE();\n\t\tresult += chainProductRule();\n\t\tresult += productRule();\n\t\tresult += chainRule();\n\t\tresult = result.trim();\n\t\tif (result.charAt(result.length() - 1) == '+') {\n\t\t\tresult = result.substring(0, result.length() - 1);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate String chainProductRule() {\n\t\tString ans = new String();\n\t\tfor (String term : chainProductRuleTerms) {\n\t\t\tString[] tmp = term.split(\"[*]\");\n\t\t\tfor (int i = 0; i < tmp.length; i++) {\n\t\t\t\ttmp[i] = tmp[i].replaceAll(\"\\\\{\", \"\");\n\t\t\t\ttmp[i] = tmp[i].replaceAll(\"\\\\}\", \"\");\n\t\t\t\tif (!tmp[i].contains(\"x\")) { // numbers have derivative 0\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (!tmp[i].matches(\"\\\\d{1,}\"))\n\t\t\t\t\tif (tmp[i].contains(\"(\") && tmp[i].contains(\")\")) {\n\t\t\t\t\t\tans += \"{\" + chainRule(tmp[i]) + \"}*\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tans += singleTerm(tmp[i]) + \"*\";\n\t\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tcontinue;\n\t\t\t\tfor (int j = 0; j < tmp.length; j++) {\n\t\t\t\t\tif (j == i) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tans += tmp[j] + \"*\";\n\t\t\t\t}\n\t\t\t\tif (ans.length() >= 1 && ans.charAt(ans.length() - 1) == '*') {\n\t\t\t\t\tans = ans.substring(0, ans.length() - 1);\n\t\t\t\t}\n\t\t\t\tans += \" + \";\n\t\t\t}\n\t\t}\n\t\tif (ans.length() >= 1 && ans.charAt(ans.length() - 1) == '*') {\n\t\t\tans = ans.substring(0, ans.length() - 1);\n\t\t}\n\t\treturn ans;\n\t}\n\n\tprivate String chainRule() {\n\t\tString ans = new String();\n\t\tfor (String term : chainRuleTerms) {\n\t\t\tString extractedTerm = new String();\n\t\t\tPattern pattern = Pattern.compile(\"\\\\(.*\\\\)\");\n\t\t\tMatcher matcher = pattern.matcher(term);\n\t\t\tString outerTerm = term.replaceAll(\"\\\\(.*\\\\)\", \"u\");\n\t\t\tDerivative d_outer = new Derivative(outerTerm);\n\t\t\tString outerDerivative = d_outer.derive();\n\t\t\touterDerivative = outerDerivative.replaceAll(\"x\", \"u\");\n\t\t\tdo {\n\t\t\t\tif (matcher.find()) {\n\t\t\t\t\textractedTerm = matcher.group(0).substring(1, matcher.group(0).length() - 1);\n\t\t\t\t\touterDerivative = outerDerivative.replaceAll(\"u\", \"{(\" + extractedTerm + \")}\");\n\t\t\t\t\touterDerivative.trim();\n\t\t\t\t\tans += outerDerivative + \" * \";\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tDerivative d = new Derivative(extractedTerm);\n\t\t\t\t\tans += \"(\" + d.derive().trim() + \")\";\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t\tmatcher = pattern.matcher(extractedTerm);\n\t\t\t} while (extractedTerm.contains(\"(\") && extractedTerm.contains(\")\"));\n\t\t\tans += \"+\";\n\t\t}\n\t\treturn ans;\n\t}\n\n\tprivate String chainRule(String term) {\n\t\tString ans = new String();\n\t\tString extractedTerm = new String();\n\t\tPattern pattern = Pattern.compile(\"\\\\(.*\\\\)\");\n\t\tMatcher matcher = pattern.matcher(term);\n\t\tString outerTerm = term.replaceAll(\"\\\\(.*\\\\)\", \"u\");\n\t\tDerivative d_outer = new Derivative(outerTerm);\n\t\tString outerDerivative = d_outer.derive();\n\t\touterDerivative = outerDerivative.replaceAll(\"\\\\{x\\\\}\", \"(u)\");\n\t\tdo {\n\t\t\tif (matcher.find()) {\n\t\t\t\textractedTerm = matcher.group(0).substring(1, matcher.group(0).length() - 1);\n\t\t\t\touterDerivative = outerDerivative.replaceAll(\"\\\\(u\\\\)\", \"{(\" + extractedTerm + \")}\");\n\t\t\t\tans += outerDerivative + \"*\";\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tDerivative d = new Derivative(extractedTerm);\n\t\t\t\tans += d.derive();\n\t\t\t} catch (Exception e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\tmatcher = pattern.matcher(extractedTerm);\n\t\t} while (extractedTerm.contains(\"(\") && extractedTerm.contains(\")\"));\n\t\treturn ans;\n\t}\n\n\tprivate String productRule() {\n\t\tString ans = new String();\n\t\tfor (String term : productRuleTerms) {\n\t\t\tString[] tmp = term.split(\"[*]\");\n\t\t\tfor (int i = 0; i < tmp.length; i++) {\n\t\t\t\tif (!tmp[i].contains(\"x\")) { // numbers have derivative 0\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (!tmp[i].matches(\"\\\\d{1,}\"))\n\t\t\t\t\tans += singleTerm(tmp[i]) + \"*\";\n\t\t\t\telse\n\t\t\t\t\tcontinue;\n\t\t\t\tfor (int j = 0; j < tmp.length; j++) {\n\t\t\t\t\tif (j == i) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tans += tmp[j] + \"*\";\n\t\t\t\t}\n\t\t\t\tif (ans.length() >= 1 && ans.charAt(",
  "/**\n * <a href=\"http://www.openolat.org\">\n * OpenOLAT - Online Learning and Training</a><br>\n * <p>\n * Licensed under the Apache License, Version 2.0 (the \"License\"); <br>\n * you may not use this file except in compliance with the License.<br>\n * You may obtain a copy of the License at the\n * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\">Apache homepage</a>\n * <p>\n * Unless required by applicable law or agreed to in writing,<br>\n * software distributed under the License is distributed on an \"AS IS\" BASIS, <br>\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. <br>\n * See the License for the specific language governing permissions and <br>\n * limitations under the License.\n * <p>\n * Initial code contributed and copyrighted by<br>\n * frentix GmbH, http://www.frentix.com\n * <p>\n */\npackage org.olat.course.learningpath.manager;\n\nimport java.util.List;\n\nimport javax.annotation.PostConstruct;\n\nimport org.olat.core.gui.control.Event;\nimport org.olat.core.id.Identity;\nimport org.olat.core.util.event.GenericEventListener;\nimport org.olat.core.util.nodes.INode;\nimport org.olat.core.util.tree.TreeVisitor;\nimport org.olat.core.util.tree.Visitor;\nimport org.olat.course.CourseFactory;\nimport org.olat.course.CourseModule;\nimport org.olat.course.ICourse;\nimport org.olat.course.assessment.CourseAssessmentService;\nimport org.olat.course.assessment.ScoreAccountingTrigger;\nimport org.olat.course.assessment.ScoreAccountingTriggerData;\nimport org.olat.course.editor.PublishEvent;\nimport org.olat.course.learningpath.LearningPathConfigs;\nimport org.olat.course.learningpath.LearningPathEditConfigs;\nimport org.olat.course.learningpath.LearningPathService;\nimport org.olat.course.learningpath.SequenceConfig;\nimport org.olat.course.learningpath.model.SequenceConfigImpl;\nimport org.olat.course.learningpath.obligation.ExceptionalObligation;\nimport org.olat.course.learningpath.obligation.ExceptionalObligationHandler;\nimport org.olat.course.nodeaccess.NodeAccessType;\nimport org.olat.course.nodes.CollectingVisitor;\nimport org.olat.course.nodes.CourseNode;\nimport org.olat.course.tree.CourseEditorTreeModel;\nimport org.olat.repository.RepositoryEntry;\nimport org.olat.repository.RepositoryManager;\nimport org.olat.repository.RepositoryService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\n/**\n * \n * Initial date: 1 Sep 2019<br>\n * @author uhensler, urs.hensler@frentix.com, http://www.frentix.com\n *\n */\n@Service\npublic class LearningPathServiceImpl implements LearningPathService, GenericEventListener {\n\t\n\t@Autowired\n\tprivate LearningPathRegistry registry;\n\t@Autowired\n\tprivate RepositoryManager repositoryManager;\n\t@Autowired\n\tprivate RepositoryService respositoryService;\n\t@Autowired\n\tprivate CourseAssessmentService courseAssessmentService;\n\t\n\t@PostConstruct\n\tpublic void init() {\n\t\tCourseModule.registerForCourseType(this, null);\n\t}\n\t\n\t@Override\n\tpublic LearningPathConfigs getConfigs(CourseNode courseNode) {\n\t\treturn registry.getLearningPathNodeHandler(courseNode).getConfigs(courseNode);\n\t}\n\t\n\t@Override\n\tpublic LearningPathConfigs getConfigs(CourseNode courseNode, INode parent) {\n\t\treturn registry.getLearningPathNodeHandler(courseNode).getConfigs(courseNode, parent);\n\t}\n\t\n\t@Override\n\tpublic LearningPathEditConfigs getEditConfigs(CourseNode courseNode) {\n\t\treturn registry.getLearningPathNodeHandler(courseNode).getEditConfigs();\n\t}\n\n\t@Override\n\tpublic SequenceConfig getSequenceConfig(CourseNode courseNode) {\n\t\tLearningPathConfigs lpConfig = registry.getLearningPathNodeHandler(courseNode).getConfigs(courseNode);\n\t\tBoolean hasSequentialChildren = lpConfig.hasSequentialChildren();\n\t\tBoolean inheritedSequencialChildren = getInheritedSequencialChildren(courseNode);\n\t\t\n\t\tboolean sequentialChildren = hasSequentialChildren!= null\n\t\t\t\t? hasSequentialChildren.booleanValue()                // Node defines config itself\n\t\t\t\t: Boolean.TRUE.equals(inheritedSequencialChildren);   // use the inherited config\n\t\tboolean inSequence = inheritedSequencialChildren!= null\n\t\t\t\t? inheritedSequencialChildren.booleanValue()\n\t\t\t\t: sequentialChildren;                                 // root has no inherited config, take the config from the root itself\n\t\t\n\t\treturn new SequenceConfigImpl( inSequence, sequentialChildren);\n\t}\n\t\n\tprivate Boolean getInheritedSequencialChildren(CourseNode courseNode) {\n\t\tINode parentNode = courseNode.getParent();\n\t\tif (parentNode instanceof CourseNode) {\n\t\t\tCourseNode parent = (CourseNode)parentNode;\n\t\t\tLearningPathConfigs parentConfig = registry.getLearningPathNodeHandler(parent).getConfigs(parent);\n\t\t\t\n\t\t\tBoolean hasSequentialChildren = parentConfig.hasSequentialChildren();\n\t\t\tif (hasSequentialChildren!= null) {\n\t\t\t\treturn hasSequentialChildren;\n\t\t\t}\n\t\t\t\n\t\t\treturn getInheritedSequencialChildren(parent);\n\t\t}\n\t\treturn null;\n\t}\n\n\t@Override\n\tpublic List<ExceptionalObligationHandler> getExceptionalObligationHandlers() {\n\t\treturn registry.getExceptionalObligationHandler();\n\t}\n\n\t@Override\n\tpublic ExceptionalObligationHandler getExceptionalObligationHandler(String type) {\n\t\treturn registry.getExceptionalObligationHandler(type, false);\n\t}\n\n\t@Override\n\tpublic void syncExceptionalObligations(Long courseResId) {\n\t\tICourse course = CourseFactory.loadCourse(courseResId);\n\t\tif (course == null) return;\n\t\t\n\t\tRepositoryEntry courseEntry = course.getCourseEnvironment().getCourseGroupManager().getCourseEntry();\n\t\tList<ScoreAccountingTrigger> scoreAccountingTrigger = courseAssessmentService.getScoreAccountingTriggers(courseEntry);\n\t\t\n\t\t// Create ScoreAccountingTriggers of created ExceptionalObligations\n\t\tCourseNode rootNode = course.getRunStructure().getRootNode();\n\t\tTreeVisitor tv = new TreeVisitor(createExceptionalObligations(courseEntry, scoreAccountingTrigger), rootNode, true);\n\t\ttv.visitAll();\n\t\t\n\t\t// Delete ScoreAccountingTrigger of deleted ExceptionalObligations\n\t\tcourseAssessmentService.deleteScoreAccountingTriggers(scoreAccountingTrigger);\n\t}\n\t\n\t/**\n\t * Creates a ScoreAccountingTriggers for every ExceptionalObligation of the CourseNode if not found but needed.\n\t * Removes ScoreAccountingTriggers from the list if an according ExceptionalObligation exists.\n\t * \n\t * @param courseEntry \n\t * @param scoreAccountingTriggers\n\t * @return\n\t */\n\tprivate Visitor createExceptionalObligations(RepositoryEntry courseEntry, List<ScoreAccountingTrigger> scoreAccountingTriggers) {\n\t\treturn iNode -> {\n\t\t\tif (iNode instanceof CourseNode) {\n\t\t\t\tCourseNode courseNode = (CourseNode)iNode;\n\t\t\t\tList<ExceptionalObligation> nodeExceptionalObligations = getConfigs(courseNode).getExceptionalObligations();\n\t\t\t\tfor (ExceptionalObligation exceptionalObligation : nodeExceptionalObligations) {\n\t\t\t\t\tExceptionalObligationHandler exceptionalObligationHandler = registry.getExceptionalObligationHandler(exceptionalObligation.getType(), true);\n\t\t\t\t\tif (exceptionalObligationHandler!= null && exceptionalObligationHandler.hasScoreAccountingTrigger()) {\n\t\t\t\t\t\tboolean found = scoreAccountingTriggers.removeIf(ref -> ref.getIdentifier().equals(exceptionalObligation.getIdentifier()));\n\t\t\t\t\t\tif (!found) {\n\t\t\t\t\t\t\tScoreAccountingTriggerData data = exceptionalObligationHandler.getScoreAccountingTriggerData(exceptionalObligation);\n\t\t\t\t\t\t\tif (data!= null) {\n\t\t\t\t\t\t\t\tdata.setIdentifier(exceptionalObligation.getIdentifier());\n\t\t\t\t\t\t\t\tcourseAssessmentService.createScoreAccountingTrigger(courseEntry, courseNode.getIdent(), data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};",
  "<?php\n\nnamespace App\\Http\\Controllers\\Auth;\n\nuse App\\Lecturer;\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Auth;\nuse Illuminate\\Support\\Facades\\Hash;\n\nclass LecturerRegisterController extends Controller\n{\n    //\n    public function __construct()\n    {\n        $this->middleware('guest:lecturer');\n    }\n\n    public function showRegistrationForm()\n    {\n        return view('auth.lecturer-register');\n    }\n\n    public function register(Request $request)\n    {\n        // Validate form data\n        $this->validate($request,\n            [\n                'name' => ['required','string','max:255'],\n                'email' => ['required','string', 'email','max:255', 'unique:lecturers'],\n                'password' => ['required','string','min:8']\n            ]\n        );\n\n        // Create lecturer user\n        try {\n            $lecturer = Lecturer::create([\n                'name' => $request->name,\n                'email' => $request->email,\n                'password' => Hash::make($request->password),\n            ]);\n\n            // Log the lecturer in\n            Auth::guard('lecturer')->loginUsingId($lecturer->id);\n            return redirect()->route('lecturer.dashboard');\n        } catch (\\Exception $e) {\n            return redirect()->back()->withInput($request->only('name', 'email'));\n        }\n    }\n}\n",
  "function BasicCard(front, back) {\n\tthis.frontCard = front;\n\tthis.backCard = back;\n}\n\nmodule.exports = BasicCard;",
  "\"use strict\"\n\nrequire(\"source-map-support\").install()\nconst Markdown2HtmlPro = require('markdown2html-pro').Markdown2HtmlPro;\nconst globby = require(\"globby\")\nconst path = require(\"path\")\nconst fs = require(\"fs-extra\")\nconst jsdoc2md = require(\"jsdoc-to-markdown\")\nconst pathSorter = require(\"path-sort\")\nconst source = path.join(__dirname, \"jsdoc\", \"out\")\nconst replace = require('replace-in-file');\n\nasync function main() {\n  // JSDoc generates weird types with `<>` suffix (such as URL<> or Platform<>), so the hack is to just remove those entries before we process the doc to `.md`\n  const options = {\n    files: path.join(source, \"**/*.js\"),\n    from: /<>/g,\n    to: '',\n  };\n  await replace.replaceInFile(options)\n\n  const partialDir = path.join(__dirname, \"jsdoc\")\n  const partials = (await globby([\"*.hbs\"], {cwd: partialDir})).map(it => path.resolve(partialDir, it))\n\n  const files = [\n    path.join(source, \"builder/electron-builder.js\"),\n    path.join(source, \"publisher/electron-publish.js\"),\n    path.join(source, \"updater/electron-updater.js\"),\n    path.join(source, \"builder-lib/app-builder-lib.js\"),\n    path.join(source, \"builder-util-runtime/builder-util-runtime.js\"),\n    path.join(source, \"util/builder-util.js\"),\n  ]\n  const pages = [\n    {\n      page: \"api/electron-builder.md\", pageUrl: \"electron-builder\",\n      files\n    },\n  ]\n\n  const jsdoc2MdOptions = {\n    partial: partials,\n    \"name-format\": true,\n    \"helper\": [\n      path.join(partialDir, \"helpers.js\")\n    ],\n  }\n  await render2(files, jsdoc2MdOptions)\n  await render(pages, jsdoc2MdOptions)\n}\n\nasync function render2(files, jsdoc2MdOptions) {\n  const data = await jsdoc2md.getTemplateData(Object.assign({\n    files: pathSorter(files).map(it => path.resolve(source, it)),\n  }, jsdoc2MdOptions))\n\n  const dataMap = new Map()\n  for (const member of data) {\n    if (member.name.endsWith(\"MetadataDirectories\") || isInlinedMember(member)) {\n      member.inlined = true\n    }\n\n    dataMap.set(member.id, member)\n  }\n\n  const { Renderer, TypeNamePlace, Page } = require(\"./renderer/out/main\")\n  const renderer = new Renderer(dataMap)\n\n  const blockedPropertyName = new Set([\n    \"fileAssociations\", \"directories\", \"buildVersion\", \"mac\", \"linux\", \"win\", \"buildDependenciesFromSource\", \"afterPack\", \"remoteBuild\",\n    \"installerIcon\", \"include\", \"createDesktopShortcut\", \"displayLanguageSelector\", \"signingHashAlgorithms\", \"publisherName\",\n    \"forceCodeSigning\",\n  ])\n  renderer.isInsertHorizontalLineBefore = item => {\n    return blockedPropertyName.has(item.name)\n  }\n\n  const originalRenderTypeName = renderer.renderTypeName\n  renderer.renderTypeName = context => {\n    if (context.place === TypeNamePlace.INHERITED_FROM) {\n      // no need to include big PlatformSpecificBuildOptions to mac/win/linux docs\n      if (context.typeItem.name === \"PlatformSpecificBuildOptions\") {\n        return null\n      }\n\n      if (context.typeItem.name === \"BaseS3Options\") {\n        return \"\"\n      }\n\n      if (context.typeItem.name === \"LinuxTargetSpecificOptions\" && context.object.name === \"DebOptions\") {\n        return null\n      }\n      if (context.typeItem.name === \"TargetSpecificOptions\" && context.object.name === \"NsisOptions\") {\n        return null\n      }\n\n      // looks strange when on LinuxConfiguration page \"Inherited from `CommonLinuxOptions`:\" - no configuration inheritance in this case\n      if (context.object.name === \"LinuxConfiguration\" || (context.object.name === \"NsisOptions\" && (context.typeItem.name === \"CommonNsisOptions\" || context.typeItem.name === \"CommonWindowsInstallerConfiguration\"))) {\n        return \"\"\n      }\n    }\n\n    let types = context.types\n    if (types == null) {\n      types = [context.typeItem.id]\n    }\n\n    if (context.property!= null && context.property.name === \"publish\") {\n      return \"The [publish](/configuration/publish) options.\"\n    }\n\n    if (context.place === TypeNamePlace.PROPERTY) {\n      if (types.some(it => it.includes(\".FileSet\"))) {\n        const propertyName = context.property.name\n        let label = \"files\"\n        if (propertyName === \"extraResources\") {\n          label = \"extra resources\"\n        }\n        if (propertyName === \"extraFiles\") {\n          label = \"extra files\"\n        }\n        return `The [${label}](/configuration/contents#${propertyName.toLowerCase()}) configuration.`\n      }\n\n      if (context.property.name === \"sign\" && context.object.name === \"WindowsConfiguration\") {\n        return \"String | (configuration: CustomWindowsSignTaskConfiguration) => Promise\"\n      }\n      else if (context.property.name === \"plugs\" && context.object.name === \"SnapOptions\") {\n        return \"Array&lt;String | SnapOptions.PlugDescriptor&gt;\"\n      }\n      else if (context.object.name === \"Configuration\") {\n        if (context.property.name === \"afterPack\" || context.property.name === \"afterSign\" || context.property.name === \"afterAllArtifactBuild\" || context.property.name === \"onNodeModuleFile\") {\n          return \"\"\n        }\n        if (context.property.name === \"beforeBuild\") {\n          return \"(context: BeforeBuildContext) => Promise | null\"\n        }\n      }\n    }\n\n    if (types.some(it => it.endsWith(\"TargetConfiguration\"))) {\n      return \"String | [TargetConfiguration](/cli#targetconfiguration)\"\n    }\n    if (types.some(it => it.endsWith(\".Configuration\") || it === \"Configuration\")) {\n      // description contains link to.\n      return \"[Configuration](#configuration)\"\n    }\n    if (types.some(it => it.endsWith(\"GithubOptions\"))) {\n      // description contains link to.\n      return \"\"\n    }\n\n    if (types.some(it => it.endsWith(\"WindowsConfiguration\"))) {\n      return \"[WindowsConfiguration](win)\"\n    }\n    if (types.some(it => it.endsWith(\".NsisOptions\") || it === \"NsisOptions\")) {\n      return \"[NsisOptions](nsis)\"\n    }\n    if (types.some(it => it.endsWith(\"AppXOptions\"))) {\n      return \"[AppXOptions](appx)\"\n    }\n    if (types.some(it => it.endsWith(\"SquirrelWindowsOptions\"))) {\n      return \"[SquirrelWindowsOptions](squirrel-windows.md)\"\n    }\n\n    if (types.some(it => it.endsWith(\"MacConfiguration\"))) {\n      return \"[MacConfiguration](mac)\"\n    }\n    if (types.some(it => it.endsWith(\"DmgOptions\"))) {\n      return \"[DmgOptions](dmg)\"\n    }\n    if (types.some(it => it.endsWith(\"MasConfiguration\"))) {\n      return \"[MasConfiguration](mas)\"\n    }\n    if (types.some(it => it.endsWith(\"PkgOptions\"))) {\n      return \"[PkgOptions](pkg)\"\n    }\n\n    if (types.some(it => it.endsWith(\"LinuxConfiguration\"))) {\n      return \"[LinuxConfiguration](linux)\"\n    }\n    if (types.some(it => it.endsWith(\"FlatpakOptions\"))) {\n      return \"[FlatpakOptions](flatpak)\"\n    }\n    if (types.some(it => it.endsWith(\"SnapOptions\"))) {\n      return \"[SnapOptions](snap)\"\n    }\n    if (types.some(it => it.endsWith(\"AppImageOptions\")))",
  "import { Module } from '@nestjs/common';\nimport { UserPinService } from './user-pin.service';\nimport { UserPinController } from './user-pin.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserPin } from './model/user-pin.entity';\nimport { UserMessagerModule } from '../../user-messager/user-messager.module';\nimport { UserAccountModule } from '../user-account/user-account.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserPin]),\n    UserMessagerModule,\n    UserAccountModule,\n  ],\n  providers: [UserPinService],\n  controllers: [UserPinController],\n})\nexport class UserPinModule {}\n",
  "import { EnumBoardState } from './../../sdk/education/core/services/interface.d';\nimport { UploadManager, PPTProgressListener } from '@/utils/upload-manager';\nimport { AppStore } from '@/stores/app';\nimport { observable, action, computed, runInAction } from'mobx'\nimport { PPTProgressPhase } from '@/utils/upload-manager'\nimport { Room, PPTKind, ViewMode } from 'white-web-sdk'\nimport { BoardClient } from '@/components/netless-board/board-client';\nimport { get, isEmpty, omit } from 'lodash';\nimport { OSSConfig } from '@/utils/helper';\nimport OSS from 'ali-oss';\nimport uuidv4 from 'uuid/v4';\nimport { t } from '@/i18n';\nimport { EduUser, EduRoleType } from '@/sdk/education/interfaces';\n\nexport const resolveFileInfo = (file: any) => {\n  const fileName = encodeURI(file.name);\n  const fileType = fileName.substring(fileName.length, fileName.lastIndexOf('.'));\n  return {\n    fileName,\n    fileType\n  }\n}\n\nexport const ossConfig: OSSConfig = {\n  \"accessKeyId\": get(process.env, 'REACT_APP_YOUR_OWN_OSS_BUCKET_KEY', 'empty-placeholder'),\n  \"accessKeySecret\": get(process.env, 'REACT_APP_YOUR_OWN_OSS_BUCKET_SECRET', 'empty-placeholder'),\n  \"bucket\": get(process.env, 'REACT_APP_YOUR_OWN_OSS_BUCKET_NAME', 'empty-placeholder'),\n  // \"region\": process.env.REACT_APP_YOUR_OWN_OSS_BUCKET_REGION as string,\n  \"endpoint\": get(process.env, 'REACT_APP_YOUR_OWN_OSS_CDN_ACCELERATE', 'empty-placeholder'),\n  \"folder\": get(process.env, 'REACT_APP_YOUR_OWN_OSS_BUCKET_FOLDER', 'empty-placeholder'),\n}\n\nconst pathName = (path: string): string => {\n  const reg = /\\/([^/]*)\\//g;\n  reg.exec(path);\n  if (RegExp.$1 === 'aria') {\n      return '';\n  } else {\n      return RegExp.$1;\n  }\n}\n\nexport interface SceneItem {\n  file: {\n    name: string\n    type: string\n  }\n  path: string\n  rootPath: string\n}\n\nenum FollowState {\n  Follow = 1,\n  Freedom = 0\n}\n\nexport class BoardStore {\n\n  static items: any = [\n    {\n      name:'selector',\n      text: t('tool.selector')\n    },\n    {\n      name: 'pencil',\n      text: t('tool.pencil')\n    },\n    {\n      name:'rectangle',\n      text: t('tool.rectangle')\n    },\n    {\n      name: 'ellipse',\n      text: t('tool.ellipse')\n    },\n    {\n      name: 'text',\n      text: t('tool.text')\n    },\n    {\n      name: 'eraser',\n      text: t('tool.eraser')\n    },\n    {\n      name: 'color_picker',\n      text: t('tool.color_picker')\n    },\n    {\n      name: 'add',\n      text: t('tool.add')\n    },\n    {\n      name: 'upload',\n      text: t('tool.upload')\n    },\n    {\n      name: 'hand_tool',\n      text: t('tool.hand_tool')\n    }\n  ]\n\n  scenes: any[] = []\n\n  @observable\n  loading: boolean = false\n\n  @observable\n  converting: boolean = false\n\n  @observable\n  currentPage: number = 0\n\n  @observable\n  totalPage: number = 0\n\n  @observable\n  currentScene: any = '/init'\n\n  @observable\n  hasBoardPermission: number = 0\n\n  @observable\n  selector: string = '';\n\n  @observable\n  showFolder: boolean = false;\n\n  @action\n  closeFolder() {\n    this.showFolder = false\n  }\n\n  @action\n  openFolder() {\n    this.showFolder = true\n  }\n\n  @observable\n  lock: boolean = false\n\n  @observable\n  showUpload: boolean = false;\n\n  @observable\n  activeFooterItem: string = ''\n\n  @observable\n  uuid: string = '';\n\n  @observable\n  roomToken: string = '';\n\n  @observable\n  sceneItems: SceneItem[] = [];\n\n  @observable\n  activeScenePath: string = '/init'\n\n  @action\n  changeScenePath(path: string) {\n    this.activeScenePath = path\n    if (this.online && this.room) {\n      this.room.setScenePath(this.activeScenePath)\n    }\n  }\n\n  menuTitle: string = '\u8bfe\u4ef6\u76ee\u5f55'\n\n  appStore!: AppStore\n\n  @observable\n  _boardClient?: BoardClient = undefined\n\n  @computed\n  get boardClient(): BoardClient {\n    return this._boardClient as BoardClient;\n  }\n\n  ossClient: OSS\n\n  @observable\n  ready: boolean = false\n\n  constructor(appStore: AppStore) {\n    this.appStore = appStore\n    this._boardClient = undefined\n    this.ossClient = new OSS(ossConfig)\n  }\n\n  @observable\n  online: boolean = false;\n\n  get room(): Room {\n    return this.boardClient.room\n  }\n\n  get localUser(): EduUser {\n    return this.appStore.roomStore.roomManager.localUser.user\n  }\n\n  @observable\n  follow: number = 0\n\n\n  @observable\n  grantUsers: any[] = []\n\n  @observable\n  permission: number = 0\n\n  get localUserUuid() {\n    return this.appStore.userUuid\n  }\n\n  @action\n  async init() {\n      let {\n        info: {\n          boardId,\n          boardToken\n        },\n      } = await this.boardService.getBoardInfo()\n      await this.join({\n        uuid: boardId,\n        roomToken: boardToken,\n        // $el: dom,\n        role: this.userRole,\n        isWritable: true,\n        disableDeviceInputs: true,\n        disableCameraTransform: true,\n        disableAutoResize: false\n      })\n      const grantUsers = get(this.room.state.globalState, 'grantUsers', [])\n      const follow = get(this.room.state.globalState, 'follow', 0)\n      this.grantUsers = grantUsers\n      const boardUser = this.grantUsers.includes(this.localUserUuid)\n      if (boardUser) {\n        this._grantPermission = true\n      }\n      this.follow = follow\n      // \u9ed8\u8ba4\u53ea\u6709\u8001\u5e08\u4e0d\u7528\u7981\u6b62\u8ddf\u968f\n      if (this.userRole!== 'teacher') {\n        if (this.boardClient.room && this.boardClient.room.isWritable) {\n          if (this.follow === FollowState.Follow) {\n            // await this.setWritable(true)\n            this.room.setViewMode(ViewMode.Broadcaster)\n            this.room.disableCameraTransform = true\n            this.room.disableDeviceInputs = true\n            this.lock = true\n          }\n          if (this.follow === FollowState.Freedom) {\n            // await this.setWritable(true)\n            this.room.setViewMode(ViewMode.Freedom)\n            this.room.disableCameraTransform = false\n            this.room.disableDeviceInputs = false\n            this.lock = false\n          }\n        }\n      } else {\n        this.room.disableCameraTransform = false\n      }\n\n      if (this.hasPermission) {\n        await this.setWritable(true)\n      } else {\n        await this.setWritable(this._grantPermission as boolean)\n      }\n      this.ready = true\n  }\n\n  @action\n  setFollow(v: number) {\n    this.follow = v\n\n    if (this.follow === FollowState.Follow) {\n      this.lock = true\n    } else {\n      this.lock = false\n    }\n\n    const",
  "/* Replace with your SQL commands */\nCREATE TABLE t_phases\n(\n  session_id UUID REFERENCES t_sessions (id) ON DELETE CASCADE,\n  phase_no INT NOT NULL,\n  start_time TIMESTAMPTZ,\n  clearing_time TIMESTAMPTZ,\n  planning_time TIMESTAMPTZ,\n  bids_allowed BOOLEAN DEFAULT true,\n  clearing_available BOOLEAN DEFAULT false,\n  plannings_allowed BOOLEAN DEFAULT true,\n  results_available BOOLEAN DEFAULT false,\n  status TEXT CHECK (status IN ('open', 'closed')),\n  PRIMARY KEY (session_id, phase_no)\n);",
  "<html>\n<meta http-equiv=\"Refresh\" content=\"0; url='https://www.jackbotein.com/ICJ'\" />\n</html>\n",
  "import React from'react';\nimport { Row, Col, Progress, Badge } from'reactstrap';\n\nclass InQueueMini extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getPlaceInQueue = this.getPlaceInQueue.bind(this);\n    this.getProgressViews = this.getProgressViews.bind(this);\n  }\n\n  getPlaceInQueue() {\n    let i;\n    for (i = 0; i < this.props.items.length; i++) {\n      if (this.props.items[i].user === this.props.userId) {\n        return i;\n      }\n    }\n  }\n\n  getProgressViews() {\n    const num = this.props.items.length;\n    let placeInQueue = this.getPlaceInQueue();\n    const progressBars = [];\n    let unit = 1 / num;\n    let i;\n    for (i = num - 1; i >= 0; i--) {\n      let progressBar = (\n        <Progress\n          bar\n          animated={placeInQueue === i? true : false}\n          color={placeInQueue === i? 'danger' :'success'}\n          value={unit * 100}\n          key={i.toString()}\n        >\n          {placeInQueue === i? 'You Are Here' : ''}\n        </Progress>\n      );\n      progressBars.push(progressBar);\n    }\n    return progressBars;\n  }\n\n  render() {\n    const queueTitle = this.props.title!= null? this.props.title : '';\n    return (\n      <>\n        <div\n          onClick={() =>\n            this.props.showQueueDetail('Q' + this.props.queueId.toString())\n          }\n          style={{ cursor: 'pointer' }}\n        >\n          <Row>\n            <Col>\n              <h6>{queueTitle}</h6>\n            </Col>\n          </Row>\n          <Row>\n            <Col sm='11'>\n              <Progress multi>{this.getProgressViews()}</Progress>\n            </Col>\n            <Col>\n              {this.props.items[this.getPlaceInQueue()].status === 'Waiting'? (\n                <Badge color='warning'>\n                  Waiting\n                  <div className='icon-big text-center icon-warning'>\n                    <i className='nc-icon nc-time-alarm' />\n                  </div>\n                </Badge>\n              ) : (\n                <Badge color='primary'>\n                  Its your turn!\n                  <div className='icon-big text-center icon-success'>\n                    <i className='nc-icon nc-spaceship' />\n                  </div>\n                </Badge>\n              )}\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default InQueueMini;\n",
  ".footy {\n    font-size: 10px;\n    position: absolute;\n    text-align: center;\n    width: 100%;\n    bottom: 0;\n}",
  "---\ntitle: Ge Win Ed A\nletter: G\npermalink: \"/definitions/bld-ge-win-ed-a.html\"\nbody: In Saxon law. The ancient convention of the people to decide a cause\npublished_at: '2018-07-07'\nsource: Black's Law Dictionary 2nd Ed (1910)\nlayout: post\n---",
  "import { cert, getApps, initializeApp } from \"firebase-admin/app\";\nimport { FIRESTORE_CLIENT_EMAIL, FIRESTORE_PRIVATE_KEY } from \"../keys\";\n\nlet firebaseApp = getApps()[0];\n\nif (!firebaseApp)\n  firebaseApp = initializeApp({\n    credential: cert({\n      projectId: \"solana-signin\",\n      privateKey: FIRESTORE_PRIVATE_KEY,\n      clientEmail: FIRESTORE_CLIENT_EMAIL,\n    }),\n  });\n\nexport default firebaseApp;\n",
  "<!DOCTYPE html>\n<html lang=\"pt-br\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>V\u00eddeos com HTML5</title>\n</head>\n\n<body>\n    <h1>Inserindo v\u00eddeos hospedados localmente</h1>\n    <p>Este v\u00eddeo est\u00e1 hospedado no meu pr\u00f3prio servidor.</p>\n    <video width=\"560\" controls>\n        <source src=\"midia/meu-video.mp4\" type=\"video/mp4\">\n        <source src=\"midia/Meu-Video-1.m4v\" type=\"video/m4v\">\n        <p>Seu nevegador n\u00e3o \u00e9 compativel com o formato do video</p>\n    </video>\n    <h1>Inserindo v\u00eddeos do YOUTUBE</h1>\n    <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/eF9Qoc6p_4Q\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</body>\n</html>",
  "<?php\n\nnamespace App\\Model;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Suplier extends Model\n{\n    protected $fillable = ['name', 'company_name', 'tax_id', 'bank_id', 'branch', 'phone','mobile', 'email', 'address', 'description','map'];\n    protected $casts = [\n       'map' => 'array',\n    ];\n    public function setNameAttribute($value)\n    {\n        $this->attributes['name'] = $value;\n        $this->attributes['slug'] = str_slug($value);\n    }\n}\n",
  "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n  <title></title>\n  <style type=\"text/css\">\n\n* {\n  font-family: -apple-system, BlinkMacSystemFont,\n      \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\",\n      \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n      sans-serif;\n  font-size: 16px;\n}\n\n  </style>\n</head>\n<body>\n\n<p>Welcome to the <b>cocoAspell</b> Installation Program.  You will be guided through the steps necessary to install this software.</p>\n\n</body>\n</html>",
  "\ufeffnamespace TrueTalk.Speech\r\n{\r\n    public static class Pathos\r\n    {\r\n    }\r\n}\r\n",
  "// Copyright 2016 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// package route -- go2cs converted at 2020 October 09 04:51:43 UTC\n// import \"golang.org/x/net/route\" ==> using route = go.golang.org.x.net.route_package\n// Original source: C:\\Users\\ritchie\\go\\src\\golang.org\\x\\net\\route\\sys_netbsd.go\n\nusing static go.builtin;\n\nnamespace go {\nnamespace golang.org {\nnamespace x {\nnamespace net\n{\n    public static partial class route_package\n    {\n        public static bool parseable(this RIBType typ)\n        {\n            return true;\n        }\n\n        // RouteMetrics represents route metrics.\n        public partial struct RouteMetrics\n        {\n            public long PathMTU; // path maximum transmission unit\n        }\n\n        // SysType implements the SysType method of Sys interface.\n        private static SysType SysType(this ptr<RouteMetrics> _addr_rmx)\n        {\n            ref RouteMetrics rmx = ref _addr_rmx.val;\n\n            return SysMetrics;\n        }\n\n        // Sys implements the Sys method of Message interface.\n        private static slice<Sys> Sys(this ptr<RouteMessage> _addr_m)\n        {\n            ref RouteMessage m = ref _addr_m.val;\n\n            return new slice<Sys>(new Sys[] { &RouteMetrics{PathMTU:int(nativeEndian.Uint64(m.raw[m.extOff+8:m.extOff+16])),} });\n        }\n\n        // RouteMetrics represents route metrics.\n        public partial struct InterfaceMetrics\n        {\n            public long Type; // interface type\n            public long MTU; // maximum transmission unit\n        }\n\n        // SysType implements the SysType method of Sys interface.\n        private static SysType SysType(this ptr<InterfaceMetrics> _addr_imx)\n        {\n            ref InterfaceMetrics imx = ref _addr_imx.val;\n\n            return SysMetrics;\n        }\n\n        // Sys implements the Sys method of Message interface.\n        private static slice<Sys> Sys(this ptr<InterfaceMessage> _addr_m)\n        {\n            ref InterfaceMessage m = ref _addr_m.val;\n\n            return new slice<Sys>(new Sys[] { &InterfaceMetrics{Type:int(m.raw[m.extOff]),MTU:int(nativeEndian.Uint32(m.raw[m.extOff+8:m.extOff+12])),} });\n        }\n\n        private static (long, map<long, ptr<wireFormat>>) probeRoutingStack()\n        {\n            long _p0 = default;\n            map<long, ptr<wireFormat>> _p0 = default;\n\n            ptr<wireFormat> rtm = addr(new wireFormat(extOff:40,bodyOff:sizeofRtMsghdrNetBSD7));\n            rtm.parse = rtm.parseRouteMessage;\n            ptr<wireFormat> ifm = addr(new wireFormat(extOff:16,bodyOff:sizeofIfMsghdrNetBSD7));\n            ifm.parse = ifm.parseInterfaceMessage;\n            ptr<wireFormat> ifam = addr(new wireFormat(extOff:sizeofIfaMsghdrNetBSD7,bodyOff:sizeofIfaMsghdrNetBSD7));\n            ifam.parse = ifam.parseInterfaceAddrMessage;\n            ptr<wireFormat> ifanm = addr(new wireFormat(extOff:sizeofIfAnnouncemsghdrNetBSD7,bodyOff:sizeofIfAnnouncemsghdrNetBSD7));\n            ifanm.parse = ifanm.parseInterfaceAnnounceMessage; \n            // NetBSD 6 and above kernels require 64-bit aligned access to\n            // routing facilities.\n            return (8L, /* TODO: Fix this in ScannerBase_Expression::ExitCompositeLit */ new map<long, ptr<wireFormat>>{sysRTM_ADD:rtm,sysRTM_DELETE:rtm,sysRTM_CHANGE:rtm,sysRTM_GET:rtm,sysRTM_LOSING:rtm,sysRTM_REDIRECT:rtm,sysRTM_MISS:rtm,sysRTM_LOCK:rtm,sysRTM_RESOLVE:rtm,sysRTM_NEWADDR:ifam,sysRTM_DELADDR:ifam,sysRTM_IFANNOUNCE:ifanm,sysRTM_IFINFO:ifm,});\n\n        }\n    }\n}}}}\n",
  "#!/usr/bin/python\n\n\"\"\"\n/*********************************************************************\n * Software License Agreement (BSD License)\n *\n * Copyright (c) 2021\n *\n * Balint Cristian <cristian dot balint at gmail dot com>\n *\n * NextPNR brute force experiment result parser.\n *\n *\n *  Redistribution and use in source and binary forms, with or without\n *  modification, are permitted provided that the following conditions\n *  are met:\n *\n *   * Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n *\n *   * Redistributions in binary form must reproduce the above\n *     copyright notice, this list of conditions and the following\n *     disclaimer in the documentation and/or other materials provided\n *     with the distribution.\n *\n *   * Neither the name of the copyright holders nor the names of its\n *     contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n *  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n *\n *********************************************************************/\n\"\"\"\n\n\"\"\"\n  parse-results.py (Data parser)\n\"\"\"\n\nimport os\nimport sys\nimport time\nimport glob\nimport lzma\nimport subprocess\nimport numpy as np\n\nopath = \"experiments\"\n\nnLastTick = -1\ndef TermProgress( dfComplete, pszMessage, pProgressArg ):\n\n    global nLastTick\n    nThisTick = (int) (dfComplete * 40.0)\n\n    if nThisTick < 0:\n        nThisTick = 0\n    if nThisTick > 40:\n        nThisTick = 40\n\n    # Have we started a new progress run?  \n    if nThisTick < nLastTick and nLastTick >= 39:\n        nLastTick = -1\n\n    if nThisTick <= nLastTick:\n        return True\n\n    while nThisTick > nLastTick:\n        nLastTick = nLastTick + 1\n        if (nLastTick % 4) == 0:\n            sys.stdout.write('%d' % ((nLastTick / 4) * 10))\n        else:\n            sys.stdout.write('.')\n\n    if nThisTick == 40:\n        print(\" - done.\" )\n    else:\n        sys.stdout.flush()\n\n    return True\n\ndef main():\n\n  alpha   = np.nan\n  beta    = np.nan\n  critexp = np.nan\n  tweigth = np.nan\n\n  filenames = glob.glob(\"%s/*.xz\" % opath)\n\n  idx = 0\n  stats = {}\n  for f in filenames:\n\n    clk = {}\n    data = { 'alpha': np.nan,\n             'beta': np.nan,\n             'critexp': np.nan,\n             'tweight': np.nan,\n             'clkmax': {},\n             'cells': {\n                 'LUT4': np.nan,\n                 'LUT4_DFF': np.nan,\n                 'DFF': np.nan,\n                 'CARRY': np.nan,\n                 'LEGAL': np.nan }\n           }\n\n    # split to lines\n    lines = lzma.open(f).read().decode().splitlines()\n\n    # check if log is terminated\n    if ( not \"Info: Program finished normally\" in lines[-1] ):\n      print(\"Logfile unterminated SKIP.\")\n      continue\n\n    for e in f.split('.log')[0].split('-'):\n      if ('alpha' in e):\n        data['alpha'] = float(e.split('_')[1])\n        continue\n      if ('beta' in e):\n        data['beta'] = float(e.split('_')[1])\n        continue\n      if ('critexp' in e):\n        data['critexp'] = int(e.split('_')[1])\n        continue\n      if ('tweight' in e):\n        data['tweight'] = int(e.split('_')[1])\n        continue\n\n    # iterate lines\n    for l in lines:\n      if 'LCs used as LUT4 only' in l:\n        data['cells']['LUT4'] = int(l.split()[1])\n        continue\n      if 'LCs used as LUT4 and DFF' in l:\n        data['cells']['LUT4_DFF'] = int(l.split()[1])\n        continue\n      if 'LCs used as DFF only' in l:\n        data['cells']['DFF'] = int(l.split()[1])\n        continue\n      if 'LCs used as CARRY only' in l:\n        data['cells']['CARRY'] = int(l.split()[1])\n        continue\n      if 'LCs used to legalise carry chains' in l:\n        data['cells']['LEGAL'] = int(l.split()[1])\n      if 'Max frequency for clock' in l:\n        clkname = l.split()[5].replace('\\'','').replace(':','')\n        clk['%s' % clkname] = float(l.split()[6])\n        continue\n\n    # all design clocks\n    data['clkmax'] = clk\n\n    idx += 1\n    stats[idx] = data\n    TermProgress( float(idx) / float(len(filenames)), None, None)\n\n  import json\n  with open('log-data.json', 'w') as jsonfile:\n    json.dump(stats, jsonfile, indent=4)\n\nif __name__ == \"__main__\":\n  main()\n",
  "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\npackage org.netbeans.modules.php.project.ui;\n\nimport java.awt.EventQueue;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport javax.swing.GroupLayout;\nimport javax.swing.GroupLayout.Alignment;\nimport javax.swing.JButton;\nimport javax.swing.JLabel;\nimport javax.swing.JPanel;\nimport javax.swing.JTextField;\nimport javax.swing.LayoutStyle.ComponentPlacement;\nimport javax.swing.event.DocumentEvent;\nimport javax.swing.event.DocumentListener;\nimport org.netbeans.api.project.ProjectUtils;\nimport org.netbeans.modules.php.project.PhpProject;\nimport org.openide.DialogDescriptor;\nimport org.openide.DialogDisplayer;\nimport org.openide.NotificationLineSupport;\nimport org.openide.awt.Mnemonics;\nimport org.openide.util.NbBundle;\n\n/**\n * @author Tomas Mysik\n */\npublic class BrowseTestSources extends JPanel {\n    private static final long serialVersionUID = 1463321897654268L;\n\n    private final PhpProject phpProject;\n    private final String info;\n\n    private volatile DialogDescriptor dialogDescriptor;\n    private volatile NotificationLineSupport notificationLineSupport;\n    private volatile String testSources = null;\n\n\n    public BrowseTestSources(PhpProject phpProject, String title) {\n        this(phpProject, title, null);\n    }\n\n    public BrowseTestSources(PhpProject phpProject, String title, String info) {\n        assert EventQueue.isDispatchThread();\n        assert phpProject!= null;\n        assert title!= null;\n\n        this.phpProject = phpProject;\n        this.info = info;\n\n        initComponents();\n        infoLabel.setText(title);\n        testSourcesTextField.getDocument().addDocumentListener(new DocumentListener() {\n            @Override\n            public void insertUpdate(DocumentEvent e) {\n                processUpdate();\n            }\n\n            @Override\n            public void removeUpdate(DocumentEvent e) {\n                processUpdate();\n            }\n\n            @Override\n            public void changedUpdate(DocumentEvent e) {\n                processUpdate();\n            }\n\n            private void processUpdate() {\n                testSources = testSourcesTextField.getText();\n                validateTestSources();\n            }\n        });\n    }\n\n    /**\n     * @return <code>true</code> if OK button is chosen.\n     */\n    public boolean open() {\n        dialogDescriptor = new DialogDescriptor(\n                this,\n                NbBundle.getMessage(BrowseTestSources.class, \"LBL_DirectoryForProject\", ProjectUtils.getInformation(phpProject).getDisplayName()),\n                true,\n                DialogDescriptor.OK_CANCEL_OPTION,\n                DialogDescriptor.OK_OPTION,\n                null);\n        notificationLineSupport = dialogDescriptor.createNotificationLineSupport();\n        if (info!= null) {\n            notificationLineSupport.setInformationMessage(info);\n        }\n        dialogDescriptor.setValid(false);\n        return DialogDisplayer.getDefault().notify(dialogDescriptor) == DialogDescriptor.OK_OPTION;\n    }\n\n    public String getTestSources() {\n        return testSources;\n    }\n\n    @NbBundle.Messages(\"BrowseTestSources.includePath.info=Add testing provider classes (e.g. PHPUnit) to Global Include Path (Tools > Options > PHP).\")\n    void validateTestSources() {\n        assert notificationLineSupport!= null;\n\n        assert testSources.equals(testSourcesTextField.getText()) : testSources + \"!= \" + testSourcesTextField.getText();\n        String error = Utils.validateTestSources(phpProject, testSources);\n        if (error!= null) {\n            notificationLineSupport.setErrorMessage(error);\n            dialogDescriptor.setValid(false);\n            return;\n        }\n\n        String warning = Utils.warnTestSources(phpProject, testSources);\n        if (warning!= null) {\n            notificationLineSupport.setWarningMessage(warning);\n            dialogDescriptor.setValid(true);\n            return;\n        }\n\n        notificationLineSupport.setInformationMessage(Bundle.BrowseTestSources_includePath_info());\n        dialogDescriptor.setValid(true);\n    }\n\n    /** This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        infoLabel = new JLabel();\n        testSourcesLabel = new JLabel();\n        testSourcesTextField = new JTextField();\n        testSourcesBrowseButton = new JButton();\n\n        Mnemonics.setLocalizedText(infoLabel, \"dummy\"); // NOI18N\n\n        testSourcesLabel.setLabelFor(testSourcesTextField);\n        Mnemonics.setLocalizedText(testSourcesLabel, NbBundle.getMessage(BrowseTestSources.class, \"BrowseTestSources.testSourcesLabel.text\")); // NOI18N\n\n        Mnemonics.setLocalizedText(testSourcesBrowseButton, NbBundle.getMessage(BrowseTestSources.class, \"BrowseTestSources.testSourcesBrowseButton.text\")); // NOI18N\n        testSourcesBrowseButton.addActionListener(new ActionListener() {\n            public void actionPerformed(ActionEvent evt) {\n                testSourcesBrowseButtonActionPerformed(evt);\n            }\n        });\n\n        GroupLayout layout = new GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(Alignment.LEADING)\n           .addGroup(layout.createSequentialGroup()\n               .addContainerGap()\n               .addGroup(layout.createParallelGroup(Alignment.LEADING)\n                   .addComponent(infoLabel)\n                   .addGroup(layout.createSequentialGroup()\n                       .addComponent(testSourcesLabel)\n                       .addPreferredGap(ComponentPlacement.RELATED)\n                       .addComponent(testSourcesTextField, GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)\n                       .addPreferredGap(ComponentPlacement.RELATED)\n                       .addComponent(testSourcesBrowseButton)))\n               .addContainerGap())\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(Alignment.LEADING)\n           .addGroup(layout.createSequentialGroup()\n               .addContainerGap()\n               .addComponent(infoLabel)\n               .addPreferredGap(ComponentPlacement.RELATED)\n               .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n                   .addComponent(testSourcesLabel)\n                   .addComponent(testSourcesTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)\n                   .addComponent(testSourcesBrowseButton))\n               .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n\n        testSourcesLabel.getAccessibleContext().setAccessibleName(NbBundle.getMessage(BrowseTestSources.class, \"BrowseTestSources.testSourcesLabel.AccessibleContext.accessibleName\")); // NOI18N\n        testSourcesLabel.getAccessibleContext().setAccessibleDescription(NbBundle.getMessage(BrowseTestSources.class, \"BrowseTestSources.testSourcesLabel.AccessibleContext.accessibleDescription\")); // NOI18N\n        testSourcesTextField.getAccessibleContext().setAccessibleName(NbBundle.getMessage(BrowseTestSources.class, \"BrowseTestSources.testSourcesTextField.AccessibleContext.accessibleName\")); // NOI18N\n        testSourcesTextField.get",
  "from jks import *\n",
  "use {\n    borsh::{BorshDeserialize, BorshSerialize},\n    solana_program::{\n        instruction::{\n            AccountMeta,\n            Instruction,\n        },\n        pubkey::Pubkey,\n        system_program,\n        sysvar,\n    },\n    crate::{\n        id,\n        state::Receiver,\n    },\n};\nuse crate::state::Document;\n\n#[derive(BorshSerialize, BorshDeserialize, Debug)]\npub enum DocumentsInstruction {\n    /// Create a new receiver account\n    ///\n    /// Accounts expected:\n    ///\n    /// 0. `[signer]` Sender account/Funder account (must be a system account)\n    /// 1. `[]` PDA address of the receiver of the document\n    /// 2. `[]` Wallet address of the document receiver\n    /// 3. `[]` Rent sysvar\n    /// 4. `[]` System program\n    CreateReceiverAccount,\n\n    /// Create a new document account\n    ///\n    /// Accounts expected:\n    ///\n    /// 0. `[signer]` Sender account/Funding account (must be a system account)\n    /// 1. `[writable]` PDA address of the receiver of the document\n    /// 2. `[writable]` PDA address of the document\n    /// 3. `[]` Wallet address of the document receiver\n    /// 4. `[]` Rent sysvar\n    /// 5. `[]` Clock sysvar\n    /// 6. `[]` System program\n    SendDocument {\n        /// Link of the meta file and checksum\n        data: Vec<u8>,\n    },\n}\n\n/// Creates CreateReceiverAccount instruction\npub fn create_receiver_account(\n    funder_address: &Pubkey,\n    wallet_address: &Pubkey,\n) -> Instruction {\n    let receiver_pda_address = Receiver::find_pda_address(\n        &wallet_address,\n        &id(),\n    );\n\n    Instruction::new_with_borsh(\n        id(),\n        &DocumentsInstruction::CreateReceiverAccount {},\n        vec![\n            AccountMeta::new(*funder_address, true),\n            AccountMeta::new(receiver_pda_address, false),\n            AccountMeta::new(*wallet_address, false),\n            AccountMeta::new_readonly(sysvar::rent::id(), false),\n            AccountMeta::new_readonly(system_program::id(), false),\n        ],\n    )\n}\n\n/// Creates SendDocument instruction\npub fn send_document(\n    funder_address: &Pubkey,\n    wallet_address: &Pubkey,\n    document_index: u32,\n    document_data: Vec<u8>,\n) -> Instruction {\n    let receiver_pda_address = Receiver::find_pda_address(\n        &wallet_address,\n        &id(),\n    );\n\n    let document_pda_address = Document::find_pda_address(\n        document_index,\n        &wallet_address,\n        &id(),\n    );\n\n    Instruction::new_with_borsh(\n        id(),\n        &DocumentsInstruction::SendDocument {\n            data: document_data,\n        },\n        vec![\n            AccountMeta::new(*funder_address, true),\n            AccountMeta::new(receiver_pda_address, false),\n            AccountMeta::new(document_pda_address, false),\n            AccountMeta::new(*wallet_address, false),\n            AccountMeta::new_readonly(sysvar::rent::id(), false),\n            AccountMeta::new_readonly(sysvar::clock::id(), false),\n            AccountMeta::new_readonly(system_program::id(), false),\n        ],\n    )\n}",
  "/*\n * Copyright 2012-present Pixate, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//\n//  PXVirtualControlBase.h\n//  Pixate\n//\n//  Modified by Anton Matosov on 12/30/15.\n//  Created by Kevin Lindsey on 10/16/12.\n//  Copyright (c) 2012 Pixate, Inc. All rights reserved.\n//\n\n#import <Foundation/Foundation.h>\n#import \"PXVirtualControl.h\"\n#import \"PXStylerContext.h\"\n\ntypedef void(^PXViewStyleUpdaterBlock)(PXRuleSet *ruleSet, PXStylerContext *context);\n\n@interface PXVirtualStyleableControl : NSObject <PXVirtualControl>\n\n@property (nonatomic, copy) NSArray *pxStyleChildren;\n@property (nonatomic, copy) NSArray *viewStylers;\n@property (nonatomic, copy) NSArray *supportedPseudoClasses;\n@property (nonatomic, copy) NSString *defaultPseudoClass;\n@property (nonatomic, weak) CALayer *layer;\n\n- (instancetype)initWithParent:(id<PXStyleable>)parent elementName:(NSString *)elementName;\n- (instancetype)initWithParent:(id<PXStyleable>)parent elementName:(NSString *)elementName viewStyleUpdaterBlock:(PXViewStyleUpdaterBlock)block NS_DESIGNATED_INITIALIZER;\n\n@end\n",
  "#!/bin/bash\n\ncp -R /var/www/tmp/. /var/www/html/\nchown -R www-data:www-data /var/www/html\n\nexec \"$@\"\n",
  "---\nlayout: page\ntitle: CanDIG Blog\nsubtitle: Blog posts from the CanDIG team\npermalink: blog/index.html\nsitemap:\n  changefreq: 'weekly'\n  priority: 0.75\n---\n\n<!-- {% for post in site.posts %} -->\n<!-- <h1> {{post.title}} </h1> -->\n<!-- {% endfor %} -->\n\n\n{% for post in site.posts %}\n<section class=\"blog-entries\">\n  {% if post.header-media.size > 0 %}\n  <header class=\"media\">\n    {{post.header-media}}\n  </header\n  {% endif %}\n  <h1 class=\"post-title\"><a href=\"{% if site.baseurl == \"/\" %}{{ post.url }}{% else %}{{ post.url | prepend: site.baseurl }}{% endif %}\">{{post.title}}</a></h1>\n  <div class=\"blog-data\">\n    <div class=\"author-data\">\n        <!-- Not currently implemented - remove link for now (see https://github.com/CanDIG/candig.github.io/issues/42), implement when needed -->\n        <!-- <a class=\"post-author\" href=\"{% if site.baseurl == \"/\" %}/author{% else %}{{ site.baseurl }}/author{% endif %}\">{{ post.author }}</a> -->\n        {{ post.author }}\n    </div>\n    {% if post.tags.size > 0 %}\n      <ul class=\"tags\">\n        {% for tag in post.tags %}\n          <li><a href=\"{% if site.baseurl == \"/\" %}/tag.html#{{ tag }}{% else %}{{ site.baseurl }}/tag.html#{{ tag }}{% endif %}\" class=\"tag\">{{ tag }}</a></li>\n        {% endfor %}\n      </ul>\n    {% endif %}\n  <p class=\"post-content\">{{ post.content | split:\"<!-- more -->\" | first | strip_html | truncatewords: 85 }}</p>\n  <a class=\"read-more\" href=\"{% if site.baseurl == \"/\" %}{{ post.url }}{% else %}{{ post.url | prepend: site.baseurl }}{% endif %}\">Continue...</a>\n  </div>\n\n\n</section>\n\n{% endfor %}\n",
  "package main\n\nimport (\n\t\"fmt\"\n\t\"time\"\n)\n\nfunc main() {\n\n\tfmt.Println(\"Epoch time:\", time.Now().Unix())\n\tt := time.Now()\n\tfmt.Println(t, t.Format(time.RFC3339))\n\tfmt.Println(t.Weekday(), t.Day(), t.Month(), t.Year())\n\ttime.Sleep(time.Second)\n\tt1 := time.Now()\n\tfmt.Println(\"Time difference:\", t1.Sub(t))\n\n\tformatT := t.Format(\"01 January 2006\")\n\tfmt.Println(formatT)\n\tloc, _ := time.LoadLocation(\"Europe/London\")\n\tlondonTime := t.In(loc)\n\tfmt.Println(\"London:\", londonTime)\n\n\tmyDate := \"23 May 2017\"\n\td, _ := time.Parse(\"02 January 2006\", myDate)\n\tfmt.Println(d)\n\n\tmyDate1 := \"23 May 2016\"\n\td1, _ := time.Parse(\"02 February 2006\", myDate1)\n\tfmt.Println(d1)\n\n\tmyDT := \"Tuesday 23 May 2017 at 23:36\"\n\tdt, _ := time.Parse(\"Monday 02 January 2006 at 15:04\", myDT)\n\tfmt.Println(dt)\n}\n",
  "@extends('adminLTE.layout')\n\n@push('title')\nForm Pengiriman\n@endpush\n\n@push('page-name')\nPengiriman\n@endpush\n\n@section('content')\n\n<div class=\"row\">\n  <div class=\"col-md-12\">\n    <div class=\"card card-primary\">\n      <!-- form start -->\n      <form role=\"form\" method=\"POST\" action=\"{{ route($resource.'.store') }}?input-delivery=true\">\n        @csrf\n\n        <input type=\"hidden\" name=\"id\" value=\"{{isset($order)? $order->id:''}}\" />\n        <input id=\"delivery_status\" type=\"hidden\" name=\"delivery_status\" value=\"{{isset($order)? $order->delivery_status:0}}\" />\n        <input id=\"order_id\" type=\"hidden\" name=\"order_id\" value=\"{{isset($order)? $order->order_id:0}}\" />\n\n        <div class=\"card-body\">\n          <h4>Data Product</h4>\n          <div class=\"row\">\n          </div>\n\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th style=\"vertical-align: middle; text-align: center\" rowspan=\"2\" style=\"width: 10px\">#</th>\n                <th style=\"vertical-align: middle; text-align: center\" rowspan=\"2\">Name</th>\n                <th style=\"vertical-align: middle; text-align: center\" rowspan=\"2\">Price</th>\n                <th style=\"vertical-align: middle; text-align: center\" rowspan=\"2\">Qty</th>\n                <th style=\"vertical-align: middle; text-align: center\" rowspan=\"2\">Ttl. Price</th>\n                <th style=\"vertical-align: middle; text-align: center\" colspan=\"2\">Actual</th>\n              </tr>\n              <tr>\n                <th style=\"vertical-align: middle; text-align: center; width: 80px\">Qty</th>\n                <th style=\"vertical-align: middle; text-align: center; width: 200px\">Ttl. Price</th>\n              </tr>\n            </thead>\n            @if (!count($products))\n            <tr>\n              <td colspan=\"5\" class=\"text-center\">@lang('general.not_found')</td>\n            </tr>\n            @endif\n            <tbody>\n              @foreach ($products as $key => $item)\n              @php\n                  $prod = $item->product;\n              @endphp\n              <tr class=\"item-row\">\n                <td style=\"vertical-align: middle;\" class=\"text-center\">{{ $key+1 }}</td>\n                <td style=\"vertical-align: middle;\">{{ $prod->name }}</td>\n                <td style=\"vertical-align: middle;\" class=\"price\" data-value=\"{{$item->price}}\">Rp. {{ number_format($item->price) }}</td>\n                <td style=\"vertical-align: middle;\">{{ $item->qty }}</td>\n                <td style=\"vertical-align: middle;\">Rp. {{ number_format($item->qty*$item->price) }}</td>\n                \n                <td style=\"vertical-align: middle;\">\n                  <input type=\"hidden\" name=\"product[{{$key}}][order_product_id]\" class=\"form-control \" value=\"{{$item->id}}\"/>\n                  {{-- <input type=\"hidden\" name=\"product[{{$key}}][order_id]\" class=\"form-control \" value=\"{{$item->order_id}}\"/> --}}\n                  <input @if ($order->delivery_status > 0) readonly @endif  name=\"product[{{$key}}][actual_qty]\" class=\"form-control actual_qty\" value=\"{{$item->actual_qty}}\"/>\n                </td>\n\n                <td style=\"vertical-align: middle;\">\n                  <input data-currency name=\"product[{{$key}}][actual_total]\" class=\"form-control actual_total\" value=\"{{$item->actual_total}}\" readonly/>\n                </td>\n\n              </tr>\n              @endforeach\n\n              <tr>\n                <td style=\"vertical-align: middle\" class=\"text-right\" colspan=\"5\">Total Actual</td>\n                <td style=\"vertical-align: middle\"><input readonly type=\"text\" class=\"form-control ttl_actual_qty\" name=\"ttl_actual_qty\" value=\"{{$order->order->ttl_actual_qty}}\" /></td>\n                <td style=\"vertical-align: middle\"><input readonly data-currency type=\"text\" class=\"form-control ttl_actual_total\" name=\"ttl_actual_total\" value=\"{{$order->order->ttl_actual_total}}\" /></td>\n            </tbody>\n          </table>\n        </div>\n        <!-- /.card-body -->\n\n        <div class=\"card-footer\">\n          <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn btn-secondary\" onclick=\"history.back()\"><i class=\"fa fa-arrow-left\"></i>\n              Back</button>\n            @if ($order->delivery_status == 0)\n            <button data-status=\"1\" type=\"submit\" class=\"btn btn-primary set-status\"><i class=\"fa fa-save\"></i> Save</button>\n            @endif\n          </div>\n\n          @if ($order->delivery_status == 0)\n          <button type=\"button\" id=\"cancel-delivery\" class=\"btn btn-warning\"><i class=\"fa fa-redo\"></i> Batalkan Pengiriman</button>\n          @endif\n        </div>\n\n        <input type=\"text\" class=\"keterangan\" name=\"keterangan\" hidden>\n\n      </form>\n    </div>\n  </div>\n</div>\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"modal-pembatalan\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modelTitleId\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\">Pengiriman di Batalkan</h5>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"form-group\">\n          <textarea type=\"text\" class=\"form-control\" id=\"keterangan\" rows=\"5\" placeholder=\"Alasan Pembatalan\"></textarea>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n        <button type=\"button\" data-status=\"2\"  class=\"btn btn-primary set-status\" id=\"save-modal\">Save</button>\n      </div>\n    </div>\n  </div>\n</div>\n@endsection\n\n@push('scripts')\n<script src='{{url('')}}/theme/plugins/jquery-ui/jquery-ui.min.js'></script>\n<script src=\"{{url('')}}/theme/plugins/inputmask/min/jquery.inputmask.bundle.min.js\"></script>\n\n<script>\n  //Datepicker\n$('[datepicker]').datepicker({dateFormat: 'yy-mm-dd'});\n\n$('[data-currency]').inputmask({\n    'alias': 'currency',\n    'groupSeparator': '.',\n    'digits': 0,\n    'digitsOptional': false,\n    'prefix':'Rp. ',\n    'placeholder': '0'\n  });\n\n  $('.set-status').click(function() {\n    let status = $(this).data('status');\n    $('#delivery_status').val(status)\n  });\n\n  $('#cancel-delivery').click(function() {\n    swal.fire({\n      title: \"Anda yakin..?\",\n      text: 'Batalkan Pengiriman ini.',\n      type: 'warning',\n      showCancelButton: true,\n      cancelButtonText: 'Tidak',\n      confirmButtonText: 'Ya',\n    }).then(btn => {\n      if(btn.value) {\n\n        $('#modal-pembatalan').modal('show')\n\n        // let status = $(this).data('status');",
  "// Copyright 2006 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\npackage com.google.enterprise.connector.instantiator;\n\nimport com.google.common.annotations.VisibleForTesting;\nimport com.google.common.base.Charsets;\nimport com.google.common.collect.Lists;\nimport com.google.enterprise.connector.common.PropertiesException;\nimport com.google.enterprise.connector.common.PropertiesUtils;\nimport com.google.enterprise.connector.manager.Context;\nimport com.google.enterprise.connector.persist.PersistentStore;\nimport com.google.enterprise.connector.persist.StoreContext;\nimport com.google.enterprise.connector.scheduler.Schedule;\nimport com.google.enterprise.connector.spi.Connector;\nimport com.google.enterprise.connector.util.filter.DocumentFilterChain;\nimport com.google.enterprise.connector.util.filter.DocumentFilterFactory;\n\nimport org.springframework.beans.BeansException;\nimport org.springframework.beans.MutablePropertyValues;\nimport org.springframework.beans.PropertyAccessorFactory;\nimport org.springframework.beans.factory.support.DefaultListableBeanFactory;\nimport org.springframework.beans.factory.xml.XmlBeanDefinitionReader;\nimport org.springframework.core.io.ByteArrayResource;\nimport org.springframework.core.io.Resource;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.Collection;\nimport java.util.Map;\nimport java.util.Properties;\nimport java.util.logging.Logger;\n\n/**\n * Container for info about a Connector Instance. Instantiable only through a\n * static factory that uses Spring.\n */\nfinal class InstanceInfo {\n  private static final Logger LOGGER =\n      Logger.getLogger(InstanceInfo.class.getName());\n\n  private static PersistentStore store;\n\n  private final TypeInfo typeInfo;\n  private final File connectorDir;\n  private final String connectorName;\n  private final StoreContext storeContext;\n  private final Connector connector;\n  private final DocumentFilterFactory documentFilterFactory;\n\n  /**\n   * Constructs a InstanceInfo with no backing Connector instance.\n   *\n   * @param connectorName the name of the Connector instance\n   * @param connectorDir the Connector's working directory\n   * @param typeInfo the Connector's prototype\n   * @throws InstanceInfoException\n   */\n  public InstanceInfo(String connectorName, File connectorDir,\n      TypeInfo typeInfo) throws InstanceInfoException {\n    this(connectorName, connectorDir, typeInfo, null, false);\n  }\n\n  /**\n   * Constructs a new Connector instance based upon the supplied\n   * configuration map.\n   *\n   * @param connectorName the name of the Connector instance\n   * @param connectorDir the Connector's working directory\n   * @param typeInfo the Connector's prototype\n   * @param config connector Configuration\n   * @throws InstanceInfoException\n   */\n  public InstanceInfo(String connectorName, File connectorDir,\n      TypeInfo typeInfo, Configuration config) throws InstanceInfoException {\n    this(connectorName, connectorDir, typeInfo, config, true);\n  }\n\n  /**\n   * Constructs a new Connector instance based upon the supplied\n   * configuration map.\n   *\n   * @param connectorName the name of the Connector instance\n   * @param connectorDir the Connector's working directory\n   * @param typeInfo the Connector's prototype\n   * @param config connector Configuration\n   * @param createConnector if true, create the connector instance\n   * @throws InstanceInfoException\n   */\n  private InstanceInfo(String connectorName, File connectorDir,\n      TypeInfo typeInfo, Configuration config, boolean createConnector)\n      throws InstanceInfoException {\n    if (connectorName == null || connectorName.length() < 1) {\n      throw new NullConnectorNameException();\n    }\n    if (connectorDir == null) {\n      throw new NullDirectoryException();\n    }\n    if (typeInfo == null) {\n      throw new NullTypeInfoException();\n    }\n\n    this.connectorName = connectorName;\n    this.connectorDir = connectorDir;\n    this.typeInfo = typeInfo;\n    this.storeContext =\n        new StoreContext(connectorName, typeInfo.getConnectorTypeName());\n\n    if (createConnector) {\n      if (config == null) {\n        throw new NullConfigurationException();\n      }\n      DefaultListableBeanFactory beanFactory = new DefaultListableBeanFactory();\n      this.connector = makeConnectorWithSpring(connectorName, typeInfo, config,\n                                               beanFactory);\n      try {\n        this.documentFilterFactory = getDocumentFilterFactory(beanFactory);\n        if (this.documentFilterFactory!= null) {\n          LOGGER.config(\"Connector \" + connectorName + \" has document filters: \"\n                        + this.documentFilterFactory.toString());\n        }\n      } catch (BeansException e) {\n        throw new InstanceInfoException(\"Failed to load document filters for\"\n                                        + \" connector \" + connectorName, e);\n      }\n    } else {\n      this.connector = null;\n      this.documentFilterFactory = null;\n    }\n  }\n\n\n  /* **** Getters and Setters **** */\n\n  public static void setPersistentStore(PersistentStore store) {\n    InstanceInfo.store = store;\n  }\n\n  /**\n   * @return the connector\n   */\n  Connector getConnector() {\n    return connector;\n  }\n\n  /**\n   * @return the name\n   */\n  String getName() {\n    return connectorName;\n  }\n\n  /**\n   * @return the typeInfo\n   */\n  TypeInfo getTypeInfo() {\n    return typeInfo;\n  }\n\n  /**\n   * @return the connectorDir\n   */\n  File getConnectorDir() {\n    return connectorDir;\n  }\n\n  /**\n   * Construct a new Connector Instance based upon the connectorInstance\n   * and connectorDefaults bean definitions.\n   *\n   * @param connectorName the name of the Connector instance.\n   * @param typeInfo the Connector's prototype.\n   * @param config connector Configuration.\n   */\n  static Connector makeConnectorWithSpring(String connectorName,\n      TypeInfo typeInfo, Configuration config) throws InstanceInfoException {\n    return makeConnectorWithSpring(connectorName, typeInfo, config,\n                                   new DefaultListableBeanFactory());\n  }\n\n  /**\n   * Construct a new Connector Instance based upon the connectorInstance\n   * and connectorDefaults bean definitions.\n   *\n   * @param connectorName the name of the Connector instance.\n   * @param typeInfo the Connector's prototype.\n   * @param config connector Configuration.\n   * @param factory DefaultListableBeanFactory used to create the connector.\n   */\n  private static Connector makeConnectorWithSpring(String connectorName,\n      TypeInfo typeInfo, Configuration config,\n      DefaultListableBeanFactory factory) throws InstanceInfoException {\n    String name = connectorName;\n    Resource prototype = null;\n    if (config.getXml()!= null) {\n      prototype = getByteArrayResource(config.getXml(), Charsets.UTF_8.name(),\n          TypeInfo.CONNECTOR_INSTANCE_XML);\n    }\n    if (prototype == null) {\n      prototype = typeInfo.getConnectorInstancePrototype();\n    }\n\n    XmlBeanDefinitionReader beanReader = new XmlBeanDefinitionReader(factory);\n    Resource defaults = typeInfo.getConnectorDefaultPrototype();\n    try {\n      beanReader.loadBeanDefinitions(prototype);\n    } catch (BeansException e) {\n      throw new FactoryCreationFailureException(e, prototype, name);\n    }\n    // Seems non-intuitive to load these in this order, but we want newer\n    // versions of the connectors to override any default bean definitions\n    // specified in old-style monolithic connectorInstance.xml files.\n    if (defaults!= null) {\n      try {\n        beanReader.loadBeanDefinitions(defaults);\n      } catch (BeansException e) {\n        throw new FactoryCreationFailureException(e, defaults, name);\n      }\n    }\n\n    ",
  "PROJECT_NAME     := gzll_ack_payload_host_pca10040\nTARGETS          := nrf52832_xxaa\nOUTPUT_DIRECTORY := _build\n\nSDK_ROOT :=../../../../../../../..\nPROJ_DIR :=../../..\n\n$(OUTPUT_DIRECTORY)/nrf52832_xxaa.out: \\\n  LINKER_SCRIPT  := gzll_ack_payload_host_gcc_nrf52.ld\n\n# Source files common to all targets\nSRC_FILES += \\\n  $(SDK_ROOT)/modules/nrfx/mdk/gcc_startup_nrf52.S \\\n  $(SDK_ROOT)/components/libraries/log/src/nrf_log_backend_rtt.c \\\n  $(SDK_ROOT)/components/libraries/log/src/nrf_log_backend_serial.c \\\n  $(SDK_ROOT)/components/libraries/log/src/nrf_log_backend_uart.c \\\n  $(SDK_ROOT)/components/libraries/log/src/nrf_log_default_backends.c \\\n  $(SDK_ROOT)/components/libraries/log/src/nrf_log_frontend.c \\\n  $(SDK_ROOT)/components/libraries/log/src/nrf_log_str_formatter.c \\\n  $(SDK_ROOT)/components/boards/boards.c \\\n  $(SDK_ROOT)/components/libraries/button/app_button.c \\\n  $(SDK_ROOT)/components/libraries/util/app_error.c \\\n  $(SDK_ROOT)/components/libraries/util/app_error_handler_gcc.c \\\n  $(SDK_ROOT)/components/libraries/util/app_error_weak.c \\\n  $(SDK_ROOT)/components/libraries/scheduler/app_scheduler.c \\\n  $(SDK_ROOT)/components/libraries/timer/app_timer2.c \\\n  $(SDK_ROOT)/components/libraries/util/app_util_platform.c \\\n  $(SDK_ROOT)/components/libraries/timer/drv_rtc.c \\\n  $(SDK_ROOT)/components/libraries/util/nrf_assert.c \\\n  $(SDK_ROOT)/components/libraries/atomic_fifo/nrf_atfifo.c \\\n  $(SDK_ROOT)/components/libraries/atomic/nrf_atomic.c \\\n  $(SDK_ROOT)/components/libraries/balloc/nrf_balloc.c \\\n  $(SDK_ROOT)/external/fprintf/nrf_fprintf.c \\\n  $(SDK_ROOT)/external/fprintf/nrf_fprintf_format.c \\\n  $(SDK_ROOT)/components/libraries/memobj/nrf_memobj.c \\\n  $(SDK_ROOT)/components/libraries/ringbuf/nrf_ringbuf.c \\\n  $(SDK_ROOT)/components/libraries/sortlist/nrf_sortlist.c \\\n  $(SDK_ROOT)/components/libraries/strerror/nrf_strerror.c \\\n  $(SDK_ROOT)/integration/nrfx/legacy/nrf_drv_uart.c \\\n  $(SDK_ROOT)/modules/nrfx/soc/nrfx_atomic.c \\\n  $(SDK_ROOT)/modules/nrfx/drivers/src/nrfx_gpiote.c \\\n  $(SDK_ROOT)/modules/nrfx/drivers/src/prs/nrfx_prs.c \\\n  $(SDK_ROOT)/modules/nrfx/drivers/src/nrfx_uart.c \\\n  $(SDK_ROOT)/modules/nrfx/drivers/src/nrfx_uarte.c \\\n  $(SDK_ROOT)/components/libraries/bsp/bsp.c \\\n  $(PROJ_DIR)/main.c \\\n  $(SDK_ROOT)/external/segger_rtt/SEGGER_RTT.c \\\n  $(SDK_ROOT)/external/segger_rtt/SEGGER_RTT_Syscalls_GCC.c \\\n  $(SDK_ROOT)/external/segger_rtt/SEGGER_RTT_printf.c \\\n  $(SDK_ROOT)/modules/nrfx/mdk/system_nrf52.c \\\n\n# Include folders common to all targets\nINC_FOLDERS += \\\n  $(SDK_ROOT)/components/proprietary_rf/gzll \\\n  $(SDK_ROOT)/integration/nrfx \\\n  $(PROJ_DIR) \\\n  $(SDK_ROOT)/components/libraries/scheduler \\\n ../config \\\n  $(SDK_ROOT)/components/libraries/experimental_section_vars \\\n  $(SDK_ROOT)/components/libraries/atomic_fifo \\\n  $(SDK_ROOT)/modules/nrfx/mdk \\\n  $(SDK_ROOT)/components/libraries/strerror \\\n  $(SDK_ROOT)/integration/nrfx/legacy \\\n  $(SDK_ROOT)/components/boards \\\n  $(SDK_ROOT)/components/drivers_nrf/nrf_soc_nosd \\\n  $(SDK_ROOT)/components/libraries/button \\\n  $(SDK_ROOT)/components/libraries/log \\\n  $(SDK_ROOT)/modules/nrfx/hal \\\n  $(SDK_ROOT)/components/libraries/log/src \\\n  $(SDK_ROOT)/components/libraries/bsp \\\n  $(SDK_ROOT)/components/libraries/sortlist \\\n  $(SDK_ROOT)/modules/nrfx/drivers/include \\\n  $(SDK_ROOT)/components/libraries/ringbuf \\\n  $(SDK_ROOT)/external/fprintf \\\n  $(SDK_ROOT)/components/libraries/balloc \\\n  $(SDK_ROOT)/components/libraries/util \\\n  $(SDK_ROOT)/modules/nrfx \\\n  $(SDK_ROOT)/components \\\n  $(SDK_ROOT)/external/segger_rtt \\\n  $(SDK_ROOT)/components/libraries/memobj \\\n  $(SDK_ROOT)/components/libraries/atomic \\\n  $(SDK_ROOT)/components/libraries/delay \\\n  $(SDK_ROOT)/components/toolchain/cmsis/include \\\n  $(SDK_ROOT)/components/libraries/timer \\\n\n# Libraries common to all targets\nLIB_FILES += \\\n  $(SDK_ROOT)/components/proprietary_rf/gzll/gcc/gzll_nrf52_sd_resources_gcc.a \\\n\n# Optimization flags\nOPT = -O3 -g3\n# Uncomment the line below to enable link time optimization\n#OPT += -flto\n\n# C flags common to all targets\nCFLAGS += $(OPT)\nCFLAGS += -DAPP_TIMER_V2\nCFLAGS += -DAPP_TIMER_V2_RTC1_ENABLED\nCFLAGS += -DBOARD_PCA10040\nCFLAGS += -DCONFIG_GPIO_AS_PINRESET\nCFLAGS += -DFLOAT_ABI_HARD\nCFLAGS += -DGAZELL_ALTERNATIVE_RESOURCES\nCFLAGS += -DGAZELL_PRESENT\nCFLAGS += -DNRF52\nCFLAGS += -DNRF52832_XXAA\nCFLAGS += -DNRF52_PAN_74\nCFLAGS += -DUSE_SD_HW_RESOURCES\nCFLAGS += -mcpu=cortex-m4\nCFLAGS += -mthumb -mabi=aapcs\nCFLAGS += -Wall -Werror\nCFLAGS += -mfloat-abi=hard -mfpu=fpv4-sp-d16\n# keep every function in a separate section, this allows linker to discard unused ones\nCFLAGS += -ffunction-sections -fdata-sections -fno-strict-aliasing\nCFLAGS += -fno-builtin -fshort-enums\n\n# C++ flags common to all targets\nCXXFLAGS += $(OPT)\n# Assembler flags common to all targets\nASMFLAGS += -g3\nASMFLAGS += -mcpu=cortex-m4\nASMFLAGS += -mthumb -mabi=aapcs\nASMFLAGS += -mfloat-abi=hard -mfpu=fpv4-sp-d16\nASMFLAGS += -DAPP_TIMER_V2\nASMFLAGS += -DAPP_TIMER_V2_RTC1_ENABLED\nASMFLAGS += -DBOARD_PCA10040\nASMFLAGS += -DCONFIG_GPIO_AS_PINRESET\nASMFLAGS += -DFLOAT_ABI_HARD\nASMFLAGS += -DGAZELL_ALTERNATIVE_RESOURCES\nASMFLAGS += -DGAZELL_PRESENT\nASMFLAGS += -DNRF52\nASMFLAGS += -D",
  "<?php\n\nnamespace App;\n\nuse App\\Laptop;\nuse App\\Instructor;\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Loan extends Model\n{\n    protected $fillable = [\n        'is_active','novedad','descripcion','id_laptops','id_instructors'\n    ];\n\n    public function laptop(){\n        return $this->belongsTo(Laptop::class, 'id_laptops');\n    }\n\n    public function instructor(){\n        return $this->belongsTo(Instructor::class, 'id_instructors');\n    }\n}\n",
  "from typing import Optional\n\nfrom pydantic import BaseModel, EmailStr, HttpUrl\n\nfrom app.models.domain.users import User\nfrom app.models.schemas.internal_schema import InternalSchema\n\n\nclass UserInLogin(InternalSchema):\n    email: EmailStr\n    password: str\n\n\nclass UserInCreate(UserInLogin):\n    name: str\n    date_of_birth: str\n    phone_number: str\n    address: str\n    pet_owner: bool\n\n\nclass UserInUpdate(BaseModel):\n    name: Optional[str] = None\n    email: Optional[EmailStr] = None\n    password: Optional[str] = None\n    bio: Optional[str] = None\n    image: Optional[HttpUrl] = None\n\n\nclass UserWithToken(User):\n    token: str\n\n\nclass UserInResponse(InternalSchema):\n    user: UserWithToken\n",
  "import { helper } from '@ember/component/helper';\n\nexport function obfuscatedChars([n]) {\n  return '\u2022'.repeat(n);\n}\n\nexport default helper(obfuscatedChars);\n",
  "\ufeffusing System.Text.RegularExpressions;\r\n\r\nnamespace OneCog.Io.Spark.Events\r\n{\r\n    public static class Messages\r\n    {\r\n        public static readonly string Stream = \"ok\";\r\n        public static readonly string Event = \"event\";\r\n        public static readonly string Data = \"data\";\r\n\r\n        private const string HeaderGroup = \"header\";\r\n        private const string EventGroup = \"event\";\r\n        private const string DataGroup = \"data\";\r\n\r\n        private static readonly Regex HeaderRegex = new Regex(@\"^\\s*:(?<header>ok)\\s*$\", RegexOptions.None);\r\n        private static readonly Regex EventRegex = new Regex(@\"^event:\\s+(?<event>.*)\\s*$\", RegexOptions.None);\r\n        private static readonly Regex DataRegex = new Regex(@\"^data:\\s+(?<data>.*)\\s*$\", RegexOptions.None);\r\n\r\n        public static bool TryParseHeader(string message, out string header)\r\n        {\r\n            Match match = HeaderRegex.Match(message);\r\n\r\n            if (match.Success && match.Groups[HeaderGroup].Success)\r\n            {\r\n                header = match.Groups[HeaderGroup].Value;\r\n                return true;\r\n            }\r\n            else\r\n            {\r\n                header = null;\r\n                return false;\r\n            }\r\n        }\r\n\r\n        public static bool TryParseEvent(string message, out string name)\r\n        {\r\n            Match match = EventRegex.Match(message);\r\n\r\n            if (match.Success && match.Groups[EventGroup].Success)\r\n            {\r\n                name = match.Groups[EventGroup].Value;\r\n                return true;\r\n            }\r\n            else\r\n            {\r\n                name = null;\r\n                return false;\r\n            }\r\n        }\r\n\r\n        public static bool TryParseData(string message, out string data)\r\n        {\r\n            Match match = DataRegex.Match(message);\r\n\r\n            if (match.Success && match.Groups[DataGroup].Success)\r\n            {\r\n                data = match.Groups[DataGroup].Value;\r\n                return true;\r\n            }\r\n            else\r\n            {\r\n                data = null;\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n}\r\n",
  "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\npackage org.apache.ambari.infra.conf.security;\n\npublic class SslSecrets {\n  private final Secret keyStorePassword;\n  private final Secret trustStorePassword;\n\n  public SslSecrets(Secret keyStorePassword, Secret trustStorePassword) {\n    this.keyStorePassword = keyStorePassword;\n    this.trustStorePassword = trustStorePassword;\n  }\n\n  public Secret getKeyStorePassword() {\n    return keyStorePassword;\n  }\n\n  public Secret getTrustStorePassword() {\n    return trustStorePassword;\n  }\n}\n",
  "<?php\ndefined('BASEPATH') OR exit('No direct script access allowed');\n\nclass Faq extends MX_Controller\n{\n\n    public function __construct()\n    {\n\t\tparent::__construct();\n\t\t$this->lang->load('admin', get_lang() );\n        $this->load->library('session');\n        $this->load->library('pagination');\n        $this->load->model('data','','true');\n        $this->load->library('upload');\n        $this->load->helper(array('form', 'url','text'));\n        $this->load->library('lib_pagination');\n        $this->load->library('CKEditor');\n        $this->load->library('CKFinder');\n        $this->ckfinder->SetupCKEditor($this->ckeditor,'../../design/ckfinder/');   \n        $this->load->library('image_lib');   \n    }\n    public function gen_random_string()\n    {\n        $chars =\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890\";//length:36\n        $final_rand='';\n        for($i=0;$i<4; $i++) {\n            $final_rand.= $chars[ rand(0,strlen($chars)-1)];\n        }\n        return $final_rand;\n    }\n\n    public function index(){\n        redirect(base_url().'admin/faq/faq','refresh');\n    }\n\n    public function faq(){\n        $pg_config['sql'] = $this->data->get_sql('achievements_text','','id','DESC');\n        $pg_config['per_page'] = 50;\n        $data = $this->lib_pagination->create_pagination($pg_config);\n        $this->load->view(\"admin/faq/faq\", $data); \n    }\n    \n    public function mainimg(){\n        $data['site_info']= $this->data->get_table_data('site_info');\n        $this->load->view(\"admin/faq/mainimg\",$data); \n    }\n\n\n    \n\n\n\n    public function edit_img(){\n\n        if($_FILES['file']['name']!=\"\"){\n          $logo = $this->data->get_table_row('site_info',array('id'=>1),'main_img'); \n          if ($logo!= \"\") {\n          unlink(\"uploads/site_setting/$logo\");\n          }\n          $img_name=$this->gen_random_string(); \n          $imagename = $img_name;\n          $config['upload_path'] = 'uploads/site_setting/';\n          $config['allowed_types']        = 'gif|jpg|png|jpeg';\n          $config['max_size']             =600000;\n          $config['max_width']            = 600000;\n          $config['max_height']           = 600000;\n          $config['file_name'] = $imagename; \n          $this->load->library('upload', $config);\n          $this->upload->initialize($config);\n          if (!$this->upload->do_upload('file')){\n          echo $this->upload->display_errors();\n           }\n          else {\n          $url= $_FILES['file']['name'];\n          $ext = explode(\".\",$url);\n          $file_extension = end($ext);\n\n          $config['source_image'] = 'uploads/site_setting/'.$imagename.\".\".$file_extension ;\n          $config['create_thumb'] = FALSE;\n          $config['maintain_ratio'] = TRUE;\n          $config['quality'] = '90%';\n          $config['width']     = 350;\n          $config['height']   = 750;\n          $this->image_lib->clear();\n          $this->image_lib->initialize($config);\n          $this->image_lib->resize();\n          $data = array('main_img'=>$imagename.\".\".$file_extension);\n          $this->db->update('site_info',$data,array('id'=>1));\n            }\n            }\n            $this->session->set_flashdata('msg', '\u062a\u0645 \u0627\u0644\u062a\u0639\u062f\u064a\u0644 \u0628\u0646\u062c\u0627\u062d\u064d');\n            $this->session->mark_as_flash('msg');\n            redirect('/admin/faq/mainimg');\t\n    \n    }\n\n\n    public function add_faq(){\n        $this->load->view(\"admin/faq/add_faq\"); \n    }\n\n    public function product_action(){\n       \n\t\t$title_ar=$this->input->post('title_ar');\n\t\t$title_eng=$this->input->post('title_eng');\n        $details_ar=$this->input->post('details_ar');\n        $details_eng=$this->input->post('details_eng');\n\n        $data['title_eng'] = $title_eng;\n        $data['title_ar'] = $title_ar;\n        $data['details'] = $details_eng;\n        $data['details_ar'] = $details_ar;\n        $this->db->insert('achievements_text',$data);\n        $this->session->set_flashdata('msg', '\u062a\u0645 \u0627\u0644\u0627\u0636\u0627\u0641\u0629 \u0628\u0646\u062c\u0627\u062d');\n       redirect(base_url().'admin/faq','refresh');\n    }\n\n    public function delete_faq(){\n        $id_blog = $this->input->get('id_type');\n        $check=$this->input->post('check');\n        if($id_blog!=\"\"){\n        $ret_value=$this->data->delete_table_row('achievements_text',array('id'=>$id_blog)); \n        }\n     \n        if(isset($check) && $check!=\"\"){  \n        $check=$this->input->post('check');\n        $length=count($check);\n        for($i=0;$i<$length;$i++){\n        $ret_value=$this->data->delete_table_row('achievements_text',array('id'=>$check[$i]));    \n        }\n        }\n        $this->session->set_flashdata('msg', '\u062a\u0645 \u0627\u0644\u062d\u0630\u0641 \u0628\u0646\u062c\u0627\u062d');\n        redirect(base_url().'admin/faq','refresh');\n    }\n\n    function check_view_faq(){\n        $id = $this->input->post(\"id\");\n        $ser = $this->db->get_where(\"achievements_text\",array(\"id\"=>$id,\"view\" => \"1\"))->num_rows();\n        if ($ser == 1) {\n            $this->db->update(\"achievements_text\",array(\"view\" => \"0\"),array(\"id\"=>$id));\n            echo \"0\";\n        }\n        if ($ser == 0) {\n            $this->db->update(\"achievements_text\",array(\"view\" => \"1\"),array(\"id\"=>$id));\n            echo \"1\";\n        } \n    }\n\n    public function update_faq(){\n        $id=$this->input->get('id_type');\n        $data['data'] = $this->data->get_table_data('achievements_text',array('id'=>$id));\n        $this->load->view(\"admin/faq/update_faq\",$data); \n    }\n\n    function edit_action(){\n\t\t$title_ar=$this->input->post('title_ar');\n\t\t$title_eng=$this->input->post('title_eng');\n        $details_ar=$this->input->post('details_ar');\n\t\t$details_eng=$this->input->post('details_eng');\n\t\t\n\t\t$id = $this->input->post('id');\n        $data['title_eng'] = $title_eng;\n        $data['title_ar'] = $title_ar;\n        $data['details'] = $details_eng;\n        $data['details_ar'] = $details_ar;\n\t\t$this->data->edit_table_id('achievements_text',array('id'=>$id),$data);\n        $this->session->set_flashdata('msg', '\u062a\u0645 \u0627\u0644\u062a\u0639\u062f\u064a\u0644 \u0628\u0646\u062c\u0627\u062d');\n        redirect(base_url().'admin/faq/','refresh');\n\t}\n\t\n/*********************************************************************** *////\n\n}\n",
  "import { BaseClient } from \"../../src/clients/BaseClient.ts\";\nimport {assertEquals} from \"https://deno.land/std@0.133.0/testing/asserts.ts\";\n\nDeno.test(\"BaseClient\", async (t) => {\n    const client = new BaseClient({\n        credentials: {\n            type: \"APIKey\",\n            value: \"TESTVALUE\"\n        },\n    });\n\n    await t.step(\"authentication\", () => {\n        assertEquals(client.authenticationType, \"APIKey\");\n        assertEquals(client.credentials, {\n            type: \"APIKey\",\n            value: \"TESTVALUE\",\n        });\n        client.setCredentialsValue(\"TESTVALUE2\");\n        assertEquals(client.credentials, {\n            type: \"APIKey\",\n            value: \"TESTVALUE2\",\n        });\n        assertEquals(client.rest.hasAuthentication(), true);\n    });\n\n    await t.step(\"default headers\", () => {\n        assertEquals(client.rest.defaultHeaders, undefined);\n        client.setDefaultHeaders({\n            test: \"true\",\n        });\n        assertEquals(client.rest.defaultHeaders, {\n            test: \"true\",\n        });\n    });\n\n    await t.step(\"inner RESTController\", async (t) => {\n        await t.step(\"aliases\", () => {\n            assertEquals(client.rest.aliases, {\n                \"BEDEV2Url\": \"apis.roblox.com/{0}\"\n            });\n        });\n\n        await t.step(\"URL formatting\", () => {\n            assertEquals(client.rest.formatWithAliases(\"{BEDEV2Url:test}/0\"), \"apis.roblox.com/test/0\");\n            assertEquals(client.rest.formatWithAliases(\"{BEDEV2Url:test}/0\"), \"apis.roblox.com/test/0\");\n            assertEquals(client.rest.formatWithAliases(\"{BEDEV2Url:test}/0\"), \"apis.roblox.com/test/0\");\n            assertEquals(client.rest.formatUrl(\"{BEDEV2Url:test}/0\").href, \"https://apis.roblox.com/test/0\");\n            assertEquals(client.rest.formatUrl(\"{BEDEV2Url:test}/0\", {\n                test: true,\n            }).href, \"https://apis.roblox.com/test/0?test=true\");\n            assertEquals(client.rest.formatUrl(\"{BEDEV2Url:test}/0\", undefined, \"wss\").href, \"wss://apis.roblox.com/test/0\");\n        });\n    \n        await t.step(\"body formatting\", async (t) => {\n            await t.step(\"JSON\", () => {\n                assertEquals(client.rest.formatBody({\n                    type: \"json\",\n                    value: {\n                        test: true,\n                    }\n                }), {\n                    type: \"application/json\",\n                    body: `{\"test\":true}`\n                });\n            });\n\n            await t.step(\"file\", () => {\n                assertEquals(client.rest.formatBody({\n                    type: \"file\",\n                    value: new Uint8Array([1, 2, 3]),\n                }), {\n                    type: undefined,\n                    body: new Uint8Array([1, 2, 3])\n                });\n            });\n\n            await t.step(\"unknown\", () => { \n                assertEquals(client.rest.formatBody({\n                    type: \"unknown\",\n                    value: \"value\"\n                }), {\n                    type: undefined,\n                    body: \"value\"\n                });\n            });\n\n            await t.step(\"text\", () => { \n                assertEquals(client.rest.formatBody({\n                    type: \"text\",\n                    value: \"value\"\n                }), {\n                    type: undefined,\n                    body: \"value\"\n                });\n            });\n\n            await t.step(\"formdata\", async (t) => {\n                await t.step(\"string value\", () => {\n                    const formdata = new FormData();\n                    formdata.append(\"test\", \"value\");\n    \n                    assertEquals(client.rest.formatBody({\n                        type: \"formdata\",\n                        value: {\n                            test: {\n                                value: \"value\",\n                            }\n                        },\n                    }), {\n                        type: undefined,\n                        body: formdata,\n                    });\n                });\n            });\n            \n            await t.step(\"urlencoded\", () => {\n                const search = new URLSearchParams();\n                search.set(\"test\", \"true\");\n\n                assertEquals(client.rest.formatBody({\n                    type: \"urlencoded\",\n                    value: {\n                        test: \"true\",\n                    },\n                }), {\n                    type: undefined,\n                    body: search,\n                });\n            });\n        });\n    });\n});",
  "--TEST--\nZE2 An interface method cannot be final\n--FILE--\n<?php\n\nclass if_a {\n\tabstract final function err();\n}\n\n?>\n--EXPECTF--\n\nFatal error: Cannot use the final modifier on an abstract class member in %s on line %d\n",
  "export {default} from './DSAlbumComponent';\n",
  "'''\nImplements Tcp Socket to communicate to the server\n'''\nfrom test_server import Client\n\n\ndef run_client():\n    '''\n    Function to run the Tcp client socket\n    '''\n    tcp_client = Client(host=\"localhost\", port=9000)\n    count = 0\n    while count!= 15:\n        data = str(count) + \"tcp\"\n        # data = input(\"Enter data\")\n        count += 1\n        print(\"Sending data\", data)\n        tcp_client.send(data)\n        data = tcp_client.receive()\n        print(\"Received data\", data)\n    tcp_client.close()\n\n\nif __name__ == \"__main__\":\n    run_client()\n",
  "\nfrom operator import attrgetter\nimport pyangbind.lib.xpathhelper as xpathhelper\nfrom pyangbind.lib.yangtypes import RestrictedPrecisionDecimalType, RestrictedClassType, TypedListType\nfrom pyangbind.lib.yangtypes import YANGBool, YANGListType, YANGDynClass, ReferenceType\nfrom pyangbind.lib.base import PybindBase\nfrom decimal import Decimal\nfrom bitarray import bitarray\nimport __builtin__\nclass access_group(PybindBase):\n  \"\"\"\n  This class was auto-generated by the PythonClass plugin for PYANG\n  from YANG module brocade-interface - based on the path /interface/management/ipv6/access-group. Each member element of\n  the container is represented as a class variable - with a specific\n  YANG type.\n  \"\"\"\n  __slots__ = ('_pybind_generated_by', '_path_helper', '_yang_name', '_rest_name', '_extmethods', '__mgmt_ipv6_access_list','__mgmt_ip_direction',)\n\n  _yang_name = 'access-group'\n  _rest_name = 'access-group'\n\n  _pybind_generated_by = 'container'\n\n  def __init__(self, *args, **kwargs):\n\n    path_helper_ = kwargs.pop(\"path_helper\", None)\n    if path_helper_ is False:\n      self._path_helper = False\n    elif path_helper_ is not None and isinstance(path_helper_, xpathhelper.YANGPathHelper):\n      self._path_helper = path_helper_\n    elif hasattr(self, \"_parent\"):\n      path_helper_ = getattr(self._parent, \"_path_helper\", False)\n      self._path_helper = path_helper_\n    else:\n      self._path_helper = False\n\n    extmethods = kwargs.pop(\"extmethods\", None)\n    if extmethods is False:\n      self._extmethods = False\n    elif extmethods is not None and isinstance(extmethods, dict):\n      self._extmethods = extmethods\n    elif hasattr(self, \"_parent\"):\n      extmethods = getattr(self._parent, \"_extmethods\", None)\n      self._extmethods = extmethods\n    else:\n      self._extmethods = False\n    self.__mgmt_ipv6_access_list = YANGDynClass(base=RestrictedClassType(base_type=unicode, restriction_dict={'pattern': u'[a-zA-Z0-9]{1}([-a-zA-Z0-9_]{0,62})', 'length': [u'1..63']}), is_leaf=True, yang_name=\"mgmt-ipv6-access-list\", rest_name=\"mgmt-ipv6-access-list\", parent=self, path_helper=self._path_helper, extmethods=self._extmethods, register_paths=True, extensions={u'tailf-common': {u'info': u'ACL_NAME;; Access List Name (Max 63)', u'cli-drop-node-name': None, u'cli-full-no': None, u'cli-incomplete-command': None}}, namespace='urn:brocade.com:mgmt:brocade-ipv6-access-list', defining_module='brocade-ipv6-access-list', yang_type='ipv6-l3-acl-policy-name', is_config=True)\n    self.__mgmt_ip_direction = YANGDynClass(base=RestrictedClassType(base_type=unicode,                                     restriction_type=\"dict_key\",                                     restriction_arg={u'in': {'value': 1}},), is_leaf=True, yang_name=\"mgmt-ip-direction\", rest_name=\"mgmt-ip-direction\", parent=self, path_helper=self._path_helper, extmethods=self._extmethods, register_paths=True, extensions={u'tailf-common': {u'cli-drop-node-name': None}}, namespace='urn:brocade.com:mgmt:brocade-ipv6-access-list', defining_module='brocade-ipv6-access-list', yang_type='enumeration', is_config=True)\n\n    load = kwargs.pop(\"load\", None)\n    if args:\n      if len(args) > 1:\n        raise TypeError(\"cannot create a YANG container with >1 argument\")\n      all_attr = True\n      for e in self._pyangbind_elements:\n        if not hasattr(args[0], e):\n          all_attr = False\n          break\n      if not all_attr:\n        raise ValueError(\"Supplied object did not have the correct attributes\")\n      for e in self._pyangbind_elements:\n        nobj = getattr(args[0], e)\n        if nobj._changed() is False:\n          continue\n        setmethod = getattr(self, \"_set_%s\" % e)\n        if load is None:\n          setmethod(getattr(args[0], e))\n        else:\n          setmethod(getattr(args[0], e), load=load)\n\n  def _path(self):\n    if hasattr(self, \"_parent\"):\n      return self._parent._path()+[self._yang_name]\n    else:\n      return [u'interface', u'management', u'ipv6', u'access-group']\n\n  def _rest_path(self):\n    if hasattr(self, \"_parent\"):\n      if self._rest_name:\n        return self._parent._rest_path()+[self._rest_name]\n      else:\n        return self._parent._rest_path()\n    else:\n      return [u'interface', u'Management', u'ipv6', u'access-group']\n\n  def _get_mgmt_ipv6_access_list(self):\n    \"\"\"\n    Getter method for mgmt_ipv6_access_list, mapped from YANG variable /interface/management/ipv6/access_group/mgmt_ipv6_access_list (ipv6-l3-acl-policy-name)\n    \"\"\"\n    return self.__mgmt_ipv6_access_list\n      \n  def _set_mgmt_ipv6_access_list(self, v, load=False):\n    \"\"\"\n    Setter method for mgmt_ipv6_access_list, mapped from YANG variable /interface/management/ipv6/access_group/mgmt_ipv6_access_list (ipv6-l3-acl-policy-name)\n    If this variable is read-only (config: false) in the\n    source YANG file, then _set_mgmt_ipv6_access_list is considered as a private\n    method. Backends looking to populate this variable should\n    do so via calling thisObj._set_mgmt_ipv6_access_list() directly.\n    \"\"\"\n    if hasattr(v, \"_utype\"):\n      v = v._utype(v)\n    try:\n      t = YANGDynClass(v,base=RestrictedClassType(base_type=unicode, restriction_dict={'pattern': u'[a-zA-Z0-9]{1}([-a-zA-Z0-9_]{0,62})', 'length': [u'1..63']}), is_leaf=True, yang_name=\"mgmt-ipv6-access-list\", rest_name=\"mgmt-ipv6-access-list\", parent=self, path_helper=self._path_helper, extmethods=self._extmethods, register_paths=True, extensions={u'tailf-common': {u'info': u'ACL_NAME;; Access List Name (Max 63)', u'cli-drop-node-name': None, u'cli-full-no': None, u'cli-incomplete-command': None}}, namespace='urn:brocade.com:mgmt:brocade-ipv6-access-list', defining_module='brocade-ipv6-access-list', yang_type='ipv6-l3-acl-policy-name', is_config=True)\n    except (TypeError, ValueError):\n      raise ValueError({\n          'error-string': \"\"\"mgmt_ipv6_access_list must be of a type compatible with ipv6-l3-acl-policy-name\"\"\",\n          'defined-type': \"brocade-ipv6-access-list:ipv6-l3-acl-policy-name\",\n          'generated-type': \"\"\"YANGDynClass(base=RestrictedClassType(base_",
  ".Grid {\r\n  display: grid;\r\n  width: 100%;\r\n  height: 100%;\r\n  max-width: 100%;\r\n  max-height: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\n:global(.grid-cols) {\r\n  grid-auto-flow: column dense;\r\n  grid-template-rows: 1fr!important;\r\n}\r\n\r\n:global(.grid-rows) {\r\n  grid-auto-flow: row dense;\r\n  grid-template-columns: 1fr!important;\r\n}\r\n",
  "\ufeff\nusing ZeldaOracle.Common.Audio;\nusing ZeldaOracle.Common.Geometry;\nusing ZeldaOracle.Game.Tiles;\n\nnamespace ZeldaOracle.Game.Entities.Monsters {\n\n\tpublic class MonsterSpinningBladeTrap : Monster {\n\t\t\n\t\tprivate bool isMoving;\n\t\tprivate Point2I tileLocation;\n\t\tprivate float moveSpeed;\n\t\tprivate float moveDistance;\n\t\tprivate int timer;\n\n\t\t\n\t\t//-----------------------------------------------------------------------------\n\t\t// Constructor\n\t\t//-----------------------------------------------------------------------------\n\n\t\tpublic MonsterSpinningBladeTrap() {\n\t\t\t// General.\n\t\t\tContactDamage\t= 2;\n\t\t\tisDamageable\t= false;\n\t\t\tisBurnable\t\t= false;\n\t\t\tisStunnable\t\t= false;\n\t\t\tisGaleable\t\t= false;\n\t\t\tIsKnockbackable\t= false;\n\t\t\t\n\t\t\t// Weapon Reactions\n\t\t\tReactions[InteractionType.Sword]\n\t\t\t\t.SetBegin(MonsterReactions.ParryWithClingEffect);\n\t\t\tReactions[InteractionType.SwordStrafe]\n\t\t\t\t.SetBegin(MonsterReactions.ParryWithClingEffect);\n\t\t\tReactions[InteractionType.SwordSpin]\n\t\t\t\t.SetBegin(MonsterReactions.ParryWithClingEffect);\n\t\t\tReactions[InteractionType.BiggoronSword]\n\t\t\t\t.SetBegin(MonsterReactions.ClingEffect);\n\t\t\tReactions[InteractionType.Shield]\n\t\t\t\t.SetBegin(MonsterReactions.ParryWithClingEffect);\n\t\t\tReactions[InteractionType.Shovel]\n\t\t\t\t.SetBegin(MonsterReactions.ClingEffect);\n\t\t\t// Projectile Reactions\n\t\t\tReactions[InteractionType.Arrow]\n\t\t\t\t.Set(SenderReactions.Intercept);\n\t\t\tReactions[InteractionType.SwordBeam]\n\t\t\t\t.Set(SenderReactions.Intercept);\n\t\t\tReactions[InteractionType.Boomerang]\n\t\t\t\t.Set(MonsterReactions.ParryWithClingEffect);\n\t\t\tReactions[InteractionType.SwitchHook]\n\t\t\t\t.Set(MonsterReactions.ParryWithClingEffect);\n\t\t}\n\n\n\t\t//-----------------------------------------------------------------------------\n\t\t// Internal Methods\n\t\t//-----------------------------------------------------------------------------\n\n\t\tprivate bool CanMoveToNextTile(Direction direction) {\n\t\t\tPoint2I nextTileLocation = RoomControl.GetTileLocation(Center) +\n\t\t\t\tdirection.ToPoint();\n\n\t\t\t// Check if the tile is outside of the room\n\t\t\tif (!RoomControl.IsTileInBounds(nextTileLocation))\n\t\t\t\treturn false;\n\n\t\t\t// Check if the tile is solid or hazardous\n\t\t\tTile tile = RoomControl.GetTopTile(nextTileLocation);\n\t\t\tif (tile!= null && (tile.IsSolid || tile.IsHoleWaterOrLava))\n\t\t\t\treturn false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\tprivate void StartMoving(int moveDirection) {\n\t\t\tDirection = moveDirection;\n\t\t\ttimer = 0;\n\t\t\tmoveDistance = 0.0f;\n\t\t\tmoveSpeed = GameSettings.MONSTER_SPINNING_BLADE_TRAP_SLOW_SPEED;\n\t\t\ttileLocation = RoomControl.GetTileLocation(Center);\n\t\t\tisMoving = true;\n\t\t\tGraphics.PlayAnimation(GameData.ANIM_MONSTER_SPINNING_BLADE_TRAP);\n\t\t\tAudioSystem.PlaySound(GameData.SOUND_BLOCK_PUSH);\n\t\t}\n\t\t\n\t\tprivate void StopMoving() {\n\t\t\tisMoving = false;\n\t\t\tPhysics.Velocity = Vector2F.Zero;\n\t\t\ttileLocation = RoomControl.GetTileLocation(Center);\n\t\t\tSetPositionByCenter((tileLocation *\n\t\t\t\tGameSettings.TILE_SIZE) + new Vector2F(8, 8));\n\t\t\tGraphics.PlayAnimation(\n\t\t\t\tGameData.ANIM_MONSTER_SPINNING_BLADE_TRAP_SLEEP);\n\t\t}\n\n\n\t\t//-----------------------------------------------------------------------------\n\t\t// Overridden Methods\n\t\t//-----------------------------------------------------------------------------\n\n\t\tpublic override void Initialize() {\n\t\t\tbase.Initialize();\n\t\t\tGraphics.PlayAnimation(GameData.ANIM_MONSTER_SPINNING_BLADE_TRAP_SLEEP);\n\t\t}\n\n\t\tpublic override void UpdateAI() {\n\t\t\tif (isMoving) {\n\t\t\t\t// After a delay, speed up\n\t\t\t\ttimer++;\n\t\t\t\tif (timer > GameSettings.MONSTER_SPINNING_BLADE_TRAP_SPEED_UP_DELAY) {\n\t\t\t\t\tmoveSpeed = GameSettings.MONSTER_SPINNING_BLADE_TRAP_FAST_SPEED;\n\t\t\t\t}\n\n\t\t\t\tPhysics.Velocity = direction.ToVector(moveSpeed);\n\t\t\t\tmoveDistance += moveSpeed;\n\n\t\t\t\t// After moving one tile, check if we can move one more\n\t\t\t\tif (moveDistance > GameSettings.TILE_SIZE) {\n\t\t\t\t\tmoveDistance = moveSpeed;\n\t\t\t\t\ttileLocation = RoomControl.GetTileLocation(Center);\n\n\t\t\t\t\tif (!CanMoveToNextTile(Direction))\n\t\t\t\t\t\tStopMoving();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tDirection directionToPlayer = Direction.FromVector(\n\t\t\t\t\tRoomControl.Player.Center - Center);\n\n\t\t\t\t// Check if player is aligned \n\t\t\t\tif (Entity.AreEntitiesAligned(this,\n\t\t\t\t\t\tRoomControl.Player, directionToPlayer,\n\t\t\t\t\t\tGameSettings.MONSTER_SPINNING_BLADE_TRAP_AGGRO_RANGE) &&\n\t\t\t\t\tCanMoveToNextTile(directionToPlayer))\n\t\t\t\t{\n\t\t\t\t\tStartMoving(directionToPlayer);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n",
  "public class Main {\n\tpublic static void main(String[] args) {\n\t\tAccount bartsAccount = new Account(\"Bart\");\n\t\tbartsAccount.deposit(1000);\n\t\tbartsAccount.withdraw(500);\n\t\tbartsAccount.withdraw(-250);\n\t\tbartsAccount.withdraw(-20);\n\t\tbartsAccount.calculateBalance();\n\t}\n}\n",
  "package db\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"time\"\n\n\t\"go.mongodb.org/mongo-driver/mongo\"\n\t\"go.mongodb.org/mongo-driver/mongo/options\"\n\t\"go.mongodb.org/mongo-driver/mongo/readpref\"\n)\n\nvar client *mongo.Client\nvar db *mongo.Database\n\n// ConnectOptions are connection options for the database connection\ntype ConnectOptions struct {\n\tConnectTimeout time.Duration\n\tDatabaseURL    string\n\tDatabase       string\n}\n\n// Initialize a new connection to the database\nfunc Initialize(o *ConnectOptions) (*mongo.Database, error) {\n\tif client!= nil {\n\t\treturn selectDatabase(client, o.Database)\n\t}\n\n\tdatabaseURL := o.DatabaseURL\n\tconnectTimeout := o.ConnectTimeout\n\n\tif connectTimeout == 0 {\n\t\tconnectTimeout = time.Duration(10 * time.Second)\n\t}\n\n\tctx, cancel := context.WithTimeout(context.Background(), connectTimeout)\n\tdefer cancel()\n\n\tif databaseURL == \"\" {\n\t\treturn nil, fmt.Errorf(\"missing database url\")\n\t}\n\n\tc, err := mongo.Connect(ctx, options.Client().ApplyURI(o.DatabaseURL))\n\n\tif err!= nil {\n\t\treturn nil, err\n\t}\n\n\terr = testClient(c)\n\tif err!= nil {\n\t\treturn nil, err\n\t}\n\n\tclient = c\n\n\tdefer func() {\n\t\tif err = client.Disconnect(ctx); err!= nil {\n\t\t\tpanic(err)\n\t\t}\n\t}()\n\n\treturn selectDatabase(client, o.Database)\n}\n\n// GetDatabase returns the instantiated database or errors if Initialize() has not been called\nfunc GetDatabase() (*mongo.Database, error) {\n\tif db!= nil {\n\t\treturn db, nil\n\t}\n\n\treturn nil, fmt.Errorf(\"no database object exists. Initialize must be called\")\n}\n\n// Close resets the state, clearing the persisted client and db objects. Initialize() must be called again.\nfunc Close() {\n\tif client!= nil {\n\t\tctx, cancel := context.WithTimeout(context.Background(), 10*time.Second)\n\t\tdefer cancel()\n\t\tclient.Disconnect(ctx)\n\t}\n\tdb = nil\n\tclient = nil\n}\n\nfunc selectDatabase(c *mongo.Client, d string) (*mongo.Database, error) {\n\tif db!= nil {\n\t\treturn db, nil\n\t}\n\n\tdatabase := c.Database(d)\n\n\tdb = database\n\treturn db, nil\n}\n\nfunc testClient(c *mongo.Client) error {\n\tctx, cancel := context.WithTimeout(context.Background(), 10*time.Second)\n\tdefer cancel()\n\treturn c.Ping(ctx, readpref.Primary())\n}\n",
  "function run () {\n    return '\u8dd1\u8d77\u6765';\n}",
  "/*\n * VP6 MMX/SSE2 optimizations\n * Copyright (C) 2009  Sebastien Lucas <sebastien.lucas@gmail.com>\n * Copyright (C) 2009  Zuxy Meng <zuxy.meng@gmail.com>\n *\n * This file is part of FFmpeg.\n *\n * FFmpeg is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * FFmpeg is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with FFmpeg; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n */\n\n#include \"libavutil/cpu.h\"\n#include \"libavutil/x86/asm.h\"\n#include \"libavutil/x86/cpu.h\"\n#include \"libavcodec/dsputil.h\"\n#include \"libavcodec/vp56dsp.h\"\n\nvoid ff_vp6_filter_diag4_mmx(uint8_t *dst, uint8_t *src, int stride,\n                             const int16_t *h_weights,const int16_t *v_weights);\nvoid ff_vp6_filter_diag4_sse2(uint8_t *dst, uint8_t *src, int stride,\n                              const int16_t *h_weights,const int16_t *v_weights);\n\nav_cold void ff_vp56dsp_init_x86(VP56DSPContext* c, enum AVCodecID codec)\n{\n    int mm_flags = av_get_cpu_flags();\n\n    if (CONFIG_VP6_DECODER && codec == AV_CODEC_ID_VP6) {\n#if ARCH_X86_32\n        if (EXTERNAL_MMX(mm_flags)) {\n            c->vp6_filter_diag4 = ff_vp6_filter_diag4_mmx;\n        }\n#endif\n\n        if (EXTERNAL_SSE2(mm_flags)) {\n            c->vp6_filter_diag4 = ff_vp6_filter_diag4_sse2;\n        }\n    }\n}\n",
  "/* eslint-disable-next-line */\nexport const HUB_EVENTS = {\n  GAME_JOINED: 'GameJoined',\n  USER_JOINED: 'UserJoined',\n  USER_LEFT: 'UserLeft',\n  CARD_PLAYED: 'CardPlayed',\n  CARDS_SHOWN: 'CardsShown',\n  NEW_GAME_STARTED: 'NewGameStarted',\n  // DEPRECATED\n  Connected: 'Connected',\n  Disconnected: 'Disconnected',\n  JoinGroup: 'JoinGroup',\n  JoinUser: 'JoinUser',\n  LeaveGroup: 'LeaveGroup',\n  NewGame: 'NewGame',\n  Send: 'Send',\n  ShowCards: 'ShowCards',\n  UpdateUser: 'UpdateUser',\n  UsersJoined: 'UsersJoined',\n};\n\nexport const HUB_ACTIONS = {\n  PLAY_CARD: 'PlayCard',\n  SHOW_CARDS: 'ShowCards',\n  START_NEW_GAME: 'StartNewGame',\n};\n",
  "<?php\n\nnamespace app\\models;\n\nuse Yii;\nuse yii\\base\\Model;\nuse app\\helpers\\TenantHelper;\n\n/**\n * LoginForm is the model behind the login form.\n *\n * @property User|null $user This property is read-only.\n *\n */\nclass LoginForm extends Model\n{\n    public $email;\n    public $password;\n    public $rememberMe = true;\n\n    private $_user = false;\n\n\n    /**\n     * @return array the validation rules.\n     */\n    public function rules()\n    {\n        return [\n            // username and password are both required\n            [['email', 'password'],'required'],\n            // rememberMe must be a boolean value\n            ['rememberMe', 'boolean'],\n            // password is validated by validatePassword()\n            ['password', 'validatePassword'],\n        ];\n    }\n\n    /**\n     * Validates the password.\n     * This method serves as the inline validation for password.\n     *\n     * @param string $attribute the attribute currently being validated\n     * @param array $params the additional name-value pairs given in the rule\n     */\n    public function validatePassword($attribute, $params)\n    {\n        if (!$this->hasErrors()) {\n            $user = $this->getUser();\n\n            if (!$user ||!$user->validatePassword($this->password)) {\n                $this->addError($attribute, 'Incorrect username or password.');\n            }\n        }\n    }\n\n    /**\n     * Logs in a user using the provided username and password.\n     * @return boolean whether the user is logged in successfully\n     */\n    public function login()\n    {\n        if ($this->validate()) {\n            $user = $this->getUser();\n            \n            \n            //$this->setState('role', $user->role);\n            Yii::$app->session->set('role',$user->role);\n            \n                Yii::$app->session->set('name',$user->getFullName());\n                        \n            \n            return Yii::$app->user->login($user, $this->rememberMe? 3600*24*30 : 0);\n        }\n        return false;\n    }\n\n    /**\n     * Finds user by [[username]]\n     *\n     * @return User|null\n     */\n    public function getUser()\n    {\n        \n        $isDefaultTenant = TenantHelper::isDefaultTenant();\n        \n        \n        if ($this->_user === false) {\n            if($isDefaultTenant){\n                $this->_user = User::findOne(['email' => $this->email, 'role' => User::ROLE_VENDOR]);\n            }else{\n                $tenantInfo = TenantInfo::isValidSubDomain(TenantHelper::getSubDomain());\n                if($tenantInfo!== false){\n                    $vendorId = $tenantInfo->userId;\n                    $tempUser = User::findOne(['email' => $this->email, 'role' => User::ROLE_VENDOR]);\n                    if($tempUser === null){\n                        //we get the customer user\n                        $tempUser = User::findOne(['email' => $this->email, 'role' => User::ROLE_CUSTOMER,'vendorId' => $vendorId]);\n                    }\n                    $this->_user = $tempUser;\n                }\n            }\n        }\n\n        return $this->_user;\n    }\n}\n",
  "module TestMutator\n  using FactCheck\n  import Creature\n  import Mutator\n  import Config\n  import Helper\n  import Code\n\n  # #\n  # # Just a container for testing data\n  # #\n  # type Data\n  #   d::Array{Any, 1}\n  # end\n  # #\n  # # Global data container instance\n  # #\n  # global _d = Data(Array{Any, 1}(10))\n  # #\n  # # Changes mutation parameters to supress any mutation type\n  # # except adding\n  # #\n  # function setAddMutation()\n  #   _d.d[1] = Config.val(:orgMutationProbs)\n  #   Config.val(:orgMutationProbs, [1,0,0,0,0,0,0])\n  # end\n  # function restoreAddMutation()\tConfig.val(:orgMutationProbs, _d.d[1]) end\n  # #\n  # # Sets maximum function parameters to 1. Related to add mutation.\n  # #\n  # function setMaxFuncParams()\n  #   _d.d[2] = Config.val(:codeFuncParamAmount)\n  #   Config.val(:codeFuncParamAmount, 1)\n  # end\n  # function restoreMaxFuncParams() Config.val(:codeFuncParamAmount, _d.d[2]) end\n  # #\n  # # pos - \"1,2,3\" fn - 1, block - 2, line - 3\n  # #\n  # function setMutationPos(pos::String) Mutator.Code.eval(parse(\"function getRandPos(org::Creature.Organism) Helper.CodePos(\" * pos * \") end\")) end\n  # function setCodePart(part::String) Mutator.Code.eval(parse(\"const CODE_PARTS = [CodePart(\" * part * \")]\")) end\n  # function restoreMutator() include(\"../src/organism/Mutator.jl\") end\n  # #\n  # # Checks if one of supported code part types was added into AST\n  # #\n  # function isVarAdded(org)\n  #   local hasType = false\n  #   for i in [Float16] if length(org.funcs[1].blocks[1].vars[i]) > 0 hasType = true end end\n  #   hasType\n  # end\n\n  # facts(\"Adding var to empty code\") do\n  #   setAddMutation()\n  #   setMutationPos(\"1,1,1\")\n  #   setCodePart(\"Code.plus, false\")\n\n  #   org = Creature.create()\n  #   @fact Mutator._onAdd(org)                         --> true\n  #   @fact org.code.args[2].args[1].head               --> :local\n  #   @fact Helper.getLines(org.code, [2,1,1,1])[1]     --> :var_1\n\n  #   restoreAddMutation()\n  #   restoreMutator()\n  # end\n  # facts(\"Adding two vars to empty code\") do\n  #   setAddMutation()\n  #   setMutationPos(\"1,1,1\")\n  #   setCodePart(\"Code.plus, false\")\n\n  #   org = Creature.create()\n  #   @fact Mutator._onAdd(org)                         --> true\n  #   @fact Mutator._onAdd(org)                         --> true\n  #   @fact org.code.args[2].args[1].head               --> :local\n  #   @fact org.code.args[2].args[2].head               --> :local\n  #   @fact Helper.getLines(org.code, [2,1,1,1])[1]     --> :var_2\n  #   @fact Helper.getLines(org.code, [2,2,1,1])[1]     --> :var_1\n\n  #   restoreAddMutation()\n  #   restoreMutator()\n  # end\n  # facts(\"Adding var into the function\") do\n  #   setAddMutation()\n  #   setMutationPos(\"1,1,1\")\n  #   setCodePart(\"Code.fn, true\")\n  #   setMaxFuncParams()\n\n  #   org = Creature.create()\n  #   @fact Mutator._onAdd(org)                         --> true\n  #   @fact Helper.getLines(org.code, [2,1,1])[1]       --> :func_2\n  #   setMutationPos(\"2,1,1\")\n  #   println(Code.getRandPos(org))\n  #   setCodePart(\"Code.plus, false\")\n  #   @fact Mutator._onAdd(org)                         --> true\n  #   #println(Helper.getLines(org.code, [2,2,1,1])[1]     --> :var_1)\n\n  #   restoreMaxFuncParams()\n  #   restoreAddMutation()\n  #   restoreMutator()\n  # end\n  # facts(\"Adding function declaration\") do\n  #   setAddMutation()\n  #   setMutationPos(\"1,1,1\")\n  #   setCodePart(\"Code.fn, true\")\n  #   setMaxFuncParams()\n\n  #   org = Creature.create()\n  #   @fact Mutator._onAdd(org)                         --> true\n  #   @fact Helper.getLines(org.code, [2,1,1])[1]       --> :func_2\n\n  #   restoreMaxFuncParams()\n  #   restoreAddMutation()\n  #   restoreMutator()\n  # end\nend\n",
  "import React from'react'\nimport PropTypes from 'prop-types'\nimport { Form, Input, Modal, message, Switch, Icon, Radio } from 'antd'\nimport axios from '../../component/axios'\n\nexport default class EnvItemDetailForm extends React.Component {\n  static propTypes = {\n    modal: PropTypes.object.isRequired,\n    data: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n  }\n\n  formRef = React.createRef()\n  platforms = [\n    { platform: 0, title: '\u5168\u90e8' },\n    { platform: 1, title: 'iOS' },\n    { platform: 2, title: 'Android' }]\n\n\n  onFinished = (success, props) => {\n    const { modal } = this.props\n    this.setState({ modal: Object.assign(modal, props) })\n    if (success) {\n      message.success('\u6dfb\u52a0\u6210\u529f!')\n      this.props.onChange(modal.envid)\n    }\n  }\n\n  saveAdd(data) {\n    const { modal } = this.props\n    data = {...data, envid: modal.envid, id: data.id || 0, updateTime: 0 }\n    this.setState({ modal: Object.assign(modal, { loading: true }) })\n\n    return axios\n     .post('/env/update/' + data.id, Object.assign(data))\n     .then(() => this.onFinished(true, { visible: false }))\n     .finally(() => this.onFinished(false, { loading: false }))\n  }\n\n  render() {\n    const { data, modal, onCancel } = this.props\n    const formItemLayout = {\n      labelCol: { span: 6 },\n      wrapperCol: { span: 18 }\n    }\n\n    return (\n      <Modal\n        title={'\u65b0\u589e'}\n        visible={modal.visible}\n        confirmLoading={modal.loading}\n        onOk={() => {\n          this.formRef.current.validateFields().then(values => this.saveAdd(values))\n        }}\n        onCancel={onCancel}\n        key={modal.key}\n        maskClosable={false}\n      >\n        <Form ref={this.formRef} initialValues={{...data, platform: data.platform || 0 }}>\n          <Form.Item name=\"id\" style={{ display: 'none' }}>\u00b8\n            <Input type=\"hidden\" />\n          </Form.Item>\n          <Form.Item name=\"name\" rules={[{ required: true, message: '\u8bf7\u8f93\u5165\u53c2\u6570\u540d\u79f0!' }]} {...formItemLayout} label=\"\u53c2\u6570\u540d\u79f0\">\n            <Input placeholder=\"\u8bf7\u8f93\u5165\u53c2\u6570\u540d\u79f0\" />\n          </Form.Item>\n          <Form.Item name=\"value\" rules={[{ required: true, message: '\u8bf7\u8f93\u5165\u53c2\u6570\u503c!' }]} {...formItemLayout} label=\"\u53c2\u6570\u503c\">\n            <Input placeholder=\"\u8bf7\u8f93\u5165\u53c2\u6570\u503c\" />\n          </Form.Item>\n          <Form.Item name=\"platform\" rules={[{ required: false }]} {...formItemLayout} label=\"\u7c7b\u578b\">\n            <Radio.Group name='envtypes'>\n              {this.platforms.map(record => <Radio.Button key={record.platform}\n                value={record.platform}>{record.title}</Radio.Button>)}\n            </Radio.Group>\n          </Form.Item>\n          <Form.Item name=\"comment\" rules={[{ required: false, message: '\u8bf7\u8f93\u5165\u53c2\u6570\u63cf\u8ff0!' }]} {...formItemLayout} label=\"\u63cf\u8ff0\">\n            <Input placeholder=\"\u8bf7\u8f93\u51fa\u53c2\u6570\u63cf\u8ff0\" />\n          </Form.Item>\n        </Form>\n      </Modal >\n    )\n  }\n}",
  ":root {\n  /* Font sizes */\n  --hero-text-mobile: 50px;\n  --product-text-mobile: 40px;\n  --h1-large: 2.25rem;\n  --large: 180px;\n  --h1: 1.5rem;\n  --nav-link-size: 20px;\n  --p: 1rem;\n  --p-small: 0.75rem;\n\n  /* Colors */\n  --color-white: #fff;\n  --color-black: #000;\n  --color-almost-white: #e6e6e6;\n  --color-light-grey: #8f8f8f;\n  --color-grey: #444444;\n  --color-almost-black: #35393a;\n  --color-blue: #1ee2e7;\n  --color-almost-green: #17d0d5;\n  --color-almost-blue: #5fa2c8;\n  --color-red: #e74c3c;\n\n  /* Font family */\n  --font-family-base: Helvetica, Arial, sans-serif;\n}\n\nhtml {\n  scroll-behavior: smooth;\n}\n",
  "#!/bin/bash\n\nset -x\n\ngrep I_IS_4 105-assert-loop.stdout || exit 1\n\n#\n# Assert fails the entire run whenever the assertion\n# fails, and not when the loop in which the assert statement\n# exists completes. It is therefore incorrect to assume anything\n# about the number of parallel iterations that are\n# completed when assert aborts everything.\n#\n\n#LINES=$( grep -c \"i:\" 105-assert-loop.stdout )\n#[[ ${LINES} == 5 ]] || exit 1\n\nexit 0\n",
  "package org.cice.jesh.services;\n\nimport com.google.gson.Gson;\nimport java.util.HashMap;\nimport java.util.Map;\nimport javax.ws.rs.Consumes;\nimport javax.ws.rs.DELETE;\nimport javax.ws.rs.GET;\nimport javax.ws.rs.POST;\nimport javax.ws.rs.PUT;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.PathParam;\nimport javax.ws.rs.Produces;\nimport javax.ws.rs.QueryParam;\nimport javax.ws.rs.core.Response;\nimport org.cice.jesh.filters.AuthenticationFilter;\nimport org.cice.jesh.managers.ProductManager;\nimport org.cice.jesh.persistence.entities.ProductDto;\n\n/**\n * Created by toni on 20/04/16.\n */\n@Path(\"/product\")\npublic class ProductService {\n    ProductManager productManager = new ProductManager();\n\n    @GET\n    @Produces(\"application/json\")\n    public Response getAllProducts() {\n        \n        Map<Object, Object> result = new HashMap<>(productManager.getAllProducts());\n        String responseJSON = new Gson().toJson(result.get(\"response\"));\n        \n        return Response.status((Integer) result.get(\"statusCode\")).entity(responseJSON).build();\n    }\n    \n    @GET\n    @Path(\"/find\")\n    @Produces(\"application/json\")\n    public Response findProduct(@QueryParam(\"query\") String query) {\n        \n        Map<Object, Object> result = new HashMap<>(productManager.findProduct(query));\n        String responseJSON = new Gson().toJson(result.get(\"response\"));\n        \n        return Response.status((Integer) result.get(\"statusCode\")).entity(responseJSON).build();\n    }\n    \n    @GET\n    @Path(\"{id}\")\n    @Produces(\"application/json\")\n    public Response getProduct(@PathParam(\"id\") String id) throws Exception {\n\n        Map<Object, Object> result = new HashMap<>(productManager.getProduct(id));\n        String responseJSON = new Gson().toJson(result.get(\"response\"));\n        \n        return Response.status((Integer) result.get(\"statusCode\")).entity(responseJSON).build();\n    }\n\n    @POST\n    @Produces(\"application/json\")\n    @Consumes(\"application/json\") \n    @AuthenticationFilter.AuthenticationFilterImpl\n    public Response addProduct(ProductDto product) {\n\n        Map<Object, Object> result = new HashMap<>(productManager.create(product));\n        String responseJSON = new Gson().toJson(result.get(\"response\"));\n        \n        return Response.status((Integer) result.get(\"statusCode\")).entity(responseJSON).build();\n    }\n\n    @PUT\n    @Path(\"{id}\")\n    @Produces(\"application/json\")\n    @Consumes(\"application/json\")\n    @AuthenticationFilter.AuthenticationFilterImpl\n    public Response updateProduct(@PathParam(\"id\") String id, ProductDto product) throws Exception {\n\n        Map<Object, Object> result = new HashMap<>(productManager.update(id, product));\n        String responseJSON = new Gson().toJson(result.get(\"response\"));\n        \n        return Response.status((Integer) result.get(\"statusCode\")).entity(responseJSON).build();\n    }\n    \n    @DELETE\n    @Path(\"{id}\")\n    @AuthenticationFilter.AuthenticationFilterImpl\n    public Response deleteProduct(@PathParam(\"id\") String id) throws Exception {\n\n        Map<Object, Object> result = new HashMap<>(productManager.delete(id));\n        String responseJSON = new Gson().toJson(result.get(\"response\"));\n        \n        return Response.status((Integer) result.get(\"statusCode\")).entity(responseJSON).build();\n    }\n}\n",
  "<?php\n\nnamespace App;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass MaterialRequests extends Model\n{\n    protected $table ='material_requests';\n\n    protected $fillable = ['project_site_id','quotation_id','user_id','assigned_to','on_behalf_of','serial_no','format_id'];\n\n    public function projectSite(){\n        return $this->belongsTo('App\\ProjectSite','project_site_id');\n    }\n\n    public function materialRequestComponents(){\n        return $this->hasMany('App\\MaterialRequestComponents','material_request_id');\n    }\n\n    public function onBehalfOf(){\n        return $this->belongsTo('App\\User','on_behalf_of');\n    }\n\n    public function assignedToUser(){\n        return $this->belongsTo('App\\User','assigned_to');\n    }\n\n    public function user(){\n        return $this->belongsTo('App\\User','user_id');\n    }\n\n    public function quotation(){\n        return $this->belongsTo('App\\Quotation','quotation_id');\n    }\n}\n",
  "---\nlayout: default\ntitle: Ejemplo\n---\n\n\nEjemplo de pagina que se llama k2.md\n",
  "---\nactive: true\nautolink: false\nemail_form: 2\nheadless: true\nsubtitle: \"\"\ntitle: Leave a message\nweight: 95\nwidget: contact\n---\n\n",
  "<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nclass CreateRatesTable extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::create('rates', function (Blueprint $table) {\n            $table->id();\n            $table->string('date');\n            $table->string('name');\n            $table->string('rate');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::dropIfExists('rates');\n    }\n}\n",
  "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sun Oct 18 01:15:03 2020\n\u200b\n@author: apple\n\"\"\"\nimport random \nfrom collections import deque\nimport time \nimport uuid\nclass Map:\n    def query(self, store_loc, customer_loc, transport):\n        dist = sum([abs(store_loc[i] - customer_loc[i]) for i in range(2)])\n        if transport == 1:\n            trans_time = dist/(5*random.uniform(0,1))\n        elif transport == 2:\n            trans_time = dist/1\n        return dist, trans_time\nclass Store:\n    def __init__(self, location, store_ID, inventory, menu, worker = 6, speed = 10):\n        self.loc = location\n        self.speed = speed\n        self.queue = deque()\n        self.in_process = deque()\n        self.ID = store_ID\n        self.waiting_time = 0\n        self.inventory = inventory\n        self.recipe = {}\n        self.menu = menu\n    def take_order(self,order_ID, order):\n        self.queue.append((order_ID, order))\n        self.waiting_time += self.speed\n        return (order_ID, 2)\n    def start_order(self):\n        order_ID, order = self.queue.popleft()\n        self.in_process.append(order_ID)\n        return (order_ID, 3)\n    def finish_order(self, order_ID):\n        self.in_process.remove(order_ID)\n        self.waiting_time -= self.speed\n        return (order_ID, 4)\n    \nclass Order:\n    def __init__(self, order_ID, order, order_loc, dest, order_constraint):\n        self.ID = order_ID\n        self.order = order\n        self.dest = dest\n        self.t = time.time()\n        self.status = 0\n        self.loc = order_loc\n        self.time_limit = order_constraint['time']\n        self.dist_limit = order_constraint['distance']\n    def change_status(self, status):\n        '''\n        0 : pending query\n        1 : pending confirmation\n        2 : order taken\n        3 : order start\n        4 : order complete\n        5 : query expired\n        -1 : quary failed\n        '''\n        self.status = status\n    def add_store_list(self, store_list):\n        self.store_list = store_list\n        self.change_status(1)\n    def order_taken(self):\n        self.change_status(2)\n    def order_start(self):\n        self.change_status(3)  \n    def order_complete(self):\n        self.change_status(4)  \n    def query_expired(self):\n        self.change_status(5)  \n    def query_failed(self):\n        self.change_status(-1)\n    def update_failed(self):\n        self.change_status(-2)\n\nclass Agent:\n    def __init__(self):\n        self.store_list = {}\n        self.pending_request = {}\n        self.pending_confirm = deque()\n        self.in_process = deque()\n    def open_store(self, store_loc, menu, inventory):\n        print('open store good')\n        store_ID = str(uuid.uuid4())\n        self.store_list[store_ID] = Store(store_loc, store_ID, inventory, menu)\n        print(self.store_list)\n        return store_ID,'store opened'\n    def close_store(self, store_ID):\n        print(self.store_list)\n        del self.store_list[store_ID]\n        return store_ID,'store closed'\n    def new_query(self, order_list, order_loc, order_dest, order_constraint):\n        new_order = Order(str(uuid.uuid4()), order_list, order_loc, order_dest,order_constraint)\n        choices = self.query(new_order)\n        if choices!= -1:\n            print('successfully queried order')\n            new_order.add_store_list(dict(choices))\n            self.pending_request[new_order.ID] = new_order\n            if len(choices) > 3:\n                return new_order.ID, new_order.status, dict(choices[:3])\n            return new_order.ID, new_order.status, choices\n        else:\n            print('No available choices')\n            new_order.query_failed()\n            return new_order.ID, new_order.status, choices\n    def query(self, order):\n        choices = {}\n        for store in self.store_list.values():\n            dist, travel_time = Map().query(store.loc, order.loc, 1) \n            if dist <= order.dist_limit and travel_time <= order.time_limit:\n                todest, todest_time = Map().query(store.loc, order.dest,  1)\n                dist += todest\n                travel_time += todest_time\n                if dist <= order.dist_limit and travel_time <= order.time_limit:\n                    travel_time += store.waiting_time + store.speed\n                    if dist <= order.dist_limit and travel_time <= order.time_limit:\n                        choices[store.ID] = {'distance':dist, 'time':travel_time}\n        if len(choices) > 1:\n            choices = sorted(choices.items(), key = lambda x : x[1]['time']) \n            return choices\n        elif len(choices) == 1:\n            return choices\n        return -1\n    def comfirm_w_store(self, order_ID, store_ID):\n        order = self.pending_request[order_ID]\n        store_dict= order.store_list[store_ID]\n        #dist = store_dict['distance']\n        time = store_dict['time']\n        updated_choices = self.query(order)\n        if updated_choices!= -1:\n            if dict(updated_choices)[store_ID]['time'] <= time*1.2:\n                message = self.store_list[store_ID].take_order(order_ID, order.order)\n                if message[1] == 2:\n                    order.order_taken()\n                    self.in_process.append(order_ID)\n                    return order.ID, order.status, 'order processed by store, time updated', dict(updated_choices)[store_ID]['time']\n            else:\n                order.query_expired() \n                if len(updated_choices) > 3:\n                    return order.ID, order.status, 'query expired', dict(updated_choices[:3])\n                return  order.ID, order.status, 'query expired', dict(updated_choices)\n        else:\n            order.update_failed()\n            return order.ID, order.status, 'update failed', -1000",
  "/*\n * Copyright (C) 2019 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n#ifndef TNT_FILAMENT_DRIVER_METALBUFFER_H\n#define TNT_FILAMENT_DRIVER_METALBUFFER_H\n\n#include \"MetalContext.h\"\n#include \"MetalBufferPool.h\"\n\n#include <backend/DriverEnums.h>\n\n#include <Metal/Metal.h>\n\nnamespace filament {\nnamespace backend {\nnamespace metal {\n\nclass MetalBuffer {\npublic:\n\n    MetalBuffer(MetalContext& context, BufferUsage usage, size_t size, bool forceGpuBuffer = false);\n    ~MetalBuffer();\n\n    MetalBuffer(const MetalBuffer& rhs) = delete;\n    MetalBuffer& operator=(const MetalBuffer& rhs) = delete;\n\n    size_t getSize() const noexcept { return mBufferSize; }\n\n    /**\n     * Wrap an external Metal buffer. Stores a strong reference to it.\n     */\n    void wrapExternalBuffer(id<MTLBuffer> buffer);\n\n    /**\n     * Release the external Metal buffer, if wrapping any.\n     */\n    bool releaseExternalBuffer();\n\n    /**\n     * Update the buffer with data inside src. Potentially allocates a new buffer allocation to hold\n     * the bytes which will be released when the current frame is finished.\n     */\n    void copyIntoBuffer(void* src, size_t size, size_t byteOffset = 0);\n\n    /**\n     * Denotes that this buffer is used for a draw call ensuring that its allocation remains valid\n     * until the end of the current frame.\n     *\n     * @return The MTLBuffer representing the current state of the buffer to bind, or nil if there\n     * is no device allocation.\n     *\n     * For STREAM buffers, getGpuBufferStreamOffset() should be called to retrieve the correct\n     * buffer offset.\n     *\n     */\n    id<MTLBuffer> getGpuBufferForDraw(id<MTLCommandBuffer> cmdBuffer) noexcept;\n\n    /**\n     * Returns the offset into the buffer returned by getGpuBufferForDraw. This is always 0 for\n     * non-STREAM buffers.\n     */\n    size_t getGpuBufferStreamOffset() noexcept { return mCurrentStreamStart; }\n\n    void* getCpuBuffer() const noexcept { return mCpuBuffer; }\n\n    enum Stage {\n        VERTEX = 1,\n        FRAGMENT = 2\n    };\n\n    /**\n     * Bind multiple buffers to pipeline stages.\n     *\n     * bindBuffers binds an array of buffers to the given stage(s) of a MTLRenderCommandEncoder's\n     * pipeline.\n     */\n    static void bindBuffers(id<MTLCommandBuffer> cmdBuffer, id<MTLRenderCommandEncoder> encoder,\n            size_t bufferStart, uint8_t stages, MetalBuffer* const* buffers, size_t const* offsets,\n            size_t count);\n\nprivate:\n\n    BufferUsage mUsage;\n    size_t mBufferSize = 0;\n    id<MTLBuffer> mExternalBuffer = nil;\n    size_t mCurrentStreamStart = 0;\n    size_t mCurrentStreamEnd = 0;\n    const MetalBufferPoolEntry* mBufferPoolEntry = nullptr;\n    void* mCpuBuffer = nullptr;\n    MetalContext& mContext;\n\n    void copyIntoStreamBuffer(void* src, size_t size);\n};\n\n} // namespace metal\n} // namespace backend\n} // namespace filament\n\n#endif\n",
  "module Language.ContextSemantics.Common where\n\n\ntype PortName = String",
  "# The MIT License\n#\n# Copyright (c) 2011 Wyss Institute at Harvard University\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included in\n# all copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n# THE SOFTWARE.\n#\n# http://www.opensource.org/licenses/mit-license.php\n\"\"\"\nactiveslicehandle.py\nCreated by Shawn on 2011-02-05.\n\"\"\"\n\nfrom exceptions import IndexError\nfrom math import floor\n\nfrom controllers.itemcontrollers.activesliceitemcontroller import ActiveSliceItemController\nfrom views import styles\nimport util\n\n# import Qt stuff into the module namespace with PySide, PyQt4 independence\nutil.qtWrapImport('QtCore', globals(), ['QPointF', 'QRectF', 'Qt', 'QObject',\\\n                                        'pyqtSignal', 'pyqtSlot', 'QEvent'])\nutil.qtWrapImport('QtGui', globals(), ['QBrush', 'QFont', 'QGraphicsItem',\\\n                                       'QGraphicsSimpleTextItem', 'QPen',\\\n                                       'QDrag', 'QUndoCommand', 'QGraphicsRectItem'])\n\n\n_baseWidth = styles.PATH_BASE_WIDTH\n_brush = QBrush(styles.activeslicehandlefill)\n_labelbrush = QBrush(styles.orangestroke)\n_pen = QPen(styles.activeslicehandlestroke,\\\n            styles.SLICE_HANDLE_STROKE_WIDTH)\n_font = QFont(styles.thefont, 12, QFont.Bold)\n\n\nclass ActiveSliceItem(QGraphicsRectItem):\n    \"\"\"ActiveSliceItem for the Path View\"\"\"\n\n    def __init__(self, partItem, activeBaseIndex):\n        super(ActiveSliceItem, self).__init__(partItem)\n        self._partItem = partItem\n        self._activeTool = partItem.activeTool()\n        self._activeSlice = 0\n        self._lowDragBound = 0\n        self._highDragBound = self.part().maxBaseIdx()\n        self._controller = ActiveSliceItemController(self, partItem.part())\n\n        self._label = QGraphicsSimpleTextItem(\"\", parent=self)\n        self._label.setPos(0, -18)\n        self._label.setFont(_font)\n        self._label.setBrush(_labelbrush)\n        self._label.hide()\n\n        self.setFlag(QGraphicsItem.ItemIsMovable)\n        self.setAcceptHoverEvents(True)\n        self.setZValue(styles.ZACTIVESLICEHANDLE)\n        self.setRect(QRectF(0, 0, _baseWidth,\\\n                      self._partItem.boundingRect().height()))\n        self.setPos(activeBaseIndex*_baseWidth, 0)\n        self.setBrush(_brush)\n        self.setPen(_pen)\n\n        # reuse select tool methods for other tools\n        self.addSeqToolMousePress = self.selectToolMousePress\n        self.addSeqToolMouseMove = self.selectToolMouseMove\n        self.breakToolMousePress = self.selectToolMousePress\n        self.breakToolMouseMove = self.selectToolMouseMove\n        self.insertionToolMousePress = self.selectToolMousePress\n        self.insertionToolMouseMove = self.selectToolMouseMove\n        self.paintToolMousePress = self.selectToolMousePress\n        self.paintToolMouseMove = self.selectToolMouseMove\n        self.pencilToolMousePress = self.selectToolMousePress\n        self.pencilToolMouseMove = self.selectToolMouseMove\n        self.skipToolMousePress = self.selectToolMousePress\n        self.skipToolMouseMove = self.selectToolMouseMove\n    # end def\n\n    ### SLOTS ###\n    def strandChangedSlot(self, sender, vh):\n        pass\n    # end def\n\n    def updateRectSlot(self, part):\n        bw = _baseWidth\n        newRect = QRectF(0, 0, bw,\\\n                    self._partItem.virtualHelixBoundingRect().height())\n        if newRect!= self.rect():\n            self.setRect(newRect)\n        self._hideIfEmptySelection()\n        self.updateIndexSlot(part, part.activeBaseIndex())\n        return newRect\n    # end def\n\n    def updateIndexSlot(self, part, baseIndex):\n        \"\"\"The slot that receives active slice changed notifications from\n        the part and changes the receiver to reflect the part\"\"\"\n        label = self._label\n        bw = _baseWidth\n        bi = util.clamp(int(baseIndex), 0, self.part().maxBaseIdx())\n        self.setPos(bi * bw, -styles.PATH_HELIX_PADDING)\n        self._activeSlice = bi\n        if label:\n            label.setText(\"%d\" % bi)\n            label.setX((bw - label.boundingRect().width()) / 2)\n    # end def\n\n    ### ACCESSORS ###\n    def activeBaseIndex(self):\n        return self.part().activeBaseIndex()\n    # end def\n\n    def part(self):\n        return self._partItem.part()\n    # end def\n\n    def partItem(self):\n        return self._partItem\n    # end def\n\n    ### PUBLIC METHODS FOR DRAWING / LAYOUT ###\n    def removed(self):\n        scene = self.scene()\n        scene.removeItem(self._label)\n        scene.removeItem(self)\n        self._partItem = None\n        self._label = None\n        self._controller.disconnectSignals()\n        self.controller = None\n    # end def\n\n    def resetBounds(self):\n        \"\"\"Call after resizing virtualhelix canvas.\"\"\"\n        self._highDragBound = self.part().maxBaseIdx()\n    # end def\n\n    ### PRIVATE SUPPORT METHODS ###\n    def _hideIfEmptySelection(self):\n        vis = self.part().numberOfVirtualHelices() > 0\n        self.setVisible(vis)\n        self._label.setVisible(vis)\n    # end def\n\n    def _setActiveBaseIndex(self, baseIndex):\n        self.part().setActiveBaseIndex(baseIndex)\n    # end def\n\n    ### EVENT HANDLERS ###\n    def hoverEnterEvent(self, event):\n        self.setCursor(Qt.OpenHandCursor)\n        self._partItem.updateStatusBar(\"%d\" % self.part().activeBaseIndex())\n        QGraphicsItem.hoverEnterEvent(self, event)\n    # end def\n\n    def hoverLeaveEvent(self, event):\n        self.setCursor(Qt.ArrowCursor)\n        self._partItem.updateStatusBar(\"\")\n        QGraphicsItem.hoverLeaveEvent(self, event)\n    # end def\n\n    def mousePressEvent(self, event):\n        \"\"\"\n        Parses a mousePressEvent, calling the approproate tool method as\n        necessary. Stores _moveIdx for future comparison.\n        \"\"\"\n        if event.button()!= Qt.LeftButton:\n            event.ignore()\n            QGraphicsItem.mousePressEvent(self, event)\n            return\n        self.scene().views()[0].addToPressList(self)\n        self._moveIdx = int(floor((self.x()+event.pos().x()) / _baseWidth))\n        toolMethodName = str(self._activeTool()) + \"MousePress\"\n        if hasattr(self, toolMethodName):  # if the tool method exists\n            modifiers = event.modifiers()\n            getattr(self, toolMethodName)(modifiers)  # call tool method\n\n    def mouseMoveEvent(self, event):\n        \"\"\"\n        Parses a mouseMoveEvent, calling the approproate tool method as\n        necessary. Updates _moveIdx if it changed.\n        \"\"\"\n        toolMethodName = str(self._activeTool()) + \"MouseMove\"\n        if hasattr(self, toolMethodName):  #",
  "head, body {\n    border-collapse: collapse;\n    display: block;\n    position: fixed;\n    left: 0;\n    right: 0;\n    padding: 0;\n    margin: 0;\n}\n\n.canvas-wrapper {\n    display: block;\n    left: 0;\n    right: 0;\n    height: 100%;\n    padding: 0;\n    margin: 0;\n}\n\ncanvas {\n    display: block;\n    margin: 0;\n    padding: 0;\n}\n",
  "ALTER TABLE users\n  ADD COLUMN account_info JSONB;  -- JSON \u0430\u043a\u043a\u0430\u0443\u043d\u0442\u0430 \u043f\u0440\u044f\u043c\u043e \u0438\u0437 get_account \u0431\u043b\u043e\u043a\u0447\u0435\u0439\u043d\u0430\n\nCREATE INDEX idx_users_account_info\n  ON users USING GIN (account_info)\n  WHERE stihi_user AND (account_info->'withdrawn')::TEXT::BIGINT > 0;\n",
  "import * as core from \"../../../../Effect/core\"\nimport type { Effect } from \"../../../../Effect/effect\"\nimport type * as Chunk from \"../core\"\nimport { concrete, SingletonTypeId } from \"../definition\"\nimport { reduceRight_ } from \"./reduceRight\"\n\n/**\n * Folds over the elements in this chunk from the right.\n */\nexport function reduceRightM_<A, R, E, S>(\n  self: Chunk.Chunk<A>,\n  s: S,\n  f: (a: A, s: S) => Effect<R, E, S>\n): Effect<R, E, S> {\n  concrete(self)\n  if (self._typeId === SingletonTypeId) {\n    return f(self.a, s)\n  }\n  return reduceRight_(self, core.succeed(s) as Effect<R, E, S>, (a, s) =>\n    core.chain_(s, (s1) => f(a, s1))\n  )\n}\n\n/**\n * Folds over the elements in this chunk from the right.\n *\n * @dataFirst reduceRightM_\n */\nexport function reduceRightM<A, R, E, S>(\n  s: S,\n  f: (a: A, s: S) => Effect<R, E, S>\n): (self: Chunk.Chunk<A>) => Effect<R, E, S> {\n  return (self) => reduceRightM_(self, s, f)\n}\n",
  "<?php\n\nrequire_once('Beverage.php');\n\nclass BeverageCabinet\n{\n    const EMPTY_CAPACITY_STATUS = 'EMPTY';\n    const FULL_CAPACITY_STATUS = 'FULL';\n    const PARTIALLY_CAPACITY_STATUS = 'PARTIALLY';\n\n    private $beverage;\n    private $shelveCount = 3;\n    private $shelveCapacity = 20;\n    private $beverageList = [];\n    private $doorStatus = false; // If $doorStatus is false that means door is closed\n\n    public function __construct(Beverage $beverage)\n    {\n        $this->beverage = $beverage;\n    }\n\n    /**\n     * @return int\n     */\n    public function getShelveCount()\n    {\n        return $this->shelveCount;\n    }\n\n    /**\n     * @param int $shelveCount\n     */\n    public function setShelveCount($shelveCount)\n    {\n        $this->shelveCount = $shelveCount;\n    }\n\n    /**\n     * @return int\n     */\n    public function getShelveCapacity()\n    {\n        return $this->shelveCapacity;\n    }\n\n    /**\n     * @param int $shelveCapacity\n     */\n    public function setShelveCapacity($shelveCapacity)\n    {\n        $this->shelveCapacity = $shelveCapacity;\n    }\n\n    public function getCapacity()\n    {\n        return $this->shelveCount * $this->shelveCapacity;\n    }\n\n    public function addBeverage(Beverage $beverage, $shelveNumber)\n    {\n        if ($beverage->getName()!== $this->beverage->getName()) {\n            return 'This beverage cannot put in this cabinet.';\n        }\n\n        if (!$this->doorStatus) {\n            return 'Please open the cabinet\\'s door.';\n        }\n\n        if ($shelveNumber > $this->shelveCount) {\n            return $shelveNumber.'shelve number does not exist.';\n        }\n\n        if (!isset($this->beverageList[$shelveNumber])) {\n            $this->beverageList[$shelveNumber] = 0;\n        }\n\n        if ($this->beverageList[$shelveNumber] == $this->shelveCapacity) {\n            $warning = 'This shelve is full.';\n\n            if ($this->getCabinetCapacityStatus() === self::FULL_CAPACITY_STATUS) {\n                $warning.='And this cabinet is full.';\n            }\n\n            return $warning;\n        }\n\n        $this->beverageList[$shelveNumber]++;\n\n        return true;\n    }\n\n    public function takeBeverage($shelveNumber)\n    {\n        if (!$this->doorStatus) {\n            return 'Please open the cabinet\\'s door.';\n        }\n\n        if (\n           !isset($this->beverageList[$shelveNumber])\n            || $this->beverageList[$shelveNumber] == 0\n        ) {\n            return 'This shelve is empty.';\n        }\n\n        $this->beverageList[$shelveNumber]--;\n\n        return true;\n    }\n\n    public function getBeverageCount()\n    {\n        return array_sum($this->beverageList);\n    }\n\n    public function getCabinetCapacityStatus()\n    {\n        $cabinetCapacity = $this->getCapacity();\n        $beverageCount = $this->getBeverageCount();\n\n        if ($cabinetCapacity === $beverageCount) {\n            return self::FULL_CAPACITY_STATUS;\n        } elseif ($beverageCount === 0) {\n            return self::EMPTY_CAPACITY_STATUS;\n        } else {\n            return self::PARTIALLY_CAPACITY_STATUS;\n        }\n    }\n\n    /**\n     * @return bool\n     */\n    public function getDoorStatus()\n    {\n        return $this->doorStatus;\n    }\n\n    /**\n     * @param bool $doorStatus\n     */\n    public function setDoorStatus($doorStatus)\n    {\n        $this->doorStatus = $doorStatus;\n    }\n}\n",
  "---\nlayout: post\ntitle: My First Six Weeks Working at Stack Overflow\nauthor: jonhmchan\nhero: https://i.stack.imgur.com/qOAcI.jpg\nsource: http://www.jonhmchan.com/blog/2014/1/16/my-first-six-weeks-working-at-stack-overflow\ntags:\n - onboarding\n - development\n - culture\n - engineering\n---\n\nI started working at [Stack Exchange](http://www.stackexchange.com/) (which many know for/as [Stack Overflow](http://stackoverflow.com/)) as a software developer just six weeks ago. This (lengthy) post is about a number of things: what it was like relearning a lot of what I know about web development, the challenges and resources I encountered doing so, and a few pointers others might benefit from on-boarding on a new development team.\n\n## About Me\n\nI think to grasp what this experience was like, it's useful to have some context. I won't go into all the details about joining (that's a whole other story), but just the necessary bits. Before I joined Stack, I was working at a [Big Four consulting firm](http://en.wikipedia.org/wiki/Big_Four_(audit_firms)) in their technology division straight out of college. After I built [Bento](https://www.bento.io/), I had the opportunity to join Stack, and I took it. What's also important is that I'm a self-taught developer. Pretty much everything i know is through online tutorials and some books.\n\n## Week 1 & 2: Learning Stack's stack\n\nHere's a quick breakdown of the technologies I was used to before I joined Stack, and what I had to pick up:\n\n*What I was used to*\n\n - **Python, Tornado**\n - **Sublime Text, OS X**\n - **Mongo, Memcached**\n - HTML, CSS, JavaScript\n - jQuery, Angular\n - Git, GitHub\n\n*What I was learning*\n\n - **C#,.NET**\n - **Visual Studio, Windows 8**\n - **SQL Server, Linq, Redis, Elasticsearch**\n - HTML, CSS, JavaScript, Razor\n - jQuery, Angular\n - Git, Kiln\n\n The major piece, of course, is in the backend: I was basically changing stacks entirely. I was going from a dynamically to statically typed language, from a document-based to traditional relational database, among other things. In short, there was a lot to learn. Of course, I had the help of the whole development team I was part of, and they were immensely helpful through the process (they still are, thanks guys).\n\nFortunately, I spend a lot of my free time thinking about how to learn new technologies. I know I learn best through video tutorials, and I went to my usual source for learning established platforms: [Lynda](http://lynda.com/). They have excellent courses on C# and.NET, and I was spending most of my first week going through those videos and following along. This wasn't nearly as difficult as I thought it was going to be. I'm of the opinion that most programming languages are conceptually pretty similar, just with different syntaxes and tools: arrays are now lists, for loops are largely still the same, there are a few more features for OOP, etc. The same goes for web frameworks: there are still the basic concepts around routing, templates, and deployment. An excellent testament to this thinking is [Learn X in Y Minutes](http://learnxinyminutes.com/), a resource I feature extensively on Bento.\n\nAnother major hurdle was changing development environments. For the first few weeks I was using a co-worker's previous machine, and half the battle was just getting everything set up and learning my way around the tools available.  Stack is pretty heavily Microsoft-based, and even switching over to a machine running Windows 8 caught me off guard at first. I missed the terminal window and Sublime Text and all the other tools I was used to. But after those two weeks, I was pleasantly surprised by how quickly I could adapt. There are still some things in Visual Studio that I wish I had from Sublime (I really miss Cmd+D), but I'm sure there's still lots to learn about VS that will make me just as or even more productive than before.\n\nOne of the largest hurdles was switching database technologies. Of course, I knew what relational databases were and how they worked having used LAMP for a long time, but getting back into the swing of things after a few years proved difficult. [SQLZoo](http://sqlzoo.net/wiki/SQL_Tutorial) was a great resource for relearning some database basics, and picking things up was kind of like getting back on a bike you left in your garage for a while.\n\nOverall, in terms of learning, it was very similar to picking up any other stack I've wanted to. I think the biggest takeaway was just taking a peek at a faction of development I didn't really touch, and for some others, even shunned. I was switching sides on some age-old wars: Mac vs PC, dynamically vs statically typed languages, unstructured vs relational databases - and I have to say I've been [extremely impressed](http://nickcraver.com/blog/2013/11/22/what-it-takes-to-run-stack-overflow/) by how efficient everything is. As much as it may have pained me just a few months before to say this: I think Microsoft-based stacks get a pretty bad rep that's not entirely deserved.\n\n## Weeks 3 & 4: Learning Stack's version of the stack\n\nAt this point, I felt pretty comfortable in the technologies in their \"platonic\" form, but I still didn't understand how everything was organized in Stack's actual codebase and configuration. Learning C# and.NET was just the beginning. Figuring out how it was done to make Stack Overflow what it is...that's s a completely different adventure. There are a number of different teams that work on different parts of the site, but I work specifically on the Careers team. It's newer than the core of the technology running the Q&A sites, and luckily there are more developers physically on site that I could poke when I had questions. Since I was working on an exercise project, it gave me plenty of time to explore and experiment without breaking anything. I also made the critical decision to branch the whole codebase and work inside of the existing environment for my project. Learning C# and.NET in an isolated way was not going to help me - what I needed to know was not about the technologies *per se*: it was about Stack itself.\n\nBasically, the questions I had at weeks 3 & 4 were about how we did things: What data are we indexing in elasticsearch? What does this column in this table mean? How are things distributed on the CDN? etc. A lot of this was how Stack was doing their version of the technologies we were on - things I could only learn by asking a lot of questions and wandering around the codebase for.\n\nAnother thing was picking up style. One of the things you can't get just by borrowing from another language was best practices around a particular platform. Sure, I still avoid [repeating myself](http://en.wikipedia.org/wiki/Don't_repeat_yourself) and try and write efficient code, but I needed to figure out how to follow those principles in a new environment. When should I use an array versus a list (should I ever)? What's the best way to serialize an object into JSON in C#? Those were things that, of course, Stack Overflow itself was helpful for.\n\nThe most important thing after scouring the internet and bothering my coworkers: mimicking. There was already a lot of code that I could study, and simply by following the conventions that were already followed in the existing codebase was incredibly useful. When you start noticing that \"var\" is used more often than you'd think, you start using it. When you notice that you need X, Y, and Z classes and interfaces to render a particular route, you start doing that with your own routes. By emulating and experimenting, I picked up most of the knowledge I needed.\n\n## Weeks 5 & 6: Jumping out the nest\n\nIt was now time to jump off the deep-end. Stack has come up with something pretty ingenious to handle immediate issues. Every week, there's a rotation where one member of the team is assigned bug duty, and their main responsibility is to fix problems that come up on Meta, monitor the logs, answer sales requests, and anything else that needs to be attended to immediately. You drop everything.\n\nAfter four weeks, it was my turn.\n\nFor the first week, I had the help of another dev while I was tracking which bugs were coming up on the site, and getting a feel for all the monitoring systems we had in place. The week after, I was in the front line. This was a great opportunity to touch many of the dark corners of the codebase I hadn't been exposed to (and quite frankly, a little afraid to touch). It also gave me a chance to get real changes on the site, and in some cases, in rather significant ways. During my down time, I was busy setting up a completely different environment on my Mac that finally came, as well as putting finishing touches",
  "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html><head>\n<title>500 Internal Server Error</title>\n</head><body>\n<h1>Internal Server Error</h1>\n<p>The server encountered an internal error or\nmisconfiguration and was unable to complete\nyour request.</p>\n<p>Please contact the server administrator,\n webmaster@localhost and inform them of the time the error occurred,\nand anything you might have done that may have\ncaused the error.</p>\n<p>More information about this error may be available\nin the server error log.</p>\n<hr>\n<address>Apache/2.2.16 (Debian) Server at cvr.cc Port 80</address>\n</body></html>\n",
  "/* Copyright Statement:\n *\n * This software/firmware and related documentation (\"MediaTek Software\") are\n * protected under relevant copyright laws. The information contained herein\n * is confidential and proprietary to MediaTek Inc. and/or its licensors.\n * Without the prior written permission of MediaTek inc. and/or its licensors,\n * any reproduction, modification, use or disclosure of MediaTek Software,\n * and information contained herein, in whole or in part, shall be strictly prohibited.\n *\n * MediaTek Inc. (C) 2012. All rights reserved.\n *\n * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES\n * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS (\"MEDIATEK SOFTWARE\")\n * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON\n * AN \"AS-IS\" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.\n * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE\n * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR\n * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH\n * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES\n * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES\n * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK\n * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR\n * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND\n * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,\n * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,\n * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO\n * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.\n *\n * The following software/firmware and/or related documentation (\"MediaTek Software\")\n * have been modified by MediaTek Inc. All revisions are subject to any receiver's\n * applicable license agreements with MediaTek Inc.\n */\n\npackage com.orangelabs.rcs.core.ims.network;\n\nimport android.content.ComponentName;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.content.ServiceConnection;\nimport android.os.IBinder;\n\nimport com.orangelabs.rcs.core.Core;\nimport com.orangelabs.rcs.service.api.client.ClientApi;\nimport com.orangelabs.rcs.service.api.client.ClientApiException;\nimport com.orangelabs.rcs.service.api.client.CoreServiceNotAvailableException;\nimport com.orangelabs.rcs.utils.logger.Logger;\n\n/**\n * Network API service\n */\npublic class NetworkConnectivityApi extends ClientApi {\n    /**\n     * The logger\n     */\n    private Logger mLogger = Logger.getLogger(this.getClass().getName());\n\n    /**\n     * Core service API\n     */\n    private INetworkConnectivityApi mCoreApi = null;\n\n    /**\n     * Constructor\n     * \n     * @param ctx Application context\n     */\n    public NetworkConnectivityApi(Context ctx) {\n        super(ctx);\n    }\n\n    /**\n     * Connect API\n     */\n    public void connectApi() {\n        super.connectApi();\n\n        ctx.bindService(new Intent(INetworkConnectivityApi.class.getName()), mApiConnection, 0);\n    }\n\n    /**\n     * Disconnect API\n     */\n    public void disconnectApi() {\n        super.disconnectApi();\n\n        ctx.unbindService(mApiConnection);\n    }\n\n    /**\n     * Core service API connection\n     */\n    private ServiceConnection mApiConnection = new ServiceConnection() {\n        public void onServiceConnected(ComponentName className, IBinder service) {\n            mCoreApi = INetworkConnectivityApi.Stub.asInterface(service);\n\n            // Notify event listener\n            notifyEventApiConnected();\n        }\n\n        public void onServiceDisconnected(ComponentName className) {\n            // Notify event listener\n            notifyEventApiDisconnected();\n\n            mCoreApi = null;\n        }\n    };\n\n    /**\n     * Add network connectivity listener.\n     * \n     * @param listener Network connectivity Listener\n     * @throws ClientApiException\n     */\n    public void addNetworkConnectivityListener(INetworkConnectivity listener)\n            throws ClientApiException {\n        if (mCoreApi!= null) {\n            try {\n                mCoreApi.addNetworkConnectivityListener(listener);\n            } catch (Exception e) {\n                throw new ClientApiException(e.getMessage());\n            }\n        } else {\n            throw new CoreServiceNotAvailableException();\n        }\n    }\n\n    /**\n     * Remove network connectivity listener\n     * \n     * @param listener Listener\n     * @throws ClientApiException\n     */\n    public void removeNetworkConnectivityListener(INetworkConnectivity listener)\n            throws ClientApiException {\n        if (mCoreApi!= null) {\n            try {\n                mCoreApi.removeNetworkConnectivityListener(listener);\n            } catch (Exception e) {\n                throw new ClientApiException(e.getMessage());\n            }\n        } else {\n            throw new CoreServiceNotAvailableException();\n        }\n    }\n}\n",
  "<?php\n\nnamespace Tests\\Concerns;\n\nuse DateTime;\nuse Monolog\\Logger;\n\n/**\n * Trait CanProvideLogRecord\n *\n * @package     Tests\\Concerns\n * @author      Oanh Nguyen <oanhnn.bk@gmail.com>\n * @license     The MIT license\n */\ntrait CanProvideLogRecord\n{\n    /**\n     * Make a simple log record\n     *\n     * @param  int|string $level   The log level\n     * @param  string     $message The log message\n     * @param  array      $context The log context\n     * @return array\n     */\n    protected function logRecord($level = Logger::WARNING, $message = 'test', $context = []): array\n    {\n        $level = Logger::toMonologLevel($level);\n\n        return [\n           'message' => $message,\n            'context' => $context,\n            'level' => $level,\n            'level_name' => Logger::getLevelName($level),\n            'channel' => 'test',\n            'datetime' => DateTime::createFromFormat('U.u', sprintf('%.6F', microtime(true))),\n            'extra' => [],\n        ];\n    }\n}\n",
  "/*\n *  Licensed to GraphHopper GmbH under one or more contributor\n *  license agreements. See the NOTICE file distributed with this work for \n *  additional information regarding copyright ownership.\n * \n *  GraphHopper GmbH licenses this file to you under the Apache License, \n *  Version 2.0 (the \"License\"); you may not use this file except in \n *  compliance with the License. You may obtain a copy of the License at\n * \n *       http://www.apache.org/licenses/LICENSE-2.0\n * \n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\npackage com.graphhopper.routing;\n\nimport com.graphhopper.routing.util.*;\n\nimport java.util.Arrays;\nimport java.util.Collection;\n\nimport org.junit.runner.RunWith;\nimport org.junit.runners.Parameterized;\nimport org.junit.runners.Parameterized.Parameters;\n\nimport com.graphhopper.storage.Graph;\nimport com.graphhopper.storage.GraphHopperStorage;\n\n/**\n * @author Peter Karich\n */\n@RunWith(Parameterized.class)\npublic class DijkstraBidirectionRefTest extends AbstractRoutingAlgorithmTester\n{\n    /**\n     * Runs the same test with each of the supported traversal modes\n     */\n    @Parameters(name = \"{0}\")\n    public static Collection<Object[]> configs()\n    {\n        return Arrays.asList(new Object[][]\n                {\n                        {TraversalMode.NODE_BASED},\n                        {TraversalMode.EDGE_BASED_1DIR},\n                        {TraversalMode.EDGE_BASED_2DIR},\n                        {TraversalMode.EDGE_BASED_2DIR_UTURN}\n                });\n    }\n\n    private final TraversalMode traversalMode;\n\n    public DijkstraBidirectionRefTest( TraversalMode tMode )\n    {\n        this.traversalMode = tMode;\n    }\n\n    @Override\n    public RoutingAlgorithmFactory createFactory( GraphHopperStorage prepareGraph, AlgorithmOptions prepareOpts )\n    {\n        return new RoutingAlgorithmFactory()\n        {\n            @Override\n            public RoutingAlgorithm createAlgo( Graph g, AlgorithmOptions opts )\n            {\n                return new DijkstraBidirectionRef(g, opts.getFlagEncoder(), opts.getWeighting(), traversalMode);\n            }\n        };\n    }\n}\n",
  "# \u3010\u76ee\u6807\u8bc6\u522b\u3011 SSD_keras\u8bad\u7ec3\u81ea\u5df1\u6570\u636e\u96c6\n### \u4f9d\u8d56\n```\ncv2==3.3.0\nkeras==2.2.0\nmatplotlib==2.1.0\ntensorflow==1.3.0\nnumpy==1.13.3\n```\n### step1\ngit\u672c\u9879\u76ee\u81f3\u672c\u5730<br/>\n\u4e0b\u8f7d\u9884\u8bad\u7ec3\u6743\u91cd \u81f3data\u6587\u4ef6\u5939\u4e0b<\u8fd9\u91cc\u63d0\u4f9b\u767e\u5ea6\u7f51\u76d8\u5730\u5740>\n```\n\u94fe\u63a5:https://pan.baidu.com/s/1Yub2c2WgeHkuV7akTXhKlw  \u5bc6\u7801:ohkw\n```\n### step2\n#### \u8bad\u7ec3\n#####\n- \u4f7f\u7528labelImg\u5bf9\u6570\u636e\u8fdb\u884c\u6807\u8bb0\n```\nhttps://github.com/tzutalin/labelImg\n```\n\u5f97\u5230xml\u6587\u4ef6\uff0c\u653e\u7f6e\u4e8e./data/label_train/ \n\u5c06\u56fe\u7247\u6570\u636e\u653e\u5728\u4e8e./data/train/ \n- \u6267\u884cerro_img.py,\u5c06\u6807\u8bb0\u6570\u636e\u4e2d\uff0c\u5bbd\u9ad8\u5c11\u4e8e300\u7684xml\u53bb\u6389\n- \u5c06\u6570\u636e\u7c7b\u522b\u5199\u5165classes.py\u7684list\u4e2d\n- \u5f00\u59cb\u8bad\u7ec3\uff08\u6253\u5f00 main.py\uff0c\u4fee\u6539\u76f8\u5173\u53c2\u6570\uff0c\u5982\u4f7f\u7528cpu\uff0cgpu\uff0c\u8fed\u4ee3\u6570\u7b49\uff09,\u6267\u884c\n```\npython main.py train\n```\n<\u5982\u679c\uff0c\u8bad\u7ec3\u65f6\u62a5\u9519\uff0c\u53ef\u80fd\u8bad\u7ec3\u56fe\u7247\u4e0d\u6ee1\u8db3SSD_keras\u7684\u8981\u6c42\uff0c\u5220\u9664\u4fee\u6539\u76f8\u5173\u6570\u636e>\n### step3\n- \u6d4b\u8bd5\uff0c\u5c06\u6d4b\u8bd5\u56fe\u7247\u653e\u7f6e\u4e8e./data/test/ \uff0c\u6267\u884c\n```\npython main.py test\n```\n\n\n\n\n\n",
  "2020\u5e7411\u670804\u65e523\u65f6\u6570\u636e\nStatus: 200\n\n1.\u9648\u5955\u8fc5\u5973\u513f\u8fd1\u7167\n\n\u5fae\u535a\u70ed\u5ea6:2595253\n\n2.\u7537\u7ae5\u906d\u4eb2\u7236\u70df\u5934\u70eb\u4f24\u53cc\u624b\u9762\u4e34\u622a\u80a2\n\n\u5fae\u535a\u70ed\u5ea6:2140220\n\n3.\u4e3aLISA\u6253\u5149\n\n\u5fae\u535a\u70ed\u5ea6:2047446\n\n4.\u8427\u5bb6\u4e24\u59d0\u59b9\u5927\u5a5a\n\n\u5fae\u535a\u70ed\u5ea6:1718519\n\n5.\u4ee4\u4eba\u5fc3\u52a8\u7684offer\n\n\u5fae\u535a\u70ed\u5ea6:1484798\n\n6.\u6c5f\u758f\u5f71\u4e0b\u73ed\u56fe\n\n\u5fae\u535a\u70ed\u5ea6:1258791\n\n7.\u6d77\u5e95\u635e\u7533\u8bf7\u6c60\u5e95\u635e\u6d77\u5e95\u6361\u7b49\u5546\u6807\n\n\u5fae\u535a\u70ed\u5ea6:873552\n\n8.\u7537\u5b5010\u79d2\u51852\u6b21\u8eb2\u8fc7\u6b7b\u795e\n\n\u5fae\u535a\u70ed\u5ea6:818404\n\n9.\u5c71\u4e1c\u76d1\u72f1\u7ba1\u7406\u5c40\u539f\u526f\u5c40\u957f\u7b495\u4eba\u53d7\u5ba1\n\n\u5fae\u535a\u70ed\u5ea6:798058\n\n10.\u53f8\u673a\u4f4e\u5934\u6361\u624b\u673a\u81f4\u8001\u677f600\u4e07\u8c6a\u8f66\u62a5\u5e9f\n\n\u5fae\u535a\u70ed\u5ea6:785649\n\n11.\u6881\u9759\u8339\u65b9\u627f\u8ba4\u604b\u60c5\n\n\u5fae\u535a\u70ed\u5ea6:780441\n\n12.\u7f8e\u56fd\u5927\u9009\n\n\u5fae\u535a\u70ed\u5ea6:770437\n\n13.\u88ab\u59d3\u6bc1\u6389\u7684\u540d\u5b57\n\n\u5fae\u535a\u70ed\u5ea6:640026\n\n14.\u5982\u610f\u82b3\u970f\n\n\u5fae\u535a\u70ed\u5ea6:548833\n\n15.\u97e9\u519b\u5728\u519b\u4e8b\u5206\u754c\u7ebf\u6293\u83b7\u4e00\u671d\u9c9c\u7537\u5b50\n\n\u5fae\u535a\u70ed\u5ea6:430322\n\n16.\u6c11\u822a\u5c40\u518d\u5bf97\u4e2a\u5165\u5883\u822a\u73ed\u53d1\u7194\u65ad\u6307\u4ee4\n\n\u5fae\u535a\u70ed\u5ea6:418854\n\n17.\u5b69\u5b50\u51fa\u751f\u65f6\u6492\u8d1d\u5b81\u53d1\u7684\u7b2c\u4e00\u6761\u5fae\u4fe1\n\n\u5fae\u535a\u70ed\u5ea6:412841\n\n18.\u6211\u7684\u5feb\u9012\u5f88\u70eb\u624b\u5417\n\n\u5fae\u535a\u70ed\u5ea6:396327\n\n19.\u6dd8\u5b9d\u4e92\u52a9\n\n\u5fae\u535a\u70ed\u5ea6:383275\n\n20.\u4e5d\u5c3e\u72d0\u4f20\n\n\u5fae\u535a\u70ed\u5ea6:378509\n\n21.\u8d70\u9519\u697c\u5c42\u7528\u94a5\u5319\u6253\u5f00\u90bb\u5c45\u5bb6\u95e8\n\n\u5fae\u535a\u70ed\u5ea6:369588\n\n22.\u73af\u536b\u8f66\u649e\u4e0a\u5170\u535a\u57fa\u5c3c\n\n\u5fae\u535a\u70ed\u5ea6:353105\n\n23.\u5468\u7426\u53d7\u4f24\n\n\u5fae\u535a\u70ed\u5ea6:347021\n\n24.\u524d\u4e09\u5b63\u5ea6GDP\u5341\u5f3a\u57ce\u5e02\n\n\u5fae\u535a\u70ed\u5ea6:342269\n\n25.\u90a2\u53f0\u5175\u54e5\u54e5\u7792\u7740\u5988\u5988\u56de\u5bb6\u63a2\u4eb2\n\n\u5fae\u535a\u70ed\u5ea6:341964\n\n26.\u5f20\u7ee7\u79d1\u53eb\u91d1\u6668\u6211\u4eec\u6668\u6668\n\n\u5fae\u535a\u70ed\u5ea6:341739\n\n27.\u865e\u4e66\u6b23\u88ab\u5938\u5728\u9003\u516c\u4e3b\u65f6\u7684\u53cd\u5e94\n\n\u5fae\u535a\u70ed\u5ea6:341247\n\n28.\u4e2d\u56fd\u662f\u5168\u7403\u6700\u5177\u6f5c\u529b\u7684\u5927\u5e02\u573a\n\n\u5fae\u535a\u70ed\u5ea6:329844\n\n29.\u533b\u52a1\u4eba\u5458\u7591\u4f3c\u6216\u786e\u8bca\u6d41\u611f\u4e0d\u53ef\u5e26\u75c5\u5de5\u4f5c\n\n\u5fae\u535a\u70ed\u5ea6:327178\n\n30.\u5085\u5bb9\u590d\u4ec7\n\n\u5fae\u535a\u70ed\u5ea6:326521\n\n31.\u5c11\u6797\u5bfa\u591a\u5ea7\u77f3\u7891\u88ab\u6e38\u5ba2\u6478\u51fa\u5305\u6d46\n\n\u5fae\u535a\u70ed\u5ea6:322289\n\n32.\u9876\u697c\n\n\u5fae\u535a\u70ed\u5ea6:317539\n\n33.\u897f\u90e8\u6218\u533a\u6218\u6b4c\u91cd\u78c5\u53d1\u5e03\n\n\u5fae\u535a\u70ed\u5ea6:306948\n\n34.\u4e2d\u56fd\u5df2\u7d2f\u8ba1\u51fa\u53e31790\u591a\u4ebf\u53ea\u53e3\u7f69\n\n\u5fae\u535a\u70ed\u5ea6:299431\n\n35.\u7f51\u6613\u4e25\u9009\u9000\u51fa\u53cc\u5341\u4e00\n\n\u5fae\u535a\u70ed\u5ea6:298727\n\n36.\u6731\u6893\u9a81\u8868\u6f14\u6df1\u6e0a\u5de8\u53e3\n\n\u5fae\u535a\u70ed\u5ea6:294448\n\n37.\u4e0d\u671f\u800c\u7231\n\n\u5fae\u535a\u70ed\u5ea6:290414\n\n38.\u5468\u8fc5\u738b\u4e00\u535a\u7535\u5f71\u8d28\u611f\u5c01\u9762\n\n\u5fae\u535a\u70ed\u5ea6:279673\n\n39.\u6c88\u68a6\u8fb0\u5411\u9773\u68a6\u4f73\u9053\u6b49\n\n\u5fae\u535a\u70ed\u5ea6:252016\n\n40.\u6c5f\u897f\u8e39\u98de\u5973\u5b66\u751f\u804c\u5de5\u9053\u6b49\n\n\u5fae\u535a\u70ed\u5ea6:234646\n\n41.\u9e8b\u9e7f\u5988\u5988\u88ab\u56f0\u540e\u773c\u795e\u65e0\u52a9\u8ba9\u4eba\u5fc3\u75bc\n\n\u5fae\u535a\u70ed\u5ea6:226727\n\n42.\u65e0\u610f\u6253\u6270\u5230\u90bb\u5c45\u4e86\n\n\u5fae\u535a\u70ed\u5ea6:214819\n\n43.\u5bc6\u6b47\u6839\u5dde\u9009\u60c5\u53cd\u8f6c\n\n\u5fae\u535a\u70ed\u5ea6:201869\n\n44.\u6162\u653e\u7684\u6c34\u82b1\u6709\u591a\u597d\u770b\n\n\u5fae\u535a\u70ed\u5ea6:198748\n\n45.\u7f51\u8d2d\u540c\u4e00\u5546\u54c1\u4e0d\u540c\u8d26\u53f7\u4ef7\u683c\u5dee25\u5143\n\n\u5fae\u535a\u70ed\u5ea6:196650\n\n46.\u5b66\u751f\u62bd\u76f2\u76d2\u62bd\u5230\u82f1\u8bed\u8bd5\u5377\n\n\u5fae\u535a\u70ed\u5ea6:183720\n\n47.\u7586\u8fbd\u5927\u6218\n\n\u5fae\u535a\u70ed\u5ea6:180260\n\n48.\u6768\u9e23\u8868\u60c5\n\n\u5fae\u535a\u70ed\u5ea6:174862\n\n49.102\u5c81\u5976\u5976\u73a9\u8df3\u4f1e\n\n\u5fae\u535a\u70ed\u5ea6:174702\n\n50.\u65b0\u90ce\u5a5a\u793c\u5f53\u65e5\u5760\u4ea1\u65b0\u5a18\u7ee7\u627f183\u4e07\n\n\u5fae\u535a\u70ed\u5ea6:173988\n\n",
  "# PickerField-IOS\nUsing pickerviews has never been easier\n",
  "// Copyright 2018 The Bazel Authors. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\npackage com.google.devtools.build.skydoc;\n\nimport static java.nio.charset.StandardCharsets.UTF_8;\n\nimport com.google.common.collect.ImmutableMap;\nimport com.google.devtools.build.lib.events.EventHandler;\nimport com.google.devtools.build.lib.events.Location;\nimport com.google.devtools.build.lib.skylarkbuildapi.TopLevelBootstrap;\nimport com.google.devtools.build.lib.syntax.BuildFileAST;\nimport com.google.devtools.build.lib.syntax.Environment;\nimport com.google.devtools.build.lib.syntax.Environment.Extension;\nimport com.google.devtools.build.lib.syntax.Environment.GlobalFrame;\nimport com.google.devtools.build.lib.syntax.MethodLibrary;\nimport com.google.devtools.build.lib.syntax.Mutability;\nimport com.google.devtools.build.lib.syntax.ParserInputSource;\nimport com.google.devtools.build.lib.syntax.Runtime;\nimport com.google.devtools.build.lib.vfs.PathFragment;\nimport com.google.devtools.build.skydoc.fakebuildapi.FakeActionsInfoProvider;\nimport com.google.devtools.build.skydoc.fakebuildapi.FakeBuildApiGlobals;\nimport com.google.devtools.build.skydoc.fakebuildapi.FakeDefaultInfoProvider;\nimport com.google.devtools.build.skydoc.fakebuildapi.FakeOutputGroupInfo.FakeOutputGroupInfoProvider;\nimport com.google.devtools.build.skydoc.fakebuildapi.FakeSkylarkAttrApi;\nimport com.google.devtools.build.skydoc.fakebuildapi.FakeSkylarkCommandLineApi;\nimport com.google.devtools.build.skydoc.fakebuildapi.FakeSkylarkNativeModuleApi;\nimport com.google.devtools.build.skydoc.fakebuildapi.FakeSkylarkRuleFunctionsApi;\nimport com.google.devtools.build.skydoc.fakebuildapi.FakeStructApi.FakeStructProviderApi;\nimport com.google.devtools.build.skydoc.rendering.RuleInfo;\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.nio.file.Files;\nimport java.nio.file.Path;\nimport java.nio.file.Paths;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\n/**\n * Main entry point for the Skydoc binary.\n *\n * <p>Skydoc generates human-readable documentation for relevant details of skylark files by\n * running a skylark interpreter with a fake implementation of the build API.</p>\n *\n * <p>Currently, Skydoc generates documentation for skylark rule definitions (discovered by\n * invocations of the build API function {@code rule()}.</p>\n *\n * <p>Usage:</p>\n * <pre>\n *   skydoc {target_skylark_file} {output_file}\n * </pre>\n */\npublic class SkydocMain {\n\n  // Pattern to match the assignment of a variable to a rule definition\n  // For example,'my_rule = rule(' will match and have'my_rule' available as group(1).\n  private static final Pattern ruleDefinitionLinePattern =\n      Pattern.compile(\"([^\\\\s]+) = rule\\\\(\");\n\n  private final EventHandler eventHandler = new SystemOutEventHandler();\n\n  public static void main(String[] args) throws IOException, InterruptedException {\n    if (args.length!= 2) {\n      throw new IllegalArgumentException(\"Expected two arguments. Usage:\\n\"\n          + \"{skydoc_bin} {target_skylark_file} {output_file}\");\n    }\n\n    String bzlPath = args[0];\n    String outputPath = args[1];\n\n    Path path = Paths.get(bzlPath);\n    byte[] content = Files.readAllBytes(path);\n\n    ParserInputSource parserInputSource =\n        ParserInputSource.create(content, PathFragment.create(path.toString()));\n\n    List<RuleInfo> ruleInfoList = new SkydocMain().eval(parserInputSource);\n\n    try (PrintWriter printWriter = new PrintWriter(outputPath, \"UTF-8\")) {\n      printRuleInfos(printWriter, ruleInfoList);\n    }\n  }\n\n  // TODO(cparsons): Improve output (markdown or HTML).\n  private static void printRuleInfos(\n      PrintWriter printWriter, List<RuleInfo> ruleInfos) throws IOException {\n    for (RuleInfo ruleInfo : ruleInfos) {\n      Location location = ruleInfo.getLocation();\n      Path filePath = Paths.get(location.getPath().getPathString());\n      List<String> lines = Files.readAllLines(filePath, UTF_8);\n      String definingString = lines.get(location.getStartLine() - 1);\n      // Rule definitions don't specify their own visible name directly. Instead, the name of\n      // a rule is dependent on the name of the variable assigend to the return value of rule().\n      // This attempts to find a line of the form 'foo = rule(' and thus label the rule as\n      // named 'foo'.\n      // TODO(cparsons): Inspect the global bindings of the environment instead of using string\n      // matching.\n      Matcher matcher = ruleDefinitionLinePattern.matcher(definingString);\n      if (matcher.matches()) {\n        printWriter.println(matcher.group(1));\n      } else {\n        printWriter.println(\"<unknown name>\");\n      }\n      printWriter.println(ruleInfo.getDescription());\n    }\n  }\n\n  /**\n   * Evaluates/interprets the skylark file at the given input source using a fake build API and\n   * collects information about all rule definitions made in that file.\n   *\n   * @param parserInputSource the input source representing the input skylark file\n   * @return a list of {@link RuleInfo} objects describing the rule definitions\n   * @throws InterruptedException if evaluation is interrupted\n   */\n  // TODO(cparsons): Evaluate load statements recursively.\n  public List<RuleInfo> eval(ParserInputSource parserInputSource)\n      throws InterruptedException {\n    List<RuleInfo> ruleInfoList = new ArrayList<>();\n\n    BuildFileAST buildFileAST = BuildFileAST.parseSkylarkFile(\n        parserInputSource, eventHandler);\n\n    Environment env = createEnvironment(\n        eventHandler,\n        globalFrame(ruleInfoList),\n        /* imports= */ ImmutableMap.of());\n\n    if (!buildFileAST.exec(env, eventHandler)) {\n      throw new RuntimeException(\"Error loading file\");\n    }\n\n    env.mutability().freeze();\n\n    return ruleInfoList;\n  }\n\n  /**\n   * Initialize and return a global frame containing the fake build API.\n   *\n   * @param ruleInfoList the list of {@link RuleInfo} objects, to which rule() invocation\n   *     information will be added\n   */\n  private static GlobalFrame globalFrame(List<RuleInfo> ruleInfoList) {\n    // TODO(cparsons): Complete the Fake Build API stubs. For example, implement provider(),\n    // and include the other bootstraps.\n    TopLevelBootstrap topLevelBootstrap =\n        new TopLevelBootstrap(new FakeBuildApiGlobals(),\n            new FakeSkylarkAttrApi(),\n            new FakeSkylarkCommandLineApi(),\n            new FakeSkylarkNativeModuleApi(),\n            new FakeSkylarkRuleFunctionsApi(ruleInfoList),\n            new FakeStructProviderApi(),\n            new FakeOutputGroupInfoProvider(),\n            new FakeActionsInfoProvider(),\n            new FakeDefaultInfoProvider());\n\n    ImmutableMap.Builder<String, Object> envBuilder = ImmutableMap.builder();\n\n    Runtime.addConstantsToBuilder(envBuilder);\n    MethodLibrary.addBindingsToBuilder(envBuilder);\n    topLevelBoot",
  "\ufeff// Copyright (c).NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n\nusing System.Linq;\nusing Microsoft.AspNetCore.Razor.Language;\nusing Microsoft.AspNetCore.Razor.TagHelpers;\nusing Microsoft.CodeAnalysis.CSharp;\nusing Moq;\nusing Xunit;\n\nnamespace Microsoft.CodeAnalysis.Razor\n{\n    public class CompilationTagHelperFeatureTest\n    {\n        [Fact]\n        public void IsValidCompilation_ReturnsTrueIfTagHelperInterfaceCannotBeFound()\n        {\n            // Arrange\n            var references = new[]\n            {\n                MetadataReference.CreateFromFile(typeof(string).Assembly.Location),\n            };\n            var compilation = CSharpCompilation.Create(\"Test\", references: references);\n\n            // Act \n            var result = CompilationTagHelperFeature.IsValidCompilation(compilation);\n\n            // Assert\n            Assert.True(result);\n        }\n\n        [Fact]\n        public void IsValidCompilation_ReturnsFalseIfSystemStringCannotBeFound()\n        {\n            // Arrange\n            var references = new[]\n            {\n                MetadataReference.CreateFromFile(typeof(ITagHelper).Assembly.Location),\n            };\n            var compilation = CSharpCompilation.Create(\"Test\", references: references);\n\n            // Act \n            var result = CompilationTagHelperFeature.IsValidCompilation(compilation);\n\n            // Assert\n            Assert.False(result);\n        }\n\n        [Fact]\n        public void IsValidCompilation_ReturnsTrueIfWellKnownTypesAreFound()\n        {\n            // Arrange\n            var references = new[]\n            {\n                MetadataReference.CreateFromFile(typeof(string).Assembly.Location),\n                MetadataReference.CreateFromFile(typeof(ITagHelper).Assembly.Location),\n            };\n            var compilation = CSharpCompilation.Create(\"Test\", references: references);\n\n            // Act \n            var result = CompilationTagHelperFeature.IsValidCompilation(compilation);\n\n            // Assert\n            Assert.True(result);\n        }\n\n        [Fact]\n        public void GetDescriptors_DoesNotSetCompilation_IfCompilationIsInvalid()\n        {\n            // Arrange\n            Compilation compilation = null;\n            var provider = new Mock<ITagHelperDescriptorProvider>();\n            provider.Setup(c => c.Execute(It.IsAny<TagHelperDescriptorProviderContext>()))\n               .Callback<TagHelperDescriptorProviderContext>(c => compilation = c.GetCompilation())\n               .Verifiable();\n\n            var engine = RazorProjectEngine.Create(\n                configure =>\n                {\n                    configure.Features.Add(new DefaultMetadataReferenceFeature());\n                    configure.Features.Add(provider.Object);\n                    configure.Features.Add(new CompilationTagHelperFeature());\n                });\n\n            var feature = engine.EngineFeatures.OfType<CompilationTagHelperFeature>().First();\n\n            // Act \n            var result = feature.GetDescriptors();\n\n            // Assert\n            Assert.Empty(result);\n            provider.Verify();\n            Assert.Null(compilation);\n        }\n\n        [Fact]\n        public void GetDescriptors_SetsCompilation_IfCompilationIsValid()\n        {\n            // Arrange\n            Compilation compilation = null;\n            var provider = new Mock<ITagHelperDescriptorProvider>();\n            provider.Setup(c => c.Execute(It.IsAny<TagHelperDescriptorProviderContext>()))\n               .Callback<TagHelperDescriptorProviderContext>(c => compilation = c.GetCompilation())\n               .Verifiable();\n\n            var references = new[]\n            {\n                MetadataReference.CreateFromFile(typeof(string).Assembly.Location),\n                MetadataReference.CreateFromFile(typeof(ITagHelper).Assembly.Location),\n            };\n\n            var engine = RazorProjectEngine.Create(\n                configure =>\n                {\n                    configure.Features.Add(new DefaultMetadataReferenceFeature { References = references });\n                    configure.Features.Add(provider.Object);\n                    configure.Features.Add(new CompilationTagHelperFeature());\n                });\n\n            var feature = engine.EngineFeatures.OfType<CompilationTagHelperFeature>().First();\n            \n            // Act \n            var result = feature.GetDescriptors();\n\n            // Assert\n            Assert.Empty(result);\n            provider.Verify();\n            Assert.NotNull(compilation);\n        }\n    }\n}\n",
  "@extends('layouts.master')\n\n@section('title')\n\n@stop\n\n@section('style')\n<style media=\"screen\">\n    #offerPrice {\n        color: red;\n        font-size: 2em;\n    }\n</style>\n@stop\n\n@section('heading')\n\n@stop\n\n@section('subheading')\n\n@stop\n\n@section('image_url')\n'/img/lens.jpg'\n@stop\n\n@section('content')\n    <h1>Search:</h1>\n    {{ Form::open(array('action' => 'HomeController@ebay')) }}\n        {{ Form::label('Item Name') }}\n        {{ Form::text('itemName', Input::old('itemName'), ['class' => 'form-control search']) }}\n        {{ Form::label('Category') }}\n        {{ Form::select('category',$categories, Input::old('category') ) }}\n        {{ Form::submit('Submit') }}\n    {{ Form::close() }}\n    \n    @if(isset($query))\n    \n        <h3>eBay Search Results for {{ $query }}</h3>\n        <h4>Average Price: <span id=\"averagePrice\">{{ $average }}</span></h4>\n        <table id=\"offerTable\" class=\"col-xs-12\">\n            <tr>\n                <td>\n                    {{ Form::label('Buy/Trade') }} <br>\n                    {{ Form::select(\n                        'buyTrade', \n                        array(\n                            '0' => 'Buy', \n                            '1' => 'Trade'\n                        ),\n                        '0', \n                        array('id' => 'buyTrade')\n                    ) }}\n                    <div id=\"mathBuyTrade\" style=\"display:none\">.5</div>\n                    <br>\n                    {{ Form::label('Condition') }} <br>\n                    {{ Form::select(\n                        'condition', \n                        array(\n                            '0' => 'Like New', \n                            '1' => 'Excellent+',\n                            '2' => 'Excellent',\n                            '3' => 'Bargain'\n                        ),\n                        '0',\n                        array('id' => 'condition')\n                    ) }}\n                    <div id=\"mathCondition\" style=\"display:none\">1</div>\n                </td>\n                <td>\n                    {{ Form::label('Deductions') }}\n                    <br>\n                    {{ Form::label('Needs Battery') }}\n                    {{ Form::checkbox('Need Battery', 'battery', false, array('id' => 'battery')) }}\n                    <div id=\"mathBattery\" style=\"display:none\">0</div>\n                    <br>\n                    {{ Form::label('Needs Sensor Clean') }}\n                    {{ Form::checkbox('Need Sensor Clean','sensorClean', false, array('id' =>'sensorClean')) }}\n                    <div id=\"mathSensorClean\" style=\"display:none\">0</div>\n                    <br>\n                    {{ Form::label('Needs Cleaning') }}\n                    {{ Form::checkbox('Need Cleaning', 'cleaning', false, array('id' => 'cleaning')) }}\n                    <div id=\"mathCleaning\" style=\"display:none\">0</div>\n                    <br>\n                    {{ Form::label('Needs Charger') }}\n                    {{ Form::checkbox('Needs Charger', 'charger', false, array('id' => 'charger')) }}\n                    <div id=\"mathCharger\" style=\"display:none\">0</div>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                </td>\n                <td>\n                    <h4>Offer Price:</h4>\n                    <h1 id=\"offerPrice\"></h1>\n                </td>\n            </tr>\n        </table>\n        <table>\n            <tr>\n                <td>\n                    {{ $results }}\n                </td>\n            </tr>\n        </table>\n    @endif\n@stop\n\n@section('js')\n<script type=\"text/javascript\">\n    \"use strict\"\n    var average;\n    var buyTrade;\n    var condition;\n    var deductions;\n    \n    $('#offerPrice').html(($('#averagePrice').html() * $('#mathBuyTrade').html()).toFixed(2));\n    \n    $('#buyTrade').on('change', function(){\n        switch ($('#buyTrade').val()) {\n            case '0':\n                $('#mathBuyTrade').html('.5');\n                break;\n            case '1':\n                $('#mathBuyTrade').html('.6');\n                break;\n        }\n    });\n    \n    $('#condition').on('change', function(){\n        switch ($('#condition').val()) {\n            case '0':\n                $('#mathCondition').html('1');\n                break;\n            case '1':\n                $('#mathCondition').html('.85');\n                break;\n            case '2':\n                $('#mathCondition').html('.75');\n                break;\n            case '3':\n                $('#mathCondition').html('.55');\n                break;\n        }\n    });\n    \n    $('#battery').change(function() {\n        if ($(this).is(':checked')) {\n            $('#mathBattery').html('35');\n        } else {\n            $('#mathBattery').html('0');\n        }\n    });\n    $('#sensorClean').change(function() {\n        if ($(this).is(':checked')) {\n            $('#mathSensorClean').html('79.5');\n        } else {\n            $('#mathSensorClean').html('0');\n        }\n    });\n    $('#cleaning').change(function() {\n        if ($(this).is(':checked')) {\n            $('#mathCleaning').html('48.5');\n        } else {\n            $('#mathCleaning').html('0');\n        }\n    });\n    $('#charger').change(function() {\n        if ($(this).is(':checked')) {\n            $('#mathCharger').html('50');\n        } else {\n            $('#mathCharger').html('0');\n        }\n    });\n    \n    $('#buyTrade, #condition, #battery, #sensorClean, #cleaning, #charger').on('change', function(){\n\n        average = parseFloat($('#averagePrice').html());\n        buyTrade = parseFloat($('#mathBuyTrade').html());\n        condition = parseFloat($('#mathCondition').html());\n        deductions = parseFloat($('#mathBattery').html()) + parseFloat($('#mathSensorClean').html()) + parseFloat($('#mathCleaning').html()) + parseFloat($('#mathCharger').html());\n        \n        $('#offerPrice').html((\n            (average * buyTrade * condition) - deductions\n        ).toFixed(2));\n\n    });\n</script>\n@stop\n\n\n\n\n\n",
  "// Tideland Go Data Structures and Algorithms - Map/Reduce - Unit Tests\n//\n// Copyright (C) 2019 Frank Mueller / Tideland / Oldenburg / Germany\n//\n// All rights reserved. Use of this source code is governed\n// by the new BSD license.\n\npackage mapreduce_test\n\n//--------------------\n// IMPORTS\n//--------------------\n\nimport (\n\t\"fmt\"\n\t\"math/rand\"\n\t\"strconv\"\n\t\"testing\"\n\n\t\"tideland.dev/go/audit/asserts\"\n\t\"tideland.dev/go/dsa/identifier\"\n\t\"tideland.dev/go/dsa/mapreduce\"\n)\n\n//--------------------\n// TESTS\n//--------------------\n\n// TestMapReduce runs a scenario, where orders are analyzed\n// and a list of the analyzed articles will be returned\nfunc TestMapReduce(t *testing.T) {\n\tassert := asserts.NewTesting(t, asserts.FailStop)\n\t// Create MapReducer and let the show begin.\n\tmr := &OrderMapReducer{200000, make(map[int][]*OrderItem), make(map[string]*OrderItemAnalysis), assert}\n\terr := mapreduce.MapReduce(mr)\n\t// Asserts.\n\tassert.Nil(err)\n\tassert.Equal(len(mr.items), len(mr.analyses), \"all items are analyzed\")\n\tfor _, analysis := range mr.analyses {\n\t\tquantity := 0\n\t\tamount := 0.0\n\t\tdiscount := 0.0\n\t\titems := mr.items[analysis.ArticleNo]\n\t\tfor _, item := range items {\n\t\t\tunitDiscount := (item.UnitPrice / 100.0) * item.DiscountPerc\n\t\t\ttotalDiscount := unitDiscount * float64(item.Count)\n\t\t\ttotalAmount := (item.UnitPrice - unitDiscount) * float64(item.Count)\n\n\t\t\tquantity += item.Count\n\t\t\tamount += totalAmount\n\t\t\tdiscount += totalDiscount\n\t\t}\n\t\tassert.Equal(quantity, analysis.Quantity, \"quantity per article\")\n\t\tassert.About(amount, analysis.Amount, 0.01, \"amount per article\")\n\t\tassert.About(discount, analysis.Discount, 0.01, \"discount per article\")\n\t}\n}\n\n// BenchmarkMapReduce tests the performance of map/reduce.\nfunc BenchmarkMapReduce(b *testing.B) {\n\tassert := asserts.NewPanic()\n\tmr := &OrderMapReducer{b.N, make(map[int][]*OrderItem), make(map[string]*OrderItemAnalysis), assert}\n\tassert.NoError(mapreduce.MapReduce(mr))\n}\n\n//--------------------\n// HELPERS\n//--------------------\n\ntype OrderMapReducer struct {\n\tcount    int\n\titems    map[int][]*OrderItem\n\tanalyses map[string]*OrderItemAnalysis\n\tassert   *asserts.Asserts\n}\n\n// Input has to return the input channel for the\n// date to process.\nfunc (o *OrderMapReducer) Input() mapreduce.IdentifiableChan {\n\tinput := make(mapreduce.IdentifiableChan)\n\t// Generate test orders and push them into a the\n\t// input channel.\n\tarticleMaxNo := 9999\n\tunitPrices := make([]float64, articleMaxNo+1)\n\tfor i := 0; i < articleMaxNo+1; i++ {\n\t\tunitPrices[i] = rand.Float64() * 100.0\n\t}\n\tgo func() {\n\t\tdefer close(input)\n\t\tfor i := 0; i < o.count; i++ {\n\t\t\torder := &Order{\n\t\t\t\tOrderNo:    identifier.NewUUID(),\n\t\t\t\tCustomerNo: rand.Intn(999) + 1,\n\t\t\t\tItems:      make([]*OrderItem, rand.Intn(9)+1),\n\t\t\t}\n\t\t\tfor j := 0; j < len(order.Items); j++ {\n\t\t\t\tarticleNo := rand.Intn(articleMaxNo)\n\t\t\t\torder.Items[j] = &OrderItem{\n\t\t\t\t\tArticleNo:    articleNo,\n\t\t\t\t\tCount:        rand.Intn(9) + 1,\n\t\t\t\t\tUnitPrice:    unitPrices[articleNo],\n\t\t\t\t\tDiscountPerc: rand.Float64() * 4.0,\n\t\t\t\t}\n\t\t\t\to.items[articleNo] = append(o.items[articleNo], order.Items[j])\n\t\t\t}\n\t\t\tinput <- order\n\t\t}\n\t}()\n\treturn input\n}\n\n// Map maps a key/value pair to another one and emits it.\nfunc (o *OrderMapReducer) Map(in mapreduce.Identifiable, emit mapreduce.IdentifiableChan) {\n\torder := in.(*Order)\n\t// Analyse items and emit results.\n\tfor _, item := range order.Items {\n\t\tunitDiscount := (item.UnitPrice / 100.0) * item.DiscountPerc\n\t\ttotalDiscount := unitDiscount * float64(item.Count)\n\t\ttotalAmount := (item.UnitPrice - unitDiscount) * float64(item.Count)\n\t\tanalysis := &OrderItemAnalysis{item.ArticleNo, item.Count, totalAmount, totalDiscount}\n\t\temit <- analysis\n\t}\n}\n\n// Reduce reduces the values delivered via the input\n// channel to the emit channel.\nfunc (o *OrderMapReducer) Reduce(in, emit mapreduce.IdentifiableChan) {\n\tmemory := make(map[string]*OrderItemAnalysis)\n\t// Collect emitted analysis data.\n\tfor i := range in {\n\t\tanalysis := i.(*OrderItemAnalysis)\n\t\tif existing, ok := memory[i.ID()]; ok {\n\t\t\texisting.Quantity += analysis.Quantity\n\t\t\texisting.Amount += analysis.Amount\n\t\t\texisting.Discount += analysis.Discount\n\t\t} else {\n\t\t\tmemory[i.ID()] = analysis\n\t\t}\n\t}\n\t// Emit the result to the consumer.\n\tfor _, analysis := range memory {\n\t\temit <- analysis\n\t}\n}\n\n// Consume allows the MapReducer to consume the\n// processed data.\nfunc (o *OrderMapReducer) Consume(in mapreduce.IdentifiableChan) error {\n\tfor i := range in {\n\t\to.assert.Nil(o.analyses[i.ID()], \"each analysis only once\")\n\t\to.analyses[i.ID()] = i.(*OrderItemAnalysis)\n\t}\n\treturn nil\n}\n\n// Order item type.\ntype OrderItem struct {\n\tArticleNo    int\n\tCount        int\n\tUnitPrice    float64\n\tDiscountPerc float64\n}\n\n// Order type.\ntype Order struct {\n\tOrderNo    identifier.UUID\n\tCustomerNo int\n\tItems      []*OrderItem\n}\n\n// ID returns the order number as identifier.\nfunc (o *Order) ID() string {\n\treturn o.OrderNo.String()\n}\n\nfunc (o *Order) String() string {\n\tmsg := \"ON: %v / CN: %4v / I: %v\"\n\treturn fmt.Sprintf(msg, o.OrderNo, o.CustomerNo, len(o.Items))\n}\n\n// Order item analysis type.\ntype OrderItemAnalysis struct {\n\tArticleNo int\n\tQuantity  int\n\tAmount    float64\n\tDiscount  float64\n}\n\n// IDy returns the article number as identifier.\nfunc (a *OrderItemAnalysis) ID() string {\n\treturn strconv.Itoa(a.ArticleNo)\n}\n\nfunc (oia *OrderItemAnalysis) String() string {\n\tmsg := \"AN: %5v / Q: %4v / A: %10.2f \u20ac / D: %10.2f \u20ac\"\n\treturn fmt.Sprintf(msg, oia.ArticleNo, oia.Quantity, oia.Amount, oia.Discount)\n}\n\n// EOF\n",
  "/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.dubbo.configcenter.support.zookeeper;\n\nimport org.apache.dubbo.common.Constants;\nimport org.apache.dubbo.common.URL;\nimport org.apache.dubbo.common.utils.NamedThreadFactory;\nimport org.apache.dubbo.common.utils.StringUtils;\nimport org.apache.dubbo.configcenter.ConfigurationListener;\nimport org.apache.dubbo.configcenter.DynamicConfiguration;\n\nimport org.apache.curator.RetryPolicy;\nimport org.apache.curator.framework.CuratorFramework;\nimport org.apache.curator.framework.recipes.cache.ChildData;\nimport org.apache.curator.framework.recipes.cache.TreeCache;\nimport org.apache.curator.retry.ExponentialBackoffRetry;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport java.nio.charset.StandardCharsets;\nimport java.util.concurrent.CountDownLatch;\nimport java.util.concurrent.Executor;\nimport java.util.concurrent.Executors;\nimport java.util.concurrent.TimeUnit;\n\nimport static org.apache.curator.framework.CuratorFrameworkFactory.newClient;\nimport static org.apache.dubbo.common.Constants.CONFIG_NAMESPACE_KEY;\n\n/**\n *\n */\npublic class ZookeeperDynamicConfiguration implements DynamicConfiguration {\n    private static final Logger logger = LoggerFactory.getLogger(ZookeeperDynamicConfiguration.class);\n    private Executor executor;\n    private CuratorFramework client;\n\n    // The final root path would be: /configRootPath/\"config\"\n    private String rootPath;\n    private TreeCache treeCache;\n    private CountDownLatch initializedLatch;\n\n    private CacheListener cacheListener;\n    private URL url;\n\n\n    //  \u8fde\u63a5zookeeper\uff0c\uff0c\u5efa\u7acb\u8fde\u63a5\u3002\u83b7\u53d6\u3010\u96be\u9053\u8fd9\u91cc\u76f4\u63a5\u4f7f\u7528Curator\uff1f\u3011\n    ZookeeperDynamicConfiguration(URL url) {\n        this.url = url;\n        rootPath = \"/\" + url.getParameter(CONFIG_NAMESPACE_KEY, DEFAULT_GROUP) + \"/config\";\n\n        RetryPolicy policy = new ExponentialBackoffRetry(1000, 3);\n        int sessionTimeout = url.getParameter(\"config.session.timeout\", 60 * 1000);\n        int connectTimeout = url.getParameter(\"config.connect.timeout\", 10 * 1000);\n        String connectString = url.getBackupAddress();\n        client = newClient(connectString, sessionTimeout, connectTimeout, policy);\n        client.start();\n\n        try {\n            boolean connected = client.blockUntilConnected(3 * connectTimeout, TimeUnit.MILLISECONDS);\n            if (!connected) {\n                if (url.getParameter(Constants.CONFIG_CHECK_KEY, true)) {\n                    throw new IllegalStateException(\"Failed to connect to config center (zookeeper): \"\n                            + connectString + \" in \" + 3 * connectTimeout + \"ms.\");\n                } else {\n                    logger.warn(\"The config center (zookeeper) is not fully initialized in \" + 3 * connectTimeout + \"ms, address is: \" + connectString);\n                }\n            }\n        } catch (InterruptedException e) {\n            throw new IllegalStateException(\"The thread was interrupted unexpectedly when trying connecting to zookeeper \"\n                    + connectString + \" config center, \", e);\n        }\n\n        // \u8fd9\u4e00\u6b65\uff0c\u6682\u4e0d\u6e05\u695a\n        initializedLatch = new CountDownLatch(1);\n        this.cacheListener = new CacheListener(rootPath, initializedLatch);\n        this.executor = Executors.newFixedThreadPool(1, new NamedThreadFactory(this.getClass().getSimpleName(), true));\n        // build local cache\n        try {\n            this.buildCache();\n        } catch (Exception e) {\n            logger.warn(\"Failed to build local cache for config center (zookeeper), address is.\" + connectString);\n        }\n    }\n\n    /**\n     * @param key e.g., {service}.configurators, {service}.tagrouters, {group}.dubbo.properties\n     * @return\n     */\n    @Override\n    public Object getInternalProperty(String key) {\n        ChildData childData = treeCache.getCurrentData(key);\n        if (childData!= null) {\n            return new String(childData.getData(), StandardCharsets.UTF_8);\n        }\n        return null;\n    }\n\n    /**\n     * For service governance, multi group is not supported by this implementation. So group is not used at present.\n     */\n    @Override\n    public void addListener(String key, String group, ConfigurationListener listener) {\n        cacheListener.addListener(key, listener);\n    }\n\n    @Override\n    public void removeListener(String key, String group, ConfigurationListener listener) {\n        cacheListener.removeListener(key, listener);\n    }\n\n    @Override\n    public String getConfig(String key, String group, long timeout) throws IllegalStateException {\n        /**\n         * when group is not null, we are getting startup configs from Config Center, for example:\n         * group=dubbo, key=dubbo.properties\n         */\n        if (StringUtils.isNotEmpty(group)) {\n            key = group + \"/\" + key;\n        }\n        /**\n         * when group is null, we are fetching governance rules, for example:\n         * 1. key=org.apache.dubbo.DemoService.configurators\n         * 2. key = org.apache.dubbo.DemoService.condition-router\n         */\n        else {\n            int i = key.lastIndexOf(\".\");\n            key = key.substring(0, i) + \"/\" + key.substring(i + 1);\n        }\n\n        return (String) getInternalProperty(rootPath + \"/\" + key);\n    }\n\n    /**\n     * Adds a listener to the pathChildrenCache, initializes the cache, then starts the cache-management background\n     * thread\n     */\n    private void buildCache() throws Exception {\n        this.treeCache = new TreeCache(client, rootPath);\n        // create the watcher for future configuration updates\n        treeCache.getListenable().addListener(cacheListener, executor);\n\n        // it's not blocking, so we use an extra latch 'initializedLatch' to make sure cache fully initialized before use.\n        treeCache.start();\n        initializedLatch.await();\n    }\n}\n",
  "exports.insertChartOutlinedOutlinedImpl = require('@material-ui/icons/InsertChartOutlinedOutlined').default;\n",
  "package main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n\t\"os\"\n\t\"os/user\"\n\t\"path\"\n\t\"runtime\"\n\t\"time\"\n\n\t\"github.com/aws/aws-sdk-go-v2/aws/external\"\n\t\"github.com/mmatur/aws-mfa/internal\"\n\t\"github.com/spf13/cobra\"\n\t\"github.com/spf13/cobra/doc\"\n\t\"gopkg.in/ini.v1\"\n)\n\nvar Version = \"dev\"\nvar ShortCommit = \"\"\nvar Date = \"\"\n\ntype rootConfig struct {\n\tcredentialFile string\n\tduration       int64\n\tprofile        string\n\tforce          bool\n\tdebug          bool\n}\n\nconst (\n\t// CredentialsFile is the default path for the AWS credentials.\n\tcredentialsFile = \"/.aws/credentials\"\n\tlongTermSuffix  = \"-long-term\"\n)\n\nfunc main() {\n\tlog.SetFlags(log.Lshortfile)\n\n\tvar rootCfg rootConfig\n\tvar cfg *ini.File\n\n\trootCmd := &cobra.Command{\n\t\tUse:     \"aws-mfa\",\n\t\tShort:   \"AWS - MFA\",\n\t\tLong:    \"AWS - MFA\",\n\t\tVersion: Version,\n\t\tPreRunE: func(_ *cobra.Command, _ []string) error {\n\t\t\tfmt.Printf(\"AWS-MFA: %s - %s - %s\\n\", Version, Date, ShortCommit)\n\n\t\t\tvar err error\n\t\t\tcfg, err = ini.Load(rootCfg.credentialFile)\n\t\t\tif err!= nil {\n\t\t\t\treturn err\n\t\t\t}\n\n\t\t\tif err = validate(rootCfg, cfg); err!= nil {\n\t\t\t\treturn err\n\t\t\t}\n\n\t\t\tif credentialStillValid(rootCfg, cfg) {\n\t\t\t\treturn nil\n\t\t\t}\n\n\t\t\terr = os.Setenv(external.AWSProfileEnvVar, rootCfg.profile+longTermSuffix)\n\t\t\tif err!= nil {\n\t\t\t\treturn err\n\t\t\t}\n\n\t\t\treturn nil\n\t\t},\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tif err := rootRun(rootCfg, cfg); err!= nil {\n\t\t\t\tlog.Fatal(err)\n\t\t\t}\n\t\t},\n\t}\n\n\tusr, err := user.Current()\n\tif err!= nil {\n\t\tlog.Fatal(err)\n\t}\n\n\trootCmd.Flags().StringVar(&rootCfg.credentialFile, \"credential-file\", path.Join(usr.HomeDir, credentialsFile), \"Credential file.\")\n\trootCmd.Flags().Int64Var(&rootCfg.duration, \"duration\", 43200, \"Duration in seconds for credentials to remain valid.\")\n\trootCmd.Flags().StringVar(&rootCfg.profile, \"profile\", \"default\", \"AWS profile to use.\")\n\trootCmd.Flags().BoolVar(&rootCfg.force, \"force\", false, \"Force credentials renew.\")\n\trootCmd.Flags().BoolVar(&rootCfg.debug, \"debug\", false, \"Enable debug mode.\")\n\n\tdocCmd := &cobra.Command{\n\t\tUse:    \"doc\",\n\t\tShort:  \"Generate documentation\",\n\t\tHidden: true,\n\t\tRunE: func(cmd *cobra.Command, args []string) error {\n\t\t\treturn doc.GenMarkdownTree(rootCmd, \"./docs\")\n\t\t},\n\t}\n\n\trootCmd.AddCommand(docCmd)\n\n\tversionCmd := &cobra.Command{\n\t\tUse:   \"version\",\n\t\tShort: \"Display version\",\n\t\tRun: func(_ *cobra.Command, _ []string) {\n\t\t\tdisplayVersion(rootCmd.Name())\n\t\t},\n\t}\n\n\trootCmd.AddCommand(versionCmd)\n\n\tif err := rootCmd.Execute(); err!= nil {\n\t\tlog.Println(err)\n\t\tos.Exit(1)\n\t}\n}\n\nfunc displayVersion(name string) {\n\tfmt.Printf(name+`:\n version     : %s\n commit      : %s\n build date  : %s\n go version  : %s\n go compiler : %s\n platform    : %s/%s\n`, Version, ShortCommit, Date, runtime.Version(), runtime.Compiler, runtime.GOOS, runtime.GOARCH)\n}\n\nfunc rootRun(rootCfg rootConfig, cfg *ini.File) error {\n\tawsConfig, err := external.LoadDefaultAWSConfig(external.DefaultSharedCredentialsFilename())\n\tif err!= nil {\n\t\treturn err\n\t}\n\n\tvar devices []string\n\n\tif cfg.Section(rootCfg.profile + longTermSuffix).HasKey(\"aws_mfa_device\") {\n\t\tdevice := cfg.Section(rootCfg.profile + longTermSuffix).Key(\"aws_mfa_device\").String()\n\n\t\tif rootCfg.debug {\n\t\t\tfmt.Printf(\"MFA device %q found in %q for profile %q\\n\", device, rootCfg.credentialFile, rootCfg.profile+longTermSuffix)\n\t\t}\n\n\t\tdevices = append(devices, device)\n\t} else {\n\t\tdevices, err = internal.ListMFADevices(awsConfig)\n\t\tif err!= nil {\n\t\t\treturn err\n\t\t}\n\t}\n\n\tanswer, err := internal.PromptSurvey(devices)\n\tif err!= nil {\n\t\treturn err\n\t}\n\n\tp, err := internal.GetSessionToken(awsConfig, rootCfg.duration, answer.Device, answer.Code)\n\tif err!= nil {\n\t\treturn err\n\t}\n\n\tif err = updateAWSCredentials(rootCfg, cfg, p); err!= nil {\n\t\treturn err\n\t}\n\n\tfmt.Printf(\"Success! Credentials for profile %q valid until %s \\n\", rootCfg.profile, p.Expiration)\n\n\treturn nil\n}\n\nfunc credentialStillValid(rootCfg rootConfig, cfg *ini.File) bool {\n\tif cfg.Section(rootCfg.profile).HasKey(\"expiration\") &&!rootCfg.force {\n\t\texpirationUnparsed := cfg.Section(rootCfg.profile).Key(\"expiration\").String()\n\n\t\texpiration, err := time.Parse(\"2006-01-02 15:04:05\", expirationUnparsed)\n\t\tif err!= nil {\n\t\t\tlog.Fatalf(\"Unable to parse %s\", expirationUnparsed)\n\t\t}\n\n\t\tsecondsRemaining := expiration.Unix() - time.Now().Unix()\n\t\tif secondsRemaining > 0 {\n\t\t\tfmt.Printf(\"Credentials for profile %q still valid for %d seconds until %s\\n\", rootCfg.profile, secondsRemaining, expirationUnparsed)\n\t\t\treturn true\n\t\t}\n\t}\n\n\treturn false\n}\n\nfunc updateAWSCredentials(rootCfg rootConfig, cfg *ini.File, p *internal.Profile) error {\n\tif err := cfg.Section(rootCfg.profile).ReflectFrom(p); err!= nil {\n\t\treturn err\n\t}\n\n\treturn cfg.SaveTo(rootCfg.credentialFile)\n}\n\nfunc validate(rootCfg rootConfig, cfg *ini.File) error {\n\tif _, err := cfg.GetSection(rootCfg.profile + longTermSuffix); err!= nil {\n\t\treturn fmt.Errorf(\"profile %s does not have long-term suffix\", rootCfg.profile)\n\t}\n\n\treturn nil\n}\n",
  "\ufeff// Copyright (c) Microsoft.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information.\n\nusing System;\nusing System.Collections.Generic;\nusing System.Collections.Immutable;\nusing System.Linq;\n\nnamespace Microsoft.CodeAnalysis.Semantics\n{\n    internal class Expression\n    {\n        public static ConstantValue SynthesizeNumeric(ITypeSymbol type, int value)\n        {\n            switch (type.SpecialType)\n            {\n                case SpecialType.System_Int32:\n                    return ConstantValue.Create(value);\n                case SpecialType.System_Int64:\n                    return ConstantValue.Create((long)value);\n                case SpecialType.System_UInt32:\n                    return ConstantValue.Create((uint)value);\n                case SpecialType.System_UInt64:\n                    return ConstantValue.Create((ulong)value);\n                case SpecialType.System_UInt16:\n                    return ConstantValue.Create((ushort)value);\n                case SpecialType.System_Int16:\n                    return ConstantValue.Create((short)value);\n                case SpecialType.System_SByte:\n                    return ConstantValue.Create((sbyte)value);\n                case SpecialType.System_Byte:\n                    return ConstantValue.Create((byte)value);\n                case SpecialType.System_Char:\n                    return ConstantValue.Create((char)value);\n                case SpecialType.System_Boolean:\n                    return ConstantValue.Create(value!= 0);\n                case SpecialType.System_Single:\n                    return ConstantValue.Create((float)value);\n                case SpecialType.System_Double:\n                    return ConstantValue.Create((double)value);\n                case SpecialType.System_Object:\n                    return ConstantValue.Create(1, ConstantValueTypeDiscriminator.Int32);\n            }\n\n            if (type.TypeKind == TypeKind.Enum)\n            {\n                return SynthesizeNumeric(((INamedTypeSymbol)type).EnumUnderlyingType, value);\n            }\n\n            return null;\n        }\n\n        public static BinaryOperationKind DeriveAdditionKind(ITypeSymbol type)\n        {\n            switch (type.SpecialType)\n            {\n                case SpecialType.System_Int32:\n                case SpecialType.System_Int64:\n                case SpecialType.System_Int16:\n                case SpecialType.System_SByte:\n                    return BinaryOperationKind.IntegerAdd;\n                case SpecialType.System_UInt32:\n                case SpecialType.System_UInt64:\n                case SpecialType.System_UInt16:\n                case SpecialType.System_Byte:\n                case SpecialType.System_Char:\n                case SpecialType.System_Boolean:\n                    return BinaryOperationKind.UnsignedAdd;\n                case SpecialType.System_Single:\n                case SpecialType.System_Double:\n                    return BinaryOperationKind.FloatingAdd;\n                case SpecialType.System_Object:\n                    return BinaryOperationKind.ObjectAdd;\n            }\n\n            if (type.TypeKind == TypeKind.Enum)\n            {\n                return Semantics.BinaryOperationKind.EnumAdd;\n            }\n\n            return Semantics.BinaryOperationKind.None;\n        }\n    }\n\n    public sealed class ConditionalChoice : IConditionalChoiceExpression\n    {\n        public ConditionalChoice(IExpression condition, IExpression ifTrue, IExpression ifFalse, ITypeSymbol resultType, SyntaxNode syntax)\n        {\n            this.Condition = condition;\n            this.IfTrue = ifTrue;\n            this.IfFalse = ifFalse;\n            this.ResultType = resultType;\n            this.Syntax = syntax;\n        }\n\n        public IExpression Condition { get; }\n\n        public IExpression IfTrue { get; }\n\n        public IExpression IfFalse { get; }\n\n        public ITypeSymbol ResultType { get; }\n\n        public SyntaxNode Syntax { get; }\n\n        public OperationKind Kind => OperationKind.ConditionalChoiceExpression;\n\n        public object ConstantValue => null;\n    }\n\n    public sealed class Assignment : IExpressionStatement\n    {\n        private readonly AssignmentExpression _assignment;\n\n        public Assignment(IReferenceExpression target, IExpression value, SyntaxNode syntax)\n        {\n            _assignment = new AssignmentExpression(target, value, syntax);\n            this.Syntax = syntax;\n        }\n\n        public SyntaxNode Syntax { get; }\n\n        public OperationKind Kind => OperationKind.ExpressionStatement;\n\n        public IExpression Expression => _assignment;\n\n        class AssignmentExpression : IAssignmentExpression\n        {\n            public AssignmentExpression(IReferenceExpression target, IExpression value, SyntaxNode syntax)\n            {\n                this.Value = value;\n                this.Target = target;\n                this.Syntax = syntax;\n            }\n\n            public IReferenceExpression Target { get; }\n\n            public IExpression Value { get; }\n\n            public SyntaxNode Syntax { get; }\n\n            public ITypeSymbol ResultType => this.Target.ResultType;\n\n            public OperationKind Kind => OperationKind.AssignmentExpression;\n\n            public object ConstantValue => null;\n        }\n    }\n\n    public sealed class CompoundAssignment : IExpressionStatement\n    {\n        private readonly CompoundAssignmentExpression _compoundAssignment;\n\n        public CompoundAssignment(IReferenceExpression target, IExpression value, BinaryOperationKind binaryKind, IMethodSymbol operatorMethod, SyntaxNode syntax)\n        {\n            _compoundAssignment = new CompoundAssignmentExpression(target, value, binaryKind, operatorMethod, syntax);\n            this.Syntax = syntax;\n        }\n\n        public SyntaxNode Syntax { get; }\n\n        public OperationKind Kind => OperationKind.ExpressionStatement;\n\n        public IExpression Expression => _compoundAssignment;\n\n        class CompoundAssignmentExpression : ICompoundAssignmentExpression\n        {\n            public CompoundAssignmentExpression(IReferenceExpression target, IExpression value, BinaryOperationKind binaryKind, IMethodSymbol operatorMethod, SyntaxNode syntax)\n            {\n                this.Target = target;\n                this.Value = value;\n                this.BinaryKind = binaryKind;\n                this.Operator = operatorMethod;\n                this.Syntax = syntax;\n            }\n\n            public IReferenceExpression Target { get; }\n\n            public IExpression Value { get; }\n\n            public BinaryOperationKind BinaryKind { get; }\n\n            public IMethodSymbol Operator { get; }\n\n            public SyntaxNode Syntax { get; }\n\n            public ITypeSymbol ResultType => this.Target.ResultType;\n\n            public OperationKind Kind => OperationKind.CompoundAssignmentExpression;\n\n            public object ConstantValue => null;\n\n            public bool UsesOperatorMethod => this.Operator!= null;\n        }\n    }\n\n    public sealed class IntegerLiteral : ILiteralExpression\n    {\n        private readonly long _value;\n\n        public IntegerLiteral(long value, ITypeSymbol resultType, SyntaxNode syntax)\n        {\n            _value = value;\n            this.ResultType = resultType;\n            this.Syntax = syntax;\n        }\n        \n        public string Spelling =>_value.ToString();\n\n        public ITypeSymbol ResultType { get; }\n\n        public OperationKind Kind => OperationKind.LiteralExpression;\n\n        public object ConstantValue => _value;\n\n        public SyntaxNode Syntax { get; }\n    }\n\n    internal class Literal : ILiteralExpression\n    {\n        private readonly ConstantValue _value;\n\n        public Literal(ConstantValue value, ITypeSymbol resultType, SyntaxNode syntax)\n        {\n            _value = value;\n            this.ResultType = resultType;\n            this.Syntax = syntax;\n        }\n\n        public string Spelling => _value.Value.ToString();\n\n        public ITypeSymbol ResultType { get; }\n\n        public OperationKind Kind => OperationKind.LiteralExpression;\n\n        public object ConstantValue => _value.Value;\n\n        public SyntaxNode Syntax { get; }\n    }\n\n    public sealed class Binary : IBinaryOperatorExpression\n    {\n        public Binary(BinaryOperationKind binaryKind, IExpression left, IExpression right, ITypeSymbol resultType, SyntaxNode syntax)\n        {\n            this.BinaryKind = binaryKind;\n            this.Left = left;\n            this.Right = right;\n            this.ResultType = resultType;\n            this.Syntax = syntax;\n        }\n\n        public BinaryOperationKind BinaryKind { get; }\n\n        public IExpression Left { get; }\n\n        public IExpression Right { get; }\n\n        public bool UsesOperatorMethod => false;\n\n        public IMethodSymbol Operator => null;\n\n        public ITypeSymbol ResultType { get; }\n\n        public OperationKind Kind => OperationKind.BinaryOperatorExpression;\n\n        public object ConstantValue => null;\n\n        public SyntaxNode Syntax { get; }\n    }\n\n    public sealed class ArrayCreation: IArrayCreationExpression\n    {\n        private readonly IArrayTypeSymbol _arrayType;\n\n        public",
  "from functools import cache\nfrom typing import Optional, Dict, List, Any\n\nfrom fastapi.encoders import jsonable_encoder\nfrom fastapi import APIRouter, status, Request, Response\n\nfrom app.api.utils import API_functools\nfrom app.api.api_v1.models.pydantic import Vote as VoteBaseModel\nfrom app.api.api_v1.models.tortoise import Vote, Comment, Person\n\n\nrouter = APIRouter()\n\n\nasync def filter_votes(\n    req: Request,\n    res: Response,\n    max_votes: int,\n    filters: Optional[dict] = None,\n    offset: Optional[int] = 20,\n    limit: Optional[int] = 0,\n    sort: Optional[str] = \"id:asc\",\n) -> Optional[List[Dict[str, Any]]]:\n    response = {\n        \"success\": False,\n        \"votes\": [],\n    }\n    order_by = API_functools.valid_order(Vote, sort)\n\n    if order_by is None:\n        res.status_code = status.HTTP_400_BAD_REQUEST\n        return {\n            **response,\n            \"detail\": \"Invalid sort parameters. it must match \\\n            attribute:order. ex: id:asc or id:desc\",\n        }\n\n    if offset < 0 or limit < 1:\n        res.status_code = status.HTTP_400_BAD_REQUEST\n        return {\n            **response,\n            \"detail\": \"Invalid values: offset(>=0) or limit(>0)\",\n        }\n\n    votes = jsonable_encoder(\n        await (Vote.all() if filters is None else Vote.filter(**filters))\n       .limit(limit)\n       .offset(offset)\n       .order_by(order_by)\n       .values(*API_functools.get_attributes(Vote))\n    )\n    if len(votes) == 0:\n        res.status_code = status.HTTP_404_NOT_FOUND\n        return {**response, \"detail\": \"Not Found\"}\n\n    return API_functools.manage_next_previous_page(\n        req, votes, max_votes, limit, offset, data_type=\"votes\"\n    )\n\n\n@cache\n@router.get(\"/\", status_code=status.HTTP_200_OK)\nasync def votes(\n    req: Request,\n    res: Response,\n    limit: Optional[int] = 20,\n    offset: Optional[int] = 0,\n    sort: Optional[str] = \"id:asc\",\n) -> Optional[List[Dict[str, Any]]]:\n\n    \"\"\"Get all votes or some of them using 'offset' and 'limit'\n\n    Args:\n\n        limit (int, optional): max number of returned votes. Defaults to 100.\n        offset (int, optional): first vote to return (use with limit). Defaults to 1.\n        sort (str, optional): the order of the result. attribute:(asc {ascending} or\n        desc {descending}). Defaults to \"id:asc\".\n\n    Returns:\n\n        Optional[List[Dict[str, Any]]]: list of votes found or Dict with error\n    \"\"\"\n    nb_votes = await Vote.all().count()\n\n    return await filter_votes(req, res, nb_votes, offset=offset, limit=limit, sort=sort)\n\n\n@cache\n@router.get(\"/comment/{comment_ID}\", status_code=status.HTTP_200_OK)\nasync def votes_by_comment(\n    req: Request,\n    res: Response,\n    comment_ID: int,\n    limit: Optional[int] = 20,\n    offset: Optional[int] = 0,\n    sort: Optional[str] = \"id:asc\",\n) -> Optional[List[Dict[str, Any]]]:\n\n    \"\"\"Get all votes of comment or some of them using 'offset' and 'limit'\n\n    Args:\n\n        user_ID (int): user ID\n        limit (int, optional): max number of votes to return. Defaults to 100.\n        offset (int, optional): first vote to return (use with limit). Defaults to 1.\n        sort (str, optional): the order of the result. attribute:(asc {ascending} or\n        desc {descending}). Defaults to \"id:asc\".\n\n    Returns:\n\n        Optional[List[Dict[str, Any]]]: list of votes found or Dict with error\n    \"\"\"\n    comment = await Comment.filter(pk=comment_ID)\n\n    if len(comment) == 0:\n        res.status_code = status.HTTP_404_NOT_FOUND\n        return {\n            \"success\": False,\n            \"votes\": [],\n            \"detail\": f\"Comment {comment_ID} doesn't exist\",\n        }\n\n    return await filter_votes(\n        req,\n        res,\n        len(comment),\n        filters={\"comment_id\": comment_ID},\n        offset=offset,\n        limit=limit,\n        sort=sort,\n    )\n\n\n@cache\n@router.get(\"/user/{user_ID}\", status_code=status.HTTP_200_OK)\nasync def votes_by_user(\n    req: Request,\n    res: Response,\n    user_ID: int,\n    limit: Optional[int] = 20,\n    offset: Optional[int] = 0,\n    sort: Optional[str] = \"id:asc\",\n) -> Optional[List[Dict[str, Any]]]:\n\n    \"\"\"Get all votes of user or some of them using 'offset' and 'limit'\n\n    Args:\n\n        user_ID (int): user ID\n        limit (int, optional): max number of votes to return. Defaults to 100.\n        offset (int, optional): first vote to return (use with limit). Defaults to 1.\n        sort (str, optional): the order of the result. attribute:(asc {ascending} or\n        desc {descending}). Defaults to \"id:asc\".\n\n    Returns:\n\n        Optional[List[Dict[str, Any]]]: list of votes found or Dict with error\n    \"\"\"\n    users = await Person.filter(pk=user_ID)\n\n    if len(users) == 0:\n        res.status_code = status.HTTP_404_NOT_FOUND\n        return {\n            \"success\": False,\n            \"votes\": [],\n            \"detail\": f\"User {user_ID} doesn't exist\",\n        }\n\n    return await filter_votes(\n        req,\n        res,\n        len(users),\n        filters={\"comment_id\": user_ID},\n        offset=offset,\n        limit=limit,\n        sort=sort,\n    )\n\n\n@router.post(\"/\", status_code=status.HTTP_201_CREATED)\nasync def create_remove_vote(res: Response, vote: VoteBaseModel) -> Dict[str, Any]:\n    \"\"\"create or remove a Vote from Vote table\n\n    Args:\n\n        vote (VoteBaseModel): vote to create or remove\n\n    Returns:\n\n        Dict[str, Any]: vote created\n    \"\"\"\n    response = {\n        \"success\": True,\n        \"vote\": {},\n        \"detail\": \"Vote successfully created\",\n    }\n    vote_owner = API_functools.get_or_default(await Person.filter(pk=vote.user), 0, None)\n    if vote_owner is None:\n        res.status_code = status.HTTP_404_NOT_FOUND\n        response[\"success\"] = False\n        response[\"detail\"] = \"Vote owner doesn't exist\"\n        return response\n\n    vote_comment = API_functools.get_or_default(\n        await Comment.filter(pk=vote.comment), 0, None\n    )\n\n    if vote_comment is None:\n        res.status_code = status.HTTP_404_NOT_FOUND\n        response[\"success\"] = False\n        response[\"detail\"] = \"Vote comment doesn't exist\"\n        return response\n\n    # check to vote or unVote\n    vote_found = await Vote.get_or_none(user_id=vote_owner.id, comment_id=vote_comment.id)\n    if vote_found is None:  # Vote\n        response[\"vote\"] = API_functools.tortoise_to_dict(\n            await Vote.create(comment=vote_comment, user=vote_owner)\n        )\n    else:  # unVote\n        res.status_code = status.HTTP_202_ACCEPTED\n        await vote_found.delete()\n        response[\"vote\"] = API_functools.tortoise_to_dict(vote_found)\n\n    response[\"votes",
  "import Controller from '@ember/controller';\nimport { tracked } from '@glimmer/tracking';\nimport { action } from '@ember/object';\nimport { A } from '@ember/array';\nimport { inject as service } from '@ember/service';\n\nexport default class AdminUsersController extends Controller {\n  @service store;\n  @service me;\n  @tracked allTableItemsSelected = false;\n  @tracked selectedUserRows = A([]);\n  @tracked searchTerm;\n  @tracked showPerPage = 10;\n  @tracked currentPage = 1;\n\n  perPageOptions = [\n    { value: 10, selected: true },\n    { value: 20, selected: false },\n    { value: 50, selected: false },\n    { value: 100, selected: false },\n  ];\n\n  get roles() {\n    return this.store.peekAll('group');\n  }\n\n  get allUsers() {\n    return this.model.filter((user) => user.id);\n  }\n\n  searchResults() {\n    return this.allUsers.filter((user) => {\n      return (\n        user.name.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\n        user.email.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\n        user.role.toLowerCase().includes(this.searchTerm.toLowerCase())\n      );\n    });\n  }\n\n  get users() {\n    const { currentPageStart, currentPageEnd } = this.pageNumericSummary;\n\n    if (this.searchTerm && this.searchTerm.trim()) {\n      return this.searchResults().slice(currentPageStart - 1, currentPageEnd);\n    }\n\n    if (currentPageStart === currentPageEnd) {\n      return this.allUsers;\n    }\n\n    return this.allUsers.slice(currentPageStart - 1, currentPageEnd);\n  }\n\n  @action\n  isSearching() {\n    this.resetAllSelection();\n    this.currentPage = 1;\n  }\n\n  @action\n  isUserRowSelected(user) {\n    return this.selectedUserRows.findIndex((row) => row.id === user.id) > -1;\n  }\n\n  get isAllUserRowsSelected() {\n    return this.selectedUserRows.length === this.users.length;\n  }\n\n  resetAllSelection() {\n    this.selectedUserRows.clear();\n  }\n\n  @action\n  toggleAllRowSelection(e) {\n    const isSelected = e.target.checked;\n\n    this.selectedUserRows.clear();\n\n    if (isSelected) {\n      this.selectedUserRows.addObjects(this.users);\n    }\n  }\n\n  @action\n  toggleRowSelection(user) {\n    const foundIndex = this.selectedUserRows.findIndex((row) => {\n      return row.id === user.id;\n    });\n\n    if (foundIndex > -1) {\n      this.selectedUserRows.removeAt(foundIndex);\n    } else {\n      this.selectedUserRows.addObject(user);\n    }\n  }\n\n  @action\n  deleteSelectedUsers() {\n    this.selectedUserRows.forEach(async (user) => {\n      await user.destroyRecord();\n    });\n  }\n\n  @action\n  updatePerPage(event) {\n    this.currentPage = 1;\n    this.resetAllSelection();\n    this.showPerPage = +event.target.selectedOptions[0].value;\n  }\n\n  get pageNumericSummary() {\n    let recordsCount = this.allUsers.length;\n\n    if (this.searchTerm && this.searchTerm.trim()) {\n      recordsCount = this.searchResults().length;\n    }\n\n    let currentPageStart = 1;\n    if (this.currentPage > 1) {\n      currentPageStart = this.showPerPage * (this.currentPage - 1) + 1;\n    }\n\n    let currentPageEnd = this.showPerPage * this.currentPage;\n    if (currentPageEnd > recordsCount) {\n      currentPageEnd = recordsCount;\n    }\n\n    return { currentPageStart, currentPageEnd, recordsCount };\n  }\n\n  get paginationSummary() {\n    const { recordsCount, currentPageStart, currentPageEnd } =\n      this.pageNumericSummary;\n\n    if (recordsCount <= this.showPerPage) {\n      return `Showing All Users`;\n    }\n\n    return `Showing ${currentPageStart} - ${currentPageEnd} of ${recordsCount}`;\n  }\n\n  @action\n  goToPrevPage() {\n    if (this.hasPreviousPage) {\n      this.currentPage = --this.currentPage;\n      this.resetAllSelection();\n    }\n  }\n\n  @action\n  goToNextPage() {\n    if (this.hasNextPage) {\n      this.currentPage = ++this.currentPage;\n      this.resetAllSelection();\n    }\n  }\n\n  get hasNextPage() {\n    const { recordsCount, currentPageEnd } = this.pageNumericSummary;\n    return currentPageEnd!== recordsCount;\n  }\n\n  get hasPreviousPage() {\n    const { recordsCount } = this.pageNumericSummary;\n    return this.currentPage > 1 && recordsCount > this.showPerPage;\n  }\n}\n",
  "---\nlayout: item\nitemid: 1j\nitemdescendant: huffman\nitemgroupid: 1j\nitemgroupname: 1938 Chevy Coupe Restored by Tera's Father\nitemname: \nitemtype: image\nshortdesc: Photo of purple car\ncategories: [  ]\ntags: [  ]\n---\n\n\n\n\n\n\n",
  "var os2Migration =\r\n[\r\n    [ \"RTX Migration Guide\", \"os2MigrationGuide.html\", [\r\n      [ \"Level 1 Migration - Upgrade to RTX5 on API v1\", \"os2MigrationGuide.html#MigL1\", null ],\r\n      [ \"Level 2 Migration - Use API v2 and v1 alongside in RTX5\", \"os2MigrationGuide.html#MigL2\", null ],\r\n      [ \"Level 3 Migration - Full transition to API v2\", \"os2MigrationGuide.html#MigL3\", null ]\r\n    ] ],\r\n    [ \"Detailed API Function Differences\", \"os2MigrationFunctions.html\", [\r\n      [ \"Kernel Information and Control\", \"os2MigrationFunctions.html#mig_kernel\", null ],\r\n      [ \"Thread Management\", \"os2MigrationFunctions.html#mig_threadMgmt\", null ],\r\n      [ \"Thread Flags\", \"os2MigrationFunctions.html#mig_threadFlags\", null ],\r\n      [ \"Event Flags\", \"os2MigrationFunctions.html#mig_eventFlags\", null ],\r\n      [ \"Generic Wait Functions\", \"os2MigrationFunctions.html#mig_wait\", null ],\r\n      [ \"Timer Management\", \"os2MigrationFunctions.html#mig_timer\", null ],\r\n      [ \"Mutexes\", \"os2MigrationFunctions.html#mig_mutex\", null ],\r\n      [ \"Semaphores\", \"os2MigrationFunctions.html#mig_sem\", null ],\r\n      [ \"Memory Pool\", \"os2MigrationFunctions.html#mig_memPool\", null ],\r\n      [ \"Message Queue\", \"os2MigrationFunctions.html#mig_msgQueue\", null ],\r\n      [ \"Mail Queue\", \"os2MigrationFunctions.html#mig_mailQueue\", null ],\r\n      [ \"Signal Events\", \"os2MigrationFunctions.html#mig_signalEvents\", null ]\r\n    ] ]\r\n];",
  "import requests\nimport json\nimport pandas as pd\nfrom configparser import ConfigParser\nfrom.log import logger\nfrom.exceptions import QualitubeException\n\n\nconfig = ConfigParser()\nconfig.read(\"config.ini\")\nAPI_KEY = config['credentials']['api_key']\n\n\nclass Videos:\n    \"\"\"\n    Wrapper Class to the YouTube Data API v3's `Videos` endpoint with\n    extra functionalities.\n    \"\"\"\n    def __init__(self, videos_ids, api_key=API_KEY):\n        self.videos_ids = videos_ids\n        self.api_key = api_key\n    \n    def _try_parse(self, item, key):\n        try:\n            parsed = item[key]\n        except KeyError:\n            logger.warn(\n                f\"YouTube Data API v3 does not provide the `{key}` parameter fo\"\n                f\"r the requested video. Setting it as `None`\"\n            )\n            parsed = None\n        return parsed\n\n    def _parse_response(self, data):\n        raw = json.loads(data)\n        try:\n            items = raw['items']\n        except KeyError:\n            if \"error\" in raw.keys():\n                raise QualitubeException(\n                    f\"\\nAre you sure you set qualitube's config.ini file correctly?\"\n                    f\"\\nYou are getting the following error from YouTube's API response:\"\n                    f\"\\n\\t{raw}\"\n                )\n            raise\n\n        parsed = []\n        for item in items:\n            parsed.append({\n                'channel_id': self._try_parse(item['snippet'], 'channelId'),\n                'channel_title': self._try_parse(item['snippet'], 'channelTitle'),\n                'video_id': self._try_parse(item, 'id'),\n                'video_title': self._try_parse(item['snippet'], 'title'),\n                'video_description': self._try_parse(item['snippet'], 'description'),\n                'video_tags': self._try_parse(item['snippet'], 'tags'),\n                'video_published_at': self._try_parse(item['snippet'], 'publishedAt'),\n                'video_view_count': self._try_parse(item['statistics'], 'viewCount'),\n                'video_like_count': self._try_parse(item['statistics'], 'likeCount'),\n                'video_dislike_count': self._try_parse(item['statistics'], 'dislikeCount'),\n                'video_favorite_count': self._try_parse(item['statistics'], 'favoriteCount'),\n                'video_comment_count': self._try_parse(item['statistics'], 'commentCount')\n            })\n            logger.info(f\"Got Video -> id: {item['id']} title: {item['snippet']['title']}\")\n\n        try:\n            next_page_token = raw[\"nextPageToken\"]\n        except KeyError:\n            next_page_token = False\n        \n        return parsed, next_page_token\n\n    def _get_ids_parameter(self):\n        ids = ','.join(self.videos_ids)\n        return ids\n\n    def get_data(self, page_token=None):\n        headers = {\n            'Accept': 'application/json',\n        }\n\n        params = [\n            ('part','snippet,statistics'),\n            ('id', self._get_ids_parameter()),\n            ('key', self.api_key)\n        ]\n\n        if page_token:\n            params.append(\n                ('pageToken', page_token)\n            )\n\n        r = requests.get('https://youtube.googleapis.com/youtube/v3/videos', headers=headers, params=params)\n        \n        videos_data, next_page_token = self._parse_response(r.text)\n\n        if next_page_token:\n            return videos_data + self.get_data(next_page_token)\n\n        return videos_data\n    \n    def to_df(self):\n        df = pd.DataFrame(self.get_data())\n        return df\n",
  "var listaFilmes = [\"https://br.web.img2.acsta.net/pictures/19/07/23/20/57/4907896.jpg\", \"https://s2.glbimg.com/fCNS_fXPhGRwlpnAaQLzvGYC1y0=/362x536/https://s2.glbimg.com/UPI9xlM9R9O41YRqSO7R3hTNk_s=/i.s3.glbimg.com/v1/AUTH_c3c606ff68e7478091d1ca496f9c5625/internal_photos/bs/2020/q/V/Avo9ISQQO3grnARi3JCA/2020-914-a-chegada-poster.jpg\", \"https://br.web.img3.acsta.net/medias/nmedia/18/91/90/98/20169244.jpg\"]\n\nfor (var i=0; i<listaFilmes.length; i++) {\n    document.write(\"<img src=\" + listaFilmes[i] + \">\")\n}",
  "\n<?php \n/* \nTemplate Name: Projects Portfolio \n*/\n\nget_header(); \n\n?>\n<div id=\"content-full-width\" class=\"page-wrap\">\n    <div class=\"container content-wrapper\">\n\n        <div class=\"row\">\n            <div id=\"content-projects\" class=\"page-wrap2\">\n                <div class=\"container content-wrapper\">\n\n                    <!-- ============ CONTENT START ============ -->\n                    <section id=\"project-content\">\n                        \n                        <div id=\"intro\" class=\"row\">          \n                            <div class=\"col-sm-12 text-center\">\n                                <?php while ( have_posts() ) : the_post();?>\n                                    <?php the_content()?>\n                                <?php endwhile; // end of the loop.?>\n                            </div>\n                        </div>\n\n                        <div id=\"filters-row\" class=\"row\">    \n                            <div id=\"project-page\" class=\"col-lg-12\">\n                                <ul class=\"nav navbar-nav navbar-left\" id=\"filters\">\n                                    <?php\n                                    $terms2 = get_terms(\"project_categories\");\n                                    $count = count($terms2);\n                                    echo '<li><a href=\"javascript:void(0)\" title=\"\" data-filter=\".all\" class=\"active\">All</a></li>';\n                                    if ( $count > 0 ){\n                                        foreach ( $terms2 as $term ) {                                      $termname = strtolower($term->name);\n                                            $termname = str_replace(' ', '-', $termname);\n                                            echo '<li><a href=\"javascript:void(0)\" title=\"\" class=\"\" data-filter=\".'.$termname.'\">'.$term->name.'</a></li>';\n                                        }\n                                    }?>\n                                </ul>\n                            </div>\n                        </div>\n                        \n                        <div id=\"projects\" class=\"row\">\n                            <!-- Start projects Loop -->\n                            <?php  /* Query the post   */\n                            $args = array( 'post_type' => 'projects', 'posts_per_page' => -1, 'orderby'=>'menu_order','order'=>'ASC' );\n                            $loop = new WP_Query( $args );\n                            while ( $loop->have_posts() ) : $loop->the_post(); \n                            /* Pull category for each unique post using the ID */\n                            $terms = get_the_terms( $post->ID, 'project_categories' );   \n                            if ( $terms &&! is_wp_error( $terms ) ) : \n                             $links = array();\n                         foreach ( $terms as $term ) {\n                             $links[] = $term->name;\n                         }\n                         $tax_links = join( \" \", str_replace(' ', '-', $links));          \n                         $tax = strtolower($tax_links);\n                         else :  \n                            $tax = '';                  \n                        endif;?>\n                        \n                        <?php echo '<div class=\"project col-sm-6 col-md-4 col-lg-3 all project-item '. $tax.'\">';?>\n                        <a href=\"<?php print get_permalink($post->ID)?>\">\n                          <?php echo the_post_thumbnail();?></a>\n                          <h4><?php print get_the_title();?></h4>\n                          <?php print get_the_excerpt();?><br />\n                          <a class=\"btn btn-default\" href=\"<?php print get_permalink($post->ID)?>\">Details</a>\n                      </div> <!-- End individual project col -->\n                  <?php endwhile;?> \n              </div><!-- End Projects Row -->\n          </div><!-- End Container --> \n          <!-- ============ CONTENT END ============ -->\n\n          <?php get_footer();?>",
  "({set a(b=1){}})",
  "---\ntitle: Mulching\nlayout: default\n---\n\n<div class=\"text-center gardening-title-div\">\n<h2 class=\"green gardening-title\">Mulching</h2>\n<h4 class=\"green gardening-subtitle\">Gardening Information</h4>\n</div>\n<br />\n\n<div class=\"row-fluid\">\n\n\t<div class=\"col-xs-12\">\n\n\t\t<p>Mulch is a layer of either organic or inorganic material that is placed as a soil cover around landscape and garden plants. Mulch benefits the landscape by not only helping with soil moisture retention and weed reduction, it also helps reduce soil surface temperatures and enhances the aesthetics of the landscape.</p>\n\n\t\t<p>Inorganic mulches include gravel or rocks, etc., which are available in a range of sizes, colors and shapes. Some plants, particularly those that cannot tolerate excess moisture near their crowns (such as Penstemon, Eriogonum and Cacti), require gravel mulch because it does not retain moisture at the soil surface like organic mulch.</p>\n\n\t\t<p>Organic mulches can include shredded wood or bark, grass clippings, shredded leaves, sawdust, newspaper, etc. Organic mulches can improve the soil as they biodegrade, however, those that decompose rapidly can also rob plant material of nitrogen. Nitrogen is mobile within plants. When nitrogen is in short supply it is moved from older foliage to new foliage as needed, therefore nitrogen deficiency is first noticed as a yellowing in a plant\u2019s oldest foliage. When incorporating organics to the soil, additional nitrogen should be added to meet both the needs of the plant and the decomposing organic matter. The amount of nitrogen needed will depend on your soil, the plant itself, the type of mulch and the quantity used. Too much nitrogen at once can burn plants, so use a slow release type and add in light doses. (<a href=\"/fertilizing-your-garden\">See the fertilizing article</a> for information on fertilization)</p>\n\n\t\t<p>When applying mulch, it can be spread directly on the soil surface or over a weed barrier fabric. Weed barrier fabrics are more desirable when using inorganic mulches to keep the soil and rocks separate. If you choose to use a weed barrier fabric, use a product that allows water to percolate through the barrier into the soil and plant roots below; DO NOT use plastic! The depth of mulch should be 1 to 3 inches for perennials and annuals, and 3 to 4 inches for shrubs and trees. However, keep the mulch pulled back an inch or two from the base of woody shrubs or trees.</p>\n\n\t\t<p>There are many sources for purchasing mulch. The right choice depends on your landscape, its plants and your personal taste in product type and color, and budget. Most Garden Centers offer a variety of products to choose from, which can be purchased in bulk or by the bag.</p>\n\n\t\t<p>Consider your local landfill when looking for a sustainable source of landscape mulch. Many landfills now have recycling programs that are entirely separate from their other focus. Their products can be a good, cheap, sustainable source for mulch. If you\u2019re unsure, ask about their process.</p>\n\n\t\t<p><a href=\"http://www.wasatchintegrated.org/\">The Wasatch Integrated Waste Management Facility</a> in Layton sells compost and mulch products</p>\n\n\t\t<p><em><strong>NOTE:</strong></em> In the past, it was often felt that Cedar Mulch was preferable because it had natural oils that helped repel insects. However, as the demand for Cedar mulch has increased, the trees used to make cedar mulch are younger and younger and may no longer perform these repellant properties</p>\n\n\t</div>\n\n</div>\n",
  "use super::Checker;\nuse crate::{errors::Error, resolver::Resolve, ImportInfo, ModuleTypeInfo, Specifier};\nuse std::{path::PathBuf, sync::Arc};\n\npub trait Load: Send + Sync {\n    fn load(&self, base: Arc<PathBuf>, import: &ImportInfo) -> Result<ModuleTypeInfo, Error>;\n}\n\nimpl Load for Checker {\n    fn load(&self, base: Arc<PathBuf>, import: &ImportInfo) -> Result<ModuleTypeInfo, Error> {\n        let mut result = ModuleTypeInfo::default();\n        let mut errors = vec![];\n\n        let path = self\n           .resolver\n           .resolve((*base).clone(), import.span, &import.src)\n           .map(Arc::new)?;\n        let module = self.load_module(path);\n\n        if import.all {\n            result.extend(module.1.exports.clone())\n        } else {\n            for &Specifier {\n                ref local,\n                ref export,\n            } in import.items.iter()\n            {\n                let mut done = false;\n                if let Some(ty) = module.1.exports.types.get(&export) {\n                    done = true;\n                    result.types.insert(export.clone(), ty.clone());\n                }\n\n                if let Some(var) = module.1.exports.vars.get(&export) {\n                    done = true;\n                    result.vars.insert(export.clone(), var.clone());\n                }\n\n                if!done {\n                    errors.push(local.clone());\n                }\n            }\n        }\n\n        if!module.1.errors.is_empty() {\n            return Err(Error::ModuleLoadFailed {\n                span: import.span,\n                errors: module.1.errors.clone().into(),\n            });\n        }\n\n        if errors.is_empty() {\n            return Ok(result);\n        }\n\n        Err(Error::NoSuchExport {\n            span: import.span,\n            items: errors,\n        })\n    }\n}\n\nimpl<'a, T> Load for &'a T\nwhere\n    T:?Sized + Load,\n{\n    fn load(&self, base: Arc<PathBuf>, import: &ImportInfo) -> Result<ModuleTypeInfo, Error> {\n        (**self).load(base, import)\n    }\n}\n",
  "<?php\nheader('Location: install.php');\n?>",
  "package logger\n\n// Logger provides logging API\ntype Logger interface {\n\tErrorf(msg string, args...interface{})\n}\n",
  "/********************************************************************\r\n * \r\n * @author Mr Dk.\r\n * @version 2020/01/22\r\n * \r\n * Split input command into tokens.\r\n * \r\n * \r\n ********************************************************************/\r\n\r\n\r\n#include <stdlib.h>\r\n#include <string.h>\r\n#include <stdio.h>\r\n#include \"lexer.h\"\r\n\r\n\r\nint generate_token(char command[], char *tokens[], int max_token_count) {\r\n    int count = 0;\r\n    char *worker = command;\r\n    int token_len = 0;\r\n\r\n    /* not reaching the end of the command */\r\n    while (*worker!= '\\0') {\r\n        while (consume_blank(worker)) {\r\n            /* skip the blank */\r\n            worker++;\r\n        }\r\n        if ((token_len = consume_operator(worker))) {\r\n            /* valid operator */\r\n            if (count >= max_token_count ||\r\n                (tokens[count] = (char *) malloc(token_len + 1)) == NULL) {\r\n                /* failed to allocate memory for token */\r\n                return OVERFLOW;\r\n            }\r\n            /* copy the operator to the token set */\r\n            strncat(tokens[count], worker, token_len);\r\n            count++;\r\n            worker += token_len;\r\n            continue;\r\n        }\r\n        if ((token_len = consume_string(worker))) {\r\n            /* a valid string */\r\n            if (count >= max_token_count ||\r\n                (tokens[count] = (char *) malloc(token_len + 1)) == NULL)\r\n            {\r\n                return OVERFLOW;\r\n            }\r\n            /* copy the string to the token set */\r\n            /* skip the quote */\r\n            strncat(tokens[count], worker + 1, token_len - 2);\r\n            count++;\r\n            worker += token_len;\r\n            continue;\r\n        }\r\n        if ((token_len = consume_token(worker))) {\r\n            /* a valid token */\r\n            if (count >= max_token_count ||\r\n                (tokens[count] = (char *) malloc(token_len + 1)) == NULL)\r\n            {\r\n                return OVERFLOW;\r\n            }\r\n            /* copy the token to the token set */\r\n            strncat(tokens[count], worker, token_len);\r\n            count++;\r\n            worker += token_len;\r\n            continue;\r\n        }\r\n        if (*worker == '\\0') {\r\n            /* reaching the end */\r\n            break;\r\n        }\r\n\r\n        /* if the token is recognized by any previous consumer */\r\n        /* the code here will not be executed */\r\n        /* if there is an unrecognized character */\r\n        /* the following return will terminate the parsing of command */\r\n        return UNRECOGNIZED_CHAR;\r\n    }\r\n\r\n    return count;\r\n}\r\n\r\nint consume_blank(char *worker) {\r\n    if (*worker =='') {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nint consume_operator(char *worker) {\r\n    if (*worker == '|') {\r\n        return 1;\r\n    }\r\n    if (*worker == '>') {\r\n        return 1;\r\n    }\r\n    if (*worker == '<') {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nint consume_string(char *worker) {\r\n    if (*worker == '\\'' || *worker == '\"') {\r\n        char *search = worker + 1;\r\n        while (*search) {\r\n            if (*search++ == *worker) {\r\n                break;\r\n            }\r\n        }\r\n        return search - worker;\r\n    }\r\n    return 0;\r\n}\r\n\r\nint consume_token(char *worker) {\r\n    if (*worker > 32 && *worker < 127) {\r\n        char *search = worker + 1;\r\n        while (*search) {\r\n            if (*search > 32 && *search < 127 &&!consume_operator(search)) {\r\n                /* 33-126 are ASCII code for characters can be displayed */\r\n                search++;\r\n                continue;\r\n            }\r\n            break;\r\n        }\r\n        return search - worker;\r\n    }\r\n    return 0;\r\n}\r\n\r\nvoid clean_up_tokens(char *tokens[]) {\r\n    int i = 0;\r\n    while (tokens[i]!= NULL) {\r\n        free(tokens[i]);\r\n        tokens[i] = NULL;\r\n    }\r\n}",
  "# stock-chart-server\nFreecodecamp Dynamic Web Application Project: Chart the Stock Market (Back-end)\n\n### My Notes:\n\n- Using `json: true` option with request-promise messes up the data structure\nwhen working with WebSockets. After I delete that option and send the data \nreturned from request-promise directly to the client without any parsing, \nI was able to `JSON.parse()` it at the client side without any problems.\n- WS_URI: `ws://fathomless-ravine-90602.herokuapp.com/`\n- [Front-end Github Link](https://github.com/yavuzovski/stock-chart-client)\n",
  "use futures::{Future, Poll};\nuse errors::Error;\n\n/// A future that resolves into a Fixerio response.\npub struct FixerioFuture<T> {\n    inner: Box<Future<Item = T, Error = Error>>,\n}\n\nimpl<T> FixerioFuture<T> {\n    pub(crate) fn new(inner: Box<Future<Item = T, Error = Error>>) -> Self {\n        Self { inner: inner }\n    }\n}\n\nimpl<T> Future for FixerioFuture<T> {\n    type Item = T;\n    type Error = Error;\n\n    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {\n        self.inner.poll()\n    }\n}",
  "package tests;\n\nimport io.qameta.allure.Description;\nimport io.qameta.allure.Severity;\nimport io.qameta.allure.SeverityLevel;\nimport io.qameta.allure.Step;\nimport io.qameta.allure.junit4.DisplayName;\nimport lib.CoreTestCase;\nimport lib.Platform;\nimport lib.ui.ArticlePageObject;\nimport lib.ui.SearchPageObject;\nimport lib.ui.factories.ArticlePageObjectFactory;\nimport lib.ui.factories.SearchPageObjectFactory;\nimport org.junit.Assert;\nimport org.junit.Test;\n\npublic class ChangeAppConditionTests extends CoreTestCase {\n\n    @Test\n    @DisplayName(\"Change screen orientation\")\n    @Description(\"We open an article, change screen orientation and make sure article not changed after rotation\")\n    @Step(\"Starting test testChangeScreenOrientation\")\n    @Severity(value = SeverityLevel.NORMAL)\n    public void testChangeScreenOrientation() {\n\n        if (Platform.getInstance().isMW()){\n            return;\n        }\n\n        SearchPageObject SearchPageObject = SearchPageObjectFactory.get(driver);\n        SearchPageObject.initSearchInput();\n        SearchPageObject.typeSearchLine(\"Java\");\n        SearchPageObject.clickByArticleWithSubstring(\"Object-oriented programming language\");\n\n        ArticlePageObject ArticlePageObject = ArticlePageObjectFactory.get(driver);\n        String title_before_rotation = ArticlePageObject.getArticleTitle();\n        this.rotateScreenLandscape();\n        String title_after_rotation = ArticlePageObject.getArticleTitle();\n\n        Assert.assertEquals(\n                \"Article title has been changed after screen rotation\",\n                title_before_rotation,\n                title_after_rotation\n        );\n\n        this.rotateScreenPortrait();\n        String title_after_second_rotation = ArticlePageObject.getArticleTitle();\n\n        Assert.assertEquals(\n                \"Article title has been changed after screen rotation\",\n                title_before_rotation,\n                title_after_second_rotation\n        );\n    }\n\n    @Test\n    @DisplayName(\"Check opened article after sending app to the background\")\n    @Description(\"We search an article, send app to the background and make sure article still present after opening app\")\n    @Step(\"Starting test testCheckSearchArticleInBackground\")\n    @Severity(value = SeverityLevel.NORMAL)\n    public void testCheckSearchArticleInBackground() {\n\n        if (Platform.getInstance().isMW()){\n            return;\n        }\n\n        SearchPageObject SearchPageObject = SearchPageObjectFactory.get(driver);\n        SearchPageObject.initSearchInput();\n        SearchPageObject.typeSearchLine(\"Java\");\n        SearchPageObject.waitForSearchResult(\"Object-oriented programming language\");\n        this.backgroundApp(2);\n        SearchPageObject.waitForSearchResult(\"Object-oriented programming language\");\n\n    }\n}\n",
  "/*\n * Copyright \u00a9 2015 Intel Corporation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice (including the next\n * paragraph) shall be included in all copies or substantial portions of the\n * Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\n#include <assert.h>\n#include <stdbool.h>\n#include <string.h>\n#include <unistd.h>\n#include <fcntl.h>\n\n#include \"anv_private.h\"\n\n#include \"genxml/gen_macros.h\"\n#include \"genxml/genX_pack.h\"\n\nstatic inline int64_t\nclamp_int64(int64_t x, int64_t min, int64_t max)\n{\n   if (x < min)\n      return min;\n   else if (x < max)\n      return x;\n   else\n      return max;\n}\n\n#if GEN_GEN == 7 &&!GEN_IS_HASWELL\nvoid\ngen7_cmd_buffer_emit_scissor(struct anv_cmd_buffer *cmd_buffer)\n{\n   uint32_t count = cmd_buffer->state.dynamic.scissor.count;\n   const VkRect2D *scissors =  cmd_buffer->state.dynamic.scissor.scissors;\n   struct anv_state scissor_state =\n      anv_cmd_buffer_alloc_dynamic_state(cmd_buffer, count * 8, 32);\n\n   for (uint32_t i = 0; i < count; i++) {\n      const VkRect2D *s = &scissors[i];\n\n      /* Since xmax and ymax are inclusive, we have to have xmax < xmin or\n       * ymax < ymin for empty clips.  In case clip x, y, width height are all\n       * 0, the clamps below produce 0 for xmin, ymin, xmax, ymax, which isn't\n       * what we want. Just special case empty clips and produce a canonical\n       * empty clip. */\n      static const struct GEN7_SCISSOR_RECT empty_scissor = {\n        .ScissorRectangleYMin = 1,\n        .ScissorRectangleXMin = 1,\n        .ScissorRectangleYMax = 0,\n        .ScissorRectangleXMax = 0\n      };\n\n      const int max = 0xffff;\n      struct GEN7_SCISSOR_RECT scissor = {\n         /* Do this math using int64_t so overflow gets clamped correctly. */\n        .ScissorRectangleYMin = clamp_int64(s->offset.y, 0, max),\n        .ScissorRectangleXMin = clamp_int64(s->offset.x, 0, max),\n        .ScissorRectangleYMax = clamp_int64((uint64_t) s->offset.y + s->extent.height - 1, 0, max),\n        .ScissorRectangleXMax = clamp_int64((uint64_t) s->offset.x + s->extent.width - 1, 0, max)\n      };\n\n      if (s->extent.width <= 0 || s->extent.height <= 0) {\n         GEN7_SCISSOR_RECT_pack(NULL, scissor_state.map + i * 8,\n                                &empty_scissor);\n      } else {\n         GEN7_SCISSOR_RECT_pack(NULL, scissor_state.map + i * 8, &scissor);\n      }\n   }\n\n   anv_batch_emit(&cmd_buffer->batch,\n                  GEN7_3DSTATE_SCISSOR_STATE_POINTERS, ssp) {\n      ssp.ScissorRectPointer = scissor_state.offset;\n   }\n\n   if (!cmd_buffer->device->info.has_llc)\n      anv_state_clflush(scissor_state);\n}\n#endif\n\nstatic const uint32_t vk_to_gen_index_type[] = {\n   [VK_INDEX_TYPE_UINT16]                       = INDEX_WORD,\n   [VK_INDEX_TYPE_UINT32]                       = INDEX_DWORD,\n};\n\nstatic const uint32_t restart_index_for_type[] = {\n   [VK_INDEX_TYPE_UINT16]                    = UINT16_MAX,\n   [VK_INDEX_TYPE_UINT32]                    = UINT32_MAX,\n};\n\nvoid genX(CmdBindIndexBuffer)(\n    VkCommandBuffer                             commandBuffer,\n    VkBuffer                                    _buffer,\n    VkDeviceSize                                offset,\n    VkIndexType                                 indexType)\n{\n   ANV_FROM_HANDLE(anv_cmd_buffer, cmd_buffer, commandBuffer);\n   ANV_FROM_HANDLE(anv_buffer, buffer, _buffer);\n\n   cmd_buffer->state.dirty |= ANV_CMD_DIRTY_INDEX_BUFFER;\n   if (GEN_IS_HASWELL)\n      cmd_buffer->state.restart_index = restart_index_for_type[indexType];\n   cmd_buffer->state.gen7.index_buffer = buffer;\n   cmd_buffer->state.gen7.index_type = vk_to_gen_index_type[indexType];\n   cmd_buffer->state.gen7.index_offset = offset;\n}\n\nstatic VkResult\nflush_compute_descriptor_set(struct anv_cmd_buffer *cmd_buffer)\n{\n   struct anv_device *device = cmd_buffer->device;\n   struct anv_pipeline *pipeline = cmd_buffer->state.compute_pipeline;\n   struct anv_state surfaces = { 0, }, samplers = { 0, };\n   VkResult result;\n\n   result = anv_cmd_buffer_emit_samplers(cmd_buffer,\n                                         MESA_SHADER_COMPUTE, &samplers);\n   if (result!= VK_SUCCESS)\n      return result;\n   result = anv_cmd_buffer_emit_binding_table(cmd_buffer,\n                                              MESA_SHADER_COMPUTE, &surfaces);\n   if (result!= VK_SUCCESS)\n      return result;\n\n   struct anv_state push_state = anv_cmd_buffer_cs_push_constants(cmd_buffer);\n\n   const struct brw_cs_prog_data *cs_prog_data = get_cs_prog_data(pipeline);\n   const struct brw_stage_prog_data *prog_data = &cs_prog_data->base;\n\n   if (push_state.alloc_size) {\n      anv_batch_emit(&cmd_buffer->batch, GENX(MEDIA_CURBE_LOAD), curbe) {\n         curbe.CURBETotalDataLength    = push_state.alloc_size;\n         curbe.CURBEDataStartAddress   = push_state.offset;\n      }\n   }\n\n   const uint32_t slm_size = encode_slm_size(GEN_GEN, prog_data->total_shared);\n\n   struct anv_state state =\n      anv_state_pool_emit(&device->dynamic_state_pool,\n                          GENX(INTERFACE_DESCRIPTOR_DATA), 64,\n                         .KernelStartPointer = pipeline->cs_simd,\n                         .BindingTablePointer = surfaces.offset,\n                         .SamplerStatePointer = samplers.offset,\n                         .ConstantURBEntryReadLength =\n                             cs_prog_data->push.per_thread.regs,\n#if GEN_IS_HASWELL\n                         .CrossThreadConstantDataReadLength =\n                             cs_prog_data->push.cross_thread.regs",
  "export default\nclass MenuElementsEditCtrl {\n  /*@ngInject*/\n  constructor($scope, menu, MenuElementModel) {\n\n    $scope.menu = menu;\n\n    $scope.loading = true;\n    MenuElementModel.getTree({ _id: menu._id }, function (res) {\n      $scope.loading = false;\n      $scope.tree = res;\n    });\n\n    $scope.addItem = function (child) {\n      $scope.loading = true;\n      child.$insertItem(function (item) {\n        $scope.loading = false;\n      });\n    };\n\n    $scope.move = function (item, before, index) {\n      $scope.loading = true;\n      item.$moveItem(before, index, function () {\n        $scope.loading = false;\n      });\n    };\n\n    $scope.saveItem = function (item) {\n      var itm = new MenuElementModel(item);\n      item.$loading = true;\n      delete itm.$loading;\n      delete itm.children;\n      delete itm.id;\n      delete itm.depth;\n      delete itm._w;\n      delete itm.path;\n      itm.$save(function () {\n        item.$loading = false;\n      });\n    };\n\n\n    $scope.$watch('menu.menuType', (val, oldVal) => {\n      if (!val ||!oldVal) {\n        return;\n      }\n      $scope.menu.$save();\n    });\n\n    $scope.remove = function (child) {\n      function walk(target) {\n        var children = target.children,\n          i;\n        if (children) {\n          i = children.length;\n          while (i--) {\n            if (children[i]._id == child._id) {\n              return children.splice(i, 1);\n            } else {\n              walk(children[i]);\n            }\n          }\n        }\n      }\n\n      $scope.loading = true;\n      child.$delete(function () {\n        $scope.loading = false;\n        walk($scope.tree);\n        if (!$scope.$$phase) {\n          $scope.$apply();\n        }\n      });\n    };\n  }\n}",
  "import { listSystem } from '../src/listSystem'\nimport { init, getValue, publish, subscribe } from '@virtuoso.dev/urx'\n\ndescribe('list engine', () => {\n  describe('basics', () => {\n    it('returns empty rows by default', () => {\n      const { listState } = init(listSystem)\n      expect(getValue(listState)).toMatchObject({ items: [] })\n    })\n\n    it('returns a probe row when location / dimensions are reported', () => {\n      const { propsReady, listState, scrollTop, viewportHeight, totalCount } = init(listSystem)\n      publish(totalCount, 1000)\n      publish(propsReady, true)\n      publish(scrollTop, 0)\n      publish(viewportHeight, 200)\n      expect(getValue(listState)).toMatchObject({\n        items: [{ index: 0, size: 0, offset: 0 }],\n      })\n    })\n\n    it('returns the full set if a default item height is set', () => {\n      const { defaultItemHeight, propsReady, listState, scrollTop, viewportHeight, totalCount } = init(listSystem)\n\n      publish(scrollTop, 0)\n      publish(totalCount, 1000)\n      publish(defaultItemHeight, 30)\n      publish(propsReady, true)\n\n      publish(viewportHeight, 200)\n      // 7 items should be rendered\n      expect(getValue(listState).items).toHaveLength(7)\n    })\n\n    it('returns the full set if a an initialItemCount is set', () => {\n      const { initialItemCount, listState, propsReady } = init(listSystem)\n\n      publish(initialItemCount, 10)\n      publish(propsReady, true)\n      expect(getValue(listState).items).toHaveLength(10)\n    })\n\n    it('returns the full set if a fixed item height is set', () => {\n      const { fixedItemHeight, propsReady, listState, scrollTop, viewportHeight, totalCount } = init(listSystem)\n\n      publish(scrollTop, 0)\n      publish(totalCount, 1000)\n      publish(fixedItemHeight, 30)\n      publish(propsReady, true)\n\n      publish(viewportHeight, 200)\n      expect(getValue(listState).items).toHaveLength(7)\n    })\n\n    it('updates the rows when new sizes are reported', () => {\n      const { propsReady, sizeRanges, listState, scrollTop, viewportHeight, totalCount } = init(listSystem)\n\n      const sub = jest.fn()\n      subscribe(listState, sub)\n\n      publish(scrollTop, 0)\n      publish(viewportHeight, 200)\n      publish(totalCount, 1000)\n      publish(propsReady, true)\n\n      // probe item is sent\n      expect(getValue(listState)).toMatchObject({\n        items: [{ index: 0, size: 0, offset: 0 }],\n      })\n      publish(sizeRanges, [{ startIndex: 0, endIndex: 0, size: 30 }])\n\n      // 7 items should be rendered\n      expect(getValue(listState).items).toHaveLength(7)\n\n      expect(getValue(listState)).toMatchObject({\n        offsetTop: 0,\n        offsetBottom: 29790,\n      })\n\n      // check if we don't render too much due to streams diamond shapes\n      expect(sub).toHaveBeenCalledTimes(3)\n    })\n  })\n\n  describe('initial index', () => {\n    it('starts from a specified location', (done) => {\n      const INITIAL_INDEX = 300\n      const SIZE = 30\n      const { propsReady, initialTopMostItemIndex, listState, scrollTop, scrollTo, viewportHeight, totalCount, sizeRanges } = init(\n        listSystem\n      )\n\n      publish(initialTopMostItemIndex, INITIAL_INDEX)\n      publish(scrollTop, 0)\n      publish(viewportHeight, 200)\n      publish(totalCount, 1000)\n      publish(propsReady, true)\n      expect(getValue(listState)).toMatchObject({\n        items: [{ index: INITIAL_INDEX, size: 0, offset: 0 }],\n      })\n\n      const sub = jest.fn()\n      subscribe(scrollTo, sub)\n\n      publish(sizeRanges, [{ startIndex: INITIAL_INDEX, endIndex: INITIAL_INDEX, size: SIZE }])\n\n      expect(getValue(listState).items).toHaveLength(0)\n\n      setTimeout(() => {\n        expect(sub).toHaveBeenCalledWith({\n          top: INITIAL_INDEX * SIZE,\n          behavior: 'auto',\n        })\n\n        // the UI responds by publishing back through the scrollTop stream\n        publish(scrollTop, INITIAL_INDEX * SIZE)\n        expect(getValue(listState).items).toHaveLength(7)\n        done()\n      })\n    })\n\n    it('starts from a specified location with fixed item size', (done) => {\n      const INITIAL_INDEX = 300\n      const SIZE = 30\n      const { fixedItemHeight, propsReady, initialTopMostItemIndex, listState, scrollTop, scrollTo, viewportHeight, totalCount } = init(\n        listSystem\n      )\n\n      publish(initialTopMostItemIndex, INITIAL_INDEX)\n      publish(scrollTop, 0)\n      publish(viewportHeight, 200)\n      publish(totalCount, 1000)\n      publish(propsReady, true)\n      publish(fixedItemHeight, SIZE)\n      expect(getValue(listState)).toMatchObject({\n        items: [],\n      })\n\n      const sub = jest.fn()\n      subscribe(scrollTo, sub)\n\n      expect(getValue(listState).items).toHaveLength(0)\n\n      setTimeout(() => {\n        expect(sub).toHaveBeenCalledWith({\n          top: INITIAL_INDEX * SIZE,\n          behavior: 'auto',\n        })\n\n        // the UI responds by publishing back through the scrollTop stream\n        publish(scrollTop, INITIAL_INDEX * SIZE)\n        expect(getValue(listState).items).toHaveLength(7)\n        done()\n      })\n    })\n  })\n\n  describe('scroll to index', () => {\n    let sub: any\n    let sti: any\n    let sr: any\n\n    const INDEX = 300\n    const SIZE = 30\n    const VIEWPORT = 200\n    beforeEach(() => {\n      const { propsReady, scrollToIndex, scrollTop, scrollTo, viewportHeight, totalCount, sizeRanges } = init(listSystem)\n\n      sti = scrollToIndex\n      sr = sizeRanges\n      publish(scrollTop, 0)\n      publish(viewportHeight, VIEWPORT)\n      publish(totalCount, 1000)\n\n      sub = jest.fn()\n      subscribe(scrollTo, sub)\n\n      publish(sizeRanges, [{ startIndex: 0, endIndex: 0, size: SIZE }])\n      publish(scrollToIndex, INDEX)\n      publish(propsReady, true)\n\n      expect(sub).toHaveBeenCalledWith({\n        top: INDEX * SIZE,\n        behavior: 'auto',\n      })\n    })\n\n    it('navigates to index', () => {\n      publish(sti, INDEX)\n\n      expect(sub).toHaveBeenCalledWith({\n        top: INDEX * SIZE,\n        behavior: 'auto',\n      })\n    })\n\n    it('navigates to index with center', () => {\n      publish(sti, { index: INDEX, align: 'center' })\n\n      expect(sub).toHaveBeenCalledWith({\n        top: INDEX * SIZE - VIEWPORT / 2 + SIZE / 2,\n        behavior: 'auto',\n      })\n    })\n\n    it('navigates to index with end', () => {\n      publish(sti, { index: INDEX, align: 'end' })\n\n      expect(sub).toHaveBeenCalledWith({\n        top: INDEX * SIZE - VIEWPORT + SIZE,\n        behavior: 'auto',\n      })\n    })\n\n    it('readjusts once when new sizes are reported', (done) => {\n      const DEVIATION = 20\n      publish(sti, { index: INDEX, align: 'end' })\n\n      expect(sub).toHaveBeenCalledWith({\n        top: INDEX * SIZE - VIEWPORT + SIZE,\n        behavior: 'auto',\n      })\n\n      publish(sr, [{ startIndex: INDEX - 1, endIndex: INDEX - 1, size: SIZE + DEVIATION }])\n\n      setTimeout(() => {\n        expect(sub).toHaveBeenCalledWith({\n          top: INDEX * SIZE - VIEWPORT + SIZE + DEVIATION,\n          behavior: 'auto',\n        })\n        done()\n",
  "#!/usr/bin/python3\n\nimport json\nimport re\nimport time\nfrom os import environ\nfrom pathlib import Path\n\nfrom docopt import docopt\nfrom pythx import Client\nfrom pythx.middleware.toolname import ClientToolNameMiddleware\n\nfrom brownie import project\nfrom brownie._cli.__main__ import __version__\nfrom brownie._config import ARGV, _update_argv_from_docopt\nfrom brownie._gui import Gui\nfrom brownie.exceptions import ProjectNotFound\nfrom brownie.utils import color, notify\n\n__doc__ = f\"\"\"Usage: brownie analyze [options] [--async | --interval=<sec>]\n\nOptions:\n  --gui                     Launch the Brownie GUI after analysis\n  --full                    Perform a full scan (MythX Pro required)\n  --interval=<sec>          Result polling interval in seconds [default: 3]\n  --async                   Do not poll for results, print job IDs and exit\n  --access-token=<string>   The JWT access token from the MythX dashboard\n  --eth-address=<string>    The address of your MythX account\n  --password=<string>       The password of your MythX account\n  --help -h                 Display this message\n\nUse the \"analyze\" command to submit your project to the MythX API for\nsmart contract security analysis.\n\n\nTo authenticate with the MythX API, it is recommended that you provide\nthe MythX JWT access token. It can be obtained on the MythX dashboard\nsite in the profile section. They should be passed through the environment\nvariable \"MYTHX_ACCESS_TOKEN\". If that is not possible, it can also be\npassed explicitly with the respective command line option.\n\nAlternatively, you have to provide a username/password combination. It\nis recommended to pass them through the environment variables as\n\"MYTHX_ETH_ADDRESS\" and \"MYTHX_PASSWORD\".\n\nYou can also choose to not authenticate and submit your analyses as a free\ntrial user. No registration required! To see your past analyses, get access\nto deeper vulnerability detection, and a neat dashboard, register at\nhttps://mythx.io/. Any questions? Hit up dominik.muhs@consensys.net or contact\nus on the website!\n\"\"\"\n\n\nSEVERITY_COLOURS = {\"LOW\": \"green\", \"MEDIUM\": \"yellow\", \"HIGH\": \"red\"}\nDASHBOARD_BASE_URL = \"https://dashboard.mythx.io/#/console/analyses/\"\nTRIAL_PRINTED = False\nBYTECODE_ADDRESS_PATCH = re.compile(r\"__\\w{38}\")\nDEPLOYED_ADDRESS_PATCH = re.compile(r\"__\\$\\w{34}\\$__\")\n\n\ndef construct_source_dict_from_artifact(artifact):\n    return {\n        artifact.get(\"sourcePath\"): {\n            \"source\": artifact.get(\"source\"),\n            # \"ast\": artifact.get(\"ast\"),  # NOTE: Reenable once container issue fixed\n        }\n    }\n\n\ndef construct_request_from_artifact(artifact):\n    global BYTECODE_ADDRESS_PATCH\n\n    bytecode = artifact.get(\"bytecode\")\n    deployed_bytecode = artifact.get(\"deployedBytecode\")\n    source_map = artifact.get(\"sourceMap\")\n    deployed_source_map = artifact.get(\"deployedSourceMap\")\n\n    bytecode = re.sub(BYTECODE_ADDRESS_PATCH, \"0\" * 40, bytecode)\n    deployed_bytecode = re.sub(DEPLOYED_ADDRESS_PATCH, \"0\" * 40, deployed_bytecode)\n\n    source_list = artifact.get(\"allSourcePaths\")\n    return {\n        \"contract_name\": artifact.get(\"contractName\"),\n        \"bytecode\": bytecode if bytecode else None,\n        \"deployed_bytecode\": deployed_bytecode if deployed_bytecode else None,\n        \"source_map\": source_map if source_map else None,\n        \"deployed_source_map\": deployed_source_map if deployed_source_map else None,\n        \"sources\": construct_source_dict_from_artifact(artifact),\n        \"source_list\": source_list if source_list else None,\n        \"main_source\": artifact.get(\"sourcePath\"),\n        \"solc_version\": artifact[\"compiler\"][\"version\"].replace(\"Version:\", \"\").strip(),\n        \"analysis_mode\": \"full\" if ARGV[\"full\"] else \"quick\",\n    }\n\n\ndef get_mythx_client():\n    # if both eth address and username are None,\n    if ARGV[\"access-token\"]:\n        authenticated = True\n        auth_args = {\"access_token\": ARGV[\"access-token\"]}\n    elif ARGV[\"eth-address\"] and ARGV[\"password\"]:\n        authenticated = True\n        auth_args = {\"eth_address\": ARGV[\"eth-address\"], \"password\": ARGV[\"password\"]}\n    elif environ.get(\"MYTHX_ACCESS_TOKEN\"):\n        authenticated = True\n        auth_args = {\"access_token\": environ.get(\"MYTHX_ACCESS_TOKEN\")}\n    elif environ.get(\"MYTHX_ETH_ADDRESS\") and environ.get(\"MYTHX_PASSWORD\"):\n        authenticated = True\n        auth_args = {\n            \"eth_address\": environ.get(\"MYTHX_ETH_ADDRESS\"),\n            \"password\": environ.get(\"MYTHX_PASSWORD\"),\n        }\n    else:\n        authenticated = False\n        auth_args = {\n            \"eth_address\": \"0x0000000000000000000000000000000000000000\",\n            \"password\": \"trial\",\n        }\n\n    return (\n        Client(\n            **auth_args,\n            middlewares=[ClientToolNameMiddleware(name=\"brownie-{}\".format(__version__))],\n        ),\n        authenticated,\n    )\n\n\ndef get_contract_locations(build):\n    return {d[\"sourcePath\"]: d[\"contractName\"] for _, d in build.items()}\n\n\ndef get_contract_types(build):\n    contracts = set([n for n, d in build.items() if d[\"type\"] == \"contract\"])\n    libraries = set([n for n, d in build.items() if d[\"type\"] == \"library\"])\n\n    return contracts, libraries\n\n\ndef assemble_contract_jobs(build, contracts):\n    job_data = {}\n    for contract in contracts:\n        artifact = build.get(contract)\n        job_data[contract] = construct_request_from_artifact(artifact)\n    return job_data\n\n\ndef update_contract_jobs_with_dependencies(build, contracts, libraries, job_data):\n    for lib in libraries:\n        artifact = build.get(lib)\n        source_dict = construct_source_dict_from_artifact(artifact)\n        deps = set(build.get_dependents(lib))\n        dep_contracts = contracts.intersection(deps)\n        for contract in dep_contracts:\n            job_data[contract][\"sources\"].update(source_dict)\n\n    return job_data\n\n\ndef send_to_mythx(job_data, client, authenticated):\n    job_uuids = []\n    for c, (contract_name, analysis_request) in enumerate(job_data.items(), start=1):\n        resp = client.analyze(**analysis_request)\n        if ARGV[\"async\"] and authenticated:\n            print(\n                \"The analysis for {} can be found at {}{}\".format(\n                    contract_name, DASHBOARD_BASE_URL, resp.uuid\n                )\n            )\n        else:\n            print(\n                f\"Submitted analysis {color['value']}{resp.uuid}{color} for \"\n                f\"contract {color['contract']}{contract_name}{color} ({c}/{len(job_data)})\"\n            )\n        job_uuids.append(resp.uuid)\n\n    return job_uuids\n\n\ndef wait_for_jobs(job_uuids, client):\n    for uuid in job_uuids:\n        while not client.analysis_ready(uuid):\n            time.sleep(int(ARGV[\"interval\"]))\n\n\ndef print_trial_message(issue):\n    global TRIAL_PRINTED\n    if issue.swc_id == \"\" or issue.severity.name in (\"UNKNOWN\", \"NONE\"):\n        if not TRIAL_PRINTED:\n            print(f\"\\n{issue.description_short}\")\n            print(f\"{issue.description_long}\\n\")\n            TRIAL_PRINTED = True\n        return True\n    return False\n\n\ndef update_report(",
  "#!/bin/bash\n# ref: https://shellscript.sunone.me/parameter.html\n\nCMDNAME=`basename $0`\n\nwhile getopts ab:c: OPT\ndo\n  case $OPT in\n    \"a\" ) FLG_A=\"TRUE\" ;;\n    \"b\" ) FLG_B=\"TRUE\" ; VALUE_B=\"$OPTARG\" ;;\n    \"c\" ) FLG_C=\"TRUE\" ; VALUE_C=\"$OPTARG\" ;;\n    * ) echo \"Usage: $CMDNAME [-a] [-b VALUE] [-c VALUE]\" 1>&2\n      exit 1 ;;\n  esac\ndone\n\nif [ \"$FLG_A\" = \"TRUE\" ]; then\n  echo 'pass a flag'\nfi\n\nif [ \"$FLG_B\" = \"TRUE\" ]; then\n  echo 'pass b flag'\n  echo \"with value: $VALUE_B\"\nfi\n\nif [ \"$FLG_C\" = \"TRUE\" ]; then\n  echo 'pass c flag'\n  echo \"with value: $VALUE_C\"\nfi\n\nexit 0\n",
  "/*\n * Copyright 2015 Anton Tananaev (anton@traccar.org)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.traccar.database;\n\nimport org.jboss.netty.channel.Channel;\nimport org.traccar.Protocol;\nimport org.traccar.model.Command;\nimport org.traccar.model.CommandType;\n\nimport java.net.SocketAddress;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.List;\n\npublic class ActiveDevice {\n\n    private final long deviceId;\n    private final Protocol protocol;\n    private final Channel channel;\n    private final SocketAddress remoteAddress;\n\n    public ActiveDevice(long deviceId, Protocol protocol, Channel channel, SocketAddress remoteAddress) {\n        this.deviceId = deviceId;\n        this.protocol = protocol;\n        this.channel = channel;\n        this.remoteAddress = remoteAddress;\n    }\n\n    public Channel getChannel() {\n        return channel;\n    }\n\n    public long getDeviceId() {\n        return deviceId;\n    }\n\n    public Collection<CommandType> getCommandTypes() {\n        List<CommandType> result = new ArrayList<>();\n\n        for (String commandKey : protocol.getSupportedCommands()) {\n            result.add(new CommandType(commandKey));\n        }\n\n        return result;\n    }\n\n    public void sendCommand(Command command) {\n        protocol.sendCommand(this, command);\n    }\n\n    public void write(Object message) {\n        getChannel().write(message, remoteAddress);\n    }\n\n}\n",
  "\ufeffusing Microsoft.Practices.Unity;\nusing DynamicForms.ConfigurationApi.Infrastructure.ConfigurationCogs;\n\nnamespace DynamicForms.ConfigurationApi.Infrastructure.DependencyRegistrations\n{\n    public class ServiceRegistrations : IDependencyRegistrations\n    {\n        public void Register(IUnityContainer container)\n        {\n            container.RegisterType<IFormConfigurationService, FormConfigurationService>();\n        }\n    }\n}",
  "/*\n ***************************************************************************\n * MediaTek Inc.\n *\n * All rights reserved. source code is an unpublished work and the\n * use of a copyright notice does not imply otherwise. This source code\n * contains confidential trade secret material of MediaTek. Any attemp\n * or participation in deciphering, decoding, reverse engineering or in any\n * way altering the source code is stricitly prohibited, unless the prior\n * written consent of MediaTek, Inc. is obtained.\n ***************************************************************************\n\n\tModule Name:\n\thdev_ctrl.c\n*/\n#include\t\"rt_config.h\"\n#include \"hdev/hdev.h\"\n\n/*\n* local function\n*/\n#ifdef DBDC_MODE\nstatic VOID hcGetBandTypeName(UCHAR Type, UCHAR *Str, UINT32 max_len)\n{\n\tswitch (Type) {\n\tcase DBDC_TYPE_WMM:\n\t\tsnprintf(Str, max_len, \"%s\", \"WMM\");\n\t\tbreak;\n\n\tcase DBDC_TYPE_MGMT:\n\t\tsnprintf(Str, max_len, \"%s\", \"MGMT\");\n\t\tbreak;\n\n\tcase DBDC_TYPE_BSS:\n\t\tsnprintf(Str, max_len, \"%s\", \"BSS\");\n\t\tbreak;\n\n\tcase DBDC_TYPE_MBSS:\n\t\tsnprintf(Str, max_len, \"%s\", \"MBSS\");\n\t\tbreak;\n\n\tcase DBDC_TYPE_REPEATER:\n\t\tsnprintf(Str, max_len, \"%s\", \"REPEATER\");\n\t\tbreak;\n\n\tcase DBDC_TYPE_MU:\n\t\tsnprintf(Str, max_len, \"%s\", \"MU\");\n\t\tbreak;\n\n\tcase DBDC_TYPE_BF:\n\t\tsnprintf(Str, max_len, \"%s\", \"BF\");\n\t\tbreak;\n\n\tcase DBDC_TYPE_PTA:\n\t\tsnprintf(Str, max_len, \"%s\", \"PTA\");\n\t\tbreak;\n\t}\n}\n#endif\n\n/*\n *\n*/\n/*Only this function can use pAd*/\nINT32 hdev_ctrl_init(RTMP_ADAPTER *pAd)\n{\n\tstruct hdev_ctrl  *ctrl = NULL;\n\tUINT32  ret;\n\n\tret  =  os_alloc_mem(NULL, (UCHAR **)&ctrl, sizeof(struct hdev_ctrl));\n\n\tif (ctrl == NULL) {\n\t\tMTWF_LOG(DBG_CAT_HW, DBG_SUBCAT_ALL, DBG_LVL_TRACE,\n\t\t\t\t (\"%s(): Allocate Hardware device Configure  fail!!\\n\", __func__));\n\t\treturn -1;\n\t}\n\n\tos_zero_mem(ctrl, sizeof(struct hdev_ctrl));\n\tctrl->priv  = (VOID *)pAd;\n\tpAd->hdev_ctrl = (VOID *)ctrl;\n\treturn 0;\n}\n\n/*\n*\n*/\nVOID hdev_resource_init(void *hdev_ctrl)\n{\n\tstruct hdev_ctrl *ctrl = hdev_ctrl;\n\tstruct _RTMP_ADAPTER *ad = ctrl->priv;\n\n\t/*initial hardware resource*/\n\tHdevHwResourceInit(ctrl);\n\t/*initial resource*/\n\t/*hook hif*/\n#if defined(RTMP_MAC_PCI)\n\tif (IS_PCIE_INF(ad) || IS_RBUS_INF(ad))\n\t\tctrl->hif = &ad->PciHif;\n#endif /*RTMP_MAC_PCI*/\n\tctrl->cookie = ad->OS_Cookie;\n\tctrl->mcu_ctrl = &ad->MCUCtrl;\n\tctrl->arch_ops = &ad->archOps;\n}\n\n/*\n *\n*/\nVOID hdev_ctrl_exit(RTMP_ADAPTER *pAd)\n{\n\tstruct hdev_ctrl *ctrl = pAd->hdev_ctrl;\n\t/*exist hw resource*/\n\tHdevHwResourceExit(ctrl);\n\t/*exist hdevcfg*/\n\tpAd->hdev_ctrl = NULL;\n\tos_free_mem(ctrl);\n}\n\n/*\n *\n*/\nVOID HcDevExit(RTMP_ADAPTER *pAd)\n{\n\tstruct hdev_ctrl *ctrl = pAd->hdev_ctrl;\n\tUCHAR i;\n\tHD_RESOURCE_CFG *pHwResourceCfg = &ctrl->HwResourceCfg;\n\n\tfor (i = 0; i < pHwResourceCfg->concurrent_bands; i++)\n\t\tHdevExit(ctrl, i);\n}\n\n/*\n*\n*/\nINT32 HcAcquireRadioForWdev(RTMP_ADAPTER *pAd, struct wifi_dev *wdev)\n{\n\tINT32 ret = HC_STATUS_OK;\n\tstruct hdev_ctrl *ctrl = pAd->hdev_ctrl;\n\tstruct radio_dev *rdev = NULL;\n\tstruct hdev_obj *obj = wdev->pHObj;\n\n\trdev = RcAcquiredBandForObj(ctrl, obj, wdev->wdev_idx, wdev->PhyMode, wdev->channel, wdev->wdev_type);\n\n\t/*correct wdev configure, if configure is not sync with hdev */\n\tif (!wmode_band_equal(wdev->PhyMode, RcGetPhyMode(rdev))) {\n\t\twdev->PhyMode = RcGetPhyMode(rdev);\n\t\twdev->channel = RcGetChannel(rdev);\n\t}\n\n\tBuildChannelList(pAd, wdev);\n\t/*temporal set, will be repaced by HcGetOmacIdx*/\n\twdev->OmacIdx = obj->OmacIdx;\n\t/* Initialize the pDot11H of wdev */\n\tUpdateDot11hForWdev(wdev->sys_handle, wdev, TRUE);\n\t/*re-init operation*/\n\twlan_operate_init(wdev);\n\treturn ret;\n}\n\n/*\n*\n*/\nINT32 HcReleaseRadioForWdev(RTMP_ADAPTER *pAd, struct wifi_dev *wdev)\n{\n\tINT32 ret = 0;\n\tstruct hdev_ctrl *ctrl = pAd->hdev_ctrl;\n\tstruct hdev_obj *obj = wdev->pHObj;\n\n\tOS_SPIN_LOCK(&obj->RefCntLock);\n\n\tif (obj->RefCnt > 0) {\n\t\tMTWF_LOG(DBG_CAT_HW, DBG_SUBCAT_ALL, DBG_LVL_OFF,\n\t\t\t\t (\"%s(): there are other link reference the Obj\\n\", __func__));\n\t\tOS_SPIN_UNLOCK(&obj->RefCntLock);\n\t\treturn ret;\n\t}\n\n\tOS_SPIN_UNLOCK(&obj->RefCntLock);\n\tRcReleaseBandForObj(ctrl, obj);\n\treturn ret;\n}\n\n/*\n*\n*/\nUCHAR HcGetBandByWdev(struct wifi_dev *wdev)\n{\n\tUCHAR BandIdx = 0;\n\tstruct hdev_obj *obj;\n\tstruct _RTMP_ADAPTER *ad = (struct _RTMP_ADAPTER *)wdev->sys_handle;\n\n\tASSERT(wdev);\n\t/* exit from here if wdev is null */\n\tif (!wdev)\n\t\treturn 0;\n\n\tobj = wdev->pHObj;\n\tif (hdev_obj_state_ready(obj))\n\t\tBandIdx = RcGetBandIdx(obj->rdev);\n\telse {\n\t\tif ((ad->CommonCfg.dbdc_mode) && (!BOARD_IS_5G_ONLY(ad))) {\n\t\t\tif (WMODE_CAP_5G(wdev->PhyMode))\n\t\t\t\tBandIdx = DBDC_BAND1;\n\t\t\telse\n\t\t\t\tBandIdx = DBDC_BAND0;\n\t\t} else\n\t\t\tBandIdx = 0;\n\t}\n\n\treturn BandIdx;\n}\n\n/*\n*\n*/\nVOID HcSetRadioCurStatByWdev(struct wifi_dev *wdev, PHY_STATUS CurStat)\n{\n\tstruct hdev_obj *obj = wdev->pHObj;\n\n\tif (hdev_obj_state_ready(obj))\n\t\tRcSetRadioCurStat(obj->rdev, CurStat);\n\telse\n\t\tMTWF_LOG(DBG_CAT_HW, DBG_SUBCAT_ALL, DBG_LVL_ERROR,\n\t\t\t(\"%s(): obj is not ready!!\\n\", __func__));\n}\n\n/*\n*\n*/\nVOID HcSetRadioCurStatByChannel(RTMP_ADAPTER *pAd",
  "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <!-- Force latest IE rendering engine or ChromeFrame if installed -->\n  <!--[if IE]><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"><![endif]-->\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n  <title>{%- block title-%}{%- endblock -%}</title>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n  <meta name=\"description\" content=\"{%- block description-%}{%- endblock -%}\" />\n  <meta name=\"copyright\" content=\"{{copy()}}\" />\n  <link rel=\"icon\" href=\"/blacksheep-favicon-white.png\" type=\"image/x-icon\" />\n  <link href=\"vendor/fontawesome-free/css/all.min.css\" rel=\"stylesheet\" type=\"text/css\">\n  <link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.15.10/styles/default.min.css\">\n  <script src=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.15.10/highlight.min.js\"></script>\n  {%- block css -%}{%- endblock -%}\n</head>\n<body id=\"page-top\">\n  <script>hljs.initHighlightingOnLoad()</script>\n  <!-- Navigation -->\n  <nav class=\"navbar navbar-expand-lg bg-secondary text-uppercase fixed-top\" id=\"mainNav\">\n    <div class=\"container\">\n      <a class=\"navbar-brand js-scroll-trigger\" href=\"#page-top\">Cesar Costa</a>\n      <button class=\"navbar-toggler navbar-toggler-right text-uppercase font-weight-bold bg-primary text-white rounded\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        Menu\n        <i class=\"fas fa-bars\"></i>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n        <ul class=\"navbar-nav ml-auto\">\n          <li class=\"nav-item mx-0 mx-lg-1\">\n            <a class=\"nav-link py-3 px-0 px-lg-3 rounded js-scroll-trigger\" href=\"#getting-started\">Come\u00e7ando</a>\n          </li>\n          <li class=\"nav-item mx-0 mx-lg-1\">\n            <a class=\"nav-link py-3 px-0 px-lg-3 rounded js-scroll-trigger\" href=\"#about\">Sobre</a>\n          </li>\n          <li class=\"nav-item mx-0 mx-lg-1\">\n            <a class=\"nav-link py-3 px-0 px-lg-3 rounded js-scroll-trigger\" href=\"#contact\">Contato</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n\n  <div id=\"content\">\n    {%- block body -%}{%- endblock -%}\n  </div>\n\n  <script src=\"vendor/jquery/jquery.min.js\"></script>\n  <script src=\"vendor/jquery-easing/jquery.easing.js\"></script>\n  <script src=\"vendor/bootstrap/js/bootstrap.bundle.min.js\"></script>\n\n  {%- block js -%}{%- endblock -%}\n  {% include \"partial/footer.html\" %}\n</body>\n</html>\n",
  "\"use strict\";\n\nfunction* commands(vnet, config) {\n    for (let key of Object.keys(vnet)) {\n        let item = vnet[key];\n        item.name = item.name || key;\n        let resourceGroup = item.resource_group || config.resource_group;\n        let location = item.location || config.location;\n        let addressPrefixes = item.address_prefixes.join(',');\n\n        yield `azure network vnet create --resource-group ${resourceGroup} --name ${item.name} --location ${location} --address-prefixes ${addressPrefixes}`;\n        yield* subnetCommands(item, resourceGroup);\n    }\n}\n\nfunction* subnetCommands(vnet, resourceGroup) {\n    for (let key of Object.keys(vnet.subnet)) {\n        let item = vnet.subnet[key];\n        item.name = item.name || key;\n        let addressPrefix = item.address_prefix;\n        yield `azure network vnet subnet create --resource-group ${resourceGroup} --vnet-name ${vnet.name} --name ${item.name} --address-prefix ${addressPrefix}`;\n    }\n}\n\nmodule.exports = { commands };\n",
  "{{- if ne.Site.Params.isCHM true }} {{- partial \"menu.html\". -}} {{- end }}\n",
  "# -*- coding: utf-8 -*-\n\"\"\"@package Methods.Machine.Slot.check\nCheck that the Slot is correct\n@date Created on Wed Feb 04 12:47:19 2015\n@copyright (C) 2015-2016 EOMYS ENGINEERING.\n@author pierre_b\n\"\"\"\n\nfrom pyleecan.Methods import ParentMissingError\n\n\ndef is_outwards(self):\n    \"\"\"Return if the slot is outwards (on an external lamination) or inwards\n    (on an internal lamination)\n\n    Parameters\n    ----------\n    self : Slot\n        A Slot object\n\n    Returns\n    -------\n    is_outwards: bool\n        True if the Lamination is not internal and false if not\n    \"\"\"\n    if self.parent is not None:\n        return self.parent.is_outwards()\n    else:\n        raise ParentMissingError(\n            \"Error: The slot is not inside a Lamination or a Notch\"\n        )\n",
  "import React from'react';\nimport { useHistory } from'react-router-dom';\n\nimport { Toast } from 'primereact/toast';\nimport { MenuItem } from 'primereact/components/menuitem/MenuItem';\nimport { BreadCrumb } from 'primereact/breadcrumb';\n\nimport { TApiCallState } from \"../../utils/ApiCallState\";\nimport { EUIAdminPortalResourcePaths, GlobalElementStyles } from '../../utils/Globals';\nimport { UserContext } from \"../../components/APContextProviders/APUserContextProvider\";\nimport { MaintainApiProducts } from '../components/MaintainApiProducts/MaintainApiProducts';\n\nimport \"../../pages/Pages.css\";\n\nexport const ManageOrgAssetMaintenanceApiProductsPage: React.FC = () => {\n  // const ComponentName = 'ManageOrgAssetMaintenanceApiProductsPage';\n\n  const [userContext] = React.useContext(UserContext);  \n\n  const toast = React.useRef<any>(null);\n  const toastLifeSuccess: number = 1000;\n  const toastLifeError: number = 10000;\n  const history = useHistory();\n  const navigateTo = (path: string): void => { history.push(path); }\n  const [breadCrumbItemList, setBreadCrumbItemList] = React.useState<Array<MenuItem>>([]);\n\n  const onSuccess = (apiCallStatus: TApiCallState) => {\n    toast.current.show({ severity:'success', summary: 'Success', detail: `${apiCallStatus.context.userDetail}`, life: toastLifeSuccess });\n  }\n\n  const onError = (apiCallStatus: TApiCallState) => {\n    toast.current.show({ severity: 'error', summary: 'Error', detail: `${apiCallStatus.context.userDetail}`, life: toastLifeError });\n  }\n\n  const renderBreadcrumbs = (orgDisplayName: string) => {\n    const breadcrumbItems: Array<MenuItem> = [\n      { \n        label: `Organization: ${orgDisplayName}`\n      },\n      { \n        label: 'Asset Maintenance'\n      },\n      { \n        label: 'API Products',\n        style: GlobalElementStyles.breadcrumbLink(),\n        command: () => { navigateTo(EUIAdminPortalResourcePaths.ManageOrganizationAssetMaintenanceApiProducts) }\n      }\n    ];\n    breadCrumbItemList.forEach( (item: MenuItem) => {\n      breadcrumbItems.push({\n       ...item,\n        style: (item.command? GlobalElementStyles.breadcrumbLink() : {})\n      });\n    });\n    return (\n      <React.Fragment>\n        <BreadCrumb model={breadcrumbItems} />\n      </React.Fragment>\n    )\n  }\n\n  return (\n    <div className=\"ap-pages\">\n      <Toast ref={toast} />\n      {userContext.runtimeSettings.currentOrganizationEntityId && renderBreadcrumbs(userContext.runtimeSettings.currentOrganizationEntityId.displayName)}\n      {userContext.runtimeSettings.currentOrganizationEntityId &&\n        <MaintainApiProducts\n          organizationEntityId={userContext.runtimeSettings.currentOrganizationEntityId}\n          onSuccess={onSuccess} \n          onError={onError}\n          setBreadCrumbItemList={setBreadCrumbItemList}\n        />\n      }\n    </div>\n  );\n}\n",
  "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ex-default',\n  templateUrl: './default.component.html',\n  styleUrls: ['./default.component.scss']\n})\nexport class ExDefaultComponent {\n  model1 = 0;\n  model2 = 60;\n}\n",
  "FROM alpine:latest\n\nENV CADDY_VERSION=0.11.0\n\nCOPY plugins.txt /plugins.txt\n\nRUN apk update && apk upgrade && apk add --no-cache go git sed musl-dev ca-certificates && \\\n    git clone --single-branch --branch \"v${CADDY_VERSION}\" https://github.com/mholt/caddy.git /root/go/src/github.com/mholt/caddy && \\\n    sed -i '/This is where other plugins get plugged in/r /plugins.txt' /root/go/src/github.com/mholt/caddy/caddy/caddymain/run.go && \\\n    cd /root/go/src/github.com/mholt/caddy/caddy && \\\n    go get github.com/caddyserver/builds && \\\n    go get && \\\n    go run build.go && \\\n    cp caddy /usr/bin && \\\n    apk del go git sed musl-dev && \\\n    rm -rf /root/go\n\nRUN caddy -version\nRUN caddy -plugins\n\nEXPOSE 80 443 2015\n\nENTRYPOINT [\"caddy\"]\nCMD [\"--conf\", \"/Caddyfile\", \"--log\", \"stdout\", \"--agree=true\"]\n",
  "/*\n * Copyright 2018-19 IBM Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Registrar } from '@kui-shell/core'\n\n/**\n * This is the module\n *\n */\nexport default (registrar: Registrar) => {\n  registrar.listen(\n    '/edit',\n    ({ command, REPL }) => {\n      // re: the stripping of --create; this is no longer needed, but\n      // some users might expect it to be\n      return REPL.qexec(command.replace(/\\s*edit/, 'open').replace(/--create/, ''))\n    },\n    { inBrowserOk: true }\n  )\n}\n",
  "#include \"utility.h\"\n\n\nstd::pair<SDL_Window*, SDL_Renderer*> startSDL(const char* winName, int winX, int winY, int winW, int winH) {\n    if (SDL_Init(SDL_INIT_EVERYTHING)!= 0){\n    \tlogSDLError(std::cout, \"SDL_Init\");\n    }\n\n    SDL_Window *window = SDL_CreateWindow(winName, winX, winY, winW, winH, SDL_WINDOW_SHOWN);\n    if (window == nullptr){\n    \tlogSDLError(std::cout, \"CreateWindow\");\n    \tSDL_Quit();\n    }\n    SDL_Renderer *renderer = SDL_CreateRenderer(window, -1,\n    \tSDL_RENDERER_ACCELERATED | SDL_RENDERER_PRESENTVSYNC);\n    if (renderer == nullptr){\n    \tlogSDLError(std::cout, \"CreateRenderer\");\n        if (window) {SDL_DestroyWindow(window);}\n    \tSDL_Quit();\n    }\n    \n    return std::pair<SDL_Window*,SDL_Renderer*>(window,renderer);\n}\n\nvoid stopSDL(SDL_Window *win, SDL_Renderer *ren) {\n    SDL_DestroyRenderer(ren);\n    SDL_DestroyWindow(win);\n    SDL_Quit();\n}\n\n\nvoid logSDLError(std::ostream &os, const std::string &msg){\n\tos << msg << \" error: \" << SDL_GetError() << std::endl;\n}\n\nSDL_Texture* loadTexture(const std::string &file, SDL_Renderer *ren){\n\t//Initialize to nullptr to avoid dangling pointer issues\n\tSDL_Texture *texture = nullptr;\n\t//Load the image\n\tSDL_Surface *loadedImage = IMG_Load(file.c_str());\n\t//If the loading went ok, convert to texture and return the texture\n\tif (loadedImage!= nullptr){\n\t\ttexture = SDL_CreateTextureFromSurface(ren, loadedImage);\n\t\tSDL_FreeSurface(loadedImage);\n\t\t//Make sure converting went ok too\n\t\tif (texture == nullptr){\n\t\t\tlogSDLError(std::cout, \"CreateTextureFromSurface\");\n\t\t}\n\t}\n\telse {\n\t\tlogSDLError(std::cout, \"LoadBMP\");\n\t}\n\treturn texture;\n}\n\nvoid renderTexture(SDL_Texture *tex, SDL_Renderer *ren, int x, int y, int width, int height){\n\t//Setup the destination rectangle to be at the position we want\n\tSDL_Rect dst;\n\tdst.x = x;\n\tdst.y = y;\n    dst.w = width;\n    dst.h = height;\n\t//Query the texture to get its width and height to use\n\tSDL_RenderCopy(ren, tex, NULL, &dst);\n}\n\nvoid renderTexture(SDL_Texture *tex, SDL_Renderer *ren, int x, int y){\n\tint w, h;\n    SDL_QueryTexture(tex, NULL, NULL, &w, &h);\n\trenderTexture(tex, ren, x, y, w, h);\n}",
  "async () => {\n  const fields = ['countryId', 'name'];\n  const data = await db.pg.select('Country', fields);\n  return { result:'success', data };\n};\n",
  "package main\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"github.com/axiangcoding/go-gin-template/internal/app/conf\"\n\t\"github.com/axiangcoding/go-gin-template/internal/app/data\"\n\t\"github.com/axiangcoding/go-gin-template/pkg/auth\"\n\t\"github.com/axiangcoding/go-gin-template/pkg/cache\"\n\t\"github.com/axiangcoding/go-gin-template/pkg/logging\"\n\t\"github.com/axiangcoding/go-gin-template/pkg/router\"\n\t\"net/http\"\n\t\"os\"\n\t\"os/signal\"\n\t\"syscall\"\n\t\"time\"\n\n\t\"github.com/gin-gonic/gin\"\n)\n\nfunc init() {\n\tconf.Setup()\n\tlogging.Setup()\n\tdata.Setup()\n\tcache.Setup()\n\tauth.Setup()\n}\n\n// @title        Golang Gin Template API\n// @version      1.0.0\n// @description  An example of gin\n// @termsOfService\n\n// @contact.name  axiangcoding\n// @contact.url\n// @contact.email  axiangcoding@gmail.com\n\n// @license.name\n// @license.url\n\n// @securityDefinitions.apikey  ApiKeyAuth\n// @in                          header\n// @name                        token\n\n// @accept   json\n// @produce  json\nfunc main() {\n\trunMode := conf.Config.Server.RunMode\n\tgin.SetMode(runMode)\n\tr := router.InitRouter()\n\tsrv := &http.Server{\n\t\tAddr:    fmt.Sprintf(\":%s\", conf.Config.Server.Port),\n\t\tHandler: r,\n\t}\n\t// Initialize the server in the goroutine so that it will not block the graceful stop processing below\n\t// \u5728goroutine\u4e2d\u521d\u59cb\u5316\u670d\u52a1\u5668\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u963b\u585e\u4e0b\u6587\u7684\u4f18\u96c5\u505c\u6b62\u5904\u7406\n\tgo func() {\n\t\tif err := srv.ListenAndServe(); err!= nil && err!= http.ErrServerClosed {\n\t\t\tlogging.Fatal(\"Server error. \", err)\n\t\t}\n\t}()\n\t// Wait for the interrupt signal to gracefully stop the server, set a delay of 5 seconds\n\t// \u7b49\u5f85\u4e2d\u65ad\u4fe1\u53f7\u6765\u4f18\u96c5\u505c\u6b62\u670d\u52a1\u5668\uff0c\u8bbe\u7f6e\u76845\u79d2\u5ef6\u8fdf\n\tquit := make(chan os.Signal, 1)\n\t// kill \tsyscall.SIGTERM\n\t// kill -2 \tsyscall.SIGINT\n\t// kill -9 \tsyscall.SIGKILL\n\tsignal.Notify(quit, syscall.SIGINT, syscall.SIGTERM)\n\t<-quit\n\tlogging.Info(\"Shutting down server...\")\n\t// ctx is used to notify the server that there is 5 seconds left to end the request currently being processed\n\t// ctx\u662f\u7528\u6765\u901a\u77e5\u670d\u52a1\u5668\u8fd8\u67095\u79d2\u7684\u65f6\u95f4\u6765\u7ed3\u675f\u5f53\u524d\u6b63\u5728\u5904\u7406\u7684request\n\tctx, cancel := context.WithTimeout(context.Background(), 5*time.Second)\n\tdefer cancel()\n\tif err := srv.Shutdown(ctx); err!= nil {\n\t\tlogging.Fatal(\"Server forced to shutdown. \", err)\n\t}\n\n\tlogging.Info(\"Server exiting\")\n}\n",
  "\ufeff// Copyright (c).NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Net.Http.Formatting.DataSets;\nusing System.Net.Http.Headers;\nusing System.Web.Http;\nusing Microsoft.TestCommon;\n\nnamespace System.Net.Http.Formatting\n{\n    public class QueryStringMappingTests\n    {\n        public static IEnumerable<string> UriStringsWithoutQuery\n        {\n            get\n            {\n                return HttpTestData.UriTestDataStrings.Where((s) =>!s.Contains('?'));\n            }\n        }\n\n        [Fact]\n        public void TypeIsCorrect()\n        {\n            Assert.Type.HasProperties(\n                typeof(QueryStringMapping),\n                TypeAssert.TypeProperties.IsPublicVisibleClass,\n                typeof(MediaTypeMapping));\n        }\n\n        [Theory]\n        [TestDataSet(\n            typeof(HttpTestData), \"LegalQueryStringParameterNames\",\n            typeof(HttpTestData), \"LegalQueryStringParameterValues\",\n            typeof(HttpTestData), \"LegalMediaTypeHeaderValues\")]\n        public void Constructor(string queryStringParameterName, string queryStringParameterValue, MediaTypeHeaderValue mediaType)\n        {\n            QueryStringMapping mapping = new QueryStringMapping(queryStringParameterName, queryStringParameterValue, mediaType);\n            Assert.Equal(queryStringParameterName, mapping.QueryStringParameterName);\n            Assert.Equal(queryStringParameterValue, mapping.QueryStringParameterValue);\n            Assert.MediaType.AreEqual(mediaType, mapping.MediaType, \"MediaType failed to set.\");\n        }\n\n        [Theory]\n        [TestDataSet(\n            typeof(HttpTestData), \"LegalMediaTypeHeaderValues\",\n            typeof(CommonUnitTestDataSets), \"EmptyStrings\")]\n        public void ConstructorThrowsWithEmptyQueryParameterName(MediaTypeHeaderValue mediaType, string queryStringParameterName)\n        {\n            Assert.ThrowsArgumentNull(() => new QueryStringMapping(queryStringParameterName, \"json\", mediaType), \"queryStringParameterName\");\n        }\n\n        [Theory]\n        [TestDataSet(\n            typeof(HttpTestData), \"LegalMediaTypeHeaderValues\",\n            typeof(CommonUnitTestDataSets), \"EmptyStrings\")]\n        public void ConstructorThrowsWithEmptyQueryParameterValue(MediaTypeHeaderValue mediaType, string queryStringParameterValue)\n        {\n            Assert.ThrowsArgumentNull(() => new QueryStringMapping(\"query\", queryStringParameterValue, mediaType), \"queryStringParameterValue\");\n        }\n\n        [Theory]\n        [TestDataSet(\n            typeof(HttpTestData), \"LegalQueryStringParameterNames\",\n            typeof(HttpTestData), \"LegalQueryStringParameterValues\")]\n        public void ConstructorThrowsWithNullMediaTypeHeaderValue(string queryStringParameterName, string queryStringParameterValue)\n        {\n            Assert.ThrowsArgumentNull(() => new QueryStringMapping(queryStringParameterName, queryStringParameterValue, (MediaTypeHeaderValue)null), \"mediaType\");\n        }\n\n        [Theory]\n        [TestDataSet(\n            typeof(HttpTestData), \"LegalQueryStringParameterNames\",\n            typeof(HttpTestData), \"LegalQueryStringParameterValues\",\n            typeof(HttpTestData), \"LegalMediaTypeStrings\")]\n        public void Constructor1(string queryStringParameterName, string queryStringParameterValue, string mediaType)\n        {\n            QueryStringMapping mapping = new QueryStringMapping(queryStringParameterName, queryStringParameterValue, mediaType);\n            Assert.Equal(queryStringParameterName, mapping.QueryStringParameterName);\n            Assert.Equal(queryStringParameterValue, mapping.QueryStringParameterValue);\n            Assert.MediaType.AreEqual(mediaType, mapping.MediaType, \"MediaType failed to set.\");\n        }\n\n        [Theory]\n        [TestDataSet(\n            typeof(HttpTestData), \"LegalMediaTypeStrings\",\n            typeof(CommonUnitTestDataSets), \"EmptyStrings\")]\n        public void Constructor1ThrowsWithEmptyQueryParameterName(string mediaType, string queryStringParameterName)\n        {\n            Assert.ThrowsArgumentNull(() => new QueryStringMapping(queryStringParameterName, \"json\", mediaType), \"queryStringParameterName\");\n        }\n\n        [Theory]\n        [TestDataSet(\n            typeof(HttpTestData), \"LegalMediaTypeStrings\",\n            typeof(CommonUnitTestDataSets), \"EmptyStrings\")]\n        public void Constructor1ThrowsWithEmptyQueryParameterValue(string mediaType, string queryStringParameterValue)\n        {\n            Assert.ThrowsArgumentNull(() => new QueryStringMapping(\"query\", queryStringParameterValue, mediaType), \"queryStringParameterValue\");\n        }\n\n        [Theory]\n        [TestDataSet(\n            typeof(HttpTestData), \"LegalQueryStringParameterNames\",\n            typeof(HttpTestData), \"LegalQueryStringParameterValues\",\n            typeof(CommonUnitTestDataSets), \"EmptyStrings\")]\n        public void Constructor1ThrowsWithEmptyMediaType(string queryStringParameterName, string queryStringParameterValue, string mediaType)\n        {\n            GC.KeepAlive(mediaType); // Mark parameter as used. See xUnit1026, [Theory] method doesn't use all parameters.\n            Assert.ThrowsArgumentNull(() => new QueryStringMapping(queryStringParameterName, queryStringParameterValue, (MediaTypeHeaderValue)null), \"mediaType\");\n        }\n\n        [Theory]\n        [TestDataSet(\n            typeof(HttpTestData), \"LegalQueryStringParameterNames\",\n            typeof(HttpTestData), \"LegalQueryStringParameterValues\",\n            typeof(HttpTestData), \"LegalMediaTypeStrings\",\n            typeof(QueryStringMappingTests), \"UriStringsWithoutQuery\")]\n        public void TryMatchMediaTypeReturnsMatchWithQueryStringParameterNameAndValueInUri(string queryStringParameterName, string queryStringParameterValue, string mediaType, string uriBase)\n        {\n            QueryStringMapping mapping = new QueryStringMapping(queryStringParameterName, queryStringParameterValue, mediaType);\n            string uri = uriBase + \"?\" + queryStringParameterName + \"=\" + queryStringParameterValue;\n            HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Get, uri);\n            Assert.Equal(1.0, mapping.TryMatchMediaType(request));\n        }\n\n        [Theory]\n        [TestDataSet(\n            typeof(HttpTestData), \"LegalQueryStringParameterNames\",\n            typeof(HttpTestData), \"LegalQueryStringParameterValues\",\n            typeof(HttpTestData), \"LegalMediaTypeStrings\",\n            typeof(QueryStringMappingTests), \"UriStringsWithoutQuery\")]\n        public void TryMatchMediaTypeReturnsZeroWithQueryStringParameterNameNotInUri(string queryStringParameterName, string queryStringParameterValue, string mediaType, string uriBase)\n        {\n            QueryStringMapping mapping = new QueryStringMapping(queryStringParameterName, queryStringParameterValue, mediaType);\n            string uri = uriBase + \"?\" + \"not\" + queryStringParameterName + \"=\" + queryStringParameterValue;\n            HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Get, uri);\n            Assert.Equal(0.0, mapping.TryMatchMediaType(request));\n        }\n\n        [Theory]\n        [TestDataSet(\n            typeof(HttpTestData), \"LegalQueryStringParameterNames\",\n            typeof(HttpTestData), \"LegalQueryStringParameterValues\",\n            typeof(HttpTestData), \"LegalMediaTypeStrings\",\n            typeof(QueryStringMappingTests), \"UriStringsWithoutQuery\")]\n        public void TryMatchMediaTypeReturnsZeroWithQueryStringParameterValueNotInUri(string queryStringParameterName, string queryStringParameterValue, string mediaType, string uriBase)\n        {\n            QueryStringMapping mapping = new QueryStringMapping(queryStringParameterName, queryStringParameterValue, mediaType);\n            string uri = uriBase + \"?\" + queryStringParameterName + \"=\" + \"not\" + queryStringParameterValue;\n            HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Get, uri);\n            Assert.Equal(0.0, mapping.TryMatchMediaType(request));\n        }\n\n        [Theory]\n        [TestDataSet(\n            typeof(HttpTestData), \"LegalQueryStringParameterNames\",\n            typeof(HttpTestData), \"LegalQueryStringParameterValues\",\n            typeof(HttpTestData), \"LegalMediaTypeStrings\")]\n        public void TryMatchMediaTypeThrowsWithNullHttpRequestMessage(string queryStringParameterName, string queryStringParameterValue, string mediaType)\n        {\n            QueryStringMapping mapping = new QueryStringMapping(queryStringParameterName, queryStringParameterValue, mediaType);\n            Assert.ThrowsArgumentNull(() => mapping.TryMatchMediaType(request: null), \"request\");\n        }\n\n        [Theory]\n        [Test",
  "package co.edu.sena.lession8;\n\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.util.TimeZone;\n\npublic class Ejemplo04 {\n    public static void main(String[] args) {\n        Date fecha = new Date();\n        System.out.println(fecha);\n\n        final Date currentTime = new Date();\n\n        final SimpleDateFormat sdf =\n                new SimpleDateFormat(\"EEE, MMM d, yyyy hh:mm:ss a z\");\n\n\n        sdf.setTimeZone(TimeZone.getTimeZone(\"GMT-5\"));\n        System.out.println(\"GMT time: \" + sdf.format(currentTime));\n    }\n}\n",
  "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<!-- NewPage -->\n<html lang=\"en\">\n<head>\n<!-- Generated by javadoc (1.8.0_25) on Mon Dec 22 11:39:11 IST 2014 -->\n<title>E-Index</title>\n<meta name=\"date\" content=\"2014-12-22\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"../stylesheet.css\" title=\"Style\">\n<script type=\"text/javascript\" src=\"../script.js\"></script>\n</head>\n<body>\n<script type=\"text/javascript\"><!--\n    try {\n        if (location.href.indexOf('is-external=true') == -1) {\n            parent.document.title=\"E-Index\";\n        }\n    }\n    catch(err) {\n    }\n//-->\n</script>\n<noscript>\n<div>JavaScript is disabled on your browser.</div>\n</noscript>\n<!-- ========= START OF TOP NAVBAR ======= -->\n<div class=\"topNav\"><a name=\"navbar.top\">\n<!--   -->\n</a>\n<div class=\"skipNav\"><a href=\"#skip.navbar.top\" title=\"Skip navigation links\">Skip navigation links</a></div>\n<a name=\"navbar.top.firstrow\">\n<!--   -->\n</a>\n<ul class=\"navList\" title=\"Navigation\">\n<li><a href=\"../overview-summary.html\">Overview</a></li>\n<li>Package</li>\n<li>Class</li>\n<li>Use</li>\n<li><a href=\"../overview-tree.html\">Tree</a></li>\n<li><a href=\"../deprecated-list.html\">Deprecated</a></li>\n<li class=\"navBarCell1Rev\">Index</li>\n<li><a href=\"../help-doc.html\">Help</a></li>\n</ul>\n</div>\n<div class=\"subNav\">\n<ul class=\"navList\">\n<li><a href=\"index-2.html\">Prev Letter</a></li>\n<li><a href=\"index-4.html\">Next Letter</a></li>\n</ul>\n<ul class=\"navList\">\n<li><a href=\"../index.html?index-files/index-3.html\" target=\"_top\">Frames</a></li>\n<li><a href=\"index-3.html\" target=\"_top\">No&nbsp;Frames</a></li>\n</ul>\n<ul class=\"navList\" id=\"allclasses_navbar_top\">\n<li><a href=\"../allclasses-noframe.html\">All&nbsp;Classes</a></li>\n</ul>\n<div>\n<script type=\"text/javascript\"><!--\n  allClassesLink = document.getElementById(\"allclasses_navbar_top\");\n  if(window==top) {\n    allClassesLink.style.display = \"block\";\n  }\n  else {\n    allClassesLink.style.display = \"none\";\n  }\n  //-->\n</script>\n</div>\n<a name=\"skip.navbar.top\">\n<!--   -->\n</a></div>\n<!-- ========= END OF TOP NAVBAR ========= -->\n<div class=\"contentContainer\"><a href=\"index-1.html\">C</a>&nbsp;<a href=\"index-2.html\">D</a>&nbsp;<a href=\"index-3.html\">E</a>&nbsp;<a href=\"index-4.html\">F</a>&nbsp;<a href=\"index-5.html\">G</a>&nbsp;<a href=\"index-6.html\">I</a>&nbsp;<a href=\"index-7.html\">M</a>&nbsp;<a href=\"index-8.html\">N</a>&nbsp;<a href=\"index-9.html\">P</a>&nbsp;<a href=\"index-10.html\">R</a>&nbsp;<a href=\"index-11.html\">S</a>&nbsp;<a href=\"index-12.html\">T</a>&nbsp;<a name=\"I:E\">\n<!--   -->\n</a>\n<h2 class=\"title\">E</h2>\n<dl>\n<dt><span class=\"memberNameLink\"><a href=\"../com/suman/euler/problem/EulerTest.html#endTime\">endTime</a></span> - Variable in class com.suman.euler.problem.<a href=\"../com/suman/euler/problem/EulerTest.html\" title=\"class in com.suman.euler.problem\">EulerTest</a></dt>\n<dd>\n<div class=\"block\">The end time.</div>\n</dd>\n<dt><a href=\"../com/suman/euler/problem/EulerProblem.html\" title=\"interface in com.suman.euler.problem\"><span class=\"typeNameLink\">EulerProblem</span></a> - Interface in <a href=\"../com/suman/euler/problem/package-summary.html\">com.suman.euler.problem</a></dt>\n<dd>\n<div class=\"block\">The Interface EulerProblem.</div>\n</dd>\n<dt><span class=\"memberNameLink\"><a href=\"../com/suman/euler/problem/EulerTest.html#eulerProblem\">eulerProblem</a></span> - Variable in class com.suman.euler.problem.<a href=\"../com/suman/euler/problem/EulerTest.html\" title=\"class in com.suman.euler.problem\">EulerTest</a></dt>\n<dd>\n<div class=\"block\">The euler problem.</div>\n</dd>\n<dt><a href=\"../com/suman/euler/problem/EulerTest.html\" title=\"class in com.suman.euler.problem\"><span class=\"typeNameLink\">EulerTest</span></a> - Class in <a href=\"../com/suman/euler/problem/package-summary.html\">com.suman.euler.problem</a></dt>\n<dd>\n<div class=\"block\">The Class EulerTest.</div>\n</dd>\n<dt><span class=\"memberNameLink\"><a href=\"../com/suman/euler/problem/EulerTest.html#EulerTest-com.suman.euler.problem.EulerProblem-\">EulerTest(EulerProblem)</a></span> - Constructor for class com.suman.euler.problem.<a href=\"../com/suman/euler/problem/EulerTest.html\" title=\"class in com.suman.euler.problem\">EulerTest</a></dt>\n<dd>\n<div class=\"block\">Instantiates a new euler test.</div>\n</dd>\n<dt><span class=\"memberNameLink\"><a href=\"../com/suman/euler/problem/EulerProblem.html#executeSoultion--\">executeSoultion()</a></span> - Method in interface com.suman.euler.problem.<a href=\"../com/suman/euler/problem/EulerProblem.html\" title=\"interface in com.suman.euler.problem\">EulerProblem</a></dt>\n<dd>\n<div class=\"block\">Execute soultion.</div>\n</dd>\n<dt><span class=\"memberNameLink\"><a href=\"../com/suman/euler/solution/Problem001.html#executeSoultion--\">executeSoultion()</a></span> - Method in class com.suman.euler.solution.<a href=\"../com/suman/euler/solution/Problem001.html\" title=\"class in com.suman.euler.solution\">Problem001</a></dt>\n<dd>&nbsp;</dd>\n<dt><span class=\"memberNameLink\"><a href=\"../com/suman/euler/solution/Problem002.html#executeSoultion--\">executeSoultion()</a></span> - Method in class com.suman.euler.solution.<a href=\"../com/suman/euler/solution/Problem002.html\" title=\"class in com.suman.euler.solution\">Problem002</a></dt>\n<dd>&nbsp;</dd>\n<dt><span class=\"memberNameLink\"><a href=\"../com/suman/euler/solution/Problem003.html#executeSoultion--\">executeSoultion()</a></span> - Method in class com.suman.euler.solution.<a href=\"../com/suman/euler/solution/Problem003.html\" title=\"class in com.suman.euler.solution\">Problem003</a></dt>\n<dd>&nbsp;</dd>\n<dt><span class=\"memberNameLink\"><a href=\"../com/suman/euler/solution",
  "require 'builder'\nrequire 'uri'\n\nmodule SitemapGenerator\n  module Builder\n    # A Hash-like class for holding information about a sitemap URL and\n    # generating an XML <url> element suitable for sitemaps.\n    class SitemapUrl < Hash\n\n      # Return a new instance with options configured on it.\n      #\n      # == Arguments\n      # * sitemap - a Sitemap instance, or\n      # * path, options - a path string and options hash\n      #\n      # == Options\n      # Requires a host to be set.  If passing a sitemap, the sitemap must have a +default_host+\n      # configured.  If calling with a path and options, you must include the <tt>:host</tt> option.\n      #\n      # * +priority+\n      # * +changefreq+\n      # * +lastmod+\n      # * +images+\n      # * +video+/+videos+\n      # * +geo+\n      # * +news+\n      def initialize(path, options={})\n        if sitemap = path.is_a?(SitemapGenerator::Builder::SitemapFile) && path\n          options.reverse_merge!(:host => sitemap.location.host, :lastmod => sitemap.lastmod)\n          path = sitemap.location.path_in_public\n        end\n\n        SitemapGenerator::Utilities.assert_valid_keys(options, :priority, :changefreq, :lastmod, :host, :images, :video, :geo, :news, :videos)\n        options.reverse_merge!(:priority => 0.5, :changefreq => 'weekly', :lastmod => Time.now, :images => [], :news => {}, :videos => [])\n        if options[:host].blank?\n          raise \"Cannot generate a url without a host\"\n        end\n        if video = options.delete(:video)\n          options[:videos] = video.is_a?(Array)? options[:videos].concat(video) : options[:videos] << video\n        end\n\n        path = path.to_s.sub(/^\\//, '')\n        loc  = path.empty?? options[:host] : (options[:host].to_s.sub(/\\/$/, '') + '/' + path)\n        self.merge!(\n          :priority   => options[:priority],\n          :changefreq => options[:changefreq],\n          :lastmod    => options[:lastmod],\n          :host       => options[:host],\n          :loc        => loc,\n          :images     => prepare_images(options[:images], options[:host]),\n          :news       => prepare_news(options[:news]),\n          :videos     => options[:videos],\n          :geo        => options[:geo]\n        )\n      end\n\n      # Return the URL as XML\n      def to_xml(builder=nil)\n        builder = ::Builder::XmlMarkup.new if builder.nil?\n        builder.url do\n          builder.loc        self[:loc]\n          builder.lastmod    w3c_date(self[:lastmod])   if self[:lastmod]\n          builder.changefreq self[:changefreq]          if self[:changefreq]\n          builder.priority   self[:priority]            if self[:priority]\n\n          unless self[:news].blank?\n            news_data = self[:news]\n            builder.news:news do\n              builder.news:publication do\n                builder.news :name, news_data[:publication_name] if news_data[:publication_name]\n                builder.news :language, news_data[:publication_language] if news_data[:publication_language]\n              end\n\n              builder.news :access, news_data[:access] if news_data[:access]\n              builder.news :genres, news_data[:genres] if news_data[:genres]\n              builder.news :publication_date, news_data[:publication_date] if news_data[:publication_date]\n              builder.news :title, news_data[:title] if news_data[:title]\n              builder.news :keywords, news_data[:keywords] if news_data[:keywords]\n              builder.news :stock_tickers, news_data[:stock_tickers] if news_data[:stock_tickers]\n            end\n          end\n\n          self[:images].each do |image|\n            builder.image:image do\n              builder.image :loc, image[:loc]\n              builder.image :caption, image[:caption]             if image[:caption]\n              builder.image :geo_location, image[:geo_location]   if image[:geo_location]\n              builder.image :title, image[:title]                 if image[:title]\n              builder.image :license, image[:license]             if image[:license]\n            end\n          end\n\n          self[:videos].each do |video|\n            builder.video :video do\n              builder.video :thumbnail_loc, video[:thumbnail_loc]\n              builder.video :title, video[:title]\n              builder.video :description, video[:description]\n              builder.video :content_loc, video[:content_loc]           if video[:content_loc]\n              if video[:player_loc]\n                builder.video :player_loc, video[:player_loc], :allow_embed => (video[:allow_embed]? 'yes' : 'no'), :autoplay => video[:autoplay]\n              end\n\n              builder.video :rating, video[:rating]                     if video[:rating]\n              builder.video :view_count, video[:view_count]             if video[:view_count]\n              builder.video :publication_date, video[:publication_date] if video[:publication_date]\n              builder.video :expiration_date, video[:expiration_date]   if video[:expiration_date]\n              builder.video :family_friendly, (video[:family_friendly]? 'yes' : 'no')  if video[:family_friendly]\n              builder.video :duration, video[:duration]                 if video[:duration]\n              video[:tags].each {|tag| builder.video :tag, tag }        if video[:tags]\n              builder.video :tag, video[:tag]                           if video[:tag]\n              builder.video :category, video[:category]                 if video[:category]\n              builder.video :gallery_loc, video[:gallery_loc]           if video[:gallery_loc]\n\n              if video[:uploader]\n                builder.video :uploader, video[:uploader], video[:uploader_info]? { :info => video[:uploader_info] } : {}\n              end\n            end\n          end\n\n          unless self[:geo].blank?\n            geo = self[:geo]\n            builder.geo :geo do\n              builder.geo :format, geo[:format] if geo[:format]\n            end\n          end\n        end\n        builder << '' # Force to string\n      end\n\n      def news?\n        self[:news].present?\n      end\n\n      protected\n\n      def prepare_news(news)\n        SitemapGenerator::Utilities.assert_valid_keys(news, :publication_name, :publication_language, :publication_date, :genres, :access, :title, :keywords, :stock_tickers) unless news.empty?\n        news\n      end\n\n      # Return an Array of image option Hashes suitable to be parsed by SitemapGenerator::Builder::SitemapFile\n      def prepare_images(images, host)\n        images.delete_if { |key,value| key[:loc] == nil }\n        images.each do |r|\n          SitemapGenerator::Utilities.assert_valid_keys(r, :loc, :caption, :geo_location, :title, :license)\n          r[:loc] = URI.join(host, r[:loc]).to_s\n        end\n        images[0..(SitemapGenerator::MAX_SITEMAP_IMAGES-1)]\n      end\n\n      def w3c_date(date)\n         date.utc.strftime(\"%Y-%m-%dT%H:%M:%S+00:00\")\n      end\n    end\n  end\nend\n",
  "\ufeff$ErrorActionPreference = 'Stop';\n\n$packageArgs = @{\n  packageName  = $env:ChocolateyPackageName\n\n  url          = 'https://www.skytopia.com/software/sunsetscreen/SunsetScreen_Setup.exe'\n  checksum     = '48b8bf653baf4c2733b7a4fce679032a5829fa9cf6a5520de25af1db525f21fb'\n  checksumType ='sha256'\n\n  silentArgs   = \"-q\"\n}\n\nInstall-ChocolateyPackage @packageArgs\n",
  "\ufeff/*\n* Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\").\n* You may not use this file except in compliance with the License.\n* A copy of the License is located at\n*\n*  http://aws.amazon.com/apache2.0\n*\n* or in the \"license\" file accompanying this file. This file is distributed\n* on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n* express or implied. See the License for the specific language governing\n* permissions and limitations under the License.\n*/\n\n#include <aws/backup/model/GetRecoveryPointRestoreMetadataResult.h>\n#include <aws/core/utils/json/JsonSerializer.h>\n#include <aws/core/AmazonWebServiceResult.h>\n#include <aws/core/utils/StringUtils.h>\n#include <aws/core/utils/UnreferencedParam.h>\n\n#include <utility>\n\nusing namespace Aws::Backup::Model;\nusing namespace Aws::Utils::Json;\nusing namespace Aws::Utils;\nusing namespace Aws;\n\nGetRecoveryPointRestoreMetadataResult::GetRecoveryPointRestoreMetadataResult()\n{\n}\n\nGetRecoveryPointRestoreMetadataResult::GetRecoveryPointRestoreMetadataResult(const Aws::AmazonWebServiceResult<JsonValue>& result)\n{\n  *this = result;\n}\n\nGetRecoveryPointRestoreMetadataResult& GetRecoveryPointRestoreMetadataResult::operator =(const Aws::AmazonWebServiceResult<JsonValue>& result)\n{\n  JsonView jsonValue = result.GetPayload().View();\n  if(jsonValue.ValueExists(\"BackupVaultArn\"))\n  {\n    m_backupVaultArn = jsonValue.GetString(\"BackupVaultArn\");\n\n  }\n\n  if(jsonValue.ValueExists(\"RecoveryPointArn\"))\n  {\n    m_recoveryPointArn = jsonValue.GetString(\"RecoveryPointArn\");\n\n  }\n\n  if(jsonValue.ValueExists(\"RestoreMetadata\"))\n  {\n    Aws::Map<Aws::String, JsonView> restoreMetadataJsonMap = jsonValue.GetObject(\"RestoreMetadata\").GetAllObjects();\n    for(auto& restoreMetadataItem : restoreMetadataJsonMap)\n    {\n      m_restoreMetadata[restoreMetadataItem.first] = restoreMetadataItem.second.AsString();\n    }\n  }\n\n\n\n  return *this;\n}\n",
  "package ltd.newbee.mall.controller.admin;\n\nimport ltd.newbee.mall.common.NewBeeMallOrderStatusEnum;\nimport ltd.newbee.mall.common.ServiceResultEnum;\nimport ltd.newbee.mall.controller.vo.NewBeeMallOrderItemVO;\nimport ltd.newbee.mall.entity.IndexConfig;\nimport ltd.newbee.mall.entity.NewBeeMallOrder;\nimport ltd.newbee.mall.service.NewBeeMallIndexConfigService;\nimport ltd.newbee.mall.service.NewBeeMallOrderService;\nimport ltd.newbee.mall.util.PageQueryUtil;\nimport ltd.newbee.mall.util.Result;\nimport ltd.newbee.mall.util.ResultGenerator;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.util.CollectionUtils;\nimport org.springframework.util.StringUtils;\nimport org.springframework.web.bind.annotation.*;\n\nimport javax.annotation.Resource;\nimport javax.servlet.http.HttpServletRequest;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Objects;\n\n/**\n * @author 13\n * @qq\u4ea4\u6d41\u7fa4 796794009\n * @email 2449207463@qq.com\n * @link https://github.com/newbee-ltd\n */\n@Controller\n@RequestMapping(\"/admin\")\npublic class NewBeeMallOrderController {\n\n    @Resource\n    private NewBeeMallOrderService newBeeMallOrderService;\n\n    @GetMapping(\"/orders\")\n    public String ordersPage(HttpServletRequest request) {\n        request.setAttribute(\"path\", \"orders\");\n        return \"admin/newbee_mall_order\";\n    }\n\n    /**\n     * \u5217\u8868\n     */\n    @RequestMapping(value = \"/orders/list\", method = RequestMethod.GET)\n    @ResponseBody\n    public Result list(@RequestParam Map<String, Object> params) {\n        if (StringUtils.isEmpty(params.get(\"page\")) || StringUtils.isEmpty(params.get(\"limit\"))) {\n            return ResultGenerator.genFailResult(\"\u53c2\u6570\u5f02\u5e38\uff01\");\n        }\n        PageQueryUtil pageUtil = new PageQueryUtil(params);\n        return ResultGenerator.genSuccessResult(newBeeMallOrderService.getNewBeeMallOrdersPage(pageUtil));\n    }\n\n    /**\n     * \u4fee\u6539\n     */\n    @RequestMapping(value = \"/orders/update\", method = RequestMethod.POST)\n    @ResponseBody\n    public Result update(@RequestBody NewBeeMallOrder newBeeMallOrder) {\n        if (Objects.isNull(newBeeMallOrder.getTotalPrice())\n                || Objects.isNull(newBeeMallOrder.getOrderId())\n                || newBeeMallOrder.getOrderId() < 1\n                || newBeeMallOrder.getTotalPrice() < 1\n                || StringUtils.isEmpty(newBeeMallOrder.getUserAddress())) {\n            return ResultGenerator.genFailResult(\"\u53c2\u6570\u5f02\u5e38\uff01\");\n        }\n        String result = newBeeMallOrderService.updateOrderInfo(newBeeMallOrder);\n        if (ServiceResultEnum.SUCCESS.getResult().equals(result)) {\n            return ResultGenerator.genSuccessResult();\n        } else {\n            return ResultGenerator.genFailResult(result);\n        }\n    }\n\n    /**\n     * \u8be6\u60c5\n     */\n    @GetMapping(\"/order-items/{id}\")\n    @ResponseBody\n    public Result info(@PathVariable(\"id\") Long id) {\n        List<NewBeeMallOrderItemVO> orderItems = newBeeMallOrderService.getOrderItems(id);\n        if (!CollectionUtils.isEmpty(orderItems)) {\n            return ResultGenerator.genSuccessResult(orderItems);\n        }\n        return ResultGenerator.genFailResult(ServiceResultEnum.DATA_NOT_EXIST.getResult());\n    }\n\n    /**\n     * \u914d\u8d27\n     */\n    @RequestMapping(value = \"/orders/checkDone\", method = RequestMethod.POST)\n    @ResponseBody\n    public Result checkDone(@RequestBody Long[] ids) {\n        if (ids.length < 1) {\n            return ResultGenerator.genFailResult(\"\u53c2\u6570\u5f02\u5e38\uff01\");\n        }\n        String result = newBeeMallOrderService.checkDone(ids);\n        if (ServiceResultEnum.SUCCESS.getResult().equals(result)) {\n            return ResultGenerator.genSuccessResult();\n        } else {\n            return ResultGenerator.genFailResult(result);\n        }\n    }\n\n    /**\n     * \u51fa\u5e93\n     */\n    @RequestMapping(value = \"/orders/checkOut\", method = RequestMethod.POST)\n    @ResponseBody\n    public Result checkOut(@RequestBody Long[] ids) {\n        if (ids.length < 1) {\n            return ResultGenerator.genFailResult(\"\u53c2\u6570\u5f02\u5e38\uff01\");\n        }\n        String result = newBeeMallOrderService.checkOut(ids);\n        if (ServiceResultEnum.SUCCESS.getResult().equals(result)) {\n            return ResultGenerator.genSuccessResult();\n        } else {\n            return ResultGenerator.genFailResult(result);\n        }\n    }\n\n    /**\n     * \u5173\u95ed\u8ba2\u5355\n     */\n    @RequestMapping(value = \"/orders/close\", method = RequestMethod.POST)\n    @ResponseBody\n    public Result closeOrder(@RequestBody Long[] ids) {\n        if (ids.length < 1) {\n            return ResultGenerator.genFailResult(\"\u53c2\u6570\u5f02\u5e38\uff01\");\n        }\n        String result = newBeeMallOrderService.closeOrder(ids);\n        if (ServiceResultEnum.SUCCESS.getResult().equals(result)) {\n            return ResultGenerator.genSuccessResult();\n        } else {\n            return ResultGenerator.genFailResult(result);\n        }\n    }\n\n\n}",
  "---\nlayout: base\ntitle:  'Statistics of PART in UD_Komi_Zyrian-Lattice'\nudver: '2'\n---\n\n## Treebank Statistics: UD_Komi_Zyrian-Lattice: POS Tags: `PART`\n\nThere are 18 `PART` lemmas (1%), 18 `PART` types (1%) and 55 `PART` tokens (1%).\nOut of 15 observed tags, the rank of `PART` is: 8 in number of lemmas, 9 in number of types and 11 in number of tokens.\n\nThe 10 most frequent `PART` lemmas: <em>\u0436\u04e7, \u043d\u0438, \u0432\u0435\u0441\u0438\u0433, \u0438, \u043d\u0435, \u04e7\u0434, \u0431\u044b\u0442\u0442\u044c\u04e7, \u0432\u04e7\u043b\u04e7\u043c\u043a\u04e7, \u0434\u0430, \u043d\u04e7</em>\n\nThe 10 most frequent `PART` types:  <em>\u0436\u04e7, \u043d\u0438, \u0432\u0435\u0441\u0438\u0433, \u0438, \u043d\u0435, \u04e7\u0434, \u0431\u044b\u0442\u0442\u044c\u04e7, \u0432\u04e7\u043b\u04e7\u043c\u043a\u04e7, \u0434\u0430, \u043d\u04e7</em>\n\nThe 10 most frequent ambiguous lemmas: <em>\u0436\u04e7</em> (<tt><a href=\"kpv_lattice-pos-PART.html\">PART</a></tt> 16, <tt><a href=\"kpv_lattice-pos-ADV.html\">ADV</a></tt> 13), <em>\u0432\u0435\u0441\u0438\u0433</em> (<tt><a href=\"kpv_lattice-pos-PART.html\">PART</a></tt> 5, <tt><a href=\"kpv_lattice-pos-ADV.html\">ADV</a></tt> 2), <em>\u0438</em> (<tt><a href=\"kpv_lattice-pos-CCONJ.html\">CCONJ</a></tt> 47, <tt><a href=\"kpv_lattice-pos-ADV.html\">ADV</a></tt> 15, <tt><a href=\"kpv_lattice-pos-PART.html\">PART</a></tt> 5), <em>\u043d\u0435</em> (<tt><a href=\"kpv_lattice-pos-PART.html\">PART</a></tt> 4, <tt><a href=\"kpv_lattice-pos-ADV.html\">ADV</a></tt> 1), <em>\u04e7\u0434</em> (<tt><a href=\"kpv_lattice-pos-ADV.html\">ADV</a></tt> 5, <tt><a href=\"kpv_lattice-pos-PART.html\">PART</a></tt> 3, <tt><a href=\"kpv_lattice-pos-NOUN.html\">NOUN</a></tt> 2), <em>\u0431\u044b\u0442\u0442\u044c\u04e7</em> (<tt><a href=\"kpv_lattice-pos-PART.html\">PART</a></tt> 2, <tt><a href=\"kpv_lattice-pos-SCONJ.html\">SCONJ</a></tt> 2, <tt><a href=\"kpv_lattice-pos-ADV.html\">ADV</a></tt> 1), <em>\u0434\u0430</em> (<tt><a href=\"kpv_lattice-pos-CCONJ.html\">CCONJ</a></tt> 81, <tt><a href=\"kpv_lattice-pos-ADV.html\">ADV</a></tt> 2, <tt><a href=\"kpv_lattice-pos-PART.html\">PART</a></tt> 2, <tt><a href=\"kpv_lattice-pos-SCONJ.html\">SCONJ</a></tt> 2), <em>\u043d\u04e7</em> (<tt><a href=\"kpv_lattice-pos-ADV.html\">ADV</a></tt> 3, <tt><a href=\"kpv_lattice-pos-PART.html\">PART</a></tt> 2), <em>\u0432\u043e\u0442</em> (<tt><a href=\"kpv_lattice-pos-ADV.html\">ADV</a></tt> 1, <tt><a href=\"kpv_lattice-pos-PART.html\">PART</a></tt> 1), <em>\u0433\u0430\u0448\u043a\u04e7</em> (<tt><a href=\"kpv_lattice-pos-ADV.html\">ADV</a></tt> 1, <tt><a href=\"kpv_lattice-pos-PART.html\">PART</a></tt> 1)\n\nThe 10 most frequent ambiguous types:  <em>\u0436\u04e7</em> (<tt><a href=\"kpv_lattice-pos-PART.html\">PART</a></tt> 16, <tt><a href=\"kpv_lattice-pos-ADV.html\">ADV</a></tt> 13), <em>\u0432\u0435\u0441\u0438\u0433</em> (<tt><a href=\"kpv_lattice-pos-PART.html\">PART</a></tt> 3, <tt><a href=\"kpv_lattice-pos-ADV.html\">ADV</a></tt> 1), <em>\u0438</em> (<tt><a href=\"kpv_lattice-pos-CCONJ.html\">CCONJ</a></tt> 35, <tt><a href=\"kpv_lattice-pos-ADV.html\">ADV</a></tt> 15, <tt><a href=\"kpv_lattice-pos-PART.html\">PART</a></tt> 4), <em>\u043d\u0435</em> (<tt><a href=\"kpv_lattice-pos-PART.html\">PART</a></tt> 3, <tt><a href=\"kpv_lattice-pos-ADV.html\">ADV</a></tt> 1), <em>\u04e7\u0434</em> (<tt><a href=\"kpv_lattice-pos-ADV.html\">ADV</a></tt> 4, <tt><a href=\"kpv_lattice-pos-PART.html\">PART</a></tt> 2), <em>\u0431\u044b\u0442\u0442\u044c\u04e7</em> (<tt><a href=\"kpv_lattice-pos-PART.html\">PART</a></tt> 2, <tt><a href=\"kpv_lattice-pos-SCONJ.html\">SCONJ</a></tt> 2, <tt><a href=\"kpv_lattice-pos-ADV.html\">ADV</a></tt> 1), <em>\u0434\u0430</em> (<tt><a href=\"kpv_lattice-pos-CCONJ.html\">CCONJ</a></tt> 81, <tt><a href=\"kpv_lattice-pos-ADV.html\">ADV</a></tt> 2, <tt><a href=\"kpv_lattice-pos-SCONJ.html\">SCONJ</a></tt> 2, <tt><a href=\"kpv_lattice-pos-PART.html\">PART</a></tt> 1), <em>\u043d\u04e7</em> (<tt><a href=\"kpv_lattice-pos-ADV.html\">ADV</a></tt> 3, <tt><a href=\"kpv_lattice-pos-PART.html\">PART</a></tt> 2), <em>\u0432\u043e\u0442</em> (<tt><a href=\"kpv_lattice-pos-ADV.html\">ADV</a></tt> 1, <tt><a href=\"kpv_lattice-pos-PART.html\">PART</a></tt> 1), <em>\u0433\u0430\u0448\u043a\u04e7</em> (<tt><a href=\"kpv_lattice-pos-ADV.html\">ADV</a></tt> 1, <tt><a href=\"kpv_lattice-pos-PART.html\">PART</a></tt> 1)\n\n\n* <em>\u0436\u04e7</em>\n  * <tt><a href=\"kpv_lattice-pos-PART.html\">PART</a></tt> 16: <em>\u0421\u0456\u0434\u0437 <b>\u0436\u04e7</b> \u043a\u043e\u043b\u04e7 \u0441\u0435\u0442\u043d\u044b \u044b\u0434\u0436\u044b\u0434 \u0442\u04e7\u0434\u0447\u0430\u043d\u043b\u0443\u043d \u0432\u043e\u0448\u04e7\u043c\u044a\u044f\u0441\u043a\u04e7\u0434 \u0442\u044b\u0448\u043a\u0430\u0441\u044c\u04e7\u043c \u0432\u044b\u043b\u04e7.</em>\n  * <tt><a href=\"kpv_lattice-pos-ADV.html\">ADV</a></tt> 13: <em>\u041c\u0435, \u0432\u043e\u043a\u04e7, \u043e\u0433 <b>\u0436\u04e7</b> \u0432\u0435\u0440\u043c\u044b \u043e\u0432\u043d\u044b \u041b\u044c\u04e7\u043c\u0432\u0430\u0442\u04e7\u0433\u044b\u0441.</em>\n* <em>\u0432\u0435\u0441\u0438\u0433</em>\n  * <tt><a href=\"kpv_lattice-pos-PART.html\">PART</a></tt> 3: <em>\u0421\u044b \u0432\u044b\u043b\u04e7 \u0432\u0438\u0434\u0437\u04e7\u0434\u0456\u0433\u043c\u043e\u0437 <b>\u0432\u0435\u0441\u0438\u0433</b> \u0448\u0443\u0448\u0442\u04e7\u043c",
  "package com.davidemortara.reactmvvm.viewmodel;\n\nimport android.support.annotation.NonNull;\n\nimport io.reactivex.disposables.CompositeDisposable;\nimport io.reactivex.disposables.Disposable;\nimport io.reactivex.subjects.BehaviorSubject;\n\npublic abstract class BaseViewModel implements IBaseViewModel {\n\n    @NonNull\n    public final BehaviorSubject<Boolean> isActive = BehaviorSubject.create();\n    private CompositeDisposable compositeDisposable;\n\n    @Override\n    public void activated() {\n        isActive.onNext(true);\n        bind();\n    }\n\n    //region rx\n\n    @Override\n    public void deactivated() {\n        isActive.onNext(false);\n        unbind();\n    }\n\n    private void bind() {\n        unbind();\n        compositeDisposable = new CompositeDisposable();\n        registerRules();\n    }\n\n    private void unbind() {\n        if (compositeDisposable!= null) {\n            compositeDisposable.clear();\n        }\n    }\n\n    protected void register(Disposable disposable) {\n        compositeDisposable.add(disposable);\n    }\n\n    protected abstract void registerRules();\n\n    //endregion\n}\n",
  "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint main(){\r\n\r\n    int a[] = {1,3,5,7,10,11,12,13};\r\n    int start = 0;\r\n    int end = sizeof(a)/sizeof(int) -1;\r\n    int current_sum =0;\r\n    int target = 16;\r\n\r\n    while (start<end)\r\n    {\r\n        current_sum = a[start]+ a[end] ;\r\n        if (current_sum <target)\r\n        {\r\n            start++;\r\n\r\n        }\r\n        else if (current_sum >target)\r\n        {\r\n            end--;\r\n        }\r\n        else if(current_sum == target){\r\n            cout<<a[start]<<\",\"<<a[end]<<endl;\r\n            start++;\r\n            end --;\r\n        }\r\n\r\n        \r\n        \r\n    }\r\n    \r\n\r\n}",
  "/*******************************************************************************\n * Copyright 2019 Samsung Electronics All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *******************************************************************************/\n\n// Package internalhandler implements REST server functions to communication between orchestrations\npackage internalhandler\n\nimport (\n\t\"io/ioutil\"\n\t\"log\"\n\t\"net\"\n\t\"net/http\"\n\t\"strings\"\n\n\t\"common/commandvalidator\"\n\t\"common/requestervalidator\"\n\t\"common/types/servicemgrtypes\"\n\t\"orchestrationapi\"\n\t\"restinterface\"\n\t\"restinterface/cipher\"\n\t\"restinterface/resthelper\"\n)\n\nconst logPrefix = \"RestInternalInterface\"\n\n// Handler struct\ntype Handler struct {\n\tisSetAPI bool\n\tapi      orchestrationapi.OrcheInternalAPI\n\n\thelper resthelper.RestHelper\n\n\trestinterface.HasRoutes\n\tcipher.HasCipher\n}\n\nvar handler *Handler\n\nfunc init() {\n\thandler = new(Handler)\n\thandler.helper = resthelper.GetHelper()\n\thandler.Routes = restinterface.Routes{\n\t\trestinterface.Route{\n\t\t\tName:        \"APIV1Ping\",\n\t\t\tMethod:      strings.ToUpper(\"Get\"),\n\t\t\tPattern:     \"/api/v1/ping\",\n\t\t\tHandlerFunc: handler.APIV1Ping,\n\t\t},\n\n\t\trestinterface.Route{\n\t\t\tName:        \"APIV1ServicemgrServicesPost\",\n\t\t\tMethod:      strings.ToUpper(\"Post\"),\n\t\t\tPattern:     \"/api/v1/servicemgr/services\",\n\t\t\tHandlerFunc: handler.APIV1ServicemgrServicesPost,\n\t\t},\n\n\t\trestinterface.Route{\n\t\t\tName:        \"APIV1ServicemgrServicesNotificationServiceIDPost\",\n\t\t\tMethod:      strings.ToUpper(\"Post\"),\n\t\t\tPattern:     \"/api/v1/servicemgr/services/notification/{serviceid}\",\n\t\t\tHandlerFunc: handler.APIV1ServicemgrServicesNotificationServiceIDPost,\n\t\t},\n\n\t\trestinterface.Route{\n\t\t\tName:        \"APIV1ScoringmgrScoreLibnameGet\",\n\t\t\tMethod:      strings.ToUpper(\"Get\"),\n\t\t\tPattern:     \"/api/v1/scoringmgr/score\",\n\t\t\tHandlerFunc: handler.APIV1ScoringmgrScoreLibnameGet,\n\t\t},\n\t}\n}\n\n// GetHandler returns the singleton Handler instance\nfunc GetHandler() *Handler {\n\treturn handler\n}\n\n// SetOrchestrationAPI sets OrcheInternalAPI\nfunc (h *Handler) SetOrchestrationAPI(o orchestrationapi.OrcheInternalAPI) {\n\th.api = o\n\th.isSetAPI = true\n}\n\nfunc (h *Handler) SetCertificateFilePath(path string) {\n\trh := resthelper.GetHelperWithCertificate()\n\trh.SetCertificateFilePath(path)\n\th.helper = resthelper.GetHelper()\n}\n\n// APIV1Ping handles ping request from remote orchestration\nfunc (h *Handler) APIV1Ping(w http.ResponseWriter, r *http.Request) {\n\th.helper.Response(w, http.StatusOK)\n}\n\n// APIV1ServicemgrServicesPost handles service execution request from remote orchestration\nfunc (h *Handler) APIV1ServicemgrServicesPost(w http.ResponseWriter, r *http.Request) {\n\tlog.Printf(\"[%s] APIV1ServicemgrServicesPost\", logPrefix)\n\tif h.isSetAPI == false {\n\t\tlog.Printf(\"[%s] does not set api\", logPrefix)\n\t\th.helper.Response(w, http.StatusServiceUnavailable)\n\t\treturn\n\t} else if h.IsSetKey == false {\n\t\tlog.Printf(\"[%s] does not set key\", logPrefix)\n\t\th.helper.Response(w, http.StatusServiceUnavailable)\n\t\treturn\n\t}\n\n\tremoteAddr, _, _ := net.SplitHostPort(r.RemoteAddr)\n\tencryptBytes, _ := ioutil.ReadAll(r.Body)\n\n\tappInfo, err := h.Key.DecryptByteToJSON(encryptBytes)\n\tif err!= nil {\n\t\tlog.Printf(\"[%s] can not decryption\", logPrefix)\n\t\th.helper.Response(w, http.StatusServiceUnavailable)\n\t\treturn\n\t}\n\n\tappInfo[\"NotificationTargetURL\"] = remoteAddr\n\n\tlog.Printf(\"[%s] Requested AppInfo\", logPrefix)\n\tlog.Printf(\"[%s] Requester    : %v\", logPrefix, appInfo[\"Requester\"].(string))\n\tlog.Printf(\"[%s] ServiceID    : %v\", logPrefix, appInfo[\"ServiceID\"].(float64))\n\tlog.Printf(\"[%s] ServiceName  : %v\", logPrefix, appInfo[\"ServiceName\"].(string))\n\tlog.Printf(\"[%s] NotificationTargetURL : %v\", logPrefix, appInfo[\"NotificationTargetURL\"].(string))\n\tlog.Printf(\"[%s] ExecutionCmd : %v\", logPrefix, appInfo[\"UserArgs\"].([]interface{}))\n\n\targs := make([]string, 0)\n\tfor _, arg := range appInfo[\"UserArgs\"].([]interface{}) {\n\t\targs = append(args, arg.(string))\n\t}\n\texecutionType := args[len(args)-1]\n\targs = args[:len(args)-1]\n\n\tif executionType!= \"container\" {\n\t\tserviceName := appInfo[\"ServiceName\"].(string)\n\t\trequester := appInfo[\"Requester\"].(string)\n\t\tvRequester := requestervalidator.RequesterValidator{}\n\t\tif err := vRequester.CheckRequester(serviceName, requester); err!= nil {\n\t\t\tlog.Printf(\"[%s] \", err.Error())\n\t\t\th.helper.Response(w, http.StatusBadRequest)\n\t\t\treturn\n\t\t}\n\n\t\tvalidator := commandvalidator.CommandValidator{}\n\t\tif err := validator.CheckCommand(serviceName, args); err!= nil {\n\t\t\tlog.Printf(\"[%s] \", err.Error())\n\t\t\th.helper.Response(w, http.StatusBadRequest)\n\t\t\treturn\n\t\t}\n\t}\n\n\th.api.ExecuteAppOnLocal(appInfo)\n\n\trespJSONMsg := make(map[string]interface{})\n\trespJSONMsg[\"Status\"] = servicemgrtypes.ConstServiceStatusStarted\n\n\trespEncryptBytes, err := h.Key.EncryptJSONToByte(respJSONMsg)\n\tif err!= nil {\n\t\tlog.Printf(\"[%s] can not encryption\", logPrefix)\n\t\th.helper.Response(w, http.StatusServiceUnavailable)\n\t\treturn\n\t}\n\n\th.helper.ResponseJSON(w, respEncryptBytes, http.StatusOK)\n}\n\n// APIV1ServicemgrServicesNotificationServiceIDPost handles service notification request from remote orchestration\nfunc (h *Handler) APIV1ServicemgrServicesNotificationServiceIDPost(w http.ResponseWriter, r *http.Request) {\n\tlog.Printf(\"[%s] APIV1ServicemgrServicesNotificationServiceIDPost\", logPrefix)\n\tif h.isSetAPI == false {\n\t\tlog.Printf(\"[%s] does not set api\", logPrefix)\n\t\th.helper.Response(w, http.StatusServiceUnavailable)\n\t\treturn\n\t} else if h.IsSetKey == false {\n\t\tlog.Printf(\"[%s] does not set key\", logPrefix)\n\t\th.helper.Response(w, http.StatusServiceUnavailable)\n\t\treturn\n\t}\n\n\tencryptBytes, _ := ioutil.ReadAll(r.Body)\n\n\tstatusNotification, err := h.Key.DecryptByteToJSON(encryptBytes)\n\tif err!= nil {\n\t\tlog.Printf(\"[%s] can not decryption\", logPrefix)\n\t\th.helper.Response(w, http.StatusServiceUnavailable)\n\t\treturn\n\t}\n\n\tserviceID := statusNotification[\"ServiceID\"].(float64)\n\tstatus := statusNotification[\"Status\"].(string)\n\n",
  "<head>\n        \n    <!--\n        DOCS\n    ================================\n\n        \u0421\u0442\u0440\u0430\u043f\u043e\u043d https://bootstrap-4.ru/docs/5.1/components/navbar/#supported-content\n        \u0414\u0440\u043e\u043f\u0434\u0430\u0443\u043d https://www.w3schools.com/howto/tryit.asp?filename=tryhow_css_js_dropdown_filter\n        \u041f\u0438\u0437\u0434\u0438\u043d\u0433 https://timetable.spbu.ru/MATH/StudentGroupEvents/Attestation/304513?Length=18\n        \u0410\u041f\u0415\u0415\u0415 https://portal.kuzstu.ru/api/\n    -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <title>\u0420\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0437\u0430\u043d\u044f\u0442\u0438\u0439 \u041a\u0443\u0437\u0413\u0422\u0423: \u043f\u0440\u0435\u043f\u043e\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u0438 \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u044b</title>\n\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/css/bootstrap.min.css\" rel=\"stylesheet\" crossorigin=\"anonymous\">\n    <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js\"crossorigin=\"anonymous\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/js/bootstrap.min.js\" crossorigin=\"anonymous\"></script>\n    <link rel=\"shortcut icon\" href=\"static/trash/minilogo.png\" type=\"image/png\"/>\n\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Ubuntu:400,700\"/>\n    <link href=\"static/main.css\" rel=\"stylesheet\">\n    <link href=\"static/dev.css\" rel=\"stylesheet\">\n    \n        \n<body>\n    <div class=\"container-fluid initalContainerHead\">\n        <nav class=\"navbar desimborto navbar-dark \">\n            <div class=\"container\">\n                <div class=\"col-2\">\n                    <!--\n                        <a class=\"navbar-brand\">\u0420\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u041a\u0443\u0437\u0413\u0422\u0423</a>\n                    -->\n                    <img class=\"navbar-brand\" src=\"static/trash/mainlogo.png\" style=\"padding-top: 2px;padding-right: 2px;padding-bottom: 2px;padding-left: 2px;\">\n                    \n                </div>\n                <div class=\"col-xl-6 col-sm-4\">\n                    <!---\n                    <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n                        <div class=\"navbar-nav\" style=\"flex-direction: row;\">\n                          <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">\u0413\u043b\u0430\u0432\u043d\u0430\u044f</a>\n                          <a class=\"nav-link\" href=\"#\">\u042d\u043a\u0441\u043f\u043e\u0440\u0442 \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044f</a>\n                          <a class=\"nav-link\" href=\"#\">\u0412\u0435\u0441\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b</a>\n                          <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">\u041a\u0430\u0431\u0438\u043d\u0435\u0442 \u043f\u0440\u0435\u043f\u043e\u0434\u0430</a>\n                        </div>\n                      </div>\n                    -->\n                </div>\n                <div class='col-xl-6 col-sm-6 p0'>\n                    <form class=\"d-flex saparento\">\n                        <input class=\"formespateroindutodasfind form-control me-2\" type=\"text\" autocomplete=\"off\" placeholder=\"\u043d\u0435\u0445\u0432\u0430\u0442\u0430\u0435\u0442\u0434\u0436\u0430\u0432\u0430\u0441\u043a\u0440\u0438\u043f\u0442\u0430!!\" aria-label=\"Search\" id=\"myInput\" onmousedown=\"myFunction()\" onkeyup=\"filterFunction()\">\n                        <div id=\"myDropdown\" class=\"dropdown-content formespateroindutodasfind\" style=\"margin-top: 38px;\">\n                            <!--http://localhost:8000/icsshudle/web-api/search?tgt=\u041a\u0421\u0421 \u0432\u043e\u043d\u0442\u0435\u043d\u0442\u0438\u043c \u0430\u043f\u0435---> \n                                <!--\u0422\u0423\u0422 \u0432\u043e\u0442 \u043f\u043e\u0441\u043b\u0435 \u0430\u044f\u043a\u0441\u043f\u043e\u0438\u0441\u043a\u0430 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c\u0441\u044f ID!! \u0438 \u0443\u0436\u0435 \u043e\u043d \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u0432 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435 \u0430 \u043d\u0435 \u0432\u044b\u0441\u044b\u043b\u0430\u0442\u044c \u0442\u0435\u043a\u0441\u0442 \u0432 \u0436\u043e\u043f\u0443 \u0430\u043d\u0430\u043b\u0438\u0437\u0443 \u0440\u0430\u043d\u0434\u043e\u043c\u0430-->\n\n                          </div>\n                          \n                        <div class=\"dropdown\">\n                            <button onclick=\"updateRasp()\" class=\"btn btn-outline-primary\">\u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c</button>\n                            \n                          </div>\n                          \n                    </form>\n                </div>\n            </div>\n          </nav>\n          \n    </div>\n    \n\n\n    \n    <div id='body'></div>\n</body>\n\n<script>\n    \n    fsdadp=0\n    //ftgttext=localStorage.getItem('tgttext')\n    //ftgtid = '-75942'\n    //ftgttext='\u041a\u043e\u0440\u043e\u0442\u0438\u043d \u0412\u043b\u0430\u0434\u0438\u043c\u0438\u0440 \u041e\u043b\u0435\u0433\u043e\u0432\u0438\u0447'\n    ftgtid=6265\n    ftgttext='\u041a\u0421\u0441-211'\n    //ftgtid=localStorage.getItem('tgtid')\n    if(ftgttext!=null && ftgtid!=null){\n        document.getElementById(\"myInput\").placeholder=ftgttext;\n        }\n    else{\n        document.getElementById(\"myInput\").placeholder=\"\u041d\u0430\u0436\u043c\u0438\u0442\u0435 \u0447\u0442\u043e\u0431\u044b \u0438\u0441\u043a\u0430\u0442\u044c\"\n        }\n    \n    const baseURL='http://localhost:8000/icsshudle/web-api/v1.1d/'\n    /* When the user clicks on the button,\n    toggle between hiding and showing the dropdown content */\n    function togler(id){document.getElementById(\"scidred\"+id.toString()).classList.toggle('show');}\n    function plotRaspDiv(isTeacher,name,content){\n        console.log(isTeacher,\"\u0445\u0443\u0445\u0439\u0443\u0445\u0445\u0443\u0439\u0445\u0443\u0439\")\n        ///\u0412\u041e\u0422\u0422\u0423\u0422\u0412\u041e\u0422 \u0421\u041e\u0420\u0422\u0418\u0420\u041e\u0412\u041a\u0423 \u041f\u041e\u0414\u0410\u0422\u0415 \u0418 \u041a\u0410\u0421\u0422\u0420\u0410\u0426\u0418\u042e\n        suckers={\n            '6':\"\u0421\u0431\",\n            '5':\"\u041f\u0442\",\n            '4':\"\u0427\u0442\",\n            '3':\"\u0421\u0440\",\n            '2':\"\u0412\u0442\",\n            '1':\"\u041f\u043d\",\n            '7':\"\u0412\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435? \u0411\u043b\u044f\u0442\u044c? \u0428\u0438\u0437\u0430?\",\n            }\n\n        for(i in content){\n            \n            dateDisplay=content[i]['date'].replace('-',0)+suckers[content[i]['day_number']]\n            csd=content[i]['date'].split('-')\n            csd[0]=Number(csd[0])%1000\n            dateDisplay=suckers[content[i]['day_number']]+\", \"+csd[2]+'<span class=\"romandate\">'+convertToRoman(csd[1])+\"</span><span class='display-7'>\"+csd[0]+'</span>'\n            up='<div class=\"container\" style=\"max-width:550px;\"><h1 class=\"display-6 maintainerColorTextDisplay\">'+dateDisplay+'</h1><div class=\"list-group\">'\n            down='</div></div>'//name \u044d\u0442\u043e \u0433\u0440\u0443\u043f\u043f\u0430 \u0438\u043b\u0438 \u0438\u043c\u044f \u043f\u0440\u0435\u043f\u043e\u0434\u0430\n            body=subPlot(isTeacher,name,content[i]['content'])\n\n            var sp = document.createElement(\"a\");\n            sp.innerHTML=up+body+down\n            document.getElementById(\"body\").appendChild(sp);\n        }\n        \n\n\n        \n        function subPlot(isTeacher,subDate,subContent){\n            //console.log('subPlot',subDate,isTeacher,subContent)\n            costi=['&#9856;','&#9857;','&#9858;','&#9859;','&#9860;','&#9861;']\n            dictCallstring=[['09:00', '10:30'], ['10:50', '12:20'], ['13:20', '14:50'], ['15:10', '16:40'], ['17:00', '18:30'], ['18:50', '20:20'], ['20:30', '22:00']]\n            body=''\n            \n            for(i in subContent){\n                console.log('subcon',isTeacher,subContent)\n                educzone=subContent[i]['place']+\"(\u0430\u0434\u0440\u0435\u0441 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d)\"\n                if(1==1){\n                educorus=Math.",
  "<!doctype html><html lang=\"en\"><head><meta charset=\"utf-8\"><title>Phoenix</title><base href=\".\"><meta name=\"viewport\" content=\"width=device-width,initial-scale=1\"><link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\"><link href=\"styles.cd18afb0602aca13d54c.bundle.css\" rel=\"stylesheet\"/></head><body><app-root><div class=\"spinner\"><div class=\"bounce1\"></div><div class=\"bounce2\"></div><div class=\"bounce3\"></div></div></app-root><script type=\"text/javascript\" src=\"inline.3bcbcc77a3b6eb226b7d.bundle.js\"></script><script type=\"text/javascript\" src=\"polyfills.0cb645eb84f3c188037f.bundle.js\"></script><script type=\"text/javascript\" src=\"scripts.7fcd836acfcfb293464c.bundle.js\"></script><script type=\"text/javascript\" src=\"main.5a68b210a2897a70482a.bundle.js\"></script></body></html>",
  "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nusing System;\nusing System.Collections.Generic;\n\nusing Aliyun.Acs.Core.Transform;\nusing Aliyun.Acs.R_kvstore.Model.V20150101;\n\nnamespace Aliyun.Acs.R_kvstore.Transform.V20150101\n{\n    public class CreateInstancesResponseUnmarshaller\n    {\n        public static CreateInstancesResponse Unmarshall(UnmarshallerContext _ctx)\n        {\r\n\t\t\tCreateInstancesResponse createInstancesResponse = new CreateInstancesResponse();\r\n\r\n\t\t\tcreateInstancesResponse.HttpResponse = _ctx.HttpResponse;\r\n\t\t\tcreateInstancesResponse.RequestId = _ctx.StringValue(\"CreateInstances.RequestId\");\r\n\t\t\tcreateInstancesResponse.OrderId = _ctx.StringValue(\"CreateInstances.OrderId\");\r\n\r\n\t\t\tList<string> createInstancesResponse_instanceIds = new List<string>();\r\n\t\t\tfor (int i = 0; i < _ctx.Length(\"CreateInstances.InstanceIds.Length\"); i++) {\r\n\t\t\t\tcreateInstancesResponse_instanceIds.Add(_ctx.StringValue(\"CreateInstances.InstanceIds[\"+ i +\"]\"));\r\n\t\t\t}\r\n\t\t\tcreateInstancesResponse.InstanceIds = createInstancesResponse_instanceIds;\n        \n\t\t\treturn createInstancesResponse;\n        }\n    }\n}\n",
  "import React from \"react\";\nimport { Tab } from \"./Tab\";\nimport { RadioButton16 } from \"@carbon/icons-react\";\nimport \"./tab.scss\";\n\nexport const Playground = (args) => <Tab {...args} />;\nPlayground.args = { inputLabel: \"Menu Title\", version: \"version-1\" };\n\nexport const Version = () => (\n  <div style={{ display: \"flex\", flexDirection: \"row\", gap: 50 }}>\n    <Tab inputLabel=\"Version 01\" version=\"version-1\" status=\"selected\" />\n    <Tab inputLabel=\"Version 02\" version=\"version-2\" status=\"selected\" />\n    <Tab inputLabel=\"Version 03\" version=\"version-3\" status=\"selected\" />\n  </div>\n);\n\nexport const State = () => (\n  <div style={{ display: \"flex\", flexDirection: \"column\", gap: 20 }}>\n    Version 1\n    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n      <Tab version=\"version-1\" inputLabel=\"Selected\" status=\"selected\" />\n      <Tab version=\"version-1\" inputLabel=\"Unselected\" status=\"unselected\" />\n      <Tab version=\"version-1\" inputLabel=\"Unselected\" status=\"unselected\" />\n    </div>\n    Version 2\n    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n      <Tab version=\"version-2\" inputLabel=\"Selected\" status=\"selected\" />\n      <Tab version=\"version-2\" inputLabel=\"Unselected\" status=\"unselected\" />\n      <Tab version=\"version-2\" inputLabel=\"Unselected\" status=\"unselected\" />\n    </div>\n    Version 3\n    <div style={{ display: \"flex\", flexDirection: \"column\", width: 200 }}>\n      <Tab version=\"version-3\" inputLabel=\"Selected\" status=\"selected\" />\n      <Tab version=\"version-3\" inputLabel=\"Unselected\" status=\"unselected\" />\n      <Tab version=\"version-3\" inputLabel=\"Unselected\" status=\"unselected\" />\n    </div>\n  </div>\n);\n\nexport const WithIcon = () => (\n  <Tab\n    icon={<RadioButton16 className=\"icon\" />}\n    version=\"version-3\"\n    inputLabel=\"Menu Title\"\n    status=\"selected\"\n  />\n);\n\nconst TabStory = {\n  title: \"Empofarm/Atom/Tab\",\n  component: Tab,\n};\n\nexport default TabStory;\n",
  "{% extends 'base/base.html' %}\n\n{% block content %}\n<form method=\"post\">\n\t{% csrf_token %}\n\t<h3>\u00bfDesea eliminar la solicitud de {{ object.persona.nombre }}{{ object.persona.apellidos }}?</h3>\t\n\t<button class=\"btn btn-danger\" type=\"submit\">S\u00ed, eliminar</button>\n\t<a class= \"btn btn-default\" href=\"{% url'mascota_listar' %}\">Cancelar</a>\n</form>\n{% endblock %}",
  "@extends('frontend.layouts.main')\n@extends('frontend.layouts.header')\n@section('header')@endsection\n@section('main')\n\n<div class=\"container\">\n    @foreach($posts as $post)\n\n    <div class=\"item mb-5\">\n        <div class=\"media\">\n\n            <img class=\"mr-3 img-fluid post-thumb d-none d-md-flex\" src=\"{{asset('backend/img/'.$post->image)}}\" alt=\"image\">\n            <div class=\"media-body\">\n                <h3 class=\"title mb-1\"><a href=\"{{ route('blog', $post->slug) }}\">{{ $post->title }}</a></h3>\n                <div class=\"meta mb-1\"><span class=\"comment\">Post Number {{$post->id}}</span>\n                    <span class=\"date\"></span>\n                    <span class=\"comment\"><span class=\"text-info\">Category</span> {{ $post->categories }}</span>\n                    <span class=\"text-primary\">#{{ $post->tags }}</span></div>\n                <div class=\"intro\">{{substr( $post->description, 0,30) }}</div>\n                <a class=\"more-link\" href=\"{{ route('blog', $post->slug) }}\">Read more &rarr;</a>\n            </div><!--//media-body-->\n        </div><!--//media-->\n    </div><!--//item-->\n    @endforeach\n\n\n        <div class=\"d-flex justify-content-center\">\n            {{$posts->links()}}\n        </div>\n</div>\n\n\n@endsection\n",
  "package com.viadee.sonarquest.entities;\n\nimport java.sql.Date;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.stream.Collectors;\n\nimport javax.persistence.CascadeType;\nimport javax.persistence.Column;\nimport javax.persistence.Entity;\nimport javax.persistence.EnumType;\nimport javax.persistence.Enumerated;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.Id;\nimport javax.persistence.JoinColumn;\nimport javax.persistence.ManyToOne;\nimport javax.persistence.OneToMany;\nimport javax.persistence.Table;\n\nimport com.fasterxml.jackson.annotation.JsonIgnore;\nimport com.viadee.sonarquest.constants.QuestState;\n\n@Entity\n@Table(name = \"Quest\")\npublic class Quest {\n\n    @Id\n    @GeneratedValue\n    private Long id;\n\n    @Column(name = \"startdate\")\n    private Date startdate;\n\n    @Column(name = \"enddate\")\n    private Date enddate;\n\n    @Column(name = \"visible\")\n    private Boolean visible;\n\n    @Column(name = \"title\")\n    private String title;\n\n    @Column(name = \"story\")\n    private String story;\n\n    @Column(name = \"creator_name\")\n    private String creatorname;\n\n    @Column(name = \"status\")\n    @Enumerated(EnumType.STRING)\n    private QuestState status;\n\n    @Column(name = \"gold\")\n    private Long gold;\n\n    @Column(name = \"xp\")\n    private Long xp;\n\n    @Column(name = \"image\")\n    private String image;\n\n    @ManyToOne()\n    @JoinColumn(name = \"world_id\")\n    private World world;\n\n    @JsonIgnore\n    @ManyToOne()\n    @JoinColumn(name = \"adventure_id\")\n    private Adventure adventure;\n\n    @JsonIgnore\n    @OneToMany(mappedBy = \"quest\")\n    private List<Task> tasks;\n\n    @JsonIgnore\n    @OneToMany(cascade = CascadeType.ALL, mappedBy = \"quest\")\n    private List<Participation> participations;\n\n    public Quest() {\n    }\n\n    public Quest(final String title, final String story, final QuestState status, final Long gold, final Long xp,\n            final String image, final Boolean visible) {\n        this.title = title;\n        this.story = story;\n        this.status = status;\n        this.gold = gold;\n        this.xp = xp;\n        this.image = image;\n        this.visible = visible;\n    }\n\n    public Quest(final String title, final String story, final QuestState status, final Long gold, final Long xp,\n            final String image, final World world, final Boolean visible, final Adventure adventure,\n            final List<Task> tasks, final List<Participation> participations) {\n        this.title = title;\n        this.story = story;\n        this.status = status;\n        this.gold = gold;\n        this.xp = xp;\n        this.world = world;\n        this.visible = visible;\n        this.adventure = adventure;\n        this.tasks = tasks;\n        this.participations = participations;\n        this.image = image;\n    }\n\n    public Long getId() {\n        return id;\n    }\n\n    public void setId(final Long id) {\n        this.id = id;\n    }\n\n    public String getTitle() {\n        return title;\n    }\n\n    public void setTitle(final String title) {\n        this.title = title;\n    }\n\n    public String getStory() {\n        return story;\n    }\n\n    public void setStory(final String story) {\n        this.story = story;\n    }\n\n    public QuestState getStatus() {\n        return status;\n    }\n\n    public void setStatus(final QuestState status) {\n        this.status = status;\n    }\n\n    public Long getGold() {\n        return gold;\n    }\n\n    public void setGold(final Long gold) {\n        this.gold = gold;\n    }\n\n    public Long getXp() {\n        return xp;\n    }\n\n    public void setXp(final Long xp) {\n        this.xp = xp;\n    }\n\n    public String getImage() {\n        return image;\n    }\n\n    public void setImage(final String image) {\n        this.image = image;\n    }\n\n    public World getWorld() {\n        return world;\n    }\n\n    public void setWorld(final World world) {\n        this.world = world;\n    }\n\n    public Adventure getAdventure() {\n        return adventure;\n    }\n\n    public void setAdventure(final Adventure adventure) {\n        this.adventure = adventure;\n    }\n\n    public List<Task> getTasks() {\n        return tasks;\n    }\n\n    public void setTasks(final List<Task> tasks) {\n        this.tasks = tasks;\n    }\n\n    public List<Participation> getParticipations() {\n        return participations;\n    }\n\n    public void setParticipations(final List<Participation> participations) {\n        this.participations = participations;\n    }\n\n    /**\n     * Looks up the usernames of all participants in this quests and returns them in a list.\n     */\n    public List<String> getParticipants() {\n        if (participations!= null) {\n            return participations.stream().map(Participation::getUser).map(User::getUsername)\n                   .collect(Collectors.toList());\n        } else {\n            return new ArrayList<>();\n        }\n    }\n\n    public Boolean getVisible() {\n        return visible;\n    }\n\n    public void setVisible(Boolean visible) {\n        this.visible = visible;\n    }\n\n    public Date getEnddate() {\n        return enddate;\n    }\n\n    public void setEnddate(Date enddate) {\n        this.enddate = enddate;\n    }\n\n    public Date getStartdate() {\n        return startdate;\n    }\n\n    public void setStartdate(Date startdate) {\n        this.startdate = startdate;\n    }\n\n    public String getCreatorName() {\n        return creatorname;\n    }\n\n    public void setCreatorName(String creatorname) {\n        this.creatorname = creatorname;\n    }\n}\n",
  "const api = require(\"./PlaceApi\");\nconst dal = require(\"./PlaceDAL\");\nconst services = require(\"./Services\");\n\nmodule.exports = {\n  api,\n  dal,\n  services\n}\n",
  "\ufeff#pragma once\n\n#include \"il2cpp-config.h\"\n\n#ifndef _MSC_VER\n# include <alloca.h>\n#else\n# include <malloc.h>\n#endif\n\n#include <stdint.h>\n\n#include \"mscorlib_System_ValueType3507792607.h\"\n\n// System.String\nstruct String_t;\n// UnityEngine.GUIStyle\nstruct GUIStyle_t1799908754;\n\n\n\n\n#ifdef __clang__\n#pragma clang diagnostic push\n#pragma clang diagnostic ignored \"-Winvalid-offsetof\"\n#pragma clang diagnostic ignored \"-Wunused-variable\"\n#endif\n\n// System.Collections.Generic.KeyValuePair`2<System.String,UnityEngine.GUIStyle>\nstruct  KeyValuePair_2_t1472033238 \n{\npublic:\n\t// TKey System.Collections.Generic.KeyValuePair`2::key\n\tString_t* ___key_0;\n\t// TValue System.Collections.Generic.KeyValuePair`2::value\n\tGUIStyle_t1799908754 * ___value_1;\n\npublic:\n\tinline static int32_t get_offset_of_key_0() { return static_cast<int32_t>(offsetof(KeyValuePair_2_t1472033238, ___key_0)); }\n\tinline String_t* get_key_0() const { return ___key_0; }\n\tinline String_t** get_address_of_key_0() { return &___key_0; }\n\tinline void set_key_0(String_t* value)\n\t{\n\t\t___key_0 = value;\n\t\tIl2CppCodeGenWriteBarrier(&___key_0, value);\n\t}\n\n\tinline static int32_t get_offset_of_value_1() { return static_cast<int32_t>(offsetof(KeyValuePair_2_t1472033238, ___value_1)); }\n\tinline GUIStyle_t1799908754 * get_value_1() const { return ___value_1; }\n\tinline GUIStyle_t1799908754 ** get_address_of_value_1() { return &___value_1; }\n\tinline void set_value_1(GUIStyle_t1799908754 * value)\n\t{\n\t\t___value_1 = value;\n\t\tIl2CppCodeGenWriteBarrier(&___value_1, value);\n\t}\n};\n\n#ifdef __clang__\n#pragma clang diagnostic pop\n#endif\n",
  "var Searcher = function(input, collection){\n    var _self   = this,\n        methods = false;\n\n    var _vars = {\n        input    : input,\n        wrapper  : false,\n        no_bind  : [],\n        filter   : new Filter(collection),\n        callback : false,\n        tmpl     : false\n    }\n\n    this.show            = function(filter){ methods.show(filter)}\n    this.hide            = function(){ methods.hide()}\n    this.edit_collection = function(){ methods.edit_collection()}\n    this.set_template    = function(name){ _vars.tmpl = name; };\n    this.get_template    = function(name){ return tmpls[name]};\n    this.init            = function(filters){ return methods.init(filters)};\n    this.no_bind         = function(elements){ methods.no_bind(elements)}\n    this.callback        = function(callback){ _vars.callback = callback}\n    this.is_active       = function(){ return _vars.wrapper.hasClass('on')}\n    this.add_filter      = function(name, filter){ methods.add_filter(name, filter)}\n    this.remove_filter   = function(name){ methods.remove_filter(name)}\n\n    _vars.no_bind.push(_vars.input);\n\n    methods = {\n        init : function(filters){\n            var wp_seacher = $(tmpls.wrapper);\n\n            $('body').append(wp_seacher);\n\n            _vars.wrapper = wp_seacher;\n            $.each(filters, function(name, filter){\n                methods.add_filter(name, filter);\n            })\n\n            _vars.wrapper.on('click', 'li', function(){\n                methods.selected($(this));\n            })\n\n            var ul_searcher = _vars.wrapper.find('ul'),\n                keys        = [13, 38, 40];\n\n            _vars.input.bind('keyup.move_searcher',function(e){\n                var code = (e.keyCode? e.keyCode : e.which);\n                if(_vars.input.val()!= \"\"){\n                    if(keys.indexOf(code) >= 0){\n                        var actual_li    = ul_searcher.find('li.selected'),\n                            actual_index = actual_li.index(),\n                            ul_length    = ul_searcher.find('li').length;\n\n                        switch (code){\n                            case 38 : //arriba\n                                actual_li.removeClass('selected');\n                                if(actual_li.length > 0){\n                                    if(actual_index == 0){\n                                        ul_searcher.find('li:last').addClass('selected');\n                                    }else{\n                                        ul_searcher.find('li:eq(' + (actual_index - 1) + ')').addClass('selected');\n                                    }\n                                }else{\n                                    ul_searcher.find('li:last').addClass('selected');\n                                }\n                                break;\n                            case 40 : //abajo\n                                actual_li.removeClass('selected');\n                                if(actual_li.length > 0){\n                                    if(actual_index == (ul_length - 1)){\n                                        ul_searcher.find('li:first').addClass('selected');\n                                    }else{\n                                        ul_searcher.find('li:eq(' + (actual_index + 1) + ')').addClass('selected');\n                                    }\n                                }else{\n                                    ul_searcher.find('li:first').addClass('selected');\n                                }\n                                break;\n                            case 13 :\n                                if(actual_index >= 0)\n                                    methods.selected(actual_li);\n                                break;\n                        }\n                    }else{\n                        methods.show();\n                    }\n                }else{\n                    methods.hide();\n                }\n            })\n        },\n\n        print : function(){\n            _vars.wrapper.css('top', (_vars.input.offset().top + _vars.input.outerHeight()) + 'px');\n            _vars.wrapper.css('left', _vars.input.offset().left + 'px');\n            _vars.wrapper.css('width', _vars.input.outerWidth() + 'px');\n        },\n\n        show : function(){\n            methods.print();\n            _vars.wrapper.addClass('on');\n\n            //Previene que se cierre\n            $.each(_vars.no_bind, function(i, element){\n                element.addClass('sh_nc');\n            })\n\n            //Rellena los filtros que estaban a false con el valor del input\n            var all_filters = _vars.filter.getFilters(),\n                input_val   = _vars.input.val();\n            $.each(all_filters, function(key, filter){\n                if(!filter.value)\n                    _vars.filter.fillFilterValue(key, input_val);\n            })\n\n            //Hace la busqueda\n            var filtered    = _vars.filter.applyFilters(_vars.input.val()),\n                ul_searcher = _vars.wrapper.find('ul').empty();\n\n            var tmpl = (_vars.tmpl)? tmpls[_vars.tmpl] : tmpls.li;\n            $.each(filtered, function(i, item){\n                ul_searcher.append($.tmpl(tmpl, item));\n            });\n\n            if(ul_searcher.find('li').length == 0){\n                ul_searcher.append('<li class=\"sh_no_clk\" style=\"text-align: center\">- No hay coincidencias -</li>')\n            }\n\n            $('body').bind('click.out_searcher', function(event){\n                if($(event.target).parents('.sh_nc').length == 0 &&!$(event.target).hasClass('sh_nc')){\n                    methods.hide();\n                }\n            });\n        },\n\n        selected : function(li){\n            if(!li.hasClass('sh_no_clk')){\n                var item = _vars.filter.getById(li.attr('name'));\n                if(item){\n                    _vars.input.val(\"\");\n                    if(_vars.callback && typeof(_vars.callback) == 'function')\n                        _vars.callback(item);\n                    methods.hide();\n                }\n            }\n        },\n\n        hide : function(){\n            _vars.wrapper.removeClass('on');\n            $('body').unbind('click.out_searcher');\n            $(window).unbind('keyup.move_searcher');\n\n            $.each(_vars.no_bind, function(i, element){\n                element.removeClass('sh_nc');\n            })\n        },\n\n        no_bind : function(element){\n            _vars.no_bind.push(element);\n        },\n\n        add_filter : function(name, filter){\n            _vars.filter.addFilter(name, filter);\n        },\n\n        remove_filter : function(name){\n            _vars.filter.removeFilter(name);\n        }\n    }\n\n    var tmpls = {\n        wrapper :\n            '<div class=\"searcher sh_nc\" style=\"\">' +\n                '<ul></ul>' +\n            '</div>',\n\n        li : '<li name=\"${id}\">${other.fullname}</li>',\n\n        li_medicine : '<li name=\"${id}\">${name}</li>',\n\n        search_agenda :\n            '<li name=\"${id}\">' +\n                '${other.fullname}' +\n                '{{if rol == \"1\"}}' +\n                   '(NH: ${historic} )' +\n                '{{else}}'+\n                   '(ID: ${staff_id} )' +\n                '{{/if}}'+\n            '</li>'\n    }\n\n    $(window).resize(function(){\n        methods.print();\n    });\n}",
  "#pragma once\n\n#include <vector>\n#include <list>\n#include \"dl_detect_define.hpp\"\n\nclass HumanFaceDetectMNP01\n{\nprivate:\n    void *model;\n\npublic:\n    /**\n     * @brief Construct a new Human Face Detect MNP01 object.\n     * \n     * @param score_threshold predicted boxes with score lower than the threshold will be filtered out\n     * @param nms_threshold   predicted boxes with IoU higher than the threshold will be filtered out\n     * @param top_k           first k highest score boxes will be remained\n     */\n    HumanFaceDetectMNP01(const float score_threshold, const float nms_threshold, const int top_k);\n\n    /**\n     * @brief Destroy the Human Face Detect MNP01 object.\n     * \n     */\n    ~HumanFaceDetectMNP01();\n\n    /**\n     * @brief Inference.\n     * \n     * @tparam T supports uint16_t and uint8_t,\n     *         - uint16_t: input image is RGB565\n     *         - uint8_t: input image is RGB888\n     * @param input_element pointer of input image\n     * @param input_shape   shape of input image\n     * @param candidates    candidate boxes on input image\n     * @return detection result\n     */\n    template <typename T>\n    std::list<dl::detect::result_t> &infer(T *input_element, std::vector<int> input_shape, std::list<dl::detect::result_t> &candidates);\n};\n",
  "import validator from 'validator';\nimport { z } from 'zod';\n\nexport const Config = z.object({\n  CI: z.string().refine(validator.isBoolean).transform(validator.toBoolean),\n  NODE_ENV: z.enum(['development', 'test', 'production']),\n  PORT: z.string().refine(validator.isPort).transform(validator.toInt),\n});\n\nexport type Config = Readonly<z.infer<typeof Config>>;\n",
  "package chap14;\nimport java.util.*;\nimport java.awt.event.*;\nimport javax.swing.*;\nimport java.awt.*;\nimport java.io.*;\n\npublic class QuizCardBuilder {\n\n    private JTextArea question;\n    private JTextArea answer;\n    private ArrayList cardList;\n    private JFrame frame;\n    \n    // additional, bonus method not found in any book!\n\n    public static void main (String[] args) {\n       QuizCardBuilder builder = new QuizCardBuilder();\n       builder.go();\n    }\n    \n    public void go() {\n        // build gui\n        frame = new JFrame(\"Quiz Card Builder\");\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);  // title bar\n        JPanel mainPanel = new JPanel();\n        Font bigFont = new Font(\"sanserif\", Font.BOLD, 24);\n        question = new JTextArea(6,20);\n        question.setLineWrap(true);\n        question.setWrapStyleWord(true);\n        question.setFont(bigFont);\n       \n        JScrollPane qScroller = new JScrollPane(question);\n        qScroller.setVerticalScrollBarPolicy(\n                  ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);\n        qScroller.setHorizontalScrollBarPolicy(\n                  ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);\n\n        answer = new JTextArea(6,20);\n        answer.setLineWrap(true);\n        answer.setWrapStyleWord(true);\n        answer.setFont(bigFont);\n       \n        JScrollPane aScroller = new JScrollPane(answer);\n        aScroller.setVerticalScrollBarPolicy(\n                  ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);\n        aScroller.setHorizontalScrollBarPolicy(\n                  ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);\n\n        JButton nextButton = new JButton(\"Next Card\");\n        cardList = new ArrayList();\n        JLabel qLabel = new JLabel(\"Question:\");\n        JLabel aLabel = new JLabel(\"Answer:\");\n        \n        mainPanel.add(qLabel);\n        mainPanel.add(qScroller);\n        mainPanel.add(aLabel);\n        mainPanel.add(aScroller);\n        mainPanel.add(nextButton);\n        nextButton.addActionListener(new NextCardListener());\n        JMenuBar menuBar = new JMenuBar();\n        JMenu fileMenu = new JMenu(\"File\");\n        JMenuItem newMenuItem = new JMenuItem(\"New\");\n        \n        JMenuItem saveMenuItem = new JMenuItem(\"Save\");\n        newMenuItem.addActionListener(new NewMenuListener());\n        saveMenuItem.addActionListener(new SaveMenuListener());\n\n        fileMenu.add(newMenuItem);\n        fileMenu.add(saveMenuItem);\n        menuBar.add(fileMenu);\n        frame.setJMenuBar(menuBar);\n    \n        frame.getContentPane().add(BorderLayout.CENTER, mainPanel);\n        frame.setSize(500,600);\n        frame.setVisible(true);        \n    }\n\n\n    public class NextCardListener implements ActionListener {\n       public void actionPerformed(ActionEvent ev) {\n          QuizCard card = new QuizCard(question.getText(), answer.getText());\n          cardList.add(card);\n          clearCard();\n          \n        }\n     }\n\n     public class SaveMenuListener implements ActionListener {\n        public void actionPerformed(ActionEvent ev) {\n           QuizCard card = new QuizCard(question.getText(), answer.getText());\n           cardList.add(card);\n       \n           JFileChooser fileSave = new JFileChooser();\n           fileSave.showSaveDialog(frame);\n           saveFile(fileSave.getSelectedFile());\n        }\n     }\n\n    public class NewMenuListener implements ActionListener {\n        public void actionPerformed(ActionEvent ev) {\n           cardList.clear();\n           clearCard();           \n        }\n    }\n\n    \n    private void clearCard() {\n       question.setText(\"\");\n       answer.setText(\"\");\n       question.requestFocus();\n    }\n\n    private void saveFile(File file) {\n         \n       try {\n          BufferedWriter writer = new BufferedWriter(new FileWriter(file));\n          Iterator cardIterator = cardList.iterator();\n          while (cardIterator.hasNext()) {\n             QuizCard card = (QuizCard) cardIterator.next();\n             writer.write(card.getQuestion() + \"/\");\n             writer.write(card.getAnswer() + \"\\n\");\n          }\n         writer.close();\n\n\n       } catch(IOException ex) {\n           System.out.println(\"couldn't write the cardList out\");\n           ex.printStackTrace();\n       }\n       \n    } // close method\n}\n       \n           \n          \n          \n       ",
  "/** \n* @file   llpanelgroupbulk.h\n* @brief  Header file for llpanelgroupbulk\n* @author Baker@lindenlab.com\n*\n* $LicenseInfo:firstyear=2013&license=viewerlgpl$\n* Second Life Viewer Source Code\n* Copyright (C) 2013, Linden Research, Inc.\n*\n* This library is free software; you can redistribute it and/or\n* modify it under the terms of the GNU Lesser General Public\n* License as published by the Free Software Foundation;\n* version 2.1 of the License only.\n*\n* This library is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n* Lesser General Public License for more details.\n*\n* You should have received a copy of the GNU Lesser General Public\n* License along with this library; if not, write to the Free Software\n* Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n*\n* Linden Research, Inc., 945 Battery Street, San Francisco, CA  94111  USA\n* $/LicenseInfo$\n*/\n#ifndef LL_LLPANELGROUPBULK_H\n#define LL_LLPANELGROUPBULK_H\n\n#include \"llpanel.h\"\n#include \"lluuid.h\"\n\nclass LLAvatarName;\nclass LLGroupMgrGroupData;\nclass LLPanelGroupBulkImpl;\n\n// Base panel class for bulk group invite / ban floaters\nclass LLPanelGroupBulk : public LLPanel\n{\npublic:\n\tLLPanelGroupBulk(const LLUUID& group_id);\n\t~LLPanelGroupBulk();\n\npublic:\t\n\tstatic void callbackClickSubmit(void* userdata) {}\n\tvirtual void submit() = 0;\n\npublic:\n\tvirtual void clear();\n\tvirtual void update();\n\tvirtual void draw();\n\nprotected:\n\tvirtual void updateGroupName();\n\tvirtual void updateGroupData();\n\npublic:\n\t// this callback is being used to add a user whose fullname isn't been loaded before invoking of addUsers().\n\tvirtual void addUserCallback(const LLUUID& id, const LLAvatarName& av_name);\n\tvirtual void setCloseCallback(void (*close_callback)(void*), void* data);\n\n\tvirtual void addUsers(uuid_vec_t& agent_ids);\n\npublic:\n\tLLPanelGroupBulkImpl* mImplementation;\n\nprotected:\n\tbool mPendingGroupPropertiesUpdate;\n\tbool mPendingRoleDataUpdate;\n\tbool mPendingMemberDataUpdate;\n};\n\n#endif // LL_LLPANELGROUPBULK_H\n\n",
  "---\ntitle: Zelda 1 Demake\ntype: desktop game\ntools: [Unity]\nroles: [Programmer]\nrelease-date: 2021-02-15 # YYYY-MM-DD\ndescription: \"A team of 2 Unity newcomers' try at rebuilding the first dungeon of Zelda 1 in Unity. Try out the custom ice-themed dungeon featuring ice tiles and freezable enemies!\"\n---\n\n### {{ page.title }}\n\n![{{ page.assets }}/preview.png]({{ page.url }}/preview.png)\n\n<h1>\n  <p style=\"text-align: center;\">\n      <a href=\"{{ page.url }}/play\">Play in browser here!</a>\n  </p>\n</h1>\n<h1>\n  <p style=\"text-align: center;\">\n      <a href=\"{{ page.url }}/zelda-1-demake-executables.zip\" download>Download the game here!</a>\n  </p>\n</h1>\n\nZelda 1 Demake is exactly what you expect: a remake of just the first dungeon of Zelda 1, but with 2 way less experienced programmers working Unity compared to a full team at Nintendo. It also didn't help that we had 3 weeks from start to finish! The project came about from a course assignment having us pair up to remake the dungeon, and then also add our own unique mechanic on a custom dungeon on top of it all. Me and my partner ultimately landed on an ice dungeon theme, featuring sliding puzzles and an ice wand that freezes enemies into pushable blocks. If it at all sounds interesting, I recommend giving it a look at the links above. Note that if you do download the project, you'll need to check out the on-site page for instructions anyways.  \n\nFor this project, the partnership was a nice split roughly down the middle, which we got to keep track of on a Kanban board. That Kanban that was baked into the project specifications was my first taste of what agile development is really like, and having it as a reference when working with my partner really boosted out productivity, which was awesome to have. As far as being Unity newcomers, that came with a lot of fun problems along the way, but thanks to taking a proper course and my time developing Bee Game on my own, we managed to get a mostly complete dungeon 1 working game. There's a bit of weirdness you'll notice and feel, but for the most part the recreation is fairly faithful, which is all we could for with the project. I will highly recommend checking out the special dungeon though! A lot of care went into making it, and I think it's fun. You can access it by hitting 4 once the game boots up.\n\n---\n\n### Roles & Responsibilities:\nProgrammer:  \n* Grid-based movement\n* Health, damage, and knockback systems\n* Locked doors\n* Item drops\n* Every enemy's patterns\n* Ice tile mechanic\n* Bonus dungeon room layouts, designs, and aesthetics\n\n---\n\n[Interested in hearing more about the development process? Click here to check out the project postmortem!]({{ page.url }}/postmortem)  \n",
  "#include \"Samples/SpatialOSUtilitiesExamples.h\"\n\n#include <set>\n#include <cstdlib>\n#include \"improbable/standard_library.h\"\n#include \"improbable/worker.h\"\n#include \"EntityBuilder/EntityBuilder.h\"\n#include \"Samples/SampleLogger.h\"\n\nusing Logging = SpatialOS::RequireExternal::ILogger;\n\nstd::set<uint32_t> createRequests;\n// Sends a reserve entity id request, the actually entity creation request takes place in the OnReserveEntityIdResponse callback\nvoid OnEntityCreatedResponse(const worker::CreateEntityResponseOp& op)\n{\n    if (createRequests.find(op.RequestId.Id) == createRequests.end())\n    {\n        //this wasn't sent by us\n        return;\n    }\n\n    if (op.StatusCode == worker::StatusCode::kSuccess)\n    {\n        Logging::ApplicationLogger->Info(\"Create entity with ID \" + std::to_string(*(op.EntityId)));\n    }\n    else\n    {\n        Logging::ApplicationLogger->Info(\"Create entity failed with error: \" + op.Message);\n    }\n    createRequests.erase(op.RequestId.Id);\n}\n\n",
  "import Route from 'ember-route';\nimport NewTransferStateModelMixin from '../../../mixins/new-transfer-state-model';\n\nexport default Route.extend(NewTransferStateModelMixin);\n",
  "import boto3\nimport time\nclient=boto3.client('transcribe')\n\ndef lambda_handler(event, context): \n    print(\"=== Speech-to-Text ===\") \n    # read the bucket name from the event \n    session = boto3.session.Session()\n    region = session.region_name\n    name_of_the_bucket=event['Records'][0]['s3']['bucket']['name'] \n    # read the object from the event \n    name_of_the_file=event['Records'][0]['s3']['object']['key'] \n    \n    url = \"https://s3-\" + region + \".amazonaws.com/\" + name_of_the_bucket + \"/\" + name_of_the_file\n\n    extract_text_from_audio(url,name_of_the_bucket,'Audio-to-Text-')\n    \n    print(\"Check your Output Bucket\")\n    print(\"Speech to text Completed :   \") \n\ndef extract_text_from_audio(url, bucket, job_name):\n    try:\n        client.start_transcription_job(TranscriptionJobName=job_name,Media={'MediaFileUri':url},OutputBucketName=bucket,LanguageCode='en-IE')\n        status = client.get_transcription_job(TranscriptionJobName=job_name)\n        while status['TranscriptionJob']['TranscriptionJobStatus'].upper()!='COMPLETED':\n            print('checking status... It is not complete')\n            time.sleep(20)\n            status = client.get_transcription_job(TranscriptionJobName=job_name)\n    except Exception as ex:\n        print(ex)\n        print(\"Error processing audio file from bucket {}. \".format(url))\n        raise ex\n",
  "import { dispatch, getActions, getState, STATE_CHANGE, } from '../store/store.js';\n\nlet rootEl, layerEl, closeBtn, bluetoothConnectBtn, bluetoothStatusEl, midiInputsSelect, midiInputStatusEl;\n\nfunction addEventListeners() {\n\tdocument.addEventListener(STATE_CHANGE, handleStateChanges);\n\n\tcloseBtn.addEventListener('click', e => {\n\t\tdispatch(getActions().toggleSettings(false));\n\t});\n\n\tlayerEl.addEventListener('click', e => {\n\t\tdispatch(getActions().toggleSettings(false));\n\t});\n\n  midiInputsSelect.addEventListener('change', e => {\n    dispatch(getActions().selectMIDIInput(e.target.value));\n\t});\n\t\n\tbluetoothConnectBtn.addEventListener('click', e => {\n\t\tdispatch(getActions().bluetoothConnect());\n\t});\n}\n\nfunction handleStateChanges(e) {\n  const { state, action, actions, } = e.detail;\n  switch (action.type) {\n\n    case actions.BLUETOOTH_CONNECT:\n      bluetoothStatusEl.textContent = 'Connecting...';\n      bluetoothConnectBtn.setAttribute('disabled', 'disabled');\n      break;\n\n    case actions.BLUETOOTH_DISCONNECT:\n      bluetoothStatusEl.textContent = 'Bluetooth disconnected.';\n      bluetoothConnectBtn.removeAttribute('disabled');\n      break;\n\n    case actions.BLUETOOTH_ERROR:\n      bluetoothStatusEl.textContent = 'Bluetooth error!';\n      bluetoothConnectBtn.removeAttribute('disabled');\n      break;\n      \n    case actions.BLUETOOTH_SUCCESS:\n      bluetoothStatusEl.textContent = 'Bluetooth connected!';\n      break;\n\n    case actions.SELECT_MIDI_INPUT:\n      updateMIDIInputs(state);\n      break;\n\n\t\tcase actions.SET_MIDI_ACCESSIBLE:\n\t\t\tshowMIDIAccessible(state);\n\t\t\tbreak;\n\n\t\tcase actions.TOGGLE_SETTINGS:\n\t\t\tshowSettingsPanel(state);\n\t\t\tbreak;\n    \n\t\tcase actions.UPDATE_MIDI_PORTS:\n\t\t\tupdateMIDIInputs(state);\n\t\t\tbreak;\n  }\n}\n\nexport function setup() {\n\trootEl = document.querySelector('.settings');\n\tlayerEl = rootEl.querySelector('.settings__layer');\n\tcloseBtn = rootEl.querySelector('.settings__close');\n\tmidiInputsSelect = rootEl.querySelector('.midiin-select');\n\tmidiInputStatusEl = rootEl.querySelector('.midiin-status');\n\tbluetoothConnectBtn = rootEl.querySelector('.ble-connect');\n\tbluetoothStatusEl = rootEl.querySelector('.ble-status');\n\t\n  addEventListeners();\n}\n\nfunction showMIDIAccessible(state) {\n\tconst { isMIDIAccessible } = state;\n\tmidiInputStatusEl.textContent = isMIDIAccessible? '' : 'MIDI unavailable';\n\tif (isMIDIAccessible) {\n\t\tmidiInputsSelect.removeAttribute('disabled');\n\t} else {\n\t\tmidiInputsSelect.setAttribute('disabled', 'disabled');\n\t}\n}\n\nfunction showSettingsPanel(state) {\n\tconst { isSettingsVisible } = state;\n\tif (isSettingsVisible) {\n\t\trootEl.classList.add('settings--show');\n\t} else {\n\t\trootEl.classList.remove('settings--show');\n\t}\n}\n\nfunction updateMIDIInputs(state) {\n\tconst { midiInputs, midiSelectedInput } = state;\n\n  midiInputsSelect.querySelectorAll('option').forEach((el, index) => {\n    if (index > 0) {\n      midiInputsSelect.removeChild(el);\n    }\n  });\n\n  midiInputs.forEach(name => {\n    const el = document.createElement('option');\n    el.value = name;\n    el.textContent = name;\n    midiInputsSelect.appendChild(el);\n\n    if (name === midiSelectedInput) {\n      el.setAttribute('selected','selected');\n    }\n  });\n}\n",
  "/**\n * skylark-threejs-ex - A version of threejs extentions library that ported to running on skylarkjs\n * @author Hudaokeji, Inc.\n * @version v0.9.0\n * @link https://github.com/skylark-integration/skylark-threejs-ex/\n * @license MIT\n */\ndefine([\"skylark-threejs\",\"../threex\"],function(i,t){var e=function(t,e,o,l){this.texture=t,this.size=e||1,this.distance=o||0,this.color=l||new i.Color(16777215)};return e.Shader={uniforms:{map:{value:null},occlusionMap:{value:null},color:{value:null},scale:{value:null},screenPosition:{value:null}},vertexShader:[\"precision highp float;\",\"uniform vec3 screenPosition;\",\"uniform vec2 scale;\",\"uniform sampler2D occlusionMap;\",\"attribute vec3 position;\",\"attribute vec2 uv;\",\"varying vec2 vUV;\",\"varying float vVisibility;\",\"void main() {\",\"\\tvUV = uv;\",\"\\tvec2 pos = position.xy;\",\"\\tvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\"\\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\"\\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\"\\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\"\\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\"\\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\"\\tvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\"\\tvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\"\\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\"\\tvVisibility =        visibility.r / 9.0;\",\"\\tvVisibility *= 1.0 - visibility.g / 9.0;\",\"\\tvVisibility *=       visibility.b / 9.0;\",\"\\tgl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"precision highp float;\",\"uniform sampler2D map;\",\"uniform vec3 color;\",\"varying vec2 vUV;\",\"varying float vVisibility;\",\"void main() {\",\"\\tvec4 texture = texture2D( map, vUV );\",\"\\ttexture.a *= vVisibility;\",\"\\tgl_FragColor = texture;\",\"\\tgl_FragColor.rgb *= color;\",\"}\"].join(\"\\n\")},t.objects.LensflareElement=e});\n//# sourceMappingURL=../sourcemaps/objects/LensflareElement.js.map\n",
  "<script src='<?php echo base_url().'js/jquery.rating.js';?>' type=\"text/javascript\" language=\"javascript\"></script>\r\n<link href='<?php echo css_url().'/jquery.rating.css'?>' type=\"text/css\" rel=\"stylesheet\"/>\r\n<link href=\"<?php echo css_url().'/reservation.css';?>\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\" />\r\n<script type=\"text/javascript\">\r\n$(function(){\r\n $('.hover-star1').rating({\r\n  focus: function(value, link){\r\n    // 'this' is the hidden form element holding the current value\r\n    // 'value' is the value selected\r\n    // 'element' points to the link element that received the click.\r\n    var tip = $('#hover-test1');\r\n    tip[0].data = tip[0].data || tip.html();\r\n    tip.html(link.title || 'value: '+value);\r\n  },\r\n  blur: function(value, link){\r\n    var tip = $('#hover-test1');\r\n    $('#hover-test1').html(tip[0].data || '');\r\n  }\r\n });\r\n});\r\n\r\n\r\n$(function(){\r\n $('.hover-star2').rating({\r\n  focus: function(value, link){\r\n    // 'this' is the hidden form element holding the current value\r\n    // 'value' is the value selected\r\n    // 'element' points to the link element that received the click.\r\n    var tip = $('#hover-test2');\r\n    tip[0].data = tip[0].data || tip.html();\r\n    tip.html(link.title || 'value: '+value);\r\n  },\r\n  blur: function(value, link){\r\n    var tip = $('#hover-test2');\r\n    $('#hover-test2').html(tip[0].data || '');\r\n  }\r\n });\r\n});\r\n\r\n$(function(){\r\n $('.hover-star3').rating({\r\n  focus: function(value, link){\r\n    // 'this' is the hidden form element holding the current value\r\n    // 'value' is the value selected\r\n    // 'element' points to the link element that received the click.\r\n    var tip = $('#hover-test3');\r\n    tip[0].data = tip[0].data || tip.html();\r\n    tip.html(link.title || 'value: '+value);\r\n  },\r\n  blur: function(value, link){\r\n    var tip = $('#hover-test3');\r\n    $('#hover-test3').html(tip[0].data || '');\r\n  }\r\n });\r\n});\r\n\r\n</script>\r\n<div class=\"container_bg container\">\r\n<div id=\"Reserve_Continer\">\r\n<div id=\"View_Reivew_Host\" class=\"clearfix\">\r\n  <div id=\"left\" class=\"col-md-3 col-sm-3 col-xs-12 pad_rig\">\r\n\r\n    <!-- /user -->\r\n    <div class=\"Box\" id=\"quick_links\">\r\n      <div class=\"Box_Head\">\r\n        <h2><?php echo translate(\"Quick Links\");?></h2>\r\n      </div>\r\n      <div class=\"Box_Content\">\r\n        <ul>\r\n          <li><a href=<?php echo base_url().'listings';?>> <?php echo translate(\"View/Edit Listings\");?></a></li>\r\n          <li><a href=\"<?php echo site_url('listings/my_reservation');?>\"><?php echo translate(\"Reservations\");?></a></li>\r\n        </ul>\r\n      </div>\r\n      <div style=\"clear:both\"></div>\r\n    </div>\r\n\r\n</div>\r\n  <div id=\"main_reserve\" class=\"col-md-9 col-sm-9 col-xs-12 padding-zero pad_list_req\">\r\n    <div class=\"Box\">\r\n      <div class=\"Box_Head\">\r\n          <h2 class=\"req_head\"><?php echo translate(\"Review\");?> </h2>\r\n        </div>\r\n      <div class=\"Box_Content res_cent col-md-12 col-sm-12 col-xs-12\">\r\n\t\t\t\t\t\t<?php echo form_open('trips/review_by_host',array('id' => 'ReviewHost','name' =>'review_by_host'));?>\r\n        \r\n        <div id=\"View_Review_Blk\" class=\"clearfix col-md-12 col-sm-12 col-xs-12 padding-zero\">\r\n        \t<div class=\"clsVReview_Left clsFloatLeft col-md-3 col-sm-3 col-xs-12\">\r\n            \t<p class=\"VReview_Pbc\"><?php echo translate(\"Public\");?> </p>\r\n            </div>\r\n            <div class=\"clsVReview_Right clsFloatRight col-md-9 col-sm-9 col-xs-12\">\r\n            \t<h3><?php echo translate(\"Share your experience\");?></h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p> <?php echo translate(\"Please review the guest. This will appear on their profile page.\");?> </p>\r\n            \t<textarea name=\"review\" id=\"review\" class=\"VR_TxtAreaBg\"></textarea>\r\n            </div>\r\n        </div>\r\n        <div id=\"View_Review_Blk\" class=\"clearfix col-md-12 col-sm-12 col-xs-12 padding-zero\">\r\n        \t<div class=\"clsVReview_Left clsFloatLeft col-md-3 col-sm-3 col-xs-12\">\r\n            \t<p class=\"VReview_Pvt\"><?php echo translate(\"Private\");?></p>\r\n            </div>\r\n            <div class=\"clsVReview_Right clsFloatRight col-md-9 col-sm-9 col-xs-12\">\r\n            \t<h3><?php echo translate(\"Feedback to Guest\");?></h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p> <?php echo translate(\"How can this person be a better guest? Only they will see your feedback.\");?> </p>\r\n            \t<textarea name=\"feedback\" id=\"feedback\" class=\"VR_TxtAreaBg\"></textarea>\r\n            </div>\r\n        </div>\r\n        <div id=\"View_Review_Blk\" class=\"clearfix col-md-12 col-sm-12 col-xs-12 padding-zero\">\r\n            <div class=\"clsVReview_Left clsFloatLeft col-md-3 col-sm-3 col-xs-12\">\r\n                <p class=\"VReview_Pvt\"><?php echo translate(\"Private\");?></p>\r\n            </div>\r\n            <div class=\"clsVReview_Right clsFloatRight col-md-9 col-sm-9 col-xs-12\">\r\n                <div class=\"clear clean_text\">  <h3><?php echo translate(\"Cleanliness\");?></h3>\r\n                 <div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input class=\"hover-star1\" type=\"radio\" name=\"cleanliness\" value=\"1\" title=\"<?php echo translate(\"Very poor\");?>\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input class=\"hover-star1\" type=\"radio\" name=\"cleanliness\" value=\"2\" title=\"<?php echo translate(\"Poor\");?>\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input class=\"hover-star1\" type=\"radio\" name=\"cleanliness\" value=\"3\" title=\"<?php echo translate(\"OK\");?>\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input class=\"hover-star1\" type=\"radio\" name=\"cleanliness\" value=\"4\" title=\"<?php echo translate(\"Good\");?>\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input class=\"hover-star1\" type=\"radio\" name=\"cleanliness\" value=\"5\" title=\"<?php echo translate(\"Very Good\");?>\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span id=\"hover-test1\" style=\"margin:0 0 0 20px;\"></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t </div><div style=\"clear:both\"></div>\r\n                </div>\r\n                <br />\r\n                <div class=\"clear clean_text\"> <h3><?php echo translate(\"Communication\");?></h3>\r\n                  <div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input class=\"hover-star2\" type=\"radio\" name=\"communication\" value=\"1\" title=\"<?php echo translate(\"Very poor\");?>\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input class=\"hover-star2\" type=\"radio\" name=\"communication\" value=\"2\" title=\"<?php echo translate(\"Poor\");?>\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input class=\"hover-star2\" type=\"radio\" name=\"communication\" value=\"3\" title=\"<?php echo translate(\"OK\");?>\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input class=\"hover-star2\" type=\"radio\" name=\"communication\" value=\"4\" title=\"<?php echo translate(\"Good\");?>\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input class=\"hover-star2\" type=\"radio\" name=\"communication\" value=\"5\" title=\"<?php echo translate(\"Very Good\");?>\"/>",
  "## Output files from the models\n\nEach model is tested on four different cross-validation scenarios resulting in four output files per model\n",
  "define   (\n[\n],\nfunction(\n) {\n    var BRUSH_COLOR = \"#EEEEEE\";\n    var BRUSH_STROKE_COLOR = \"red\";\n\n    var SeqPeekContextPrototype = {\n        _getVisualizationSize: function() {\n            return {\n                width: this.config.dimensions.width,\n                height: this.data.track.getHeight()\n            }\n        },\n\n        init: function() {\n            this.data = {};\n\n            this.vis = {\n                viewport_pos: [0, 0],\n                viewport_scale: [1, 1]\n            };\n        },\n\n        initDiv: function(target_div) {\n            var self = this;\n            this.init();\n\n            target_div.innerHTML = \"\";\n\n            this.vis.root = d3.select(target_div)\n               .append(\"svg\")\n               .style(\"pointer-events\", \"none\");\n\n            this.set_svg_size = _.once(function() {\n                self.vis.root\n                   .attr(\"width\", self.vis.size_info.width)\n                   .attr(\"height\", self.vis.size_info.height);\n            });\n        },\n\n        initSVG: function(target_svg) {\n            this.init();\n\n            this.vis.root = target_svg;\n\n            this.set_svg_size = function() {};\n        },\n\n        draw: function() {\n            var self = this;\n\n            this.vis.size_info = this._getVisualizationSize();\n            this.vis.viewport_size = [this.config.dimensions.width, this.vis.size_info.height];\n\n            // Set the width and height attributes of the SVG element, if the createIntoDiv function\n            // was used to create this object.\n            this.set_svg_size();\n\n            this.vis.zoom = d3.behavior.zoom()\n               .translate(this.vis.viewport_pos)\n               .scaleExtent([0.5, Infinity])\n               .scale(this.vis.viewport_scale[0])\n               .on(\"zoom\", function() {\n                    _.bind(self._zoomEventHandler, self, {}, true)();\n                });\n\n            // Area for graphical elements with clipping\n            this.vis.data_area = this.vis.root\n               .append(\"svg:svg\")\n               .attr(\"class\", \"data-area\")\n               .attr(\"width\", this.vis.viewport_size[0])\n               .attr(\"height\", this.vis.viewport_size[1])\n               .style(\"pointer-events\", \"all\");\n\n            // Rectangle for mouse events\n            this.vis.zoom_rect = this.vis.root\n               .selectAll(\".data-area\")\n               .append(\"svg:rect\")\n               .attr(\"class\", \"zoom-rect\")\n               .attr(\"x\", 0)\n               .attr(\"y\", 0)\n               .attr(\"width\", this.vis.viewport_size[0])\n               .attr(\"height\", this.vis.viewport_size[1])\n               .style(\"fill-opacity\", 0.0)\n               .call(this.vis.zoom);\n\n            this.render();\n        },\n\n        _zoomEventHandler: function() {\n            var e = d3.event;\n\n            if (this._scrollHandler!== undefined && _.isFunction(this._scrollHandler)) {\n                _.bind(this._scrollHandler, this)({\n                    translate: e.translate,\n                    scale: e.scale\n                });\n            }\n        },\n\n        _buildRenderStateInfo: function() {\n            var self = this;\n            return {\n                getRegionLayout: function() {\n                    return self.config.region_layout;\n                },\n                getViewport: function() {\n                    return self.config.viewport;\n                },\n                getViewportDimensions: function() {\n                    return {\n                        width: self.vis.viewport_size[0],\n                        height: self.vis.viewport_size[1]\n                    };\n                },\n                getViewportPosition: function() {\n                    var viewport_pos = self.config.viewport.getViewportPosition();\n\n                    return {\n                        x: viewport_pos.x,\n                        y: viewport_pos.y\n                    };\n                },\n                getViewportScale: function() {\n                    return self.config.viewport.getViewportScale();\n                },\n                getVisibleCoordinates: function() {\n                    return self.config.viewport._getVisibleCoordinates();\n                },\n                getVariantLayout: function() {\n                    return self.config.variant_layout;\n                }\n            }\n        },\n\n        _buildRenderingContext: function(svg) {\n            return _.extend(this._buildRenderStateInfo(), {\n                svg: svg\n            });\n        },\n\n        _updateViewportTranslation: function() {\n            this.vis.viewport_pos = this.config.viewport.getViewportPosition();\n            this.vis.viewport_scale = this.config.viewport.getViewportScale();\n\n            this.vis.zoom.scale(this.vis.viewport_scale);\n            this.vis.zoom.translate([this.vis.viewport_pos.x, this.vis.viewport_pos.y]);\n\n            this.data.track.render();\n        },\n\n        //////////////\n        // Data API //\n        //////////////\n        region_layout: function(value) {\n            this.config.region_layout = value;\n\n            return this;\n        },\n\n        viewport: function(param_viewport) {\n            this.config.viewport = param_viewport;\n\n            return this;\n        },\n\n        scroll_handler: function(scrollHandlerFN) {\n            this._scrollHandler = scrollHandlerFN;\n\n            return this;\n        },\n\n        width: function(width) {\n            this.config.dimensions = {\n                width: width\n            };\n\n            return this;\n        },\n\n        track: function(track) {\n            var self = this;\n\n            track._getRenderingContext = function() {\n                return self._buildRenderingContext(self.track_g);\n            };\n\n            this.data.track = track;\n\n            return this;\n        },\n\n        brush_callback: function(value) {\n            this.config.brush_callback = value;\n\n            return this;\n        },\n\n        /////////////////////////////\n        // Brush / Selection logic //\n        /////////////////////////////\n        _setupBrush: function() {\n            var self = this,\n                brush_height = this.vis.size_info.height;\n\n            if (! this.data.track.supportsSelection()) {\n                return;\n            }\n\n            this.brush = d3.svg.brush()\n               .x(d3.scale.identity().domain([0, this.config.dimensions.width]))\n               .on(\"brushstart\", function() {\n                    // \"this\" refers to the brush g-element\n                    _.bind(self._brushStart, self)(this);\n                })\n               .on(\"brush\", function() {\n                    // \"this\" refers to the brush g-element\n                    _.bind(self._brushMove, self)(this);\n                })\n               .on(\"brushend\", function() {\n                    // \"this\" refers to the brush g-element\n                    _.bind(self._brushEnd, self)(this);\n                });\n\n            this.vis.brush_g = this.vis.root.append(\"g\")\n               .attr(\"class\", \"brush\");\n\n            this.vis.brush_g\n               .call(this.brush)\n               .selectAll(\"rect\")\n                   .attr(\"height\", brush_height);\n\n            this.toggleZoomMode();\n        },\n\n\n        _updateBrushExtent: function(extent) {\n            var brush = this.brush;\n\n            if (! this.config.brush_update_enabled ||\n               ! this.data.track.supportsSelection()) {\n                return;\n            }\n\n            this.vis.brush_g.call(brush.extent([extent[\"x0\"], extent[\"x1\"]]));\n        },\n\n        _brushStart: function() {\n            this.config.brush_update_enabled = false;\n        },\n\n        _brushMove: function(brush_g) {\n            var extent = d3.event.target.extent();\n            var x0 = extent[0];\n            var x1 = extent[1];\n\n            if (this.config.brush_callback!= null) {\n                this.config.brush_callback({\n                    x0: x0,\n                    x1: x1\n                });\n            }\n        },\n\n        _brushEnd: function() {\n            this.config.brush_",
  "<?php\nnamespace Module\\Administrators\\Admin;\n\nclass AdminPage extends \\Controller\\AdminPage {\n\tpublic function output($filename) {\n\t\tswitch($filename) {\n\t\t\tcase 'administrators':\n\t\t\t\treturn new Admins();\n\t\t\tcase 'cache':\n\t\t\t\treturn new Cache();\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn false;\n\t}\n}",
  "package com.lsieun.tank.logic;\n\n/**\n * Created by liusen on 10/25/18.\n */\npublic interface TankDeadCriteria extends DeadCriteria {\n}\n",
  "import { createContainer } from '../creators';\n\nexport default (directory, recipes) => (\n  [\n    createContainer(directory, recipes)\n  ]\n);",
  "module C80Swiper\n  module AppHelper\n\n    def swipe(swslider_id=nil, effect='slide')\n\n      swslider = swslider_id.nil??\n          C80Swiper::Swslider.first :\n          C80Swiper::Swslider.find(swslider_id)\n\n      render :partial => 'c80_swiper/swipe',\n             :locals => {\n                 frames: swslider.sframes,\n                 options: {\n                     mark_pagination: true,\n                     mark_buttons: true,\n                     mark_scrollbar: false,\n                     mark_lazy: false,\n                     params: {\n                         effect: effect,\n                         autoplay: swslider.autoplay * 1000 # Delay between transitions (in ms). If this parameter is not specified, auto play will be disabled\n                     }\n                 }\n             }\n    rescue => e\n      Rails.logger.debug \"[TRACE] <app_helper.swipe> #{e}\"\n      render :partial => 'c80_swiper/shared/swipe_error_message',\n             :locals => {\n                 error_message: \"#{e}\"\n             }\n    end\n\n  end\nend",
  "{{define \"base\"}}\n<img src=\"{{.URL}}\"/>\n{{end}}",
  "/* Licensed to the Apache Software Foundation (ASF) under one or more * contributor license agreements. See the NOTICE file distributed with * this work for additional information regarding copyright ownership. * The ASF licenses this file to You under the Apache License, Version 2.0 * (the \"License\"); you may not use this file except in compliance with * the License. You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /* Utility routines for Apache proxy */ #include \"mod_proxy.h\" #include \"ap_mpm.h\" #include \"scoreboard.h\" #include \"apr_version.h\" #include \"apr_hash.h\" #include \"proxy_util.h\" #include \"ajp.h\" #if APR_HAVE_UNISTD_H #include <unistd.h> /* for getpid() */ #endif #if (APR_MAJOR_VERSION < 1) #undef apr_socket_create #define apr_socket_create apr_socket_create_ex #endif #if APR_HAVE_SYS_UN_H #include <sys/un.h> #endif #if (APR_MAJOR_VERSION < 2) #include \"apr_support.h\" /* for apr_wait_for_io_or_timeout() */ #endif APLOG_USE_MODULE(proxy); /* * Opaque structure containing target server info when * using a forward proxy. * Up to now only used in combination with HTTP CONNECT. */ typedef struct { int use_http_connect; /* Use SSL Tunneling via HTTP CONNECT */ const char *target_host; /* Target hostname */ apr_port_t target_port; /* Target port */ const char *proxy_auth; /* Proxy authorization */ } forward_info; /* Keep synced with mod_proxy.h! */ static struct wstat { unsigned int bit; char flag; const char *name; } wstat_tbl[] = { {PROXY_WORKER_INITIALIZED, PROXY_WORKER_INITIALIZED_FLAG, \"Init \"}, {PROXY_WORKER_IGNORE_ERRORS, PROXY_WORKER_IGNORE_ERRORS_FLAG, \"Ign \"}, {PROXY_WORKER_DRAIN, PROXY_WORKER_DRAIN_FLAG, \"Drn \"}, {PROXY_WORKER_IN_SHUTDOWN, PROXY_WORKER_IN_SHUTDOWN_FLAG, \"Shut \"}, {PROXY_WORKER_DISABLED, PROXY_WORKER_DISABLED_FLAG, \"Dis \"}, {PROXY_WORKER_STOPPED, PROXY_WORKER_STOPPED_FLAG, \"Stop \"}, {PROXY_WORKER_IN_ERROR, PROXY_WORKER_IN_ERROR_FLAG, \"Err \"}, {PROXY_WORKER_HOT_STANDBY, PROXY_WORKER_HOT_STANDBY_FLAG, \"Stby \"}, {PROXY_WORKER_FREE, PROXY_WORKER_FREE_FLAG, \"Free \"}, {0x0, '\\0', NULL} }; /* Global balancer counter */ int PROXY_DECLARE_DATA proxy_lb_workers = 0; static int lb_workers_limit = 0; const apr_strmatch_pattern PROXY_DECLARE_DATA *ap_proxy_strmatch_path; const apr_strmatch_pattern PROXY_DECLARE_DATA *ap_proxy_strmatch_domain; extern apr_global_mutex_t *proxy_mutex; static int proxy_match_ipaddr(struct dirconn_entry *This, request_rec *r); static int proxy_match_domainname(struct dirconn_entry *This, request_rec *r); static int proxy_match_hostname(struct dirconn_entry *This, request_rec *r); static int proxy_match_word(struct dirconn_entry *This, request_rec *r); APR_IMPLEMENT_OPTIONAL_HOOK_RUN_ALL(proxy, PROXY, int, create_req, (request_rec *r, request_rec *pr), (r, pr), OK, DECLINED) PROXY_DECLARE(apr_status_t) ap_proxy_strncpy(char *dst, const char *src, apr_size_t dlen) { char *thenil; apr_size_t thelen; /* special case handling */ if (!dlen) { /* XXX: APR_ENOSPACE would be better */ return APR_EGENERAL; } if (!src) { *dst = '\\0'; return APR_SUCCESS; } thenil = apr_cpystrn(dst, src, dlen); thelen = thenil - dst; if (src[thelen] == '\\0') { return APR_SUCCESS; } return APR_EGENERAL; } /* already called in the knowledge that the characters are hex digits */ PROXY_DECLARE(int) ap_proxy_hex2c(const char *x) { int i; #if!APR_CHARSET_EBCDIC int ch = x[0]; if (apr_isdigit(ch)) { i = ch - '0'; } else if (apr_isupper(ch)) { i = ch - ('A' - 10); } else { i = ch - ('a' - 10); } i <<= 4; ch = x[1]; if (apr_isdigit(ch)) { i += ch - '0'; } else if (apr_isupper(ch)) { i += ch - ('A' - 10); } else { i += ch - ('a' - 10); } return i; #else /*APR_CHARSET_EBCDIC*/ /* * we assume that the hex value refers to an ASCII character * so convert to EBCDIC so that it makes sense locally; * * example: * * client specifies %20 in URL to refer to a space char; * at this point we're called with EBCDIC \"20\"; after turning * EBCDIC \"20\" into binary 0x20, we then need to assume that 0x20 * represents an ASCII char and convert 0x20 to EBCDIC, yielding * 0x40 */ char buf[1]; if (1 == sscanf(x, \"%2x\", &i)) { buf[0] = i & 0xFF; ap_xlate_proto_from_ascii(buf, 1); return buf[0]; } else { return 0; } #endif /*APR_CHARSET_EBCDIC*/ } PROXY_DECLARE(void) ap_proxy_c2hex(int ch, char *x) { #if!APR_CHARSET_EBCDIC int i; x[0] = '%'; i = (ch & 0xF0) >> 4; if (i >= 10) { x[1] = ('A' - 10) + i; } else { x[1] = '0' + i; } i = ch & 0x0F; if (i >= 10) { x[2] = ('A' - 10) + i; } else { x[2] = '0' + i; } #else /*APR_CHARSET_EBCDIC*/ static const char ntoa[] = { \"0123456789ABCDEF\" }; char buf[1]; ch &= 0xFF; buf[0] = ch; ap_xlate_proto_to_ascii(buf, 1); x[0] = '%'; x[1] = ntoa[(buf[0] >> 4) & 0x0F]; x[2] = ntoa[buf[0] & 0x0F]; x[3] = '\\0'; #endif /*APR_CHARSET_EBCDIC*/ } /* * canonicalise a URL-encoded string */ /* * Convert a URL-encoded string to canonical form. * It decodes characters which need not be encoded, * and encodes those which must be encoded, and does not touch * those which must not be touched. */ PROXY_DECLARE(char *)ap_proxy_canonenc(apr_pool_t *p, const char *x, int len, enum enctype t, int forcedec, int proxyreq) { int i, j, ch; char *y; char *allowed; /* characters which should not be encoded */ char *reserved; /* characters which much not be en/de-coded */ /* * N.B. in addition to :@&=, this allows ';' in an http path * and '?' in an ftp path -- this may be revised * * Also, it makes a '+' character in a search string reserved, as * it may be form-encoded. (Although RFC 1738 doesn't allow this - * it only permits ;",
  "aa\nnum1 =10\nccff\nnum3 = 300\nnum3=30\n\nThis is dev branck\n\n",
  "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<!-- NewPage -->\n<html lang=\"en\">\n<head>\n<!-- Generated by javadoc (1.8.0_74) on Mon Aug 29 10:05:59 CEST 2016 -->\n<title>RxHub (core API)</title>\n<meta name=\"date\" content=\"2016-08-29\">\n<link rel=\"stylesheet\" returnType=\"text/css\" href=\"../../../stylesheet.css\" title=\"Style\">\n<script returnType=\"text/javascript\" src=\"../../../script.js\"></script>\n</head>\n<body>\n<script returnType=\"text/javascript\"><!--\n    try {\n        if (location.href.indexOf('is-external=true') == -1) {\n            parent.document.title=\"RxHub (core API)\";\n        }\n    }\n    catch(err) {\n    }\n//-->\nvar methods = {\"i0\":6,\"i1\":6,\"i2\":6,\"i3\":6,\"i4\":6,\"i5\":6,\"i6\":6,\"i7\":6};\nvar tabs = {65535:[\"t0\",\"All Methods\"],2:[\"t2\",\"Instance Methods\"],4:[\"t3\",\"Abstract Methods\"]};\nvar altColor = \"altColor\";\nvar rowColor = \"rowColor\";\nvar tableTab = \"tableTab\";\nvar activeTableTab = \"activeTableTab\";\n</script>\n<noscript>\n<div>JavaScript is disabled on your browser.</div>\n</noscript>\n<!-- ========= START OF TOP NAVBAR ======= -->\n<div class=\"topNav\"><a name=\"navbar.top\">\n<!--   -->\n</a>\n<div class=\"skipNav\"><a href=\"#skip.navbar.top\" title=\"Skip navigation links\">Skip navigation links</a></div>\n<a name=\"navbar.top.firstrow\">\n<!--   -->\n</a>\n<ul class=\"navList\" title=\"Navigation\">\n<li><a href=\"../../../io/apptik/rxhub/package-summary.html\">Package</a></li>\n<li class=\"navBarCell1Rev\">Class</li>\n<li><a href=\"package-tree.html\">Tree</a></li>\n<li><a href=\"../../../deprecated-list.html\">Deprecated</a></li>\n<li><a href=\"../../../index-all.html\">Index</a></li>\n<li><a href=\"../../../help-doc.html\">Help</a></li>\n</ul>\n</div>\n<div class=\"subNav\">\n<ul class=\"navList\">\n<li><a href=\"../../../io/apptik/rxhub/DefaultRxHub.html\" title=\"class in io.apptik.rhub\"><span class=\"typeNameLink\">Prev&nbsp;Class</span></a></li>\n<li><a href=\"../../../io/apptik/rxhub/RxHub.NodeType.html\" title=\"enum in io.apptik.rhub\"><span class=\"typeNameLink\">Next&nbsp;Class</span></a></li>\n</ul>\n<ul class=\"navList\">\n<li><a href=\"../../../index.html?io/apptik/rxhub/RxHub.html\" target=\"_top\">Frames</a></li>\n<li><a href=\"RxHub.html\" target=\"_top\">No&nbsp;Frames</a></li>\n</ul>\n<ul class=\"navList\" id=\"allclasses_navbar_top\">\n<li><a href=\"../../../allclasses-noframe.html\">All&nbsp;Classes</a></li>\n</ul>\n<div>\n<script returnType=\"text/javascript\"><!--\n  allClassesLink = document.getElementById(\"allclasses_navbar_top\");\n  if(window==top) {\n    allClassesLink.style.display = \"block\";\n  }\n  else {\n    allClassesLink.style.display = \"none\";\n  }\n  //-->\n</script>\n</div>\n<div>\n<ul class=\"subNavList\">\n<li>Summary:&nbsp;</li>\n<li><a href=\"#nested.class.summary\">Nested</a>&nbsp;|&nbsp;</li>\n<li>Field&nbsp;|&nbsp;</li>\n<li>Constr&nbsp;|&nbsp;</li>\n<li><a href=\"#method.summary\">Method</a></li>\n</ul>\n<ul class=\"subNavList\">\n<li>Detail:&nbsp;</li>\n<li>Field&nbsp;|&nbsp;</li>\n<li>Constr&nbsp;|&nbsp;</li>\n<li><a href=\"#method.detail\">Method</a></li>\n</ul>\n</div>\n<a name=\"skip.navbar.top\">\n<!--   -->\n</a></div>\n<!-- ========= END OF TOP NAVBAR ========= -->\n<!-- ======== START OF CLASS DATA ======== -->\n<div class=\"header\">\n<div class=\"subTitle\">io.apptik.rhub</div>\n<h2 title=\"Interface RxHub\" class=\"title\">Interface RxHub</h2>\n</div>\n<div class=\"contentContainer\">\n<div class=\"description\">\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<dl>\n<dt>All Known Implementing Classes:</dt>\n<dd><a href=\"../../../io/apptik/rxhub/AbstractRxHub.html\" title=\"class in io.apptik.rhub\">AbstractRxHub</a>, <a href=\"../../../io/apptik/rxhub/DefaultRxHub.html\" title=\"class in io.apptik.rhub\">DefaultRxHub</a></dd>\n</dl>\n<hr>\n<br>\n<pre>public interface <span class=\"typeNameLabel\">RxHub</span></pre>\n<div class=\"block\">RxJava based Hub connecting Observables and Observers so that Observers can receive events\n without knowledge of which Observables, if any, there are,\n while maintaining clear connection between them.</div>\n<dl>\n<dt><span class=\"seeLabel\">See Also:</span></dt>\n<dd><a href=\"../../../io/apptik/rxhub/AbstractRxHub.html\" title=\"class in io.apptik.rhub\"><code>AbstractRxHub</code></a></dd>\n</dl>\n</li>\n</ul>\n</div>\n<div class=\"summary\">\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<!-- ======== NESTED CLASS SUMMARY ======== -->\n<ul class=\"blockList\">\n<li class=\"blockList\"><a name=\"nested.class.summary\">\n<!--   -->\n</a>\n<h3>Nested Class Summary</h3>\n<table class=\"memberSummary\" border=\"0\" cellpadding=\"3\" cellspacing=\"0\" summary=\"Nested Class Summary table, listing nested classes, and an explanation\">\n<caption><span>Nested Classes</span><span class=\"tabEnd\">&nbsp;</span></caption>\n<tr>\n<th class=\"colFirst\" scope=\"col\">Modifier and Type</th>\n<th class=\"colLast\" scope=\"col\">Interface and Description</th>\n</tr>\n<tr class=\"altColor\">\n<td class=\"colFirst\"><code>static class&nbsp;</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../io/apptik/rxhub/RxHub.NodeType.html\" title=\"enum in io.apptik.rhub\">RxHub.NodeType</a></span></code>&nbsp;</td>\n</tr>\n<tr class=\"rowColor\">\n<td class=\"colFirst\"><code>static class&nbsp;</code></td>\n<td class=\"colLast\"><code><span class=\"memberNameLink\"><a href=\"../../../io/apptik/rxhub/RxHub.Source.html\" title=\"class in io.apptik.rhub\">RxHub.Source</a></span></code>&nbsp;</td>\n</tr>\n</table>\n</li>\n</ul>\n<!-- ========== METHOD SUMMARY =========== -->\n<ul class=\"blockList\">\n<li class=\"blockList\"><a name=\"method.summary\">\n<!--   -->\n</a>\n<h3>Method Summary</h3>\n<table class=\"memberSummary\" border=\"0\" cellpadding=\"3\" cellspacing=\"0\" summary=\"Method Summary table, listing methods, and an explanation\">\n<caption><span id=\"t0\" class=\"activeTableTab\"><span>All Methods</span><span class=\"tabEnd\">&nbsp;</span></span><span id=\"t2\" class=\"tableTab\"><span><a href=\"javascript:show(2);\">Instance Methods</a></span><span class=\"tabEnd\">&nbsp;</span></span><span id=\"t3\" class=\"tableTab\"><span><a href=\"javascript:show(4",
  "<?php\n\nclass UntrustedIdentityException extends Exception\n{\n}\n",
  "#include \"../../../include/Switch/System/NumericalParsing.hpp\"\n#include \"../../../include/Switch/System/Convert.hpp\"\n#include \"../../../include/Switch/System/SystemException.hpp\"\n\nusing namespace System;\n\nnamespace {\n  uint64 Add(uint64 x, uint64 y) {\n    if (x == 0) return y;\n    if (y == 0) return x;\n\n    uint64 value = x + y;\n    if (value < x)\n      throw OverflowException(caller_);\n    return value;\n  }\n\n  uint64 Mul(uint64 x, uint64 y) {\n    if (x == 0 || y == 0) return 0;\n    uint64 value = 0;\n    while (y-- > 0)\n      value = Add(value, x);\n    return value;\n  }\n\n  uint64 PositivePower(uint32 x, uint32 p) {\n    uint64 value = 1;\n    while (p-- > 0) value = Mul(value, x);\n    return value;\n  }\n}\n\nnamespace Switch {\n  namespace System {\n\n    static inline uint32 ToDigit(char32 c) {\n      if (c >= '0' && c <= '9')\n        return c - '0';\n      if (c >= 'a' && c <= 'z')\n        return c - 'a' + 10;\n      if (c >= 'A' && c <= 'Z')\n        return c - 'A' + 10;\n      return '?';\n    }\n\n    static inline bool IsDigit(char32 c, uint32 base) {\n      uint32 digit = ToDigit(c);\n      return digit!= '?' && digit < base;\n    }\n\n    static void IgnoreSpaces(string::const_reverse_iterator& it, string::const_reverse_iterator end, char32& c) {\n      do {\n        c = *it;\n        if (c!='')\n          return;\n        ++it;\n      } while (it!= end);\n    }\n\n    static void IgnoreValidPrefix(string::const_reverse_iterator& it, string::const_reverse_iterator end, char32& c, int32 base) {\n      c = *it;\n      if (base == 16) {\n        if (c == 'x' || c == 'X') {\n          ++it;\n          if (it == end) throw FormatException(caller_);\n          c = *it;\n          if (c!= '0') throw FormatException(caller_);\n          it++;\n        }\n      }\n      if (base == 2) {\n        if (c == 'b' || c == 'B') {\n          if (it == end)\n            throw FormatException(caller_);\n          c = *it;\n          if (c!= '0')\n            throw FormatException(caller_);\n          ++it;\n        }\n      }\n    }\n\n    static void IgnoreValidSuffix(string::const_reverse_iterator& it, string::const_reverse_iterator end, char32& c, int32 base) {\n      c = *it;\n      if (c == 'b' || c == 'B') {\n        if (base == 2)\n          ++it;\n      }\n    }\n\n    static char ReadSign(string::const_reverse_iterator& it, string::const_reverse_iterator end, char32& c) {\n      char sign = 0;\n      do {\n        c = *it;\n        if (sign == 0) {\n          if (c == '+' || c == '-') {\n            sign = static_cast<char>(c);\n            ++it;\n            continue;\n          }\n        }\n        if (c =='')\n          return sign;\n        throw FormatException(caller_);\n      } while (it!= end);\n      return sign;\n    }\n\n    static int64 Sign(string::const_reverse_iterator& it, string::const_reverse_iterator end, char32& c, uint64 value) {\n      char sign = ReadSign(it, end, c);\n      if (sign == '+')\n        ++it;\n      if (sign == '-') {\n        ++it;\n        if (value > 9223372036854775808ULL)\n          throw OverflowException(caller_);\n        if (value == 9223372036854775808ULL)\n          return Int64::MinValue;\n        return -Convert::ToInt64(value);\n      }\n      return Convert::ToInt64(value);\n    }\n\n    static uint64 ReadInteger(string::const_reverse_iterator& it, string::const_reverse_iterator end, char32& c, uint32 base) {\n      bool oneDigitSeen = false;\n      uint64 value = 0;\n      uint32 power = 0;\n      do {\n        c = *it;\n        if (!IsDigit(c, base)) {\n          if (oneDigitSeen) return value;\n          throw FormatException(caller_);\n        } else {\n          uint32 curDigit = ToDigit(c);\n          oneDigitSeen = true;\n          if (curDigit!= 0)\n            value = Add(value, Mul(PositivePower(base, power), curDigit));\n          power += 1;\n        }\n        ++it;\n      } while (it!= end);\n      return value;\n    }\n\n    static int64 HandleComplement(uint64 value, int32 base, int32 nbBits) {\n      if (base == 2 || base == 8 || base == 16) {\n        uint64 mask = 1;\n        mask = mask  << (nbBits - 1);\n\n        if (nbBits == 64) return static_cast<int64>(value);\n\n        uint64 maxValue = (mask << 1);\n        if (value >= maxValue)\n          return Convert::ToInt64(value);\n\n        if ((value & mask)!= 0) // bit sign on\n          return value - maxValue;\n      }\n      return Convert::ToInt64(value);\n    }\n\n    int64 NumericalParsing::ParseSigned(const string& str, int32 base, int32 nbBits) {\n      if (base < 2 || base > 32)\n        throw ArgumentException(caller_);\n\n      string::const_reverse_iterator it = str.rbegin();\n      if (it == str.rend())\n        throw FormatException(caller_);\n      char32 c;\n\n      // trim\n      IgnoreSpaces(it, str.rend(), c);\n      if (it == str.rend())\n        throw FormatException(caller_);\n\n      // suffix\n      IgnoreValidSuffix(it, str.rend(), c, base);\n      if (it == str.rend())\n        throw FormatException(caller_);\n\n      // digits\n      uint64 value = ReadInteger(it, str.rend(), c, base);\n      if (it == str.rend())\n        return HandleComplement(value, base, nbBits);\n\n      // prefix\n      IgnoreValidPrefix(it, str.rend(), c, base);\n      if (it == str.rend())\n        return HandleComplement(value, base, nbBits);\n\n      //sign\n      value = Sign(it, str.rend(), c, value);\n      if (it == str.rend())\n        return value;\n\n      //trim out\n      IgnoreSpaces(it, str.rend(), c);\n      if (it!= str.rend())\n        throw FormatException(caller_);\n      else return value;\n    }\n\n    static void CheckSign(string::const_reverse_iterator& it, string::const_reverse_iterator end, char32& c, uint64 value) {\n      char sign = ReadSign(it, end, c);\n      if (sign == '+' || (sign == '-' && value == 0)) {\n        ++it;\n        return;\n      }\n      if (sign == '-')\n        throw OverflowException(caller_);\n    }\n\n    uint64 NumericalParsing::ParseUnsigned(const string& str, int32 base) {\n      if (base < 2 || base > 32)\n        throw ArgumentException(caller_);\n\n      string::const_reverse_iterator it = str.rbegin();\n      if (it == str.rend())\n        throw FormatException(caller_);\n      char32 c;\n\n      // trim\n      IgnoreSpaces(it, str.rend(), c);\n      if (it == str.rend())\n        throw FormatException(caller_);\n\n      // suffix\n      IgnoreValidSuffix(it, str.rend(), c, base);\n      if (it == str.rend())\n        throw FormatException(caller_);\n\n      // digits\n      uint64 value = ReadInteger(it, str.rend(), c, base);\n      if (",
  "#!/usr/bin/env bash\n\n[! -d $HOME/Library/Android/sdk ] && return\n\nexport ANDROID_HOME=$HOME/Library/Android/sdk\nexport ANDROID_SDK=$HOME/Library/Android/sdk\nexport PATH=$PATH:$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator:$ANDROID_HOME/tools\n\n# Finds the latest installed version of aapt and runs it as if it was on the path.\nalias aapt=$ANDROID_HOME/build-tools/$(ls -1 $ANDROID_HOME/build-tools | tail -n 1)/aapt\n\n# Downloads the APK for a package name. Does not support app bundles.\n# adbpullpkg com.google.android.chrome\nfunction adbpullpkg {\n  adb pull $(adb shell pm path $1 | tr '\\r' '\\n' | perl -pe's/package:(\\W+)[\\s\\n]*/\\1/g' ) $1.apk\n  mv $1.apk $(aapt dump badging $1.apk | head -n 1 | perl -pe \"s/.*name='([a-z\\.]+?)' versionCode='(\\d+)?'.*/\\1-\\2.apk/\")\n}\n\n# Launches the app with the package name.\n# adblaunch com.guestu.app\nfunction adblaunch {\n  adb shell monkey -p \"$1\" 1\n}\n\n# Launches the app with the package name and waits for a debugger to attach.\n# adblaunchD com.guestu.app\nfunction adblaunchD {\n  PKG=$(adb shell pm dump $1 | grep android.intent.action.MAIN -A 1 | head -n 2 | tail -n 1 | tr '\\r''' | perl -pe's/\\s+\\w+ (\\S+).*/\\1/') \n  echo \"adb shell am start -n \\\"$PKG\\\" -D\"\n  adb shell am start -n \"$PKG\" -D\n}\n\n# Restarts the app with the package name.\n# adbrestart com.guestu.app\nfunction adbrestart {\n  adb shell am force-stop $1 > /dev/null\n  adb shell am force-close $1 > /dev/null\n  adblaunch $1\n}\n\n# Lists all devices packages, except some manufacter apps.\nalias adblp='adb shell pm list packages | sort | egrep -v \"(qualcomm|qti|e:android|com.zte)\" | sed \"s/package://\" | tr -d \"\\r\"'\n\n# Uninstalls all apps containing the specified text in the package name.\n# adbuninstall com.guest\nfunction adbuninstall {\n  for f in $(adblp | grep $1); do echo $f && adb uninstall $f; done\n}\n\n# Simulates keyboard input, entering the specified text\n# adbtype \"blah blah blah\"\nadbtype() {\n  adb shell input keyboard text \"$(perl -p -e's/([&;])/\\\\\\1/g' <<< $1)\"\n}\n\n# Simulates the press of enter\nalias adbtypeEnter=\"adb shell input keyevent event_code 66\"\n\n# Renames an APK to be package.name-build[-DEBUG].apk\nfunction nameapk {\n  mv $1 $(n $1)\n}\n\n# Generates a name for an APK in the format package.name-build[-DEBUG].apk\nfunction _nameapk {\n  AA=$(aapt dump badging $1)\n  if [[ $AA =~.*application-debuggable.* ]]\n  then\n    D=\"-DEBUG\"\n  else\n    D=\"\"\n  fi\n  echo $(head -n 1 <<< $AA | perl -pe \"s/.*name='([\\w\\d\\.]+?)' versionCode='(\\d+)?'.*/\\1-\\2$D.apk/\") \n}\n\n\n# Outputs a timestamp in the format YYYY-MM-DD_HH:mm:ss\nfunction _timestamp {\n  date +\"%F_%H.%M.%S\"\n}\n\n# Takes a screenshot of the device and saves as a file in the current dir\nfunction adbscreen {\n  if [ -z ANDROID_SERIAL ]; then\n    A=\"screen-$(_timestamp).png\"\n  else\n    A=\"screen-$(_timestamp)-$ANDROID_SERIAL.png\"\n  fi\n\n  if (( $(adb shell getprop ro.build.version.sdk|tr -d '\\r') > 23 )); then\n    adb shell screencap -p  > $A\n  else\n    adb shell screencap -p | perl -pe's/\\x0D\\x0A/\\x0A/g' > $A\n  fi\n  echo \"$A\"\n}\n\n# Takes a screenshot of the device and opens it.\nadbscreenopen() {\n  open $(adbscreen) \n}\n\n# Helps find device settings by showing you what a toggle changed.\n# Dumps all the settings of the device into a folder,\n# asks you the change the setting you need,\n# dumps all the settings to another folder and opens a diff of the folders.\nfunction adbfindsetting {\n  mkdir /tmp/a\n  mkdir /tmp/b\n  adb shell settings list secure >! /tmp/a/settingsSecure.txt\n  adb shell settings list system >! /tmp/a/settingsSystem.txt\n  adb shell settings list global >! /tmp/a/settingsGlobal.txt\n\n  echo \"Current settings state dumped. Change the desired setting and press Enter\"\n  read\n\n  adb shell settings list secure >! /tmp/b/settingsSecure.txt\n  adb shell settings list system >! /tmp/b/settingsSystem.txt\n  adb shell settings list global >! /tmp/b/settingsGlobal.txt\n\n  if hash ksdiff 2>/dev/null; then\n    ksdiff -w /tmp/a /tmp/b # Kaleidoscope\n  else\n    opendiff /tmp/a /tmp/b # Xcode's FileMerge\n    echo \"Press Enter to delete the dumps\"\n    read\n  fi\n\n  rm -rf /tmp/a /tmp/b\n}\n\nadbanimations() {\n  if [ $# -eq 0 ]; then\n    echo \"Usage:\"\n    echo \" $0 0   # disable animations\"\n    echo \" $0 1   # enable animations\"\n  else\n    adball shell settings put global window_animation_scale $1\n    adball shell settings put global transition_animation_scale $1\n    adball shell settings put global animator_duration_scale $1\n  fi\n}\n\nexport SET_ANDROID_PATH=${0:h}/setAndroid.rb\n\n# runs an adb command on all devices\n# ex: adball install -r somefile.apk\nfunction adball {\n    adb devices | grep -v List | grep device | perl -p -e's/(\\w+)\\s.*/\\1/' | xargs -I \u00a7 adb -s \u00a7 \"$@\"\n}\n\nsetandroid() {\n  # print device list\n  $SET_ANDROID_PATH\n  # get device count\n  n=$($SET_ANDROID_PATH simple | wc -l)\n  if [ $n -eq 1 ]; then\n    # if only one device, does not ask user\n    number=1\n  else\n    # if more than one device, ask the user for which one\n    read \"?Device: \" number\n  fi\n\n  # if is number and within range\n  if [[ \"$number\" =~ ^[0-9]+$ ]] && [ \"$number\" -ge 1 -a \"$number\" -le $n ]; then\n    # obtains the device id, stores in env\n    export ANDROID_SERIAL=$($SET_ANDROID_PATH ${number})\n    # obtains the device model, stores in env\n    export ANDROID_MODEL=$($SET_ANDROID_PATH model)\n    # prints the current env\n    env | grep ANDROID_SERIAL --color=never\n    return 0\n  fi\n  echo \"invalid\"\n  return 1\n}\n\n\nfunction prepareLatestApk {\n  file=$(gfind. -name \"*.apk\" -printf '%Ts\\t%p\\n' | sort -nr | cut -f2 | head -n 1)\n  pushd $(dirname $file)\n  \n  # nameapk\n  new_file=$(n $file)\n  mv $file $new_file\n  \n  open -R $new_file\n  popd\n}\n\nalias adb",
  "import org.junit.Test;\n\npublic class SleepTest {\n    @Test\n    public void name() throws InterruptedException {\n        new Thread(new Runnable() {\n            public void run() {\n                System.out.println(Thread.currentThread().getName()+\" task completed\");\n            }\n        }).start();\n        Thread.sleep(1000);\n        System.out.println(Thread.currentThread().getName()+\" exit \");\n    }\n\n\n\n}",
  "<!-- abstract -->\n\n<h2>Let's experiment</h2>\n\n<div ng-controller=\"boomerangController\">\n  <p>Suppose Phil makes <input type=\"number\" ng-model=\"x\"> small and <input type=\"number\" ng-model=\"y\" > large boomerangs.</p>\n  <p>Carving <em>{{x}} small</em> boomerangs will take <em>{{smallTime(x)}}</em> hours.</p>\n  <p>Carving <em>{{y}} large</em> boomerangs will take <em>{{largeTime(x)}}</em> hours.</p>\n  <br>\n  <p class=\"{{ carveTimeOK(x,y) }}\">Phil will need <em>{{ carveTime(x,y) }}</em> hours to carve them all.</p>\n  <p class=\"{{ decTimeOK(x,y) }}\">Cath has to decorate <em>{{ decTime(x,y) }}</em> boomerangs.</p>\n  <br>\n  <p><em>{{x}}</em> small boomerangs will make <em>${{smallIncome(x)}}</em>.</p>\n  <p><em>{{y}}</em> large boomerangs will make <em>${{largeIncome(y)}}</em>.</p>\n  <br>\n  <p>Total amount made will be <em>${{ totalIncome(x,y) }}</em></p>\n</div>\n\n",
  "module.exports = {\n  purge: [],\n  darkMode: false, // or'media' or 'class'\n  theme: {\n    extend: {},\n  },\n  variants: {\n    extend: {\n      backgroundColor: ['active'],\n      fontSize: ['hover'],\n    },\n  },\n  plugins: [],\n};\n",
  "import org.specs2._\nimport org.specs2.runner.SpecificationsFinder._\nimport runner.SpecificationsFinder._\n\nclass index extends Specification { def is =\n  examplesLinks(\"Test specifications\")\n\n  def examplesLinks(t: String) =\n    t.title ^ specifications().map(s => link(s))\n}\n",
  "import {\n  Box,\n  Button,\n  Center,\n  Divider,\n  Flex,\n  FormControl,\n  FormLabel,\n  Heading,\n  Input,\n  List,\n  ListIcon,\n  ListItem,\n  Spacer,\n  Stat,\n  StatLabel,\n  StatNumber,\n  useToast,\n} from '@chakra-ui/react'\nimport { MdBook } from'react-icons/md'\nimport React, { useState } from'react'\nimport { Route, Switch, useHistory } from'react-router-dom'\nimport {\n  Post,\n  useAddPostMutation,\n  useGetPostsQuery,\n} from '../../app/services/posts'\nimport { PostDetail } from './PostDetail'\n\nconst AddPost = () => {\n  const initialValue = { name: '' }\n  const [post, setPost] = useState<Pick<Post, 'name'>>(initialValue)\n  const [addPost, { isLoading }] = useAddPostMutation()\n  const toast = useToast()\n\n  const handleChange = ({ target }: React.ChangeEvent<HTMLInputElement>) => {\n    setPost((prev) => ({\n     ...prev,\n      [target.name]: target.value,\n    }))\n  }\n\n  const handleAddPost = async () => {\n    try {\n      await addPost(post).unwrap()\n      setPost(initialValue)\n    } catch {\n      toast({\n        title: 'An error occurred',\n        description: \"We couldn't save your post, try again!\",\n        status: 'error',\n        duration: 2000,\n        isClosable: true,\n      })\n    }\n  }\n\n  return (\n    <Flex p={5}>\n      <Box flex={10}>\n        <FormControl isInvalid={Boolean(post.name.length < 3 && post.name)}>\n          <FormLabel htmlFor=\"name\">Post name</FormLabel>\n          <Input\n            id=\"name\"\n            name=\"name\"\n            placeholder=\"Enter post name\"\n            value={post.name}\n            onChange={handleChange}\n          />\n        </FormControl>\n      </Box>\n      <Spacer />\n      <Box>\n        <Button\n          mt={8}\n          colorScheme=\"purple\"\n          isLoading={isLoading}\n          onClick={handleAddPost}\n        >\n          Add Post\n        </Button>\n      </Box>\n    </Flex>\n  )\n}\n\nconst PostList = () => {\n  const [page, setPage] = useState(1)\n  const { data: posts, isLoading, isFetching } = hooks.listPosts.useQuery(page)\n  const prefetchPage = usePrefetch('listPosts')\n\n  const prefetchNext = useCallback(() => {\n    prefetchPage(page + 1)\n  }, [prefetchPage, page])\n\n  useEffect(() => {\n    if (page!== posts?.total_pages) {\n      prefetchNext()\n    }\n  }, [posts, page, prefetchNext])\n\n  if (isLoading) {\n    return <div>Loading</div>\n  }\n\n  if (!posts?.data) {\n    return <div>No posts :(</div>\n  }\n\n  return (\n    <Box>\n      <HStack spacing=\"14px\">\n        <Button\n          onClick={() => setPage((prev) => prev - 1)}\n          isLoading={isFetching}\n          disabled={page === 1}\n        >\n          <Icon as={MdArrowBack} />\n        </Button>\n        <Button\n          onClick={() => setPage((prev) => prev + 1)}\n          isLoading={isFetching}\n          disabled={page === posts.total_pages}\n          onMouseEnter={prefetchNext}\n        >\n          <Icon as={MdArrowForward} />\n        </Button>\n        <Box>{`${page} / ${posts.total_pages}`}</Box>\n      </HStack>\n      <List spacing={3} mt={6}>\n        {posts?.data.map(({ id, title, status }) => (\n          <ListItem key={id}>\n            <ListIcon as={MdBook} color=\"green.500\" /> {title}{' '}\n            <Badge\n              ml=\"1\"\n              fontSize=\"0.8em\"\n              colorScheme={getColorForStatus(status)}\n            >\n              {status}\n            </Badge>\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  )\n}\n\nexport const PostsCountStat = () => {\n  const { data: posts } = useGetPostsQuery()\n\n  if (!posts) return null\n\n  return (\n    <Stat>\n      <StatLabel>Active Posts</StatLabel>\n      <StatNumber>{posts?.length}</StatNumber>\n    </Stat>\n  )\n}\n\nexport const PostsManager = () => {\n  return (\n    <Box>\n      <Flex bg=\"#011627\" p={4} color=\"white\">\n        <Box>\n          <Heading size=\"xl\">Manage Posts</Heading>\n        </Box>\n        <Spacer />\n        <Box>\n          <PostsCountStat />\n        </Box>\n      </Flex>\n      <Divider />\n      <AddPost />\n      <Divider />\n      <Flex wrap=\"wrap\">\n        <Box flex={1} borderRight=\"1px solid #eee\">\n          <Box p={4} borderBottom=\"1px solid #eee\">\n            <Heading size=\"sm\">Posts</Heading>\n          </Box>\n          <Box p={4}>\n            <PostList />\n          </Box>\n        </Box>\n        <Box flex={2}>\n          <Switch>\n            <Route path=\"/posts/:id\" component={PostDetail} />\n            <Route>\n              <Center h=\"200px\">\n                <Heading size=\"md\">Select a post to edit!</Heading>\n              </Center>\n            </Route>\n          </Switch>\n        </Box>\n      </Flex>\n    </Box>\n  )\n}\n\nexport default PostsManager\n",
  "package com.jstarcraft.core.storage.berkeley;\r\n\r\nimport org.apache.commons.lang3.builder.EqualsBuilder;\r\nimport org.apache.commons.lang3.builder.HashCodeBuilder;\r\n\r\n/**\r\n * Berkeley\u6807\u8bc6\r\n * \r\n * @author Birdy\r\n *\r\n */\r\nclass BerkeleyIdentification {\r\n\r\n    private final Class<?> clazz;\r\n\r\n    private final Object id;\r\n\r\n    private final int hash;\r\n\r\n    BerkeleyIdentification(Class<?> clazz, Object id) {\r\n        this.clazz = clazz;\r\n        this.id = id;\r\n        HashCodeBuilder hash = new HashCodeBuilder();\r\n        hash.append(clazz);\r\n        hash.append(id);\r\n        this.hash = hash.toHashCode();\r\n    }\r\n\r\n    @Override\r\n    public boolean equals(Object object) {\r\n        if (this == object)\r\n            return true;\r\n        if (object == null)\r\n            return false;\r\n        if (getClass()!= object.getClass())\r\n            return false;\r\n        BerkeleyIdentification that = (BerkeleyIdentification) object;\r\n        EqualsBuilder equal = new EqualsBuilder();\r\n        equal.append(this.clazz, that.clazz);\r\n        equal.append(this.id, that.id);\r\n        return equal.isEquals();\r\n    }\r\n\r\n    @Override\r\n    public int hashCode() {\r\n        return hash;\r\n    }\r\n\r\n}\r\n",
  "\"\"\"\nRun mity-merge.\nThis merges a nuclear VCF and a mity VCF, such that the MT variants in the\nnuclear VCF are replaces with the mity variants, and the headers are merged\n\"\"\"\nimport sys\nimport gzip\nimport logging\nfrom.util import write_merged_vcf\nfrom.util import create_prefix\nfrom.util import vcf_get_mt_contig\n\ndef check_vcf_merge_compatibility(mity_vcf, hc_vcf):\n    \"\"\"\n    Check that the MT sequence names and lengths match in both the mity and hc vcf's.\n    \"\"\"\n    m = vcf_get_mt_contig(mity_vcf)\n    h = vcf_get_mt_contig(hc_vcf)\n    return m == h\n\ndef do_merge(mity_vcf, hc_vcf, prefix=None, genome='mitylib/reference/b37d5.genome'):\n\n    if not check_vcf_merge_compatibility(mity_vcf, hc_vcf):\n        logging.error(\"The VCF files use mitochondrial contigs\")\n        sys.exit()\n\n    prefix = create_prefix(hc_vcf, prefix)\n    outfile = prefix + \".mity.vcf.gz\"\n\n    logging.debug(\"importing hc_vcf: \" + hc_vcf)\n    hc_file = gzip.open(hc_vcf, 'rt')\n    \n    # split the header and the variants into two separate lists\n    hc_header = []\n    hc_variants = []\n    for line in hc_file:\n        if line[0] == \"#\":\n            line = line.strip()\n            hc_header.append(line)\n        else:\n            line = line.strip()\n            # line = line.split('\\t')\n            hc_variants.append(line)\n    \n    hc_col_names = hc_header[-1]\n    del hc_header[-1]\n\n    logging.debug(\"importing mity_vcf: \" + mity_vcf)\n    mity_file = gzip.open(mity_vcf, 'rt')\n    \n    # split the header and the variants into two separate lists\n    # TODO: to speed up, do we actually need to get hc variants?\n    mity_header = []\n    mity_variants = []\n    for line in mity_file:\n        if line[0] == \"#\":\n            line = line.strip()\n            mity_header.append(line)\n        else:\n            line = line.strip()\n            line = line.split('\\t')\n            mity_variants.append(line)\n    \n    mity_col_names = mity_header[-1]\n    del mity_header[-1]\n    \n    # print(mity_header)\n    # print(hc_header)\n    \n    # remove file format (e.g. 4.1/4.2) for mity and hc add manually to the \n    # merged header\n    del mity_header[0]\n    del hc_header[0]\n    \n    # remove phasing from mity header\n    mity_header = [x for x in mity_header if \"phasing=\" not in x]\n    \n    # remove file date from mity header\n    mity_header = [x for x in mity_header if \"##fileDate\" not in x]\n    \n    # get mity reference\n    mity_ref = [x for x in mity_header if \"##reference=\" in x]\n    \n    # should only be one line in the mity header that has reference in it\n    if len(mity_ref) > 1:\n        err_msg = \"Mity header has more than lines that define a reference: \\n\"\n        for x in mity_ref:\n            err_msg = err_msg + x\n            err_msg = err_msg + '\\n'\n        sys.exit(err_msg)\n    \n    mity_ref = mity_ref[0].split('##reference=')[1]\n    # print(mity_ref)\n    # remove mity reference from header because we will add it with hc \n    # reference later\n    mity_header = [x for x in mity_header if \"##reference\" not in x]\n    \n    # get hc reference then remove from header\n    hc_ref = [x for x in hc_header if \"##reference\" in x]\n    # should only be one line in the hc header that has reference in it\n    if len(hc_ref) > 1:\n        err_msg = \"HC header has more than lines that define a reference: \\n\"\n        for x in hc_ref:\n            err_msg = err_msg + x\n            err_msg = err_msg + '\\n'\n        sys.exit(err_msg)\n    \n    hc_ref = hc_ref[0].split('##reference=')[1]\n    # remove hc reference from header because we will add it with mity \n    # reference later\n    hc_header = [x for x in hc_header if \"##reference\" not in x]\n    \n    # make new reference line and add to merged header\n    # @TODO add ##mity_reference, ##nuclear_reference, and set ##reference=hc_ref[0].split('##reference=')\n    new_ref_line = \"##reference=If CHR=MT: \" + mity_ref + \". Otherwise: \" + hc_ref\n    \n    # remove all the lines in the mity header that are also in the HC header\n    # this should remove contig lines if they are the same\n    mity_header = [x for x in mity_header if x not in hc_header]\n    \n    # now if there are two lines in mity_header and hc_header that \n    # that have the same eg \"##INFO=<ID=SRR,\", then they have different \n    # definitions for the same \n    # ID. need to make hc and mity specific definitions.\n    sep = \",\"\n    merged_header = []\n    mity_ids = [x.split(sep)[0] for x in mity_header]\n    # print(mity_ids)\n    # loop through the hc_header\n    for hc_line in hc_header:\n        hc_id = hc_line.split(sep, 1)[0]\n        if hc_id in mity_ids:\n            # print(hc_line)\n            mity_line_idx = mity_ids.index(hc_id)\n            mity_line = mity_header[mity_line_idx]\n            # print(mity_line)\n            \n            # check the number is the same - if not put \".\"\n            mity_number = mity_line.split(\"Number=\")[1]\n            mity_number = mity_number.split(\",\")[0]\n            # print(mity_number)\n            \n            hc_number = hc_line.split(\"Number=\")[1]\n            hc_number = hc_number.split(\",\")[0]\n            # print(hc_number)\n            \n            if str(hc_number) == str(mity_number):\n                new_number = hc_number\n            else:\n                new_number = \".\"\n            \n            # check the type is the same\n            # if not will have to stop the app with an error\n            # no way of saying unknown type\n            # and they really should be the same anyway\n            mity_type = mity_line.split(\"Type=\")[1]\n            mity_type = mity_type.split(\",\")[0]\n            # print(mity_type)\n            \n            hc_type = hc_line.split(\"Type=\")[1]\n            hc_type = hc_type.split(\",\")[0]\n            # print(hc_type)\n            \n            if str(hc_type) == str(mity_type):\n                new_type = hc_type\n            else:\n                new_type = hc_type\n            # print(\"\")\n            # sys.exit(\"TODO\")\n            \n            hc_description = hc_line.split('Description=\"')[1]\n            # remove the last \">\n            hc_description = hc_description[:-2]\n            # print(hc_description)\n            \n            mity_description = mity_line.split('Description=\"')[1]\n            # remove the last \">\n            mity_description = mity_description[:",
  "<?php\r\n\r\nerror_reporting(E_ALL);\r\n\r\n$php = getenv('TEST_PHP_EXECUTABLE');\r\nif (!$php) {\r\n\tdie(\"No php executable defined\\n\");\r\n}\r\n$cmd = 'php -r \"fwrite(STDOUT, $in = file_get_contents(\\'php://stdin\\')); fwrite(STDERR, $in);\"';\r\n$descriptors = array(array('pipe', 'r'), array('pipe', 'w'), array('pipe', 'w'));\r\n$stdin = str_repeat('*', 1024 * 16). '!';\r\n$stdin = str_repeat('*', 2049 );\r\n\r\n$options = array_merge(array('suppress_errors' => true, 'binary_pipes' => true, 'bypass_shell' => false));\r\n$process = proc_open($cmd, $descriptors, $pipes, getcwd(), array(), $options);\r\n\r\nforeach ($pipes as $pipe) {\r\n    stream_set_blocking($pipe, false);\r\n}\r\n$writePipes = array($pipes[0]);\r\n$stdinLen = strlen($stdin);\r\n$stdinOffset = 0;\r\n\r\nunset($pipes[0]);\r\n\r\nwhile ($pipes || $writePipes) {\r\n    $r = $pipes;\r\n    $w = $writePipes;\r\n    $e = null;\r\n    $n = stream_select($r, $w, $e, 60);\r\n\r\n    if (false === $n) {\r\n        break;\r\n    } elseif ($n === 0) {\r\n        proc_terminate($process);\r\n\r\n    }\r\n    if ($w) {\r\n        $written = fwrite($writePipes[0], (binary)substr($stdin, $stdinOffset), 8192);\r\n        if (false!== $written) {\r\n            $stdinOffset += $written;\r\n        }\r\n        if ($stdinOffset >= $stdinLen) {\r\n            fclose($writePipes[0]);\r\n            $writePipes = null;\r\n        }\r\n    }\r\n\r\n    foreach ($r as $pipe) {\r\n        $type = array_search($pipe, $pipes);\r\n        $data = fread($pipe, 8192);\r\n        if (false === $data || feof($pipe)) {\r\n            fclose($pipe);\r\n            unset($pipes[$type]);\r\n        }\r\n    }\r\n}\r\necho \"OK.\";\r\n?>\r\n",
  "# Chardet\n\n## About\n\n[Chardet](https://chardet.readthedocs.io/en/latest/index.html) is a Python-compatible character encoding detector.\n\n## Actions\n\n### Detect Encoding\n\nThis action is used to detect encoding.\n\n#### Input\n\n|Name|Type|Default|Required|Description|Enum|\n|----|----|-------|--------|-----------|----|\n|bytes_to_analyze|bytes|None|True|Bytes to analyze|None|\n\n#### Output\n\n|Name|Type|Required|Description|\n|----|----|--------|-----------|\n|recommendation|recommendation|False|Recommendation|\n\nExample output:\n\n```\n{\n  \"recommendation\": {\n    \"encoding\": \"Windows-1254\",\n    \"confidence\": 0.2105891645091143,\n    \"language\": \"Turkish\"\n  }\n}\n```\n\n## Triggers\n\n_This plugin does not contain any triggers._\n\n## Connection\n\n_This plugin does not contain a connection._\n\n## Troubleshooting\n\n_This plugin does not contain any troubleshooting information._\n\n## Workflows\n\nExamples:\n\n* Find encoding of unknown set of bytes\n\n## Versions\n\n* 1.0.0 - Initial plugin\n\n## References\n\n* [Chardet](https://chardet.readthedocs.io/en/latest/index.html)\n* [How it Works](https://chardet.readthedocs.io/en/latest/how-it-works.html)\n\n## Custom Output Types\n\n### recommendation\n\n|Name|Type|Required|Description|\n|----|----|--------|-----------|\n|confidence|number|False|Confidence|\n|encoding|string|False|Encoding|\n|language|string|False|Language|\n",
  "# Include gasparesganga/php-shapefile in a laravel project\n\nI added the library in the laravel project with composer require gasparesganga/php-shapefile\nOnce the command has completed you should have the gasparesganga in the vendor folder. \n\nNow you're able to use it where you want. \n\nI used it in a controller, first you need to import the classed you'll use: \n\n\n    use Shapefile\\Shapefile;\n    use Shapefile\\ShapefileException;\n    use Shapefile\\ShapefileWriter;\n    use Shapefile\\Geometry\\Point;\n\nThen in your controller you can use it in any function, for example the below function: \n\nI have a *shapes* folder configured to store the shapefiles.\n \n    public testFunction(){\n\n        $PointA = new Point(226339.07747614052, 2332310);\n        \n        $zipFolder = \\Storage::disk('shapes')->path('');\n        //File name should have maximum 10 characters\n        $fileName = \"example\";\n        \n        $shapeFilePath = $zipFolder.$fileName.\".shp\";\n        \n        try{\n        \n        $Shapefile = new ShapefileWriter($shapeFilePath); \n        $Shapefile->setShapeType(Shapefile::SHAPE_TYPE_POINT);\n        \n        $Shapefile->addNumericField('ID', 10);\n        \n        $Shapefile->addCharField('DESC', 25);\n        \n        $PointA->setData('ID', 1);\n        \n        $PointA->setData('DESC', \"Point number 1\");\n        \n        // Write the record to the Shapefile\n        $Shapefile->writeRecord($PointA);\n        \n        unset($Shapefile);\n        \n        }catch (ShapefileException $e) {\n           \n            $data = [\n                'code'=>500,\n               'status'=>'error with ShapefileException',\n               'message'=>'File not found'\n            \n            ];\n        \n            return response()->json($data, $data['code']);\n        }catch (Exception $e){\n            throw new Exception( 'Unable to upload file',0,$e);\n        } \n    } \n",
  "import { AdresseAPI } from \"../../localisation/api/AdresseAPI\";\n\nexport interface TiersAPI {\n  iPKTiers: number;\n  sCodeTiers: string;\n  sPrenom: string;\n  sNom: string;\n  sTypeTiers: string;\n  sMail: string;\n  sTelgsm: string;\n  adressePrincipale: AdresseAPI;\n  tAdresse: AdresseAPI[];\n}\n",
  "package br.com.zup.casadocodigo.category;\n\npublic class CategoryResponseDto {\n\n    private Long id;\n    private String name;\n\n    public CategoryResponseDto(Category category) {\n        this.id = category.getId();\n        this.name = category.getName();\n    }\n\n    public Long getId() {\n        return id;\n    }\n\n    public String getName() {\n        return name;\n    }\n}\n",
  "<?php\n\nnamespace Omnipay\\Aerotow\\Tests\\Message;\n\nuse Omnipay\\Aerotow\\Message\\AcceptNotificationRequest;\nuse Omnipay\\Common\\Message\\NotificationInterface;\nuse Omnipay\\Tests\\TestCase;\n\nclass AcceptNotificationRequestTest extends TestCase\n{\n    public function testGetData()\n    {\n        $options = [\n            'Ordernum' => 'TV20180521000002',\n            'ACTCode' => '8089205603291469800',\n            'Total' => '100',\n            'Status' => '0000',\n        ];\n\n        $request = new AcceptNotificationRequest($this->getHttpClient(), $this->getHttpRequest());\n        $request->initialize(array_merge($options, []));\n\n        self::assertEquals($options, $request->getData());\n\n        return [$request];\n    }\n\n    /**\n     * @depends testGetData\n     * @param array $results\n     */\n    public function testSend($results)\n    {\n        list($notification) = $results;\n\n        self::assertEquals('TV20180521000002', $notification->getTransactionId());\n        self::assertEquals('', $notification->getTransactionReference());\n        self::assertEquals(NotificationInterface::STATUS_COMPLETED, $notification->getTransactionStatus());\n    }\n}\n",
  "package org.visallo.graphCheck;\n\nimport org.vertexium.*;\nimport org.visallo.core.bootstrap.InjectHelper;\nimport org.visallo.core.config.Configuration;\n\nimport java.util.Collection;\n\npublic class GraphCheckVertexiumObjectVisitor implements GraphVisitor {\n    private final GraphCheckContext ctx;\n    private final Collection<GraphCheckRule> rules;\n\n    public GraphCheckVertexiumObjectVisitor(GraphCheckContext ctx, Configuration configuration) {\n        this.ctx = ctx;\n        this.rules = InjectHelper.getInjectedServices(GraphCheckRule.class, configuration);\n    }\n\n    @Override\n    public void visitElement(Element element) {\n        for (GraphCheckRule rule : this.rules) {\n            rule.visitElement(ctx, element);\n        }\n    }\n\n    @Override\n    public void visitVertex(Vertex vertex) {\n        for (GraphCheckRule rule : this.rules) {\n            rule.visitVertex(ctx, vertex);\n        }\n    }\n\n    @Override\n    public void visitEdge(Edge edge) {\n        for (GraphCheckRule rule : this.rules) {\n            rule.visitEdge(ctx, edge);\n        }\n    }\n\n    @Override\n    public void visitExtendedDataRow(Element element, String tableName, ExtendedDataRow row) {\n        for (GraphCheckRule rule : this.rules) {\n            rule.visitExtendedDataRow(ctx, element, tableName, row);\n        }\n    }\n\n    @Override\n    public void visitProperty(Element element, Property property) {\n        for (GraphCheckRule rule : this.rules) {\n            rule.visitProperty(ctx, element, property);\n        }\n    }\n\n    @Override\n    public void visitProperty(Element element, String tableName, ExtendedDataRow row, Property property) {\n        for (GraphCheckRule rule : this.rules) {\n            rule.visitProperty(ctx, element, tableName, row, property);\n        }\n    }\n}\n",
  "const app = require('../../src/app')\n\nglobal.serverUrl = 'http://localhost:' + (process.env.PORT || '1234')\n",
  "from. import (\n    client,\n    config,\n    core,\n    launcher,\n    recorder,\n)\n__version__ = \"0.2.1\"",
  "package pl.zankowski.iextrading4j.api.stocks;\n\nimport com.fasterxml.jackson.annotation.JsonCreator;\nimport com.fasterxml.jackson.annotation.JsonProperty;\n\nimport java.math.BigDecimal;\nimport java.time.LocalDate;\n\npublic class HistoricalPrice {\n    private static final long serialVersionUID = 6474500411156050200L;\n    private final BigDecimal close;\n    private final BigDecimal high;\n    private final BigDecimal low;\n    private final BigDecimal open;\n    private final String symbol;\n    private final Long volume;\n    private final String id;\n    private final String key;\n    private final String subkey;\n    private final LocalDate date;\n    private final Long updated;\n    private final Long changeOverTime;\n    private final Long marketChangeOverTime;\n    private final BigDecimal uOpen;\n    private final BigDecimal uClose;\n    private final BigDecimal uHigh;\n    private final BigDecimal uLow;\n    private final Long uVolume;\n    private final BigDecimal fOpen;\n    private final BigDecimal fClose;\n    private final BigDecimal fHigh;\n    private final BigDecimal fLow;\n    private final Long fVolume;\n    private final String label;\n    private final BigDecimal change;\n    private final Long changePercent;\n\n    @JsonCreator\n    public HistoricalPrice(\n            @JsonProperty(\"close\") final BigDecimal close,\n            @JsonProperty(\"high\") final BigDecimal high,\n            @JsonProperty(\"low\") final BigDecimal low,\n            @JsonProperty(\"open\") final BigDecimal open,\n            @JsonProperty(\"symbol\") final String symbol,\n            @JsonProperty(\"volume\") final Long volume,\n            @JsonProperty(\"id\") final String id,\n            @JsonProperty(\"key\") final String key,\n            @JsonProperty(\"subkey\") final String subkey,\n            @JsonProperty(\"date\") final LocalDate date,\n            @JsonProperty(\"updated\") final Long updated,\n            @JsonProperty(\"changeOverTime\") final Long changeOverTime,\n            @JsonProperty(\"marketChangeOverTime\") final Long marketChangeOverTime,\n            @JsonProperty(\"uOpen\") final BigDecimal uOpen,\n            @JsonProperty(\"uClose\") final BigDecimal uClose,\n            @JsonProperty(\"uHigh\") final BigDecimal uHigh,\n            @JsonProperty(\"uLow\") final BigDecimal uLow,\n            @JsonProperty(\"uVolume\") final Long uVolume,\n            @JsonProperty(\"fOpen\") final BigDecimal fOpen,\n            @JsonProperty(\"fClose\") final BigDecimal fClose,\n            @JsonProperty(\"fHigh\") final BigDecimal fHigh,\n            @JsonProperty(\"fLow\") final BigDecimal fLow,\n            @JsonProperty(\"fVolume\") final Long fVolume,\n            @JsonProperty(\"label\") final String label,\n            @JsonProperty(\"change\") final BigDecimal change,\n            @JsonProperty(\"changePercent\") final Long changePercent\n    ) {\n        this.close = close;\n        this.high = high;\n        this.low = low;\n        this.open = open;\n        this.symbol = symbol;\n        this.volume = volume;\n        this.id = id;\n        this.key = key;\n        this.subkey = subkey;\n        this.date = date;\n        this.updated = updated;\n        this.changeOverTime = changeOverTime;\n        this.marketChangeOverTime = marketChangeOverTime;\n        this.uOpen = uOpen;\n        this.uClose = uClose;\n        this.uHigh = uHigh;\n        this.uLow = uLow;\n        this.uVolume = uVolume;\n        this.fOpen = fOpen;\n        this.fClose = fClose;\n        this.fHigh = fHigh;\n        this.fLow = fLow;\n        this.fVolume = fVolume;\n        this.label = label;\n        this.change = change;\n        this.changePercent = changePercent;\n    }\n\n    public static long getSerialVersionUID() {\n        return serialVersionUID;\n    }\n\n    public BigDecimal getClose() {\n        return close;\n    }\n\n    public BigDecimal getHigh() {\n        return high;\n    }\n\n    public BigDecimal getLow() {\n        return low;\n    }\n\n    public BigDecimal getOpen() {\n        return open;\n    }\n\n    public String getSymbol() {\n        return symbol;\n    }\n\n    public Long getVolume() {\n        return volume;\n    }\n\n    public String getId() {\n        return id;\n    }\n\n    public String getKey() {\n        return key;\n    }\n\n    public String getSubkey() {\n        return subkey;\n    }\n\n    public LocalDate getDate() {\n        return date;\n    }\n\n    public Long getUpdated() {\n        return updated;\n    }\n\n    public Long getChangeOverTime() {\n        return changeOverTime;\n    }\n\n    public Long getMarketChangeOverTime() {\n        return marketChangeOverTime;\n    }\n\n    public BigDecimal getuOpen() {\n        return uOpen;\n    }\n\n    public BigDecimal getuClose() {\n        return uClose;\n    }\n\n    public BigDecimal getuHigh() {\n        return uHigh;\n    }\n\n    public BigDecimal getuLow() {\n        return uLow;\n    }\n\n    public Long getuVolume() {\n        return uVolume;\n    }\n\n    public BigDecimal getfOpen() {\n        return fOpen;\n    }\n\n    public BigDecimal getfClose() {\n        return fClose;\n    }\n\n    public BigDecimal getfHigh() {\n        return fHigh;\n    }\n\n    public BigDecimal getfLow() {\n        return fLow;\n    }\n\n    public Long getfVolume() {\n        return fVolume;\n    }\n\n    public String getLabel() {\n        return label;\n    }\n\n    public BigDecimal getChange() {\n        return change;\n    }\n\n    public Long getChangePercent() {\n        return changePercent;\n    }\n}\n",
  "module Fastlane\n  module Actions\n    module SharedValues\n      GET_INFO_PLIST_VALUE_CUSTOM_VALUE = :GET_INFO_PLIST_VALUE_CUSTOM_VALUE\n    end\n\n    class GetInfoPlistValueAction < Action\n      def self.run(params)\n        require \"plist\"\n\n        begin\n          path = File.expand_path(params[:path])\n          plist = Plist.parse_xml(path)\n\n          value = plist[params[:key]]\n          Actions.lane_context[SharedValues::GET_INFO_PLIST_VALUE_CUSTOM_VALUE] = value\n\n          return value\n        rescue => ex\n          UI.error(ex)\n          UI.error(\"Unable to find plist file at '#{path}'\")\n        end\n      end\n\n      def self.description\n        \"Returns value from Info.plist of your project as native Ruby data structures\"\n      end\n\n      def self.details\n        \"Get a value from a plist file, which can be used to fetch the app identifier and more information about your app\"\n      end\n\n      def self.available_options\n        [\n          FastlaneCore::ConfigItem.new(key: :key,\n                                       env_name: \"FL_GET_INFO_PLIST_PARAM_NAME\",\n                                       description: \"Name of parameter\",\n                                       optional: false),\n          FastlaneCore::ConfigItem.new(key: :path,\n                                       env_name: \"FL_GET_INFO_PLIST_PATH\",\n                                       description: \"Path to plist file you want to read\",\n                                       optional: false,\n                                       verify_block: proc do |value|\n                                         UI.user_error!(\"Couldn't find plist file at path '#{value}'\") unless File.exist?(value)\n                                       end)\n        ]\n      end\n\n      def self.output\n        [\n          ['GET_INFO_PLIST_VALUE_CUSTOM_VALUE', 'The value of the last plist file that was parsed']\n        ]\n      end\n\n      def self.authors\n        [\"kohtenko\"]\n      end\n\n      def self.is_supported?(platform)\n        [:ios, :mac].include? platform\n      end\n\n      def self.example_code\n        [\n          'identifier = get_info_plist_value(path: \"./Info.plist\", key: \"CFBundleIdentifier\")'\n        ]\n      end\n\n      def self.return_type\n        :string\n      end\n\n      def self.category\n        :project\n      end\n    end\n  end\nend\n",
  "\ufeff<!DOCTYPE html>\n<html class=\"no-touch\" lang=\"en\">\n <head>\n  <link href=\"css/orb-ltr.min.css\" rel=\"stylesheet\"/>\n  <link href=\"css/id-cta.css\" rel=\"stylesheet\"/>\n  <link href=\"css/id-cta-v5.css\" rel=\"stylesheet\"/>\n  <link href=\"css/main.min.css\" rel=\"stylesheet\"/>\n  <link href=\"css/main.css\" rel=\"stylesheet\"/>\n  <link href=\"css/style.css\" rel=\"stylesheet\"/>\n  <link href=\"css/print.css\" rel=\"stylesheet\"/>\n </head>\n <!--[if lt IE 10]><body class=\"lt-ie10 nojs\"><![endif]-->\n <!--[if gt IE 9]><!-->\n <body class=\"nojs\">\n  <!--<![endif]-->\n  <!-- BBCDOTCOM bodyFirst -->\n  <div id=\"cookiePrompt\">\n  </div>\n  <!--[if (gt IE 8) | (IEMobile)]><!-->\n  <!-- Styling hook for shared modules only -->\n  <div id=\"orb-modules\">\n   <div class=\"browser-upgrade-alert-message\">\n    <span class=\"browser-upgrade-alert\">\n     This site is optimised for modern web browsers,\n    and does not fully support your version of Internet Explorer\n    </span>\n   </div>\n   <div class=\"food-body autumn autumn_banner_2\">\n    <div class=\"food-grid\">\n     <div class=\"food-content-wrapper\">\n      <div class=\"\" itemscope=\"\" itemtype=\"http://schema.org/Recipe\">\n       <div class=\"recipe-wrap\">\n        <div class=\"recipe-layout\">\n         <div class=\"recipe-main-info\">\n          <div class=\"recipe-title--small-spacing\">\n           <h1 class=\"content-title__text\" itemprop=\"name\">\n            Aubergine and tofu satay\n           </h1>\n          </div>\n          <div class=\"recipe-leading-info\">\n           <div class=\"recipe-metadata\">\n            <div class=\"recipe-metadata-wrap\">\n             <p class=\"recipe-metadata__heading\">\n              Preparation time\n             </p>\n             <p class=\"recipe-metadata__prep-time\" content=\"PT30M\" itemprop=\"prepTime\">\n              less than 30 mins\n             </p>\n            </div>\n            <div class=\"recipe-metadata-wrap\">\n             <p class=\"recipe-metadata__heading\">\n              Cooking time\n             </p>\n             <p class=\"recipe-metadata__cook-time\" content=\"PT30M\" itemprop=\"cookTime\">\n              10 to 30 mins\n             </p>\n            </div>\n            <div class=\"recipe-metadata-wrap\">\n             <p class=\"recipe-metadata__heading\">\n              Serves\n             </p>\n             <p class=\"recipe-metadata__serving\" itemprop=\"recipeYield\">\n              Serves 4\n             </p>\n            </div>\n            <div class=\"recipe-metadata-wrap\">\n             <p class=\"recipe-metadata__heading\">\n              Dietary\n             </p>\n             <div class=\"recipe-metadata__dietary\">\n              <span>\n               Vegetarian\n              </span>\n             </div>\n            </div>\n           </div>\n           <div class=\"recipe-chef\">\n            <div class=\"chef\">\n             <div class=\"chef__about\">\n              <div class=\"chef__name\">\n               <span class=\"chef__preposition\">\n                By\n               </span>\n               <span>\n                The Vegetarian Society\n               </span>\n              </div>\n             </div>\n            </div>\n           </div>\n          </div>\n          <div class=\"recipe-ingredients\">\n           <div class=\"recipe-ingredients-wrapper\">\n            <h2 class=\"recipe-ingredients__heading\">\n             Ingredients\n            </h2>\n            <h3 class=\"recipe-ingredients__sub-heading\">\n             For the green curry paste\n            </h3>\n            <ul class=\"recipe-ingredients__list\">\n             <li class=\"recipe-ingredients__list-item\" itemprop=\"ingredients\">\n              1\n              <span>\n               shallot\n              </span>\n             , peeled, finely chopped\n             </li>\n             <li class=\"recipe-ingredients__list-item\" itemprop=\"ingredients\">\n              1\n              <span>\n               lemongrass\n              </span>\n              stalk, tough outer leaves removed, chopped\n             </li>\n             <li class=\"recipe-ingredients__list-item\" itemprop=\"ingredients\">\n              2 small red chillies, chopped\n             </li>\n             <li class=\"recipe-ingredients__list-item\" itemprop=\"ingredients\">\n              2 cloves\n              <span>\n               garlic\n              </span>\n             , peeled, crushed\n             </li>\n             <li class=\"recipe-ingredients__list-item\" itemprop=\"ingredients\">\n              2.5cm/1 inch piece fresh root\n              <span>\n               ginger\n              </span>\n             , peeled and grated\n             </li>\n             <li class=\"recipe-ingredients__list-item\" itemprop=\"ingredients\">\n              1 lime,\n              <span>\n               zest\n              </span>\n              only\n             </li>\n             <li class=\"recipe-ingredients__list-item\" itemprop=\"ingredients\">\n              1 tbsp chopped\n              <span>\n               fresh coriander\n              </span>\n             </li>\n            </ul>\n            <h3 class=\"recipe-ingredients__sub-heading\">\n             For the skewers\n            </h3>\n            <ul class=\"recipe-ingredients__list\">\n             <li class=\"recipe-ingredients__list-item\" itemprop=\"ingredients\">\n              2 tbsp groundnut oil\n             </li>\n             <li class=\"recipe-ingredients__list-item\" itemprop=\"ingredients\">\n              1 packet firm\n              <span>\n               tofu\n              </span>\n             , drained and pressed\n             </li>\n             <li class=\"recipe-ingredients__list-item\" itemprop=\"ingredients\">\n              1\n              <span>\n               aubergine\n              </span>\n             </li>\n             <li class=\"recipe-ingredients__list-item\" itemprop=\"ingredients\">\n              12 short wooden skewers, soaked in cold water for at least 15 minutes\n             </li>\n            </ul>\n            <h3 class=\"recipe-ingredients__sub-heading\">\n             For the satay sauce\n            </h3>\n            <ul class=\"recipe-ingredients__list\">\n             <li class=\"recipe-ingredients__list-item\" itemprop=\"ingredients\">\n              2 tbsp groundnut oil\n             </li>\n             <li class=\"recipe-ingredients__list-item\" itemprop=\"ingredients\">\n              1\n              <span>\n               shallot\n              </span>\n             , peeled, finely chopped\n             </li>\n             <li class=\"recipe-ingredients__list-item\" itemprop=\"ingredients\">\n              2 cloves\n              <span>\n               garlic\n              </span>\n             , peeled, finely chopped\n             </li>\n             <li class=\"recipe-ingredients__list-item\" itemprop=\"ingredients\">\n              2 large red chillies,\n              <span>\n               seeds\n              </span>\n              removed, chopped\n             </li>\n             <li class=\"recipe-ingredients__list-item\" itemprop=\"ingredients\">\n              1 tsp ground\n              <span>\n               cumin\n              </span>\n             </li>\n             <li class=\"recipe-ingredients__list-item\" itemprop=\"ingredients\">\n              1 tsp ground coriander\n             </li>\n             <li class=\"recipe-ingredients__list-item\" itemprop=\"ingredients\">\n              75g/3oz crunchy\n              <span>\n               peanut butter\n              </span>\n             </li>\n             <li class=\"recipe-ingredients__list-item\" itemprop=\"ingredients\">\n              200g/7fl oz\n              <span>\n               coconut milk\n              </span>\n             </li>\n             <li class=\"recipe-ingredients__list-item\" itemprop=\"ingredients\">\n              1\n              <span>\n               lime\n              </span",
  "<?php\nuse yii\\helpers\\Html;\nuse frontend\\components\\Nav;\nuse yii\\bootstrap\\NavBar;\nuse yii\\widgets\\Breadcrumbs;\nuse frontend\\assets\\AppAsset;\nuse frontend\\assets\\MallPlatformAsset;\nuse common\\widgets\\Alert;\nuse yii\\helpers\\Url;\n\n/* @var $this \\yii\\web\\View */\n/* @var $content string */\n\n$store = $this->context->store;\n\nMallPlatformAsset::register($this);\n$this->registerCssFile($this->context->getCss('style-platform.css?v=1'), ['depends' => MallPlatformAsset::className()]);\n$this->registerJsFile($this->context->getJs('main-platform.js'), ['depends' => MallPlatformAsset::className()]);\n?>\n<?php $this->beginPage()?>\n<!DOCTYPE html>\n<html lang=\"<?= Yii::$app->language?>\">\n<head>\n    <meta charset=\"<?= Yii::$app->charset?>\"/>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <?= Html::csrfMetaTags()?>\n    <title><?= Html::encode($this->title)?> - <?= Html::encode($store->settings['website_name']?: $store->name)?></title>\n    <meta name=\"keywords\" content=\"<?= Html::encode($store->settings['website_seo_keywords']?: $store->settings['website_name'])?>\"/>\n    <meta name=\"description\" content=\"<?= Html::encode($store->settings['website_seo_description']?: $store->settings['website_name'])?>\"/>\n    <link rel=\"icon\" href=\"<?= $this->context->getFavicon()?>\" type=\"image/x-icon\" />\n    <?php $this->head()?>\n</head>\n<body class=\"bg-light\">\n<?php $this->beginBody()?>\n    <header>\n        <?= $this->render('nav-platform')?>\n    </header>\n\n    <main class=\"container\">\n        <?= Alert::widget()?>\n        <?= $content?>\n    </main>\n\n    <footer>\n        <?= $this->render('footer-platform')?>\n    </footer>\n\n    <?= strlen($store->settings['website_stat']) > 10? $store->settings['website_stat'] : ''?>\n<?php $this->endBody()?>\n\n<script>\n    $(document).ready(function () {\n        ua = navigator.userAgent.toLowerCase();\n        var regexp=/\\.(bot.htm|spider.htm)(\\.[a-z0-9\\-]+){1,2}\\//ig;\n        if(!regexp.test(ua)) {\n            jQuery.cookieBar({\n                message:'We use cookies to give you the best experience on our website. By continuing, you agree to our use of cookies.',\n                fixed: true,\n                policyButton: false,\n                expireDays: 60,\n            });\n        }\n    });\n</script>\n</body>\n</html>\n<?php $this->endPage()?>\n\n",
  "\ufeffdefine(\n   ({\n    \"instruction\": \"Lisa ja seadista geokodeerimise teenuseid v\u00f5i objektikihte otsinguallikatena. Need allikad m\u00e4\u00e4ravad, mis info on leitav otsingukasti kaudu.\",\n    \"add\": \"M\u00e4\u00e4ra otsinguallikas\",\n    \"addGeocoder\": \"Lisa geokodeerija\",\n    \"geocoder\": \"Geokodeerija\",\n    \"setLayerSource\": \"M\u00e4\u00e4ra kihi allikas\",\n    \"setGeocoderURL\": \"M\u00e4\u00e4ra geokodeerija URL\",\n    \"searchableLayer\": \"Objektikiht\",\n    \"name\": \"Nimi\",\n    \"countryCode\": \"Riigikood(id)\",\n    \"countryCodeEg\": \"nt \",\n    \"countryCodeHint\": \"Kui j\u00e4tate selle v\u00e4lja t\u00fchjaks, teostatakse otsing k\u00f5ikides riikides\",\n    \"locatorUrl\": \"Geokodeerija URL\",\n    \"locatorName\": \"Geokodeerija nimi\",\n    \"locatorExample\": \"N\u00e4ide\",\n    \"locatorWarning\": \"Seda geokodeermise teenuse versiooni ei toetata. Vidin toetab geokodeerimise teenust alates 00.0 ja uuemates versioonides.\",\n    \"locatorTips\": \"Soovitused pole saadaval, sest geokodeerimisteenus ei toeta soovituste v\u00f5imalust.\",\n    \"layerSource\": \"Kihi allikas\",\n    \"searchLayerTips\": \"Soovitused pole saadaval, sest objektiteenus ei toeta lehek\u00fcljelise jaotuse v\u00f5imalust.\",\n    \"placeholder\": \"Kohat\u00e4itja tekst\",\n    \"searchFields\": \"Otsinguv\u00e4ljad\",\n    \"displayField\": \"Kuvamisv\u00e4li\",\n    \"exactMatch\": \"T\u00e4pne vaste\",\n    \"maxResults\": \"Maksimaalsed tulemused\",\n    \"setSearchFields\": \"M\u00e4\u00e4ra otsinguv\u00e4ljad\",\n    \"set\": \"M\u00e4\u00e4ra\",\n    \"fieldSearchable\": \"otsitav\",\n    \"fieldName\": \"Nimi\",\n    \"fieldAlias\": \"Alias\",\n    \"ok\": \"OK\",\n    \"cancel\": \"T\u00fchista\",\n    \"invalidUrlTip\": \"Sisestatud URL ei sobi v\u00f5i pole k\u00e4ttesaadav.\"\n  })\n);",
  "// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\npackage org.chromium.chromecast.shell;\n\nimport android.app.Activity;\nimport android.content.BroadcastReceiver;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.content.IntentFilter;\nimport android.graphics.Color;\nimport android.media.AudioManager;\nimport android.net.Uri;\nimport android.os.Bundle;\nimport android.os.Handler;\nimport android.os.PatternMatcher;\nimport android.support.v4.content.LocalBroadcastManager;\nimport android.view.KeyEvent;\nimport android.view.MotionEvent;\nimport android.view.WindowManager;\nimport android.widget.FrameLayout;\nimport android.widget.Toast;\n\nimport org.chromium.base.Log;\nimport org.chromium.base.annotations.JNINamespace;\nimport org.chromium.content.browser.ActivityContentVideoViewEmbedder;\nimport org.chromium.content.browser.ContentVideoViewEmbedder;\nimport org.chromium.content.browser.ContentView;\nimport org.chromium.content.browser.ContentViewClient;\nimport org.chromium.content.browser.ContentViewCore;\nimport org.chromium.content.browser.ContentViewRenderView;\nimport org.chromium.content_public.browser.WebContents;\nimport org.chromium.ui.base.ViewAndroidDelegate;\nimport org.chromium.ui.base.WindowAndroid;\n\n/**\n * Activity for displaying a WebContents in CastShell.\n *\n * Typically, this class is controlled by CastContentWindowAndroid, which will\n * start a new instance of this activity. If the CastContentWindowAndroid is\n * destroyed, CastWebContentsActivity should finish(). Similarily, if this\n * activity is destroyed, CastContentWindowAndroid should be notified by intent.\n */\n@JNINamespace(\"chromecast::shell\")\npublic class CastWebContentsActivity extends Activity {\n    private static final String TAG = \"cr_CastWebActivity\";\n    private static final boolean DEBUG = true;\n\n    private Handler mHandler;\n    private String mInstanceId;\n    private BroadcastReceiver mWindowDestroyedBroadcastReceiver;\n    private IntentFilter mWindowDestroyedIntentFilter;\n    private FrameLayout mCastWebContentsLayout;\n    private AudioManager mAudioManager;\n    private ContentViewClient mContentViewClient;\n    private ContentViewRenderView mContentViewRenderView;\n    private WindowAndroid mWindow;\n    private ContentViewCore mContentViewCore;\n    private ContentView mContentView;\n\n    private static final int TEARDOWN_GRACE_PERIOD_TIMEOUT_MILLIS = 300;\n    public static final String ACTION_DATA_SCHEME = \"cast\";\n    public static final String ACTION_DATA_AUTHORITY = \"webcontents\";\n\n    public static final String ACTION_EXTRA_WEB_CONTENTS =\n            \"com.google.android.apps.castshell.intent.extra.WEB_CONTENTS\";\n    public static final String ACTION_EXTRA_KEY_CODE =\n            \"com.google.android.apps.castshell.intent.extra.KEY_CODE\";\n    public static final String ACTION_KEY_EVENT =\n            \"com.google.android.apps.castshell.intent.action.KEY_EVENT\";\n    public static final String ACTION_STOP_ACTIVITY =\n            \"com.google.android.apps.castshell.intent.action.STOP_ACTIVITY\";\n    public static final String ACTION_ACTIVITY_STOPPED =\n            \"com.google.android.apps.castshell.intent.action.ACTIVITY_STOPPED\";\n\n    @Override\n    protected void onCreate(final Bundle savedInstanceState) {\n        if (DEBUG) Log.d(TAG, \"onCreate\");\n        super.onCreate(savedInstanceState);\n\n        mHandler = new Handler();\n\n        // TODO(derekjchow): Remove this call.\n        if (!CastBrowserHelper.initializeBrowser(getApplicationContext())) {\n            Toast.makeText(this, R.string.browser_process_initialization_failed, Toast.LENGTH_SHORT)\n                   .show();\n            finish();\n        }\n\n        // Whenever our app is visible, volume controls should modify the music stream.\n        // For more information read:\n        // http://developer.android.com/training/managing-audio/volume-playback.html\n        setVolumeControlStream(AudioManager.STREAM_MUSIC);\n\n        // Set flags to both exit sleep mode when this activity starts and\n        // avoid entering sleep mode while playing media. We cannot distinguish\n        // between video and audio so this applies to both.\n        getWindow().addFlags(WindowManager.LayoutParams.FLAG_TURN_SCREEN_ON);\n        getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);\n\n        mAudioManager = CastAudioManager.getAudioManager(this);\n\n        setContentView(R.layout.cast_web_contents_activity);\n\n        mWindow = new WindowAndroid(this);\n        mContentViewRenderView = new ContentViewRenderView(this) {\n            @Override\n            protected void onReadyToRender() {\n                setOverlayVideoMode(true);\n            }\n        };\n        mContentViewRenderView.onNativeLibraryLoaded(mWindow);\n        // Setting the background color to black avoids rendering a white splash screen\n        // before the players are loaded. See crbug/307113 for details.\n        mContentViewRenderView.setSurfaceViewBackgroundColor(Color.BLACK);\n\n        mCastWebContentsLayout = (FrameLayout) findViewById(R.id.web_contents_container);\n        mCastWebContentsLayout.addView(mContentViewRenderView,\n                new FrameLayout.LayoutParams(FrameLayout.LayoutParams.MATCH_PARENT,\n                        FrameLayout.LayoutParams.MATCH_PARENT));\n\n        Intent intent = getIntent();\n        handleIntent(intent);\n    }\n\n    protected void handleIntent(Intent intent) {\n        intent.setExtrasClassLoader(WebContents.class.getClassLoader());\n        mInstanceId = intent.getData().getPath();\n\n        final String instanceId = mInstanceId;\n        if (mWindowDestroyedBroadcastReceiver!= null) {\n            LocalBroadcastManager.getInstance(this).unregisterReceiver(\n                    mWindowDestroyedBroadcastReceiver);\n        }\n        mWindowDestroyedBroadcastReceiver = new BroadcastReceiver() {\n            @Override\n            public void onReceive(Context context, Intent intent) {\n                detachWebContentsIfAny();\n                maybeFinishLater();\n            }\n        };\n        mWindowDestroyedIntentFilter = new IntentFilter();\n        mWindowDestroyedIntentFilter.addDataScheme(intent.getData().getScheme());\n        mWindowDestroyedIntentFilter.addDataAuthority(intent.getData().getAuthority(), null);\n        mWindowDestroyedIntentFilter.addDataPath(mInstanceId, PatternMatcher.PATTERN_LITERAL);\n        mWindowDestroyedIntentFilter.addAction(ACTION_STOP_ACTIVITY);\n        LocalBroadcastManager.getInstance(this).registerReceiver(\n                mWindowDestroyedBroadcastReceiver, mWindowDestroyedIntentFilter);\n\n        WebContents webContents =\n                (WebContents) intent.getParcelableExtra(ACTION_EXTRA_WEB_CONTENTS);\n        if (webContents == null) {\n            Log.e(TAG, \"Received null WebContents in intent.\");\n            maybeFinishLater();\n            return;\n        }\n\n        detachWebContentsIfAny();\n        showWebContents(webContents);\n    }\n\n    @Override\n    protected void onNewIntent(Intent intent) {\n        if (DEBUG) Log.d(TAG, \"onNewIntent\");\n\n        // If we're currently finishing this activity, we should start a new activity to\n        // display the new app.\n        if (isFinishing()) {\n            Log.d(TAG, \"Activity is finishing, starting new activity.\");\n            int flags = intent.getFlags();\n            flags = flags & ~Intent.FLAG_ACTIVITY_SINGLE_TOP;\n            intent.setFlags(flags);\n            startActivity(intent);\n            return;\n        }\n\n        handleIntent(intent);\n    }\n\n    @Override\n    protected void onDestroy() {\n        if (DEBUG) Log.d(TAG, \"onDestroy\");\n        super.onDestroy();\n    }\n\n    @Override\n    protected void onStart() {\n        if (DEBUG) Log.d(TAG, \"onStart\");\n        super.onStart();\n    }\n\n    @Override\n    protected void onStop() {\n        if (DEBUG) Log.d(TAG, \"onStop\");\n\n        detachWebContentsIfAny();\n",
  "C*****************************************************************************\nC\nC Subroutine DGELG\nC\nC Solves a general system of simultaneous linear equations\nC 11/18/1992 - M. O'Shaughnessy\t\tPorted DGELG to UNIX\nC*****************************************************************************\n      subroutine dgelg( r, a, m, n, eps, ifail)\n\nc Work arrays are ipvt and info. The input parameter EPS is NOT used \nc in this subroutine.\n      double precision r(m,n),a(m,m)\n      integer n_eqns\n      parameter (n_eqns = 100)\n      integer i,m,n,ifail,eps,ipvt(n_eqns),info\n      character*80 msg\n\n      ifail = 0\n      if (m.gt. n_eqns) then\n         write (msg,10) m\n10    format(' DGELG> Internal array needs to be enlarged >= to ',i4)\n         call xvmessage(msg,' ')\n         call abend\n      end if\n\nc..get the lu decomposition of matrix a.\n\n      call dgefa(a,m,m,ipvt,info)\n\nc..if not singular, then solve for each right hand side\n\n      if ( info.ne. 0 )  then\n         call xvmessage('DGELG> Matrix is singular',' ')\n         ifail = 1\n      else\n         do 100 i = 1, n\n            call dgesld(a,m,m,ipvt,r(1,i))\n100      continue\n      end if\n\n      return\n      end\n",
  "---\ntitle: 'React Status #281' # \u4e0d\u53ef\u4fee\u6539\ndate: '2022-03-25' # \u4e0d\u53ef\u4fee\u6539\ncategories: ['React Status'] # \u4e0d\u53ef\u4fee\u6539\npublish: true # \u7ffb\u8bd1\u5b8c\u6210\u540e\u4fee\u6539\n---\n\n[![](https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60/lnxbvkafp9jm51n4ixzd.jpg)](https://react.statuscode.com/link/121307/web)\n\n<!--\u4ee5\u4e0a\u662f\u9884\u89c8\u4fe1\u606f\uff0c\u56fe\u7247\u4e00\u5f20\u6216\u9650\u5236\u767e\u5b57\u5de6\u53f3\uff0c\u524d\u8005\u4f18\u5148\uff0c\u5168\u6587\u8bf7\u4f7f\u7528\u4e8c\u7ea7\u53ca\u4ee5\u4e0b\u6807\u9898-->\n<!-- more -->\n\n[React Flow 10: \u7528\u4e8e\u521b\u5efa\u57fa\u4e8e Node \u7684\u4ea4\u4e92\u5f0f UI\u3001\u7f16\u8f91\u5668\u548c\u56fe\u8868\u3002](https://react.statuscode.com/link/121307/web \"reactflow.dev\") \u2014 \u5c3d\u7ba1\u6211\u4eec\u5728\u7b2c [235](https://react.statuscode.com/link/121308/web) \u548c\u7b2c [187](https://react.statuscode.com/link/121309/web) \u7684 issue \u4e2d\u4ecb\u7ecd\u4e86\u8fd9\u4e00\u70b9\uff0c\u4f46\u65b0\u7684 [\u53d1\u5e03](https://react.statuscode.com/link/121310/web) \u503c\u5f97\u4e00\u770b\u3002 \u5728\u65b0\u529f\u80fd\u548c\u6539\u8fdb\u4e2d\uff1a\u5b50\u6d41\u7a0b\u3001\u89e6\u6478\u8bbe\u5907\u652f\u6301\u4ee5\u53ca\u4e00\u4e9b\u65b0\u7684 hooks \u548c\u5c5e\u6027\u3002\u8fd9\u7bc7 [\u535a\u5ba2](https://react.statuscode.com/link/121311/web) \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u6982\u8ff0\u3002\n\nWebkid GmbH\n\n[\u5173\u4e8e React 18 RC \u4f60\u6240\u9700\u8981\u77e5\u9053\u7684\u4e00\u5207](https://react.statuscode.com/link/121312/web \"www.telerik.com\") \u2014 \u968f\u7740 [\u7b2c\u4e09\u4e2a\u5019\u9009\u7248\u672c](https://react.statuscode.com/link/121313/web) \u521a\u521a\u53d1\u5e03\uff0c React18 \u4ecd\u7136\u8feb\u5728\u7709\u776b\u3002\u8fd9\u7bc7\u6587\u7ae0\u65e8\u5728\u8ba9\u60a8\u4e86\u89e3\u65b0\u5185\u5bb9\uff0c\u56e0\u6b64\u5f53\u6700\u7ec8\u53d1\u5e03\u5230\u6765\u662f\u60a8\u4e0d\u4f1a\u611f\u5230\u60ca\u8bb6\u3002\n\nKathryn Grayson Nanz\n\n[![](https://copm.s3.amazonaws.com/d52404e9.png)](https://react.statuscode.com/link/121314/web)\n\n[\ud83e\uddc8  \u5c06 ButterCMS \u6dfb\u52a0\u8fdb\u60a8\u7684 React \u5e94\u7528\u4e2d. #1 Rated Headless CMS](https://react.statuscode.com/link/121314/web \"buttercms.com\") \u2014 ButterCMS \u662f\u60a8\u7684\u5185\u5bb9\u540e\u7aef\u3002\u4e0d\u9700\u8981\u60a8\u64cd\u4f5c\u7684\u60c5\u51b5\u4e0b\u5c31\u53ef\u4ee5\u8ba9\u60a8\u7684\u8425\u9500\u56e2\u961f\u66f4\u65b0\u7f51\u7ad9+\u5e94\u7528\u5185\u5bb9\u3002\u7acb\u523b\u5c1d\u8bd5 #1 rated Headless CMS \u300230 \u5929\u514d\u8d39\u3002\n\n\ud83e\uddc8 ButterCMS sponsor\n\n[Liqvid 2.1: \u5728 React \u4e2d\u521b\u5efa\u4ea4\u4e92\u5f0f 'Liquid Videos'](https://react.statuscode.com/link/121341/web \"liqvidjs.org\") \u2014 \u65b0\u7248\u672c\u5141\u8bb8\u60a8\u4f7f\u7528 [Web Animations API](https://react.statuscode.com/link/121342/web)\u3002 \u5b83\u8fd8\u5305\u62ec\u4e00\u4e2a `useTime` \u7528\u4e8e\u652f\u6301\u66f4\u65b0\u52a8\u753b\u3001\u6539\u8fdb\u53ef\u7528\u6027\u4ee5\u53ca\u4e3a\u8fdb\u4e00\u6b65\u6539\u8fdb\u6253\u57fa\u7840\u7684\u65b0\u94a9\u5b50\u51fd\u6570\u3002Remotion \u662f\u9700\u8981\u8003\u8651\u7684\u53e6\u4e00\u4e2a\u9009\u9879\uff0c\u5b83\u66f4\u4fa7\u91cd\u4e8e\u4e8e\u6e32\u67d3\u89c6\u9891\u3002\n\nYuri Sulyma\n\n\ud83d\udd25 \u00a0[Hooks \u88ab\u8ba4\u4e3a\u662f \u201c\u6709\u5bb3\u7684\u201d](https://react.statuscode.com/link/121316/web \"labs.factorialhr.com\") \u2014 \u4f5c\u8005\u58f0\u79f0\u201c\u6bcf\u5468\u90fd\u4f1a\u53d1\u73b0\u5341\u51e0\u4e2a\u4e0e hooks \u76f8\u5173\u7684\u95ee\u9898\u201d\uff0c\u4ed6\u5229\u7528\u8fd9\u4e9b\u7ecf\u9a8c\u6765\u5c55\u793a\u793a\u4f8b\u3001\u89e3\u51b3\u65b9\u6cd5\u5e76\u907f\u514d \u201cAPI \u7684\u7c97\u7cd9\u8fb9\u754c\u6761\u4ef6\u201d \u3002\u8fd9\u5728 Hacker News \u4e0a\u5f15\u8d77\u4e86 [\u76f8\u5f53\u5927\u7684\u8ba8\u8bba\u3002](https://react.statuscode.com/link/121317/web)\n\nPau Ramon Revilla\n\n[Ladle \u7b80\u4ecb\uff1a\u66f4\u5feb\u5730\u5f00\u53d1\u548c\u6d4b\u8bd5\u60a8\u7684 React Stories](https://react.statuscode.com/link/121344/web \"www.ladle.dev\") \u2014 \u4e00\u79cd\u7528\u4e8e\u5728\u9694\u79bb\u73af\u5883\u4e2d\u6784\u5efa\u548c\u6d4b\u8bd5 React \u7ec4\u4ef6\u7684\u65b0\u5de5\u5177\u3002\u8ba9\u4f60\u60f3\u8d77\u4e86 Storybook\uff1fLadle \u65e8\u5728\u6210\u4e3a\u4e00\u4e2a\u66ff\u4ee3\u54c1\uff0c\u4f46\u5b83\u63d0\u4f9b\u4e86\u66f4\u5feb\u7684\u6027\u80fd\uff08\u800c\u4e14\uff0c\u662f\u6709\u6307\u6807\u7684\uff09\u3002\n\nVojtech Miksu\n\n## **\u5feb\u62a5\uff1a**\n\n*   \u8be5 Next.js \u9879\u76ee\u4e3a\u4efb\u4f55\u60f3\u8981\u5b66\u4e60\u4f7f\u7528 Next.js \u5fc5\u5907\u77e5\u8bc6\u7684\u4eba\u63a8\u51fa\u4e86\u4e00\u4e2a[\u65b0\u7684\u57fa\u7840\u8bfe\u7a0b\u3002](https://react.statuscode.com/link/121315/web)\n\n[\u5982\u4f55\u4f7f\u7528 hooks \u521b\u5efa\u4e00\u4e2a React \u8868\u5355\u5e76\u5bf9\u5176\u8fdb\u884c\u6821\u9a8c](https://react.statuscode.com/link/121322/web \"www.telerik.com\") \u2014 \u6709\u4e00\u4e9b\u5e93\u53ef\u4ee5\u62bd\u8c61\u51fa\u5f88\u591a\u8fd9\u6837\u7684\u5de5\u4f5c\uff08\u4f8b\u5982 [Formik](https://react.statuscode.com/link/121323/web) \uff09\uff0c\u4f46\u5982\u679c\u4f60\u60f3\u7eaf\u624b\u5199\uff0c\u770b\u8fd9\u4e2a\u6587\u7ae0\u5c31\u53ef\u4ee5\u4e86\u3002\n\nThomas Findlay\n\n[\u7f16\u5199 React \u76ee\u5f55\u7ec4\u4ef6](https://react.statuscode.com/link/121325/web \"blog.eyas.sh\") \u2014 \u867d\u7136\u76ee\u5f55\u53ef\u4ee5\u901a\u8fc7\u8ba9\u8bfb\u8005\u76f4\u63a5\u8df3\u8f6c\u5230\u4ed6\u4eec\u559c\u6b22\u7684\u5185\u5bb9\u6765\u6539\u5584\u7528\u6237\u4f53\u9a8c\uff0c\u4f46\u8fd9\u79cd\u7ec4\u4ef6\u7684\u8bbe\u7f6e\u548c\u7ef4\u62a4\u53ef\u80fd\u6709\u5f88\u591a\u82e6\u5dee\u4e8b\u3002\u90a3\u4e48\u4e3a\u4ec0\u4e48\u4e0d\u8ba9\u76ee\u5f55\u7ec4\u4ef6\u81ea\u5df1\u5904\u7406\u5462\uff1f\n\nEyas Sharaiha\n\n[\u5347\u7ea7 Next.js \u4ee5\u5b9e\u73b0\u5373\u65f6\u6027\u80fd\u6539\u8fdb](https://react.statuscode.com/link/121321/web \"vercel.com\") \u2014 Vercel \u56e2\u961f\u5982\u4f55\u5c06 Next.js 8 \u6f14\u793a\u63d0\u5347\u5230 Next.js 12 \u6807\u51c6\u5e76\u5728\u8fc7\u7a0b\u4e2d\u770b\u5230\u5de8\u5927\u6539\u8fdb\uff0c\u8fd9\u7bc7\u6587\u7ae0\u5bf9\u6b64\u6848\u4f8b\u8fdb\u884c\u7814\u7a76\u3002\n\nLydia Hallie\n\n[\u4f7f\u7528 React \u5728 URL \u4e2d\u5b58\u50a8 State](https://react.statuscode.com/link/121327/web)  \nPierre Hedkvist\n\n## \ud83d\udee0\u00a0\u4ee3\u7801\u548c\u5de5\u5177\n\n[![](https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60/y0s6sejeq6drq1yosjri.jpg)](https://react.statuscode.com/link/121329/web)\n\n\n[Turnstone: React \u641c\u7d22\u7ec4\u4ef6](https://react.statuscode.com/link/121329/web \"tomsouthall.com\") \u2014 \u4e00\u4e2a\u5b8c\u5168\u53ef\u5b9a\u5236\u7684\u641c\u7d22\u6846\uff0c\u5177\u6709\u81ea\u52a8\u5b8c\u6210\u4e0b\u62c9\u83dc\u5355\u3001\u9884\u8f93\u5165\u548c\u5bf9\u6765\u81ea\u591a\u4e2a\u6570\u636e\u6e90\u7684\u7ed3\u679c\u8fdb\u884c\u5206\u7ec4\u7684\u80fd\u529b\u3001WAI-ARIA \u5408\u89c4\u6027\u7b49\u3002\u5176\u4e3b\u8981\u76ee\u7684\u662f\u5c06\u591a\u4e2a\u6570\u636e\u6e90\u7684\u7ed3\u679c\u8f7b\u677e\u7ec4\u5408\u5230\u4e00\u4e2a\u5b57\u6bb5\u4e2d\u3002\n\nTom Southall\n\n[React Webcam 7.0: A Component to Work with Webcams](https://react.statuscode.com/link/121331/web \"github.com\") \u2014 \u4ece webcam \u4e2d\u83b7\u53d6\u56fe\u50cf\uff0c\u9009\u62e9\u60a8\u9009\u62e9\u7684\u6444\u50cf\u5934\u7b49\u3002\n\nMoz Morris\n\n[\u5982\u4f55\u5728 2022 \u5e74\u4e3a",
  "module.exports = {\n    purge: ['./src/**/*.{js,jsx,ts,tsx}', './public/index.html'],\n    darkMode: false, // or'media' or 'class'\n    theme: {\n        screens: {\n            sm: '480px',\n            md: '768px',\n            lg: '1280px',\n            xl: '1440px',\n            xxl: '1920px',\n        },\n        fontFamily: {\n            sans: ['Dosis','sans-serif'],\n        },\n        extend: {\n            spacing: {\n                '128': '32rem',\n                '144': '36rem',\n            },\n            borderRadius: {\n                '4xl': '2rem',\n            },\n            boxShadow:{\n                'bottomBar': '0px -1px 12px 4px #5c626938',\n            }\n        }\n    },\n    variants: {\n        extend: {},\n    },\n    plugins: [\n        require('tailwindcss-elevation')(['responsive']),\n    ],\n}\n",
  "// Copyright Project Harbor Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\npackage scan\n\nimport (\n\t\"context\"\n\t\"encoding/base64\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"testing\"\n\t\"time\"\n\n\tcj \"github.com/goharbor/harbor/src/common/job\"\n\tjm \"github.com/goharbor/harbor/src/common/job/models\"\n\t\"github.com/goharbor/harbor/src/common/rbac\"\n\t\"github.com/goharbor/harbor/src/controller/artifact\"\n\t\"github.com/goharbor/harbor/src/jobservice/job\"\n\t\"github.com/goharbor/harbor/src/lib/q\"\n\t\"github.com/goharbor/harbor/src/pkg/permission/types\"\n\t\"github.com/goharbor/harbor/src/pkg/robot/model\"\n\tsca \"github.com/goharbor/harbor/src/pkg/scan\"\n\t\"github.com/goharbor/harbor/src/pkg/scan/dao/scan\"\n\t\"github.com/goharbor/harbor/src/pkg/scan/dao/scanner\"\n\tv1 \"github.com/goharbor/harbor/src/pkg/scan/rest/v1\"\n\t\"github.com/goharbor/harbor/src/pkg/scan/vuln\"\n\tartifacttesting \"github.com/goharbor/harbor/src/testing/controller/artifact\"\n\tscannertesting \"github.com/goharbor/harbor/src/testing/controller/scanner\"\n\tmocktesting \"github.com/goharbor/harbor/src/testing/mock\"\n\treporttesting \"github.com/goharbor/harbor/src/testing/pkg/scan/report\"\n\t\"github.com/stretchr/testify/assert\"\n\t\"github.com/stretchr/testify/mock\"\n\t\"github.com/stretchr/testify/require\"\n\t\"github.com/stretchr/testify/suite\"\n)\n\n// ControllerTestSuite is the test suite for scan controller.\ntype ControllerTestSuite struct {\n\tsuite.Suite\n\n\tregistration *scanner.Registration\n\tartifact     *artifact.Artifact\n\trawReport    string\n\n\treportMgr *reporttesting.Manager\n\tar        artifact.Controller\n\tc         Controller\n}\n\n// TestController is the entry point of ControllerTestSuite.\nfunc TestController(t *testing.T) {\n\tsuite.Run(t, new(ControllerTestSuite))\n}\n\n// SetupSuite...\nfunc (suite *ControllerTestSuite) SetupSuite() {\n\tsuite.artifact = &artifact.Artifact{}\n\tsuite.artifact.Type = \"IMAGE\"\n\tsuite.artifact.ProjectID = 1\n\tsuite.artifact.RepositoryName = \"library/photon\"\n\tsuite.artifact.Digest = \"digest-code\"\n\tsuite.artifact.ManifestMediaType = v1.MimeTypeDockerArtifact\n\n\tm := &v1.ScannerAdapterMetadata{\n\t\tScanner: &v1.Scanner{\n\t\t\tName:    \"Clair\",\n\t\t\tVendor:  \"Harbor\",\n\t\t\tVersion: \"0.1.0\",\n\t\t},\n\t\tCapabilities: []*v1.ScannerCapability{{\n\t\t\tConsumesMimeTypes: []string{\n\t\t\t\tv1.MimeTypeOCIArtifact,\n\t\t\t\tv1.MimeTypeDockerArtifact,\n\t\t\t},\n\t\t\tProducesMimeTypes: []string{\n\t\t\t\tv1.MimeTypeNativeReport,\n\t\t\t},\n\t\t}},\n\t\tProperties: v1.ScannerProperties{\n\t\t\t\"extra\": \"testing\",\n\t\t},\n\t}\n\n\tsuite.registration = &scanner.Registration{\n\t\tID:        1,\n\t\tUUID:      \"uuid001\",\n\t\tName:      \"Test-scan-controller\",\n\t\tURL:       \"http://testing.com:3128\",\n\t\tIsDefault: true,\n\t\tMetadata:  m,\n\t}\n\n\tsc := &scannertesting.Controller{}\n\tsc.On(\"GetRegistrationByProject\", context.TODO(), suite.artifact.ProjectID).Return(suite.registration, nil)\n\tsc.On(\"Ping\", suite.registration).Return(m, nil)\n\n\tmgr := &reporttesting.Manager{}\n\tmgr.On(\"Create\", &scan.Report{\n\t\tDigest:           \"digest-code\",\n\t\tRegistrationUUID: \"uuid001\",\n\t\tMimeType:         \"application/vnd.scanner.adapter.vuln.report.harbor+json; version=1.0\",\n\t\tStatus:           \"Pending\",\n\t\tStatusCode:       0,\n\t\tTrackID:          \"the-uuid-123\",\n\t\tRequester:        \"the-uuid-123\",\n\t}).Return(\"r-uuid\", nil)\n\tmgr.On(\"UpdateScanJobID\", \"the-uuid-123\", \"the-job-id\").Return(nil)\n\n\trp := vuln.Report{\n\t\tGeneratedAt: time.Now().UTC().String(),\n\t\tScanner: &v1.Scanner{\n\t\t\tName:    \"Clair\",\n\t\t\tVendor:  \"Harbor\",\n\t\t\tVersion: \"0.1.0\",\n\t\t},\n\t\tSeverity: vuln.High,\n\t\tVulnerabilities: []*vuln.VulnerabilityItem{\n\t\t\t{\n\t\t\t\tID:          \"2019-0980-0909\",\n\t\t\t\tPackage:     \"dpkg\",\n\t\t\t\tVersion:     \"0.9.1\",\n\t\t\t\tFixVersion:  \"0.9.2\",\n\t\t\t\tSeverity:    vuln.High,\n\t\t\t\tDescription: \"mock one\",\n\t\t\t\tLinks:       []string{\"https://vuln.com\"},\n\t\t\t},\n\t\t},\n\t}\n\n\tjsonData, err := json.Marshal(rp)\n\trequire.NoError(suite.T(), err)\n\tsuite.rawReport = string(jsonData)\n\n\treports := []*scan.Report{\n\t\t{\n\t\t\tID:               11,\n\t\t\tUUID:             \"rp-uuid-001\",\n\t\t\tDigest:           \"digest-code\",\n\t\t\tRegistrationUUID: \"uuid001\",\n\t\t\tMimeType:         \"application/vnd.scanner.adapter.vuln.report.harbor+json; version=1.0\",\n\t\t\tStatus:           \"Success\",\n\t\t\tStatusCode:       3,\n\t\t\tTrackID:          \"the-uuid-123\",\n\t\t\tJobID:            \"the-job-id\",\n\t\t\tStatusRevision:   time.Now().Unix(),\n\t\t\tReport:           suite.rawReport,\n\t\t\tStartTime:        time.Now(),\n\t\t\tEndTime:          time.Now().Add(2 * time.Second),\n\t\t},\n\t}\n\n\tmgr.On(\"GetBy\", suite.artifact.Digest, suite.registration.UUID, []string{v1.MimeTypeNativeReport}).Return(reports, nil)\n\tmgr.On(\"Get\", \"rp-uuid-001\").Return(reports[0], nil)\n\tmgr.On(\"UpdateReportData\", \"rp-uuid-001\", suite.rawReport, (int64)(10000)).Return(nil)\n\tmgr.On(\"UpdateStatus\", \"the-uuid-123\", \"Success\", (int64)(10000)).Return(nil)\n\tsuite.reportMgr = mgr\n\n\trc := &MockRobotController{}\n\n\tresource := fmt.Sprintf(\"/project/%d/repository\", suite.artifact.ProjectID)\n\taccess := []*types.Policy{\n\t\t{Resource: types.Resource(resource), Action: rbac.ActionPull},\n\t\t{Resource: types.Resource(resource), Action: rbac.ActionScannerPull},\n\t}\n\n\trname := fmt.Sprintf(\"%s-%s\", suite.registration.Name, \"the-uuid-123\")\n\taccount := &model.RobotCreate{\n\t\tName:        rname,\n\t\tDescription: \"for scan\",\n\t\tProjectID:   suite.artifact.ProjectID,\n\t",
  "package api\n\nimport (\n\t\"encoding/json\"\n\t\"github.com/gorilla/mux\"\n\t\"github.com/londonhackspace/acnode-dashboard/apitypes\"\n\t\"math\"\n\t\"net/http\"\n\t\"strconv\"\n)\n\nfunc (api *Api) handleAccessLogs(w http.ResponseWriter, r *http.Request) {\n\tif!api.checkAuthAdmin(w, r) {\n\t\treturn\n\t}\n\n\tif api.usageLogger!= nil {\n\t\tdata, _ := json.Marshal(api.usageLogger.GetUsageLogNodes())\n\t\tw.Write(data)\n\t} else {\n\t\tw.Write([]byte(\"[]\"))\n\t}\n}\n\nfunc (api *Api) handleAccessLogsNode(w http.ResponseWriter, r *http.Request) {\n\tif!api.checkAuthAdmin(w, r) {\n\t\treturn\n\t}\n\n\tnode := mux.Vars(r)[\"node\"]\n\tpage, err := strconv.Atoi(r.URL.Query().Get(\"page\"))\n\tif err!= nil {\n\t\tpage = 1\n\t}\n\n\tentriesPerPage := int64(50)\n\n\tentryCount := api.usageLogger.GetUsageLogCountForNode(node)\n\n\tentries := api.usageLogger.GetUsageLogsForNode(node, int64(page-1)*entriesPerPage, int64(page)*entriesPerPage)\n\n\tentriesOut := []apitypes.AccessLogEntry{}\n\n\tfor _, i := range entries {\n\t\te := apitypes.AccessLogEntry{\n\t\t\tTimestamp: i.Timestamp.Unix(),\n\t\t\tUserId:    i.UserId,\n\t\t\tUserName:  i.Name,\n\t\t\tUserCard:  i.Card,\n\t\t\tSuccess:   i.Success,\n\t\t}\n\n\t\tentriesOut = append(entriesOut, e)\n\t}\n\n\tresult := apitypes.AccessLogsResponse{\n\t\tCount:      entryCount,\n\t\tPage:       page,\n\t\tPageCount:  int64(math.Ceil(float64(entryCount) / float64(entriesPerPage))),\n\t\tLogEntries: entriesOut,\n\t}\n\n\tdata, _ := json.Marshal(result)\n\tw.Write(data)\n}\n",
  "# interfake\ninterfake generates fake implementation code of Go interface. It's useful for testing some functions depending interface.\n\n## Installation\n```\ngo get -u github.com/y0za/interfake\n```\n\n## To Be Implemented\nThe following features are not yet supported.\n- multiple interfaces of `--target` option\n- embedded interface\n- variadic function\n- import package with `.`\n\n## License\nMIT License\n",
  "module.exports = function check(str, bracketsConfig) {\n    const openBracketsSet = new Set();\n    const closedBracketsSet = new Set();\n\n    for (const pair of bracketsConfig) {\n        openBracketsSet.add(pair[0]);\n        closedBracketsSet.add(pair[1]);\n    }\n\n    const bracketsMap = new Map;\n\n    for (const pair of bracketsConfig) {\n        bracketsMap.set(pair[1], pair[0]);\n    }\n\n    const stack = [];\n\n    for (const char of str) {\n        if (openBracketsSet.has(char) &&!closedBracketsSet.has(char)) {\n            stack.push(char);\n        } else if (openBracketsSet.has(char) && closedBracketsSet.has(char)) {\n            if (stack.length === 0) {\n                stack.push(char);\n                continue;\n            }\n            const lastChar = stack.pop();\n            if (bracketsMap.get(char) === lastChar) continue;\n            if (bracketsMap.get(char)!== lastChar) {\n                stack.push(lastChar);\n                stack.push(char);\n            }\n        } else {\n            if (stack.length === 0) return false;\n            if (bracketsMap.get(char)!== stack.pop()) return false;\n        }\n    }\n\n    return stack.length === 0;\n}\n",
  "set COMPOSE_CONVERT_WINDOWS_PATHS=1\ndocker-compose -p proxyServer up -d --build\npause\ndocker-compose -p proxyServer down",
  "@extends('backend.master')\n\n@section('title', 'Jahit')\n@section('title-nav', 'Jahit')\n@section('jahit', 'class=active-sidebar')\n@section('cssnav', 'cssnav')\n@section('content')\n<style>\n   .cssnav{\n       margin-left:-25px;\n    }\n</style>\n<style>\n    textarea {\n        width: 300px;\n        height: 150px!important;\n    }\n</style>\n<div id=\"non-printable\">\n    <section class=\"section\">\n        <div class=\"section-header \">\n            <a class=\"btn btn-primary\" href=\"{{route('jahit.index')}}\">\n                <i class=\"fas fa-arrow-left\"></i>\n            </a>\n            <h1 class=\"ml-2\">Edit Data | Keluar</h1>\n        </div>\n        <div class=\"section-body\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"card\">\n                        <form action=\"{{route('jahit.update',[$jahit->id])}}\" method=\"POST\">\n                            <div class=\"card-body\">\n                                @include('backend.include.alert')\n                                @csrf\n                                @method('put')\n                                <input type=\"hidden\" name=\"status\" value=\"jahitan keluar\">\n\n                                <div class=\"row\">\n                                    <div class=\"col-md-6\">\n                                        <div class=\"form-group\">\n                                            <label for=\"kode_transaksi\">Kode Transaksi</label>\n\n                                            <div id=\"kdbahankeluar\">\n                                                <input type=\"text\" class=\"form-control\"\n                                                    value=\"{{$jahit->potong->bahan->kode_transaksi}}\" readonly\n                                                    id=\"kdbahanreadkeluar\" name=\"kdbahanreadkeluar\">\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                    <div class=\"col-md-3\">\n                                        <div class=\"form-group\">\n                                            <label for=\"sku\">Kode SKU</label>\n                                            <input type=\"text\" class=\"form-control\" readonly\n                                                value=\"{{$jahit->potong->bahan->sku}}\" required id=\"sku_keluar\"\n                                                name=\"sku\">\n                                        </div>\n\n                                    </div>\n                                    <div class=\"col-md-3\">\n                                        <div class=\"form-group\">\n                                            <label for=\"no_surat_keluar\">Nomor Surat Jalan</label>\n                                            <input type=\"text\" class=\"form-control\"  required id=\"no_surat_keluar\"\n                                                value=\"{{$jahit->no_surat}}\" name=\"no_surat\">\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n\n                                    <div class=\"col-md-6\">\n                                        <div class=\"form-group\">\n                                            <label for=\"tanggal_selesai_keluar\">Tanggal Selesai</label>\n                                            <input type=\"date\" class=\"form-control\" readonly required\n                                                value=\"{{$jahit->tanggal_selesai}}\" id=\"tanggal_selesai_keluar\"\n                                                name=\"tanggal_selesai\">\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-6\">\n                                        <div class=\"form-group\">\n                                            <label for=\"vendor_jahit\">Vendor Jahit</label>\n                                            <input type=\"text\" class=\"form-control\" readonly value=\"{{$jahit->vendor}}\"\n                                            value=\"\" id=\"vendor_jahit\" name=\"vendor_jahit\">\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"row\">\n                                    <div class=\"col-md-6\">\n                                        <div class=\"form-group\">\n                                            <label for=\"berhasil_jahit\">Berhasil Jahit</label>\n                                            <input type=\"number\" value=\"{{$jahit->berhasil}}\"\n                                                class=\"form-control\"  required id=\"berhasil_jahit\"\n                                                name=\"berhasil_jahit\">\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-6\">\n                                        <div class=\"form-group\">\n                                            <label for=\"konversi\">Konversi Lusin</label>\n                                            <input type=\"text\" readonly value=\"{{$jahit->konversi}}\"\n                                                class=\"form-control\" required id=\"konversi\" name=\"konversi\">\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row\" style=\"margin-bottom: -30px\">\n                                    <div class=\"col-md-12\">\n                                        <div class=\"form-group\">\n                                            <label for=\"ukuran\">Ukuran</label>\n\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n\n                                    @forelse ($jahit->detail_jahit as $item)\n                                    @if ($item->size == 'S')\n                                    <div class=\"col-md-2\">\n                                        <div class=\"form-group\">\n                                            <label for=\"ukuran\">S</label>\n                                            <input type=\"hidden\" name=\"dataukuran[]\" value=\"S\">\n                                            <input type=\"hidden\" name=\"iddetailukuran[]\" value=\"{{$item->id}}\"\n                                                id=\"iddetails\">\n                                            <input type=\"number\" min=\"0\"  value=\"{{$item->jumlah}}\" class=\"form-control\"\n                                                required id=\"jumlahs\" name=\"jumlah[]\">\n                                        </div>\n                                    </div>\n                                    @elseif($item->size == 'M')\n                                    <div class=\"col-md-2\" id=\"ukuranm\">\n                                        <div class=\"form-group\">\n                                            <label for=\"ukuran\">M</label>\n                                            <input type=\"hidden\" name=\"dataukuran[]\" value=\"M\">\n                                            <input type=\"hidden\" name=\"iddetailukuran[]\" value=\"{{$item->id}}\"\n                                                id=\"iddetailm\">\n                                            <input type=\"number\" min=\"0\"  value=\"{{$item->jumlah}}\" class=\"form-control\"\n                                                required id=\"jumlahm\" name=\"jumlah[]\">\n                                        </div>\n                                    </div>\n                                    @elseif($item->size == 'L')\n                                    <div class=\"col-md-2\" id=\"ukuranl\">\n                                        <div class=\"form-group\">\n                                            <label for=\"ukuran\">L</label>\n                                            <input type=\"hidden\" name=\"dataukuran[]\" value=\"L\">\n                                            <input type=\"hidden\" name=\"iddetailukuran[]\" value=\"{{$item->id}}\"\n                                                id=\"iddetaill\">\n                                            <input type=\"number\" min=\"0\"  value=\"{{$item->jumlah}}\" class=\"form-control\"\n                                                required id=\"jumlahl\" name=\"jumlah[]\">\n                                        </div>\n                                    </div>\n\n                                    @endif\n                                    @empty\n\n                                    @endforelse\n                                    <div class=\"col-md-6\">\n                                        <div class=\"form-group\">\n                                            <label for=\"gagal_jahit\">Gagal Jahit</label>\n                                            <div class=\"input-group mb-2\">\n                                                <input type=\"number\" class=\"form-control\"\n                                                    value=\"{{$jahit->gagal_jahit}}\"  required id=\"gagal_jahit\"\n                                                    name=\"gagal_jahit\">\n                                                <div class=\"input-group-prepend\">\n                                                    <div class=\"input-group-text\">pcs</div>\n                                                </div>\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"row\">\n                                    <div class=\"col-md-6\">\n                                        <div class=\"row\">\n                                            <div class=\"col-md-12\">\n                                                <div class=\"form-group\">",
  "angular.module('RDash').factory('SecurityService',['$http', '$q', 'apiUrl', '$location', SecurityService]);\n\nfunction SecurityService($http, $q, apiUrl, $location) {\n\n  var resource = \"session\";\n\n  var service = {};\n  service.login = login;\n  service.getUrl = getUrl;\n  return service;\n\n  function getUrl(){\n    var q = $q.defer();\n    console.log(\"login\");\n    $http.get(apiUrl + \"login\").then(function(data) {\n      console.log(data.data.data);\n      q.resolve(data.data.data);\n    }, function(error) {\n      q.reject(error);\n    });\n    return q.promise;\n  }\n  function login(token){\n    var q = $q.defer();\n    console.log(\"login\");\n    $http.get(apiUrl + \"?code=\" + token).then(function(data) {\n      q.resolve(data.data);\n      console.log(\"login ok\");\n    }, function(error) {\n      q.reject(error);\n    });\n    return q.promise;\n  }\n};\n",
  "void main() {\n    int a = 1;\n}",
  "#!/bin/bash\n# https://nomads.ncep.noaa.gov/\n\nMIN_LON=\"-125\"\nMAX_LON=\"-122\"\nMIN_LAT=\"48\"\nMAX_LAT=\"50\"\n\nGFS_DATE=\"20161120\"\nGFS_TIME=\"00\"; # 00, 06, 12, 18\nRES=\"1p00\" # 0p25, 0p50 or 1p00\nBBOX=\"leftlon=${MIN_LON}&rightlon=${MAX_LON}&toplat=${MAX_LAT}&bottomlat=${MIN_LAT}\"\nLEVEL=\"lev_10_m_above_ground=on\"\nGFS_URL=\"http://nomads.ncep.noaa.gov/cgi-bin/filter_gfs_${RES}.pl?file=gfs.t${GFS_TIME}z.pgrb2.${RES}.f000&${LEVEL}&${BBOX}&dir=%2Fgfs.${GFS_DATE}${GFS_TIME}\"\n\ncurl \"${GFS_URL}&var_UGRD=on\" -o utmp.grib\ncurl \"${GFS_URL}&var_VGRD=on\" -o vtmp.grib\n\ngrib_set -r -s packingType=grid_simple utmp.grib utmp.grib\ngrib_set -r -s packingType=grid_simple vtmp.grib vtmp.grib\n\nprintf \"{\\\"u\\\":`grib_dump -j utmp.grib`,\\\"v\\\":`grib_dump -j vtmp.grib`}\" > tmp.json\n\nrm utmp.grib vtmp.grib\n\nDIR=`dirname $0`\nnode ${DIR}/prepare.js ${1}/${GFS_DATE}${GFS_TIME}\n\nrm tmp.json\n",
  "$(function(){setInterval(\"verifyUserLoginStatus()\",5000)});function httpRequest(type,url,data,callback){$.ajaxSetup({headers:{\"X-CSRF-TOKEN\":$('meta[name=\"csrf-token\"]').attr(\"content\")}});var loading=showLoading();$.ajax({url:url,type:type,dataType:\"json\",data:data,success:function(res){hideLoading(loading);if(res.code===0){callback(res)}else{showErrorMessage(res.msg)}}})}function showErrorMessage(msg){layer.msg(msg,{icon:5,time:5000,anim:6,closeBtn:1,})}function showSuccessMessage(msg){layer.msg(msg,{icon:1,time:5000,})}function showMessageAndReload(msg){layer.msg(msg);setTimeout(function(){location.reload()},2000)}function showSuccessMessageAndReload(msg){layer.msg(msg,{icon:1,time:5000,});setTimeout(function(){location.reload()},2000)}function showSuccessMessageAndDo(msg,callback){layer.msg(msg,{icon:1,time:5000,});setTimeout(callback,2000)}function showLoading(type){if(typeof type===\"undefined\"){type=1}return layer.load(1,{shade:[0.5,\"#fff\"]})}function hideLoading(index){if(typeof index===\"undefined\"){layer.closeAll()}layer.close(index)}function showWarningMsg(msg){layer.msg(msg,{icon:7,time:5000,anim:5,closeBtn:1,})}function showConfirm(msg,callback){layer.confirm(msg,{btn:[\"\u786e\u5b9a\",\"\u53d6\u6d88\"]},function(){callback()},function(){})}function gotoPage(url,msg){if(msg!=\"\"){layer.msg(msg,{icon:1,time:5000,})}setTimeout(function(){location.href=url},2000)}function randomWord(randomFlag,min,max){var str=\"\",range=min,arr=[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"];if(randomFlag){range=Math.round(Math.random()*(max-min))+min}for(var i=0;i<range;i++){pos=Math.round(Math.random()*(arr.length-1));str+=arr[pos]}return str};",
  "//\n//     Generated by class-dump 3.5 (64 bit).\n//\n//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.\n//\n\n#import \"NSObject.h\"\n\n@interface WBSContextFeedbackManager : NSObject\n{\n}\n\n+ (void)sendFeedbackForURL:(id)arg1 withComment:(id)arg2 topicsToGradesMap:(id)arg3 categoriesToGradesMap:(id)arg4 isReaderAvailable:(BOOL)arg5 completionHandler:(CDUnknownBlockType)arg6;\n\n@end\n\n",
  "<?php\n\nnamespace App\\Http\\Controllers\\Alumni;\n\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass AlumniAnggota extends Controller\n{\n    public function __construct() {\n    }\n}\n",
  "!function(e,t){function n(e){var t=this,n={autoplay:!0,erase:!0};t.events={},t.scene=-1,t.scenario=[],t.options=t.utils.merge(n,e||{}),t.casting={},t.current={},t.state=\"ready\"}n.prototype={constructor:n,set:function(e,t){var n=this;switch(n.current.model=e,n.current.type){case\"function\":n.current.voice.apply(n,t);break;default:n.current.voice.innerHTML=e}return n},getSayingSpeed:function(e,t){\"number\"!=typeof e&&(t=e,e=0);var n=this,r=n.current.experience+e,i=t?r:n.utils.randomFloat(r,1);return n.utils.getPercentageBetween(1e3,50,i)},getInvincibility:function(){var e=this;return 10*e.current.experience},isMistaking:function(){var e=this;return e.current.experience<e.utils.randomFloat(0,1.4)},utils:{merge:function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);return e},getPercentageBetween:function(e,t,n){return e-e*n+t*n},randomChar:function(){var e=this,t=\"abcdefghijklmnopqrstuvwxyz\";return t.charAt(e.randomNumber(0,t.length-1))},randomNumber:function(e,t){return Math.floor(Math.random()*(t-e+1))+e},randomFloat:function(e,t){return Math.round(10*(Math.random()*(t-e)+e))/10},hasClass:function(e,t){return e.classList?e.classList.contains(t):new RegExp(\"(^| )\"+t+\"( |$)\",\"gi\").test(e.className)},addClass:function(e,t){e.classList?e.classList.add(t):e.className+=\" \"+t},removeClass:function(e,t){e.classList?e.classList.remove(t):e.className=e.className.replace(new RegExp(\"(^|\\\\b)\"+t.split(\" \").join(\"|\")+\"(\\\\b|$)\",\"gi\"),\" \")}},train:function(e){var t=this,n={experience:.6,voice:function(e){console.log(e)},type:\"function\",model:\"\"};return t.utils.merge(n,e)},describe:function(e,n,r){if(\"string\"!=typeof e)throw\"actor's name has wrong type: \"+typeof e;var i=this,a={name:e};return void 0!==n&&(a.experience=n),void 0!==r&&(a.type=\"function\"==typeof r?\"function\":\"DOM\",a.voice=\"DOM\"===a.type&&\"string\"==typeof r?t.querySelector(r):r),i.casting[e]=i.train(a),i},write:function(){for(var e,t=this,n=Array.prototype.splice.apply(arguments,[0]),r=0,i=n.length;i>r;r++)if(e=n[r],\"string\"==typeof e){var a=e.split(\":\"),s=a.length>1,o=s?a[0].trim():null,c=s?a[1]:a[0];s&&t.write({name:\"actor\",args:[o]}),t.options.erase&&s&&t.write({name:\"erase\"}),t.write({name:\"say\",args:[c,!s]})}else\"number\"==typeof e?t.write(0>e?{name:\"erase\",args:[e]}:{name:\"wait\",args:[e]}):\"function\"==typeof e?t.write({name:\"call\",args:[e]}):e instanceof Object&&t.scenario.push(e);return t.options.autoplay&&t.play(),t},play:function(e){var t=this;return e===!0&&(t.scene=-1),\"ready\"===t.state&&t.next(),t},on:function(e,t){var n=this;e=e.split(\",\");for(var r,i=0,a=e.length;a>i;i++)r=e[i]=e[i].trim(),(n.events[r]||(n.events[r]=[])).push(t);return n},emit:function(e,t,n){if(\"string\"!=typeof e)throw\"emit: scope missing\";\"string\"!=typeof t?t=void 0:void 0!==t&&void 0===n&&(n=t);var r=this,i=e+(t?\":\"+t:\"\");return r.trigger(i,n).trigger(\"*\",[i].concat(n)),r},trigger:function(e,t){var n=this,r=n.events[e]||[];t instanceof Array||(t=[t]);for(var i=0,a=r.length;a>i;i++)r[i].apply(n,[e].concat(t));return n},call:function(e,t){var n=this;return e.apply(n),t?n:n.next()},next:function(){var e=this,t=e.scenario[e.scene];if(t&&e.emit(t.name,\"end\",[t.name].concat(t.args)),e.scene+1>=e.scenario.length)e.state=\"ready\";else{e.state=\"playing\";var n=e.scenario[++e.scene];e.emit(n.name,\"start\",[n.name].concat(n.args)),e[n.name].apply(e,n.args)}return e},actor:function(e){var t=this;return t.current=t.casting[e],t.next()},say:function(e,t){var n,r,i=this,a=!1,s=i.getInvincibility();t?(r=i.current.model,n=i.current.model.length-1,e=r+e):(r=i.current.model=\"\",n=-1);var o=setTimeout(function c(){var t,u,l=r.charAt(n);a?(s=i.getInvincibility(),a=!1,t=null,u=r=r.substr(0,n),n--):(n++,t=--s<0&&i.isMistaking()?i.utils.randomChar():e.charAt(n),t!==e.charAt(n)&&(a=!0),u=r+=t),i.set(u,[u,t,l,e]),a||n<e.length?o=setTimeout(c,i.getSayingSpeed()):i.next()},i.getSayingSpeed());return i},erase:function(e){var t=this,n=\"string\"==typeof t.current.model?t.current.model.length:-1,r=\"number\"==typeof e&&0>e?n+1+e:0;if(0>n)return t.next();setTimeout(function i(){var e=t.current.model.charAt(n),a=t.current.model.substr(0,--n);t.set(a,[a,null,e,a]),n>=r?setTimeout(i,t.getSayingSpeed(.2,!0)):t.next()},t.getSayingSpeed(.2,!0));return t},wait:function(e){var t=this;return setTimeout(function(){t.next()},e),t}},e.TheaterJS=n}(window,document);",
  "<?php\n\nnamespace App;\n\nuse Illuminate\\Contracts\\Auth\\MustVerifyEmail;\nuse Illuminate\\Foundation\\Auth\\User as Authenticatable;\nuse Illuminate\\Notifications\\Notifiable;\n\nclass User extends Authenticatable\n{\n    use Notifiable;\n    protected $table = \"users\";\n    /**\n     * The attributes that are mass assignable.\n     *\n     * @var array\n     */\n    protected $fillable = [\n        'name', 'email', 'password',\n    ];\n\n    /**\n     * The attributes that should be hidden for arrays.\n     *\n     * @var array\n     */\n    protected $hidden = [\n        'password','remember_token',\n    ];\n\n    /**\n     * The attributes that should be cast to native types.\n     *\n     * @var array\n     */\n    protected $casts = [\n        'email_verified_at' => 'datetime',\n    ];\n\n    \n    protected $primaryKey = 'id';\n\n    public $timestamps = false;\n    //public $fillable = ['tensp', 'idnsp', 'iddvt', 'giaban', 'gianhap', 'hinh', 'idncc','soluongton', 'ghichu'];\n    public function nhanvien()\n    {\n        return $this->hasMany('App\\User', 'idtk', 'idtk');\n    }\n\n    // public function donvitinh()\n    // {\n    //     return $this->hasMany('App\\DonViTinh', 'iddvt', 'iddvt');\n    // }\n\n    // public function nhacungcap()\n    // {\n    //     return $this->hasMany('App\\NhaCungCap', 'idncc', 'idncc');\n    // }\n}\n",
  "\ufeff// --------------------------------------------------------------------------------------------------------------------\n// <copyright file=\"UpdateFederatedPaymentBlock.cs\" company=\"Sitecore Corporation\">\n//   Copyright (c) Sitecore Corporation 1999-2018\n// </copyright>\n// --------------------------------------------------------------------------------------------------------------------\n\nnamespace Plugin.Sample.Payments.Braintree\n{\n    using System;\n    using System.Collections.Generic;\n    using System.Linq;\n    using System.Threading.Tasks;\n\n    using global::Braintree;\n    using global::Braintree.Exceptions;\n\n    using Microsoft.Extensions.Logging;\n\n    using Sitecore.Commerce.Core;\n    using Sitecore.Commerce.Plugin.Carts;\n    using Sitecore.Commerce.Plugin.ManagedLists;\n    using Sitecore.Commerce.Plugin.Orders;\n    using Sitecore.Commerce.Plugin.Payments;\n    using Sitecore.Framework.Conditions;\n    using Sitecore.Framework.Pipelines;\n\n    /// <summary>\n    /// Defines a block which updates transaction Id for an order.\n    /// </summary>   \n    /// <seealso>\n    ///   <cref>\n    /// Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Plugin.Orders.Order, Sitecore.Commerce.Plugin.Orders.Order, Sitecore.Commerce.Core.CommercePipelineExecutionContext}\n    /// </cref>\n    /// </seealso>\n    [PipelineDisplayName(PaymentsBraintreeConstants.UpdateFederatedPaymentBlock)]\n    public class UpdateFederatedPaymentBlock : PipelineBlock<Order, Order, CommercePipelineExecutionContext>\n    {\n        private readonly IPersistEntityPipeline _persistEntityPipeline;\n\n        /// <summary>\n        /// Initializes a new instance of the <see cref=\"UpdateFederatedPaymentBlock\" /> class.\n        /// </summary>\n        /// <param name=\"persistEntityPipeline\">The persist entity pipeline.</param>\n        public UpdateFederatedPaymentBlock(IPersistEntityPipeline persistEntityPipeline)\n        {\n            this._persistEntityPipeline = persistEntityPipeline;           \n        }\n\n        /// <summary>\n        /// Runs the specified argument.\n        /// </summary>\n        /// <param name=\"arg\">The argument.</param>\n        /// <param name=\"context\">The context.</param>\n        /// <returns>\n        /// A cart with federate payment component\n        /// </returns>\n        public override async Task<Order> Run(Order arg, CommercePipelineExecutionContext context)\n        {\n            Condition.Requires(arg).IsNotNull($\"{this.Name}: order can not be null.\");\n\n            var order = arg;\n            if (!order.HasComponent<OnHoldOrderComponent>())\n            {\n                var invalidOrderStateMessage = $\"{this.Name}: Expected order in '{context.GetPolicy<KnownOrderStatusPolicy>().OnHold}' status but order was in '{order.Status}' status\";\n                context.Abort(\n                    await context.CommerceContext.AddMessage(\n                        context.GetPolicy<KnownResultCodes>().ValidationError,\n                        \"InvalidOrderState\",\n                        new object[] { context.GetPolicy<KnownOrderStatusPolicy>().OnHold, order.Status },\n                        invalidOrderStateMessage).ConfigureAwait(false), \n                    context);\n            }\n\n            var cart = context.CommerceContext.GetEntity<Cart>(c => c.Id.Equals(order.GetComponent<OnHoldOrderComponent>().TemporaryCart.EntityTarget, StringComparison.OrdinalIgnoreCase));\n            if (cart == null ||!cart.HasComponent<FederatedPaymentComponent>())\n            {\n                return arg;\n            }\n\n            var payment = cart.GetComponent<FederatedPaymentComponent>();\n            if (string.IsNullOrEmpty(payment.PaymentMethodNonce))\n            {\n                context.Abort(\n                    await context.CommerceContext.AddMessage(\n                        context.GetPolicy<KnownResultCodes>().Error,\n                        \"InvalidOrMissingPropertyValue\",\n                        new object[] { \"PaymentMethodNonce\" },\n                        \"Invalid or missing value for property 'PaymentMethodNonce'.\").ConfigureAwait(false), \n                    context);\n\n                return arg;\n            }\n\n            if (!string.IsNullOrEmpty(payment.TransactionId))\n            {\n                // Federated Payment was not changed\n                return arg;\n            }           \n\n            var braintreeClientPolicy = context.GetPolicy<BraintreeClientPolicy>();\n            if (!(await braintreeClientPolicy.IsValid(context.CommerceContext).ConfigureAwait(false)))\n            {\n                return arg;\n            }\n\n            try\n            {\n                var gateway = new BraintreeGateway(braintreeClientPolicy?.Environment, braintreeClientPolicy?.MerchantId, braintreeClientPolicy?.PublicKey, braintreeClientPolicy?.PrivateKey);\n\n                // void order payment\n                if (order.HasComponent<FederatedPaymentComponent>())\n                {\n                    var orderPayment = order.GetComponent<FederatedPaymentComponent>();\n\n                    // void order payment  \n                    var voidResult = gateway.Transaction.Void(orderPayment.TransactionId);\n                    if (voidResult.IsSuccess())\n                    {\n                        context.Logger.LogInformation($\"{this.Name} - Void Payment succeeded: {orderPayment.Id}\");\n                        orderPayment.TransactionStatus = voidResult.Target.Status.ToString();\n                        await this.GenerateSalesActivity(order, orderPayment, context).ConfigureAwait(false);\n                    }\n                    else\n                    {\n                        var errorMessages = voidResult.Errors.DeepAll().Aggregate(string.Empty, (current, error) => current + (\"Error: \" + (int)error.Code + \" - \" + error.Message + \"\\n\"));\n\n                        context.Abort(\n                            await context.CommerceContext.AddMessage(\n                                context.GetPolicy<KnownResultCodes>().Error,\n                                \"PaymentVoidFailed\",\n                                new object[] { orderPayment.TransactionId },\n                                $\"{this.Name}. Payment void failed for transaction { orderPayment.TransactionId }: { errorMessages }\").ConfigureAwait(false), \n                            context);\n\n                        return arg;\n                    }\n                }\n\n                var request = new TransactionRequest\n                {\n                    Amount = payment.Amount.Amount,\n                    PaymentMethodNonce = payment.PaymentMethodNonce,\n                    BillingAddress = ComponentsHelper.TranslatePartyToAddressRequest(payment.BillingParty),\n                    Options = new TransactionOptionsRequest\n                    {\n                        SubmitForSettlement = false\n                    }\n                };\n\n                var result = gateway.Transaction.Sale(request);\n                if (result.IsSuccess())\n                {\n                    var transaction = result.Target;\n                    payment.TransactionId = transaction?.Id;\n                    payment.TransactionStatus = transaction?.Status?.ToString();\n                    payment.PaymentInstrumentType = transaction?.PaymentInstrumentType?.ToString();\n\n                    var cc = transaction?.CreditCard;\n                    payment.MaskedNumber = cc?.MaskedNumber;\n                    payment.CardType = cc?.CardType?.ToString();\n                    if (cc?.ExpirationMonth!= null)\n                    {\n                        payment.ExpiresMonth = int.Parse(cc.ExpirationMonth, System.Globalization.CultureInfo.InvariantCulture);\n                    }\n\n                    if (cc?.ExpirationYear!= null)\n                    {\n                        payment.ExpiresYear = int.Parse(cc.ExpirationYear, System.Globalization.CultureInfo.InvariantCulture);\n                    }\n                }               \n                else\n                {\n                    var errorMessages = result.Errors.DeepAll().Aggregate(string.Empty, (current, error) => current + (\"Error: \" + (int)error.Code + \" - \" + error.Message + \"\\n\"));\n\n                    context.Abort(\n                        await context.CommerceContext.AddMessage(\n                            context.GetPolicy<KnownResultCodes>().Error,\n                            \"CreatePaymentFailed\",\n                            new object[] { \"PaymentMethodNonce\" },\n                            $\"{this.Name}. Create payment failed :{ errorMessages }\").ConfigureAwait(false), \n                        context);                    \n                }\n\n                return arg;              \n            }\n            catch (BraintreeException ex)\n            {\n                await context.CommerceContext.AddMessage(\n                    context.GetPolicy<KnownResultCodes>().Error,\n                    \"InvalidClientPolicy\",\n                    new object[] { \"BraintreeClientPolicy\", ex },\n                    $\"{this.Name}. Invalid BraintreeClientPolicy\").ConfigureAwait(false);\n                return arg;\n            }\n        }\n\n        /// <summary>\n        /// Generates the sales activity.\n        /// </summary>\n        /// <param name=\"order\">The order.</param>\n        /// <param name=\"payment\">The payment.</param>\n        /// <param name=\"context\">The",
  "# Central thermal trip point configuration\n\nThis directory contains the central thermal trip point parser library and validator program.\n\n## Context\n\nThe purpose of the central thermal trip point configuration is to create a file where the trip point\nconfiguration for all clients in the system can be defined in a single place. Having all trip points\nin a single location aims to provide a few benefits:\n1. Improved maintainability.\n2. Easier reasoning about a system\u2019s holistic thermal throttling scheme.\n3. Better alignment with the general direction of central configuration owned by the Power Manager,\n   similar to the low-power mode configuration system.\n4. Improved ability to support per-sensor trip point configurations, which will be needed to support\n   more advanced throttling policies, and isn\u2019t achievable with the current thermal interface\n\n## Example configuration\n\n```\n{\n    clients: {\n        audio: [\n            {\n                state: 1,\n                trip_points: [\n                    {\n                        sensor: '/dev/sys/platform/05:03:a/thermal',\n                        activate_at: 75,\n                        deactivate_below: 71,\n                    },\n                ],\n            },\n            {\n                state: 2,\n                trip_points: [\n                    {\n                        sensor: '/dev/sys/platform/05:03:a/thermal',\n                        activate_at: 86,\n                        deactivate_below: 82,\n                    },\n                ],\n            },\n        ],\n    },\n}\n```\n\n## Format\n\nThe configuration begins with a top-level key, `clients`, which contains an entry for each\nconfigured thermal client. The key name for each client entry must match the `client_type`\nidentifier that a client will specify in the call to\n[`fuchsia.thermal.ClientStateConnector/Connect`](/sdk/fidl/fuchsia.thermal/client_state.fidl;l=40;drc=002657ec7305d38bfeaea7e1d5f10f3952367238).\n\nThe value for each client entry is an array of the client\u2019s supported thermal states. A thermal\nstate is described by two keys:\n* `state` - the thermal state value (unsigned integer) that this object\ndescribes\n* `trip_points` - an array of trip points that will activate this thermal state\n\nA \u201ctrip point\u201d is described by three keys:\n* `sensor` - path to the sensor driver that this trip point corresponds to\n* `activate_at` - the thermal load at which this trip point will become active\n* `deactivate_below` - the thermal load at which this trip point becomes deactivated\n\n## Adding board support\n\nTo add support for a new board:\n1. Create a new board-specific JSON5 file, taking care to follow the correct format (detailed below)\n2. In your new JSON5 file, add a client entry and associated trip points for each thermal client you\n   wish to support\n3. Define a [thermal_config](/src/power/power-manager/thermal_config/thermal_config.gni) build\n   target for the new JSON5 file and include it in the respective board-specific gni file\n\n## Validation\n\nThe [thermal_config](/src/power/power-manager/thermal_config/thermal_config.gni) GN template\nimplements a built-in validator. The validator runs at compile time as long as the `thermal_config`\ntarget is included in the build graph. It will ensure 1) the file is valid JSON5, and 2) the JSON5\nformat adheres to the expected format (defined by the parsing library\n[here](/src/power/power-manager/thermal_config/parser/lib.rs)).\n\n## Raw temperature vs thermal load\n\nTrip points are described in terms of \"thermal load\" instead of raw temperatures. Therefore, if trip\npoints based on raw temperatures are desired, those raw temperatures must first be converted into\nequivalent thermal load values.\n\n*__Background on thermal load__ \u2013 \u201cthermal load\u201d is simply an integer in the range [0..100] which\nrepresents the severity of thermals at a given sensor. A thermal load value of 0 corresponds to\n\u201cthermally unthrottled\u201d while a value of 100 corresponds to \u201cmax thermal throttling\u201d and typically\nresults in a system shutdown. Thermal load is calculated as an interpolation between a \u201cstart\u201d and\n\u201cend\u201d temperature (corresponding to \u201cthrottling onset\u201d and \u201cemergency reboot\u201d temperatures,\nrespectively).*\n\nTo convert the desired raw temperature trip points into corresponding thermal load trip points, we\nmust first choose \u201conset\u201d and \u201creboot\u201d threshold temperatures for each sensor, which will be\nconfigured internally in the Power Manager\u2019s node configuration (example:\n[Nelson](/src/power/power-manager/node_config/nelson_node_config.json;l=86-108;drc=f56ecd713a17da5949ed7e270db887586a6573e1)).\nOnce the \u201conset\u201d and \u201creboot\u201d temperature thresholds are determined, we can apply the following\nformula to convert the desired raw temperature for each trip point into the equivalent thermal load\nvalue:\n\n`thermal_load = (T - T_onset) / (T_reboot - T_onset) * 100`\n\n## Trip point configuration\n\nThe specific trip point configuration for each client does not follow any one-size-fits-all\napproach. Typically, it is the responsibility of the system integrator interested in thermal\nmanagement to determine the appropriate thermal trip points for each client. The configuration\nshould consider:\n* how many thermal throttle states are supported by a given client\n* when should throttling be applied for a client relative to other clients\n* when should throttling be applied for a client relative to emergency thermal reboot\n\n## Theory of operation\n\n### Client usage\n\nA supported client may use the\n[`fuchsia.thermal.ClientStateConnector/Connect`](/sdk/fidl/fuchsia.thermal/client_state.fidl;l=40;drc=002657ec7305d38bfeaea7e1d5f10f3952367238)\nmethod to connect a\n[`fuchsia.thermal.ClientStateWatcher`](/sdk/fidl/fuchsia.thermal/client_state.fidl;l=54;drc=002657ec7305d38bfeaea7e1d5f10f3952367238)\nchannel to the Power Manager, which can then be used to query its current thermal state. The state\nreturned by this method will be an integer corresponding to a specific trip point from that client's\nentry in the configuration file. It is up to the client to implement actions resulting from thermal\nstate changes.\n\n### Power Manager usage\n\nThe configuration files are intended to be consumed directly by the Power Manager component. When\nthe Power Manager starts up, it will read in the configuration file from the filesystem. When a\nclient requests its current thermal state, the Power Manager will use available system temperature\ninformation in combination with that client's trip point configuration to determine the appropriate\nthermal state.\n\n### Thermal state selection\n\nThe Power Manager is responsible for continuously monitoring temperature levels at each sensor. As\ntemperature increases into the range of a client\u2019s configured trip points, the Power Manager must\ndetermine the appropriate thermal state for the client, and communicate it to the client.\n\nTo select a client\u2019s thermal state, the Power Manager will iterate over the client\u2019s states and\nassociated trip points. If any of the state\u2019s trip points are matched, then that thermal state is\nchosen and the iteration will stop.",
  "\ufeffusing JT808.Protocol.Extensions;\nusing JT808.Protocol.MessageBody;\nusing System;\n\nnamespace JT808.Protocol.JT808Formatters.MessageBodyFormatters\n{\n    public class JT808_0x8103_0x0110Formatter : IJT808Formatter<JT808_0x8103_0x0110>\n    {\n        public JT808_0x8103_0x0110 Deserialize(ReadOnlySpan<byte> bytes, out int readSize)\n        {\n            int offset = 0;\n            JT808_0x8103_0x0110 jT808_0x8103_0x0110 = new JT808_0x8103_0x0110\n            {\n                ParamLength = JT808BinaryExtensions.ReadByteLittle(bytes, ref offset)\n            };\n            jT808_0x8103_0x0110.ParamValue = JT808BinaryExtensions.ReadBytesLittle(bytes, ref offset, jT808_0x8103_0x0110.ParamLength);\n            readSize = offset;\n            return jT808_0x8103_0x0110;\n        }\n\n        public int Serialize(ref byte[] bytes, int offset, JT808_0x8103_0x0110 value)\n        {\n            offset += JT808BinaryExtensions.WriteByteLittle(bytes, offset, (byte)value.ParamValue.Length);\n            offset += JT808BinaryExtensions.WriteBytesLittle(bytes, offset, value.ParamValue);\n            return offset;\n        }\n    }\n}",
  "# This migration comes from refinery_memberships (originally 20120110165302)\nclass AddActivationFieldsToUsers < ActiveRecord::Migration\n  def self.up\n    add_column Refinery::User.table_name, :enabled,  :boolean, :default => false\n    add_column Refinery::User.table_name, :seen,     :boolean, :default => false\n    add_column Refinery::User.table_name, :rejected, :string,  :default => 'UNDECIDED' # uff true, false, FileNotFound......\n    Refinery::Memberships::Member.all.each do | m |\n      m.seen = true\n      m.enabled = m.has_role?(:member)\n      m.rejected = 'NO'\n      m.save\n    end\n  end\n\n  def self.down\n    remove_column Refinery::User.table_name, :enabled\n    remove_column Refinery::User.table_name, :seen\n    remove_column Refinery::User.table_name, :rejected\n  end\n\nend\n",
  "// Targeted by JavaCPP version 1.5.6-SNAPSHOT: DO NOT EDIT THIS FILE\n\npackage org.bytedeco.numpy;\n\nimport java.nio.*;\nimport org.bytedeco.javacpp.*;\nimport org.bytedeco.javacpp.annotation.*;\n\nimport static org.bytedeco.javacpp.presets.javacpp.*;\nimport static org.bytedeco.openblas.global.openblas_nolapack.*;\nimport static org.bytedeco.openblas.global.openblas.*;\nimport org.bytedeco.cpython.*;\nimport static org.bytedeco.cpython.global.python.*;\n\nimport static org.bytedeco.numpy.global.numpy.*;\n\n@Properties(inherit = org.bytedeco.numpy.presets.numpy.class)\npublic class PyArray_FastTakeFunc extends FunctionPointer {\n    static { Loader.load(); }\n    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */\n    public    PyArray_FastTakeFunc(Pointer p) { super(p); }\n    protected PyArray_FastTakeFunc() { allocate(); }\n    private native void allocate();\n    public native int call(Pointer dest, Pointer src, @Cast(\"npy_intp*\") SizeTPointer indarray,\n                                       @Cast(\"npy_intp\") long nindarray, @Cast(\"npy_intp\") long n_outer,\n                                       @Cast(\"npy_intp\") long m_middle, @Cast(\"npy_intp\") long nelem,\n                                       @Cast(\"NPY_CLIPMODE\") int clipmode);\n}\n",
  "$(document).ready(function () { \n\n  $('#monthyear').val('');\n  $('#monthyearalt').val('');\n\n  $('#monthyear').datepicker({\n    dateFormat: 'MM yy',\n    changeMonth: true,\n    changeYear: true,\n    showButtonPanel: true,\n    altField: \"#monthyearalt\",\n    altFormat: \"yyMM\",\n    defaultDate: new Date(),\n    onClose: function (dateText, instance) {\n      var month = $('#ui-datepicker-div.ui-datepicker-month :selected').val();\n      var year = $('#ui-datepicker-div.ui-datepicker-year :selected').val();\n      $(this).val($.datepicker.formatDate('MM yy', new Date(year, month)));\n      $('#monthyearalt').val($.datepicker.formatDate('yymm', new Date(year, month)));\n    }\n  });\n\n});\n\n\n",
  "\ufeff<!doctype html>\n<html lang=\"pt-br\">\n\n\n<head>\n<meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<meta name=\"keywords\" content=\"\">\n<meta name=\"description\" content=\"\">\n<title>Pandora Entretenimento</title>\n<link rel=\"shortcut icon\" href=\"../../static/img/hubshortcut.png\">\n\n<link rel=\"stylesheet\" href=\"../../static/css/bootstrap.min.css\">\n<link rel=\"stylesheet\" href=\"../../static/css/dropdown.css\">\n<link rel=\"stylesheet\" href=\"../../static/css/font-awesome.css\">\n\n\n\n<script src=\"../../static/js/jquery-2.1.3.min.js\"></script>\n<script src=\"../../static/js/bootstrap.min.js\"></script>\n<script src=\"../../static/js/main.js\"></script>\n\n\n<link rel=\"stylesheet\" href=\"../../static/css/efforia.css\">\n<link rel=\"stylesheet\" href=\"../../static/css/main.css\">\n<style>\n@font-face { font-family: \"Ubuntu\"; src: url(\"../../static/ttf/ubuntu-l.ttf\"); }\n@font-face { font-family: \"Ubuntu\"; src: url(\"../../static/ttf/ubuntu-b.ttf\"); font-weight: bold; }\n</style>\n\n\n</head>\n\n<body>\n\n  <!-- Common navbar for all sizes and pages of the website!-->\n  <nav class=\"navbar navbar-default fixed-navbar\">\n    <div class=\"container-fluid\">\n      <a class=\"hidden-xs hidden-sm navbar-brand navbar-select\" href=\"../../\">\n        <img src=\"../../static/svg/hub.svg\" class=\"navbar-img\" alt=\"Pandora\"/>\n      </a>\n      <div class=\"navbar-header hidden-md\">\n        <button class=\"navbar-toggle collapsed bordered navbar-height navbar-corner-left\"\n                type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsed\">\n          <span class=\"sr-only\">Toggle Navigation</span>\n          <span class=\"icon-bar bar\"></span>\n          <span class=\"icon-bar bar\"></span>\n          <span class=\"icon-bar bar\"></span>\n        </button>\n        <a class=\"visible-xs visible-sm navbar-brand-center\" href=\"../../\">\n          <img src=\"../../static/svg/blacklogo.svg\" class=\"navbar-img\" alt=\"Pandora\"/>\n        </a>\n        <div class=\"visible-xs visible-sm navbar-cart navbar-corner-right\">\n          <button type=\"button\" class=\"btn btn-lg btn-default\" data-toggle=\"collapse\" data-target=\"#profile\">\n            <span class=\"glyphicon glyphicon-shopping-cart\"></span>\n          </button>\n        </div>\n      </div>\n      <div id=\"profile\" class=\"collapse hidden-lg hidden-md\">\n        <ul class=\"nav navbar-nav navbar-height navbar-padding nav-default\">\n          \n\n<li class=\"menuitem\">\n  <a class=\"black lalign\" href=\"\">\n    <span class=\"glyphicon glyphicon-user\"></span>\n    &nbsp;Conta\n  </a>\n</li>\n<li class=\"menuitem\">\n  <a class=\"black lalign\" href=\"#\">\n    <span class=\"glyphicon glyphicon-shopping-cart\"></span>\n    &nbsp;Carrinho\n  </a>\n</li>\n<li class=\"menuitem\">\n  <a class=\"black lalign\" href=\"#\">\n    <span class=\"glyphicon glyphicon-gift\"></span>\n    &nbsp;Lista\n  </a>\n</li>\n<li class=\"menuitem\">\n  <a class=\"black lalign\" href=\"#\">\n    <span class=\"glyphicon glyphicon-list-alt\"></span>\n    &nbsp;Pedidos\n  </a>\n</li>\n\n        </ul>\n      </div>\n      <div id=\"collapsed\" class=\"collapse navbar-collapse navbar-left none\" style=\"padding:0px\">\n        <ul class=\"nav navbar-nav navbar-height navbar-padding nav-default\">\n          <li class=\"dropdown menuitem\">\n            <a id=\"hub\" href=\"../../atom/\"> ATOM </a>\n          </li>\n          <li class=\"dropdown menuitem\">\n            <a id=\"hub\" href=\"../../hub/\"> HUB </a>\n            <!--<ul class=\"dropdown-menu menu\"> \n\n<li><a href=\"../../hub/eos\">       Tecnologia EOS     </a></li>\n<li><a href=\"../../hub/iot\">       Internet das Coisas </a></li>\n<li><a href=\"../../hub/server\">       Nuvem             </a></li>\n </ul>!-->\n          </li>\n          <li class=\"dropdown menuitem\">\n            <a id=\"hubpro\" href=\"../../tv/\"> TV </a>\n            <!--<ul class=\"dropdown-menu menu\"> \n\n<li><a href=\"../../tv/eosd\">         Android  </a></li>\n<li><a href=\"../../tv/mediacenter\">  Audiovisual       </a></li>\n<li><a href=\"../../tv/videogame\">    Entretenimento     </a></li>\n </ul>!-->\n          </li>\n          <li class=\"dropdown menuitem\">\n            <a id=\"help\" href=\"../../help/\"> Ajuda </a>\n            <!--<ul class=\"dropdown-menu menu\"> \n\n<li><a href=\"../../help/documentation\">  Documenta\u00e7\u00e3o </a></li>\n<li><a href=\"../../help/localization\">   Localiza\u00e7\u00e3o  </a></li>\n<li><a href=\"../../help/warranty\">       Garantia      </a></li>\n </ul>!-->\n          </li>\n        </ul>\n        <div class=\"hidden visible-xs visible-sm centered\" style=\"padding: 0px 5px;\"> \n\n<form class=\"navbar-form navbar-padding none nomargin\" action=\"../../search/\" style=\"padding:20px 0px\" role=\"search\">\n  <div class=\"input-group\">\n    <input class=\"form-control\" placeholder=\"Buscar\" name=\"q\" value=\"\" type=\"text\" style=\"height:3em;\">\n      <span class=\"input-group-btn\">\n        <button class=\"btn btn-default navbar-height\" value=\"\" type=\"submit\" style=\"height:3em;\">\n          <span class=\"glyphicon glyphicon-search\" aria-hidden=\"true\"></span>\n        </button>\n      </span>\n    </input>\n  </div>\n</form>\n </div>\n      </div>\n      <div id=\"profile\" class=\"navbar-right navbar-cart hidden-xs hidden-sm\">\n        <div class=\"dropdown\" id=\"pop\">\n          <a class=\"btn btn-lg btn-default\" data-toggle=\"dropdown\">\n            <span class=\"glyphicon glyphicon-shopping-cart\"></span>\n          </a>\n          <ul class=\"dropdown-menu btn-block account menu\">\n            \n\n<li class=\"menuitem\">\n  <a class=\"black lalign\" href=\"\">\n    <span class=\"glyphicon glyphicon-user\"></span>\n    &nbsp;Conta\n  </a>\n</li>\n<li class=\"menuitem\">\n  <a class=\"black lalign\" href=\"#\">\n    <span class=\"glyphicon glyphicon-shopping-cart\"></span>\n    &nbsp;Carrinho\n  </a>\n</li>\n<li class=\"menuitem\">\n  <a class=\"black lalign\" href=\"#\">\n    <span class=\"glyphicon glyphicon-gift\"></span>\n    &nbsp;Lista\n  </a>\n</li>\n<li class=\"menuitem\">\n  <a class=\"black lalign\" href=\"#\">\n    <span class=\"glyphicon glyphicon-list-alt\"></span>\n    &nbsp;Pedidos\n  </a>\n</li>\n\n          </ul>\n        </div>\n      </div>\n    </div>\n  </nav>\n\n  <!-- Main block for pages container!-->\n  <div class=\"content\">\n    \n\n<link rel=\"stylesheet\" href=\"../../static/css/hub.css\">\n\n<!--<nav class=\"navbar subnavbar-top hidden-xs hidden-sm\">\n  <ul class=\"nav nav-pills submenu-top right\">\n    <li class=\"leftmargin rightmargin\">\n      <button class=\"",
  "<?php\n\nnamespace HotelBundle\\Form;\n\nuse Symfony\\Component\\Form\\AbstractType;\nuse Symfony\\Component\\Form\\FormBuilderInterface;\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\SubmitType;\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\TextType;\nuse Symfony\\Component\\OptionsResolver\\OptionsResolver;\n\nclass BookingFilterForm extends AbstractType\n{\n    public function buildForm(FormBuilderInterface $builder, array $options)\n    {\n        $dateCome = $options['date_come'];\n        $dateLeft = $options['date_left'];\n        \n        $dateComeFormatted = $dateCome? $dateCome->format('d.m.Y') : null;\n        $dateLeftFormatted = $dateLeft? $dateLeft->format('d.m.Y') : null;\n\n\n        $builder\n          ->add('dateCome',   TextType::class,      ['required'  => false, 'data' => $dateComeFormatted ])\n          ->add('dateLeft',   TextType::class,      ['required'  => false, 'data' => $dateLeftFormatted ])\n          ->add('submit',     SubmitType::class,    [ 'label'     => '\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u043c\u0435\u0441\u0442'])\n          ->setMethod('GET')\n        ;\n\n        if($options['action_url'])\n        {\n            $builder->setAction($options['action_url']);\n        }\n    }\n\n    public function configureOptions(OptionsResolver $resolver)\n    {\n        $resolver->setDefault('date_come', null);\n        $resolver->setDefault('date_left', null);\n        $resolver->setDefault('csrf_protection', false );\n        $resolver->setDefault('action_url', null);\n    }\n}\n",
  "/*******************************************************************************\n * @license\n * Copyright (c) 2016 IBM Corporation and others.\n * All rights reserved. This program and the accompanying materials are made\n * available under the terms of the Eclipse Public License v1.0\n * (http://www.eclipse.org/legal/epl-v10.html), and the Eclipse Distribution\n * License v1.0 (http://www.eclipse.org/org/documents/edl-v10.html).\n *\n ******************************************************************************/\n/* eslint-env amd */\ndefine({\n\t//CSS lint messages\n\t\"adjoining-classes\" : \"Adjoining classes: ${0}.\",\n\t\"box-model-height\" : \"Using height with ${0} can make elements larger than you expect.\",\n\t\"box-model-width\" : \"Using width with ${0} can make elements larger than you expect.\",\n\t\"box-sizing\" : \"The box-sizing property isn't supported in IE6 and IE7.\",\n\t\"bulletproof-font-face\" : \"@font-face declaration doesn't follow the fontspring bulletproof syntax.\",\n\t\"compatible-vendor-prefixes\" : \"The property ${0} supports the vendor specific properties ${1}. They should be included as well.\",\n\t\"display-property-grouping\" : \"${0} can't be used with display: ${1}.\",\n\t\"duplicate-background-images\" : \"Background image '${0}' was used multiple times, first declared at line ${1}, col ${2}.\",\n\t\"duplicate-properties\" : \"Duplicate property '${0}' found.\",\n\t\"empty-rules\" : \"Rule is empty.\",\n\t\"fallback-colors\" : \"Fallback ${0} (hex or RGB) should precede ${1} ${2}.\",\n\t\"floats\" : \"Too many floats (${0}), you're probably using them for layout. Consider using a grid system instead.\",\n\t\"font-faces\" : \"Too many @font-face declarations (${0}). Potential performance problem.\",\n\t\"font-sizes\" : \"Too many font-size declarations (${0}). It is recommended to abstract font-sizes into separate CSS classes.\",\n\t\"gradients\" : \"Missing vendor-prefixed CSS gradients for ${0}.\",\n\t\"ids\" : \"Don't use IDs in selectors.\",\n\t\"ids-really\" : \"${0} IDs in the selector, really?\",\n\t\"import\" : \"@import prevents parallel downloads, use <link> instead.\",\n\t\"important\" : \"Using!important leads to specificity issues.\",\n\t\"important-count\": \"Too many!important declarations (${0}), try to use less than 10 to avoid specificity issues.\",\n\t\"order-alphabetical\": \"Rule does not have all its properties in alphabetical order.\",\n\t//\"known-properties\" : this value is parser generated and not NLS-able\n\t\"outline-none\" : \"Outlines shouldn't be hidden unless other visual changes are made.\",\n\t\"outline-none-focus\" : \"Outlines should only be modified using :focus.\",\n\t\"overqualified-elements\" : \"Element (${0}) is overqualified, just use ${1} without element name.\",\n\t\"qualified-headings\" : \"Heading (${0}) should not be qualified.\",\n\t\"regex-selectors\" : \"Attribute selectors with ${0} are slow!\",\n\t//\"rules-count\": this rule only counts rules and does not display a message to the end user\n\t\"selector-max-approaching\" : \"You have ${0} selectors. Internet Explorer supports a maximum of 4095 selectors per stylesheet. Consider refactoring.\",\n\t\"selector-max\" : \"You have ${0} selectors. Internet Explorer supports a maximum of 4095 selectors per stylesheet. Consider refactoring.\",\n\t\"selector-newline\": \"Newline character found in selector (forgot a comma?).\",\n\t\"shorthand\" : \"The properties ${0} can be replaced by shorthand ${1}.\",\n\t\"star-property-hack\" : \"Property with star prefix found.\",\n\t\"text-indent\" : \"Negative text-indent doesn't work well with RTL. If you use text-indent for image replacement explicitly set direction for that item to ltr.\",\n\t\"underscore-property-hack\" : \"Property with underscore prefix found.\",\n\t\"unique-headings\" : \"Heading (${0}) has already been defined.\",\n\t\"unique-headings-count\": \"You have ${0} defined in this stylesheet.\",\n\t\"universal-selector\" : \"The universal selector (*) is known to be slow.\",\n\t\"unqualified-attributes\" : \"Unqualified attribute selectors are known to be slow.\",\n\t\"vendor-prefix\" : \"Standard property '${0}' should come after vendor-prefixed property '${1}'.\",\n\t\"vendor-prefix-standard\": \"Missing standard property '${0}' to go along with '${1}'.\",\n\t\"zero-units\" : \"Values of 0 shouldn't have units specified.\",\n\t\"fatal-error\": \"Fatal error, cannot continue: ${0}\",\n\t\n\t// HTML lint messages\n\t'attr-bans': 'The \\'${0}\\' attribute is not recommended.',\n\t'attr-no-dup': 'The \\'${0}\\' attribute is duplicated.',\n\t'tag-close': 'No matching closing tag for \\'${0}\\'.',\n\t'img-req-alt': 'The \\'alt\\' property must be set for image tags (for accessibility).',\n\t'fig-req-figcaption': '\\'figure\\' must have a \\'figcaption\\', \\'figcaption\\' must be in a \\'figure\\' (for accessibility).',\n});",
  "function getValx2(val) {\n    return val * 2;\n}\n\nconst testVal = () => {\n    42\n}",
  ".backgroud_table {\n    background-color: #00f;\n}\n\n\n\n\n/*\nbody { text-transform: uppercase;} ;\ntbody tr:nth-of-type(odd) {\n    background-color: rgba(0, 0, 0,.05);\n}*/",
  "const withAuth = (req, res, next) => {\n    // If the user is not logged in, redirect the request to the login route\n    // console.log('session >>> ', res.session)\n    if (!req.session.loggedIn) {\n      return res.status(403).end();\n    \n      // return res.redirect('/login');\n    } else {\n      next();\n    }\n};\n  \nmodule.exports = withAuth;",
  "### [[ << \u56de\u5230\u4e0a\u5c42 ]](index.md)\n\n# GetFontOutlineWidth\n\n> \u83b7\u53d6\u5df2\u52a0\u8f7d\u5b57\u4f53\u7684\u8f6e\u5ed3\u7ebf\u5bbd\u5ea6\n\n```lua\n\nwidth = GetFontOutlineWidth(font)\n\n```\n\n## \u53c2\u6570\uff1a\n\n+ font [userdata-FONT]\uff1a\u5b57\u4f53\u6570\u636e\n\n## \u8fd4\u56de\u503c\uff1a\n\n+ width [number]\uff1a\u8f6e\u5ed3\u7ebf\u5bbd\u5ea6\n\n## \u793a\u4f8b\n\n```lua\n\n```",
  "<?php\n/**\n * Rename a file.\n *\n * Anwser to URL like the one below (names are base64_encoded)\n * index.php?task=task.file.rename&oldname=emEyJTJGYQ%3D%3D&newname=emEyJTJGYWVyYXpl\n */\n\nnamespace MarkNotes\\Plugins\\Task\\File;\n\ndefined('_MARKNOTES') or die('No direct access allowed');\n\nrequire_once dirname(__FILE__). DS. '.plugin.php';\n\nclass Rename extends \\MarkNotes\\Plugins\\Task\\File\n{\n\tprotected static $me = __CLASS__;\n\tprotected static $json_settings = 'plugins.task.file';\n\tprotected static $json_options = '';\n\n\t/**\n\t * Rename an existing note\n\t */\n\tprivate static function rename(string $oldname, string $newname) : float\n\t{\n\t\t$aeFiles = \\MarkNotes\\Files::getInstance();\n\t\t$aeFolders = \\MarkNotes\\Folders::getInstance();\n\t\t$aeSettings = \\MarkNotes\\Settings::getInstance();\n\n\t\tif (trim($oldname) === '') {\n\t\t\treturn FILE_ERROR;\n\t\t}\n\n\t\t// Sanitize filenames\n\t\t$oldname = $aeFiles->sanitize($oldname);\n\t\t$oldname = $aeSettings->getFolderWebRoot(). $oldname;\n\t\t$oldname = str_replace('/', DS, $oldname);\n\n\t\t$newname = $aeFiles->sanitize($newname);\n\t\t$newname = $aeSettings->getFolderWebRoot(). $newname;\n\t\t$newname = str_replace('/', DS, $newname);\n\n\t\t// Try to remove the folder, first, be sure that the user\n\t\t// can see the folder : if he can't, he can't delete it too\n\t\t$aeEvents = \\MarkNotes\\Events::getInstance();\n\t\t$aeEvents->loadPlugins('task.acls.cansee');\n\n\t\t// Note : the folder should start and end with the slash\n\t\t$arr = ['folder' => dirname($oldname),'return' => true];\n\t\t$args = [&$arr];\n\n\t\t$aeEvents->trigger('task.acls.cansee::run', $args);\n\n\t\t// cansee will initialize return to 0 if the user can't\n\t\t// see the folder\n\t\tif (intval($args[0]['return']) === 1) {\n\t\t\t// Only if the user can see the parent folder,\n\t\t\t// he can rename files\n\t\t\t// Before renaming the file (f.i. note.md), check if\n\t\t\t// we've another files with the same name but with other\n\t\t\t// extensions (like note.json, note.html,...) and\n\t\t\t// rename these files too.\n\t\t\t$arrFiles = $aeFolders->getContent(dirname($oldname));\n\n\t\t\t$wReturn = true;\n\t\t\t$old = $aeFiles->removeExtension(basename($oldname));\n\t\t\t$new = $aeFiles->removeExtension(basename($newname));\n\n\t\t\tforeach ($arrFiles as $file) {\n\t\t\t\tif ($file['type'] == 'file') {\n\t\t\t\t\tif ($file['filename'] == $old) {\n\t\t\t\t\t\t// Get the note's folder\n\t\t\t\t\t\t$dir = str_replace('/', DS, $file['dirname']);\n\n\t\t\t\t\t\t$dir = $aeFiles->makeFileNameAbsolute($dir);\n\n\t\t\t\t\t\t// The old filename (absolute path)\n\t\t\t\t\t\t$oldfile = $dir. DS. $file['basename'];\n\n\t\t\t\t\t\t// And the new one (absolute path)\n\t\t\t\t\t\t$newfile = $dir. DS. $new. '.'. $file['extension'];\n\n\t\t\t\t\t\t$wReturn = $aeFiles->rename($oldfile, $newfile);\n\n\t\t\t\t\t\t// Clear cache\n\t\t\t\t\t\tself::clearCache();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn $wReturn? RENAME_SUCCESS : FILE_ERROR;\n\t\t} else {\n\t\t\treturn NO_ACCESS;\n\t\t}\n\t}\n\n\t/**\n\t * Rename a note on the disk\n\t */\n\tpublic static function run(&$params = null) : bool\n\t{\n\t\t$aeFiles = \\MarkNotes\\Files::getInstance();\n\t\t$aeFunctions = \\MarkNotes\\Functions::getInstance();\n\t\t$aeSession = \\MarkNotes\\Session::getInstance();\n\t\t$aeSettings = \\MarkNotes\\Settings::getInstance();\n\n\t\t// Be sure that filenames doesn't already start\n\t\t// with the /docs folder\n\t\tself::cleanUp($params, $aeSettings->getFolderDocs(false));\n\n\t\t$newname = trim(urldecode($aeFunctions->getParam('param','string', '', true)));\n\n\t\tif ($newname!= '') {\n\t\t\t$newname = $aeFiles->sanitize(trim($newname));\n\t\t}\n\n\t\t$oldname = trim(urldecode($aeFunctions->getParam('oldname','string', '', true)));\n\n\t\tif ($oldname!= '') {\n\t\t\t$oldname = $aeFiles->sanitize(trim($oldname));\n\t\t}\n\n\t\t/*<!-- build:debug -->*/\n\t\tif ($aeSettings->getDebugMode()) {\n\t\t\t$aeDebug = \\MarkNotes\\Debug::getInstance();\n\t\t\t$aeDebug->log(__METHOD__, 'debug');\n\t\t\t$aeDebug->log('Oldname=['. $oldname. ']', 'debug');\n\t\t\t$aeDebug->log('Newname=['. $newname. ']', 'debug');\n\t\t}\n\t\t/*<!-- endbuild -->*/\n\n\t\tif (trim($newname) === '') {\n\t\t\t$return = [\n\t\t\t\t'status' => 0,\n\t\t\t\t'action' =>'rename',\n\t\t\t\t'msg' => $aeSettings->getText('unknown_error', 'An error has occured, please try again')\n\t\t\t];\n\t\t} else {\n\t\t\t$docs = str_replace('/', DS, $aeSettings->getFolderDocs(false));\n\n\t\t\t// Be sure to have the.md extension\n\t\t\t$oldname = $aeFiles->removeExtension($oldname). '.md';\n\t\t\t$newname = $aeFiles->removeExtension($newname). '.md';\n\n\t\t\t// Relative filenames\n\t\t\t$rel_oldname = str_replace($aeSettings->getFolderDocs(true), '', $oldname);\n\t\t\t$rel_newname = str_replace($aeSettings->getFolderDocs(true), '', $newname);\n\n\t\t\t$wReturn = self::rename($oldname, $newname);\n\n\t\t\tswitch ($wReturn) {\n\t\t\t\tcase RENAME_SUCCESS:\n\t\t\t\t\t$msg = $aeSettings->getText('file_renamed', 'The note [%1] has been renamed into [%2]');\n\t\t\t\t\t$msg = str_replace('$1', $rel_oldname, $msg);\n\t\t\t\t\t$msg = str_replace('$2', $rel_newname, $msg);\n\t\t\t\t\tbreak;\n\t\t\t\tcase NO_ACCESS:\n\t\t\t\t\t// The parent folder is protected and the user has no access to it\n\t\t\t\t\t$msg = $aeSettings->getText('folder_parent_not_accessible', 'The parent folder of [$1] is not accessible to you');\n\t\t\t\t\t$msg = str_replace('$1', $rel_oldname, $msg);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t$msg = $aeSettings->getText('error_rename_file', 'An error has occured when trying to rename the note [%1] into [%2]');\n\t\t\t\t\t$msg = str_replace('$1', $rel_oldname, $msg);\n\t\t\t\t\t$msg = str_replace('$2', $rel_newname, $msg);\n\t\t\t\t\tbreak;\n\t\t\t} // switch ($wReturn)\n\n\t\t\t// and remove the extension\n\t\t\t// The filename should be something like\n\t\t\t// docs\\christophe\\newname\n\t\t\t// (not docs\\christophe\\newname.md)\n\t\t\t$md5 = md5($aeFiles->removeExtension($newname));\n\n\t\t\t$return = [\n\t\t\t\t'status' => (($wReturn == RENAME_SUCCESS)? 1 : 0),\n\t\t\t\t'action' =>'rename',\n\t\t\t\t'msg' => $msg,\n\t\t\t\t'md5' => $md5,\n\t\t\t\t'filename' => utf8_encode($newname)\n\t\t\t];\n\t\t}\n\n\t\theader('Content-Type: application/json');\n\t\techo self::returnInfo($return);\n\n\t\treturn true;\n\t}\n}\n",
  "//\n// Created by \u738b\u9633 on 2018/3/29.\n//\n\n/*\n * Given an integer, write a function to determine if it is a power of two.\n * Credits:\n * Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.\n */\n\n#include <iostream>\n#include <vector>\n#include <math.h>\n\nusing namespace std;\n\nclass Solution {\npublic:\n    bool isPowerOfTwo(int n) {\n        return (n > 0 && int(log10(n) / log10(2)) - log10(n) / log10(2) == 0);\n    }\n};\n\nint main() {\n    Solution *solution = new Solution();\n//    printf(\"%d\\n\", solution)\n    return 0;\n}",
  "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.hadoop.hive.ql.io.orc;\n\nimport java.util.List;\n\nimport org.apache.hadoop.hive.serde2.typeinfo.TypeInfo;\nimport org.apache.hadoop.hive.ql.io.BatchToRowReader;\nimport org.apache.hadoop.hive.ql.exec.vector.VectorizedRowBatch;\nimport org.apache.hadoop.hive.ql.exec.vector.VectorizedRowBatchCtx;\nimport org.apache.hadoop.io.NullWritable;\nimport org.apache.hadoop.mapred.RecordReader;\n\n/** BatchToRowReader that returns the rows readable by ORC IOs. */\npublic class OrcOiBatchToRowReader extends BatchToRowReader<OrcStruct, OrcUnion> {\n  public OrcOiBatchToRowReader(RecordReader<NullWritable, VectorizedRowBatch> vrbReader,\n      VectorizedRowBatchCtx vrbCtx, List<Integer> includedCols) {\n    super(vrbReader, vrbCtx, includedCols);\n  }\n\n  @Override\n  protected OrcStruct createStructObject(Object previous, List<TypeInfo> childrenTypes) {\n    int numChildren = childrenTypes.size();\n    if (!(previous instanceof OrcStruct)) {\n      return new OrcStruct(numChildren);\n    }\n    OrcStruct result = (OrcStruct) previous;\n    result.setNumFields(numChildren);\n    return result;\n  }\n\n  @Override\n  protected OrcUnion createUnionObject(List<TypeInfo> childrenTypes, Object previous) {\n    return (previous instanceof OrcUnion)? (OrcUnion)previous : new OrcUnion();\n  }\n\n  @Override\n  protected void setStructCol(OrcStruct structObj, int i, Object value) {\n    structObj.setFieldValue(i, value);\n  }\n\n  @Override\n  protected Object getStructCol(OrcStruct structObj, int i) {\n    return structObj.getFieldValue(i);\n  }\n\n  @Override\n  protected Object getUnionField(OrcUnion unionObj) {\n    return unionObj.getObject();\n  }\n\n  @Override\n  protected void setUnion(OrcUnion unionObj, byte tag, Object object) {\n    unionObj.set(tag, object);\n  }\n}\n",
  "/**\n * How often we should beep\n */\nvar beepInterval;\nconst context = new (window.AudioContext || window.webkitAudioContext)();\nvar spinnerOpts = {\n      lines: 8, // The number of lines to draw\n      length: 15, // The length of each line\n      width: 25, // The line thickness\n      radius: 52, // The radius of the inner circle\n      scale: 0.85, // Scales overall size of the spinner\n      corners: 0.5, // Corner roundness (0..1)\n      color: 'black', // CSS color or array of colors\n      fadeColor: 'white', // CSS color or array of colors\n      opacity: 0.5, // Opacity of the lines\n      rotate: -90, // The rotation offset\n      direction: 1, // 1: clockwise, -1: counterclockwise\n      speed: (100/60)*8, // Rounds per second\n      trail: 0, // Afterglow percentage\n      fps: 20, // Frames per second when using setTimeout() as a fallback in IE 9\n      zIndex: 2e9, // The z-index (defaults to 2000000000)\n      className:'spinner', // The CSS class to assign to the spinner\n      top: '60%', // Top position relative to parent\n      left: '50%', // Left position relative to parent\n      shadow: '0 0 1px transparent', // Box-shadow for the lines\n      position:'relative' // Element positioning\n    };\n\nvar spinnerTarget = document.getElementById('spinnerContainer');\n\n\n/**\n * low: The beep that is made on every beat but the main beat\n * high: The beep that is made on the first beat of the bar\n */\nconst frequencies = {\n    low: 880.0,\n    high: 1760.0\n};\n\nconst elements = {\n    noteTypes: document.getElementsByClassName(\"note-type\"),\n    beatTypes: document.getElementsByClassName(\"beat-type\"),\n    repeats: document.getElementsByClassName(\"repeat\"),\n    addButtons: document.getElementsByClassName(\"add-bar\"),\n    removeButtons: document.getElementsByClassName(\"remove-bar\"),\n    bars: document.getElementsByClassName(\"bar\"),\n    tempo: document.getElementById(\"tempo\"),\n    tempoValue: document.getElementById(\"tempo-value\"),\n    toggleButton: document.getElementById(\"toggle-button\"),\n    beatCounter: document.getElementById(\"beat-counter\"),\n    barCounter: document.getElementById(\"bar-counter\"),\n    toggleOptions: document.getElementById(\"toggle-options\"),\n    closeOptions: document.getElementById(\"close-options\"),\n    options: document.getElementById(\"options\"),\n    volume: document.getElementById(\"volume\"),\n    waveform: document.getElementById(\"waveform\"),\n    tapButton: document.getElementById(\"tap-button\")\n};\n\n/**\n * timesThrough: The amount of beeps made. This is counted so\n *               we can find out the first beat of the bar.\n * currentBar: The bar that should be playing.\n * playSound: Whether or not we should be beeping\n */\nconst settings = {\n    timesThrough: -1,\n    currentBar: 0,\n    playSound: false\n};\n\nelements.toggleButton.addEventListener('click', togglePlay);\n\nelements.toggleOptions.addEventListener('click', function () {\n    elements.options.classList.toggle('hidden');\n});\n\nelements.beatTypes[settings.currentBar].addEventListener('input', update);\n\n// tempo: update display value while dragged and update beat when release\nelements.tempo.addEventListener('input', updateTempoValue);\nelements.tempo.addEventListener('change', update);\n\nelements.closeOptions.addEventListener('click', (e) => {\n    elements.options.classList.toggle('hidden');\n});\n\nelements.tapButton.addEventListener('click', updateTapTempo);\n\nfunction addBarButtonEvents(startIndex) {\n    var addIndex = 0;\n    Array.from(elements.addButtons).forEach(function(button) {\n        if (addIndex >= startIndex) {\n            button.addEventListener('click', function() {\n                addBar(Array.from(elements.addButtons).indexOf(button));\n            });\n        }\n        addIndex++;\n    });\n    var removeIndex = 0;\n    Array.from(elements.removeButtons).forEach(function(button) {\n        if (removeIndex >= startIndex) {\n            button.addEventListener('click', function() {\n                removeBar(Array.from(elements.removeButtons).indexOf(button));\n            });\n        }\n        removeIndex++;\n    });\n}\n\naddBarButtonEvents(0);\n\nfunction updateTempoValue() {\n    elements.tempoValue.innerText = `${elements.tempo.value} bpm`;\n}\n\nfunction togglePlay() {\n    //var spinner = new Spinner(spinnerOpts).spin(spinnerTarget);\n    settings.playSound =!settings.playSound;\n    update(settings.playSound);\n}\n\nfunction updateBeatCounter() {\n    const val = elements.noteTypes[settings.currentBar].value;\n    elements.beatCounter.innerText = `${(settings.timesThrough % val) + 1}`;\n}\n\nfunction updateBarCounter() {\n    const val = elements.noteTypes[settings.currentBar].value;\n    elements.barCounter.innerText = `${~~(settings.timesThrough / val ) + 1}`\n}\n\n\nfunction addBar(index) {\n    var barsDiv = document.getElementById('bars');\n    var noteType = elements.noteTypes[index].value;\n    var beatType = elements.beatTypes[index].value;\n    var repeat = elements.repeats[index].value;\n\n    var originalBar = elements.bars[index];\n    var newBar = originalBar.cloneNode(true);\n\n    barsDiv.append(newBar);\n\n    elements.noteTypes[elements.noteTypes.length-1].value = noteType;\n    elements.beatTypes[elements.beatTypes.length-1].value = beatType;\n    elements.repeats[elements.repeats.length-1].value = repeat;\n\n    addBarButtonEvents(elements.bars.length-1);\n    updateDisabledButtons();\n}\n\nfunction removeBar(index) {\n  if (!elements.removeButtons[index].classList.contains(\"disabled\")) {\n      var barsDiv = document.getElementById('bars');\n      barsDiv.removeChild(elements.bars[index]);\n      updateDisabledButtons();\n  }\n}\n\nfunction updateDisabledButtons() {\n    if (elements.removeButtons.length == 1) {\n        Array.from(elements.removeButtons).forEach(function(button) {\n            button.classList.add(\"disabled\");\n        });\n        Array.from(elements.repeats).forEach(function(dropdown) {\n            dropdown.value = \"1\";\n            var att = document.createAttribute(\"disabled\");\n            dropdown.setAttributeNode(att)\n        });\n    }\n    if (elements.removeButtons.length > 1 && elements.removeButtons[settings.currentBar].classList.contains(\"disabled\")) {\n        Array.from(elements.removeButtons).forEach(function(button) {\n            button.classList.remove(\"disabled\");\n        });\n        Array.from(elements.repeats).forEach(function(dropdown) {\n            dropdown.removeAttribute(\"disabled\");\n        });\n    }\n}\n\n/**\n * Updates the text of the button.\n * @param {Boolean} shouldPlaySound\n */\nfunction updateToggleButtonText(shouldPlaySound) {\n    let buttonText = \"start\";\n    \n    if (shouldPlaySound) {\n        buttonText = \"stop\";\n    }\n\n    return buttonText;\n}\n\nfunction update(shouldPlaySound) {\n    updateTempoValue();\n    updateBeatCounter();\n    updateBarCounter();\n    elements.toggleButton.innerText = updateToggleButtonText(shouldPlaySound);\n    clearInterval(beepInterval);\n\n    if (shouldPlaySound) {\n        // Tick once before starting the interval, to make the metronome\n        // start immediately when pressing play.\n        tick();\n        return updateBeepInterval(elements.tempo.value, elements.beatTypes[settings.currentBar].value);\n    }\n\n    settings.timesThrough = -1;\n}\n\nvar lastTap;\nfunction updateTapTempo() {\n\tvar tap = new Date();\n\tlastTap = lastTap || tap;\n    var diffInMillis = Math.abs((lastTap - tap) / 1000);\n\tlastTap = tap;\n    var bpm = 60 / diffInMillis;\n    ",
  "\"\"\"Utility functions for Gaussian Processes.\n\n\"\"\"\nimport os.path\nimport numpy as np\nimport gpytorch\nimport torch\nimport matplotlib.pyplot as plt\nimport casadi as ca\nfrom copy import deepcopy\nfrom sklearn import preprocessing\n\nfrom safe_control_gym.utils.utils import mkdirs\n\n\ndef covSEard(x,\n             z,\n             ell,\n             sf2\n             ):\n    \"\"\"GP squared exponential kernel.\n\n    This function is based on the 2018 GP-MPC library by Helge-Andr\u00e9 Lang\u00e5ker\n\n    Args:\n        x (np.array or casadi.MX/SX): First vector.\n        z (np.array or casadi.MX/SX): Second vector.\n        ell (np.array or casadi.MX/SX): Length scales.\n        sf2 (float or casadi.MX/SX): output scale parameter.\n\n    Returns:\n        SE kernel (casadi.MX/SX): SE kernel.\n\n    \"\"\"\n    dist = ca.sum1((x - z)**2 / ell**2)\n    return sf2 * ca.SX.exp(-.5 * dist)\n\n\nclass ZeroMeanIndependentMultitaskGPModel(gpytorch.models.ExactGP):\n    \"\"\"Multidimensional Gaussian Process model with zero mean function.\n\n    Or constant mean and radial basis function kernel (SE).\n\n    \"\"\"\n\n    def __init__(self,\n                 train_x,\n                 train_y,\n                 likelihood,\n                 nx\n                 ):\n        \"\"\"Initialize a multidimensional Gaussian Process model with zero mean function.\n\n        Args:\n            train_x (torch.Tensor): input training data (input_dim X N samples).\n            train_y (torch.Tensor): output training data (output dim x N samples).\n            likelihood (gpytorch.likelihood): Likelihood function (gpytorch.likelihoods.MultitaskGaussianLikelihood).\n            nx (int): dimension of the target output (output dim)\n\n        \"\"\"\n        super().__init__(train_x, train_y, likelihood)\n        self.n = nx\n        # For Zero mean function.\n        self.mean_module = gpytorch.means.ZeroMean(\n            batch_shape=torch.Size([self.n]))\n        # For constant mean function.\n        self.covar_module = gpytorch.kernels.ScaleKernel(\n            gpytorch.kernels.RBFKernel(batch_shape=torch.Size([self.n]),\n                                       ard_num_dims=train_x.shape[1]),\n            batch_shape=torch.Size([self.n]),\n            ard_num_dims=train_x.shape[1]\n        )\n\n    def forward(self,\n                x\n                ):\n        \"\"\"\n\n        \"\"\"\n        mean_x = self.mean_module(x)\n        covar_x = self.covar_module(x)\n        return gpytorch.distributions.MultitaskMultivariateNormal.from_batch_mvn(\n            gpytorch.distributions.MultivariateNormal(mean_x, covar_x)\n        )\n\n\nclass ZeroMeanIndependentGPModel(gpytorch.models.ExactGP):\n    \"\"\"Single dimensional output Gaussian Process model with zero mean function.\n\n    Or constant mean and radial basis function kernel (SE).\n\n    \"\"\"\n    def __init__(self,\n                 train_x,\n                 train_y,\n                 likelihood\n                 ):\n        \"\"\"Initialize a single dimensional Gaussian Process model with zero mean function.\n\n        Args:\n            train_x (torch.Tensor): input training data (input_dim X N samples).\n            train_y (torch.Tensor): output training data (output dim x N samples).\n            likelihood (gpytorch.likelihood): Likelihood function (gpytorch.likelihoods.GaussianLikelihood).\n\n        \"\"\"\n        super().__init__(train_x, train_y, likelihood)\n        # For Zero mean function.\n        self.mean_module = gpytorch.means.ZeroMean()\n        # For constant mean function.\n        self.covar_module = gpytorch.kernels.ScaleKernel(\n            gpytorch.kernels.RBFKernel(ard_num_dims=train_x.shape[1]),\n            ard_num_dims=train_x.shape[1]\n        )\n\n    def forward(self,\n                x\n                ):\n        \"\"\"\n\n        \"\"\"\n        mean_x = self.mean_module(x)\n        covar_x = self.covar_module(x)\n        return gpytorch.distributions.MultivariateNormal(mean_x, covar_x)\n\n\nclass GaussianProcessCollection:\n    \"\"\"Collection of GaussianProcesses for multioutput GPs.\n\n    \"\"\"\n\n    def __init__(self, model_type,\n                 likelihood,\n                 target_dim,\n                 input_mask=None,\n                 target_mask=None,\n                 normalize=False\n                 ):\n        \"\"\"Creates a single GaussianProcess for each output dimension.\n\n        Args:\n            model_type (gpytorch model class): Model class for the GP (ZeroMeanIndependentGPModel).\n            likelihood (gpytorch.likelihood): likelihood function.\n            target_dim (int): Dimension of the output (how many GPs to make).\n            input_mask (list): Input dimensions to keep. If None, use all input dimensions.\n            target_mask (list): Target dimensions to keep. If None, use all target dimensions.\n            normalize (bool): If True, scale all data between -1 and 1.\n\n        \"\"\"\n        self.gp_list = []\n        self.model_type = model_type\n        self.likelihood = likelihood\n        self.optimizer = None\n        self.model = None\n        self.NORMALIZE = normalize\n        self.input_mask = input_mask\n        self.target_mask = target_mask\n        for i in range(target_dim):\n            self.gp_list.append(GaussianProcess(model_type,\n                                                deepcopy(likelihood),\n                                                input_mask=input_mask,\n                                                normalize=normalize))\n\n    def _init_properties(self,\n                         train_inputs,\n                         train_targets\n                         ):\n        \"\"\"Initialize useful properties.\n\n        Args:\n            train_inputs, train_targets (torch.tensors): Input and target training data.\n\n        \"\"\"\n        target_dimension = train_targets.shape[1]\n        self.input_dimension = train_inputs.shape[1]\n        self.output_dimension = target_dimension\n        self.n_training_samples = train_inputs.shape[0]\n\n    def init_with_hyperparam(self,\n                             train_inputs,\n                             train_targets,\n                             path_to_statedicts\n                             ):\n        \"\"\"Load hyperparameters from a state_dict.\n\n        Args:\n            train_inputs, train_targets (torch.tensors): Input and target training data.\n            path_to_statedicts (str): Path to where the state dicts are saved.\n\n        \"\"\"\n        self._init_properties(train_inputs, train_targets)\n        target_dimension = train_targets.shape[1]\n        gp_K_plus_noise_list = []\n        gp_K_plus_noise_inv_list = []\n        for gp_ind, gp in enumerate(self.gp_list):\n            path = os.path.join(path_to_statedicts, 'best_model_%s.pth'  % self.target_mask[gp_ind])\n            print(\"#########################################\")\n            print(\"#       Loading GP dimension %s         #\" % self.target_mask[gp_ind])\n            print(\"#########################################\")\n            print('Path: %s' % path)\n            gp.init_with_hyperparam(train_inputs,\n                                    train_targets[:,self.target_mask[gp_ind]],\n                                    path)\n            gp_K_plus_noise_list.append(gp.model.K_plus_noise.detach())\n            gp_K_plus_noise_inv_list.append(gp.model.K_plus_noise_inv.detach())\n            print('Loaded!')\n        gp_K_plus_noise = torch.stack(gp_K_plus_noise_list)\n        gp_K_plus_noise_inv = torch.stack(gp_K_plus_noise_inv_list)\n        self.K_plus_noise = gp_K_plus_noise\n        self.K_plus_noise_inv = gp_K_plus_noise_inv\n        self",
  "<!DOCTYPE html>\n<html>\n\n<head>\n\t<title>Monster Slayer</title>\n\t<script src=\"https://npmcdn.com/vue/dist/vue.js\"></script>\n\t<link rel=\"stylesheet\" href=\"css/foundation.min.css\">\n\t<link rel=\"stylesheet\" href=\"css/app.css\">\n</head>\n\n<body>\n\t<div id=\"app\">\n\t\t<section class=\"row\">\n\t\t\t<div class=\"small-6 columns\">\n\t\t\t\t<h1 class=\"text-center\">YOU</h1>\n\t\t\t\t<div class=\"healthbar\">\n\t\t\t\t\t<div class=\"healthbar text-center\" style=\"background-color: green; margin: 0; color: white;\" :style=\"{width: playerHealth + '%'}\">\n\t\t\t\t\t\t{{ playerHealth }} HP\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"small-6 columns\">\n\t\t\t\t<h1 class=\"text-center\">MONSTER</h1>\n\t\t\t\t<div class=\"healthbar\">\n\t\t\t\t\t<div class=\"healthbar text-center\" style=\"background-color: green; margin: 0; color: white;\" :style=\"{width: enemyHealth + '%'}\">\n\t\t\t\t\t\t{{ enemyHealth }} HP\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t\t<section class=\"row controls\" v-if=\"!gameIsRunning\">\n\t\t\t<div class=\"small-12 columns\">\n\t\t\t\t<button id=\"start-game\" @click=\"startGame\">START NEW GAME</button>\n\t\t\t</div>\n\t\t</section>\n\t\t<section class=\"row controls\" v-else>\n\t\t\t<div class=\"small-12 columns\">\n\t\t\t\t<button id=\"attack\" @click=\"attack\">ATTACK</button>\n\t\t\t\t<button id=\"special-attack\" @click=\"specAttack\">SPECIAL ATTACK</button>\n\t\t\t\t<button id=\"heal\" @click=\"heal\">HEAL</button>\n\t\t\t\t<button id=\"give-up\" @click=\"giveUp\">GIVE UP</button>\n\t\t\t</div>\n\t\t</section>\n\t\t<section class=\"row log\" v-if=\"turns.length\">\n\t\t\t<div class=\"small-12 columns\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li v-for=\"turn in turns\" :class=\"{'player-turn': turn.isPlayer,'monster-turn':!turn.isPlayer}\">\n\t\t\t\t\t\t{{ turn.text }}\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</section>\n\t</div>\n\t<script src=\"../vue.js\"></script>\n\t<script src=\"./app.js\"></script>\n</body>\n\n</html>",
  "// MIT Licensed (see LICENSE.md).\n#pragma once\n\nnamespace Plasma\n{\n\nstruct TileMapSourceLoadPattern\n{\n  template <typename DataType, typename WriterType>\n  static void SaveArray(Array<DataType>& array, int chunkId, WriterType& file)\n  {\n    u32 startPos = file.StartChunk(chunkId);\n    file.Write(array.Data(), array.Size());\n    file.EndChunk(startPos);\n  }\n\n  template <typename DataType, typename ReaderType>\n  static void LoadArray(Array<DataType>& array, u32 chunkSize, ReaderType& file)\n  {\n    u32 size = chunkSize - 8;\n    u32 itemCount = size / sizeof(DataType);\n    array.Resize(itemCount);\n    file.ReadArraySize(array.Data(), size);\n  }\n\n  template <typename SourceType, typename ReaderType>\n  static void Load(SourceType* source, ReaderType& file)\n  {\n    uint version = 0;\n    file.Read(version);\n    source->mVersion = version;\n\n    FileChunk fileChunk = file.ReadChunkHeader();\n    if (fileChunk.Type == 'full')\n    {\n      Array<IntVec2> position;\n      Array<Guid> archetype;\n      Array<Guid> sprite;\n      Array<Guid> collision;\n      Array<bool> merge;\n\n      bool eof = false;\n      while (!eof)\n      {\n        FileChunk chunk = file.ReadChunkHeader();\n        switch (chunk.Type)\n        {\n        case 0:\n          eof = true;\n          break;\n\n        case 'posi':\n          LoadArray(position, chunk.Size, file);\n          break;\n\n        case 'arch':\n          LoadArray(archetype, chunk.Size, file);\n          break;\n\n        case'spri':\n          LoadArray(sprite, chunk.Size, file);\n          break;\n\n        case 'coll':\n          LoadArray(collision, chunk.Size, file);\n          break;\n\n        case'merg':\n          LoadArray(merge, chunk.Size, file);\n          break;\n\n        default:\n          file.SkipChunk(chunk);\n          break;\n        }\n      }\n\n      for (uint i = 0; i < position.Size(); ++i)\n      {\n        IntVec2 gridPos = position[i];\n        TileMap::Tile tile;\n        tile.ArchetypeResource = archetype[i];\n        tile.SpriteResource = sprite[i];\n        tile.CollisionResource = collision[i];\n        tile.Merge = merge[i];\n\n        source->mData[gridPos] = tile;\n      }\n    }\n  }\n\n  template <typename SourceType, typename WriterType>\n  static void Save(SourceType* source, WriterType& file)\n  {\n    file.Write(source->mVersion);\n\n    u32 mapStart = file.StartChunk('full');\n\n    Array<IntVec2> position;\n    Array<Guid> archetype;\n    Array<Guid> sprite;\n    Array<Guid> collision;\n    Array<bool> merge;\n\n    forRange (typename SourceType::value_type pair, source->mData.All())\n    {\n      IntVec2 gridPos = pair.first;\n      TileMap::Tile tile = pair.second;\n\n      position.PushBack(gridPos);\n      archetype.PushBack(tile.ArchetypeResource);\n      sprite.PushBack(tile.SpriteResource);\n      collision.PushBack(tile.CollisionResource);\n      merge.PushBack(tile.Merge);\n    }\n\n    SaveArray(position, 'posi', file);\n    SaveArray(archetype, 'arch', file);\n    SaveArray(sprite,'spri', file);\n    SaveArray(collision, 'coll', file);\n    SaveArray(merge,'merg', file);\n\n    file.EndChunk(mapStart);\n  }\n};\n\n} // namespace Plasma\n",
  "package yuangong.id.ui.activity;\n\nimport android.content.Intent;\nimport android.view.View;\nimport android.widget.ImageView;\nimport android.widget.TextView;\n\nimport butterknife.Bind;\nimport butterknife.OnClick;\nimport yuangong.id.R;\nimport yuangong.id.ui.activity.base.BaseActivity;\nimport yuangong.id.utils.AppUtils;\n\npublic class TaskDetailActivity extends BaseActivity {\n\n    @Bind(R.id.title_back)\n    ImageView mTitleBack;\n    @Bind(R.id.title_text)\n    TextView mTitleText;\n    @Bind(R.id.user_name)\n    TextView mUserName;\n    @Bind(R.id.car_number)\n    TextView mCarNumber;\n    @Bind(R.id.product_type)\n    TextView mProductType;\n    @Bind(R.id.order_time)\n    TextView mOrderTime;\n    @Bind(R.id.stop_site)\n    TextView mStopSite;\n    @Bind(R.id.user_remark)\n    TextView mUserRemark;\n    @Bind(R.id.order_money)\n    TextView mOrderMoney;\n\n    @Override\n    protected void initData() {\n        mTitleBack.setVisibility(View.VISIBLE);\n        mTitleText.setText(\"\u4efb\u52a1\u8be6\u60c5\");\n\n        Intent intent = getIntent();\n        if (intent == null){\n            AppUtils.setToastMsg(context,\"\u6570\u636e\u5f02\u5e38\");\n            return;\n        }\n        String order_name = intent.getStringExtra(\"order_name\");//\u8ba2\u5355\u4e2d\u7684\u540d\u79f0\n        String car_info_plate = intent.getStringExtra(\"car_info_plate\");//\u8f66\u724c\u53f7\n        String mobile = intent.getStringExtra(\"mobile\");//\u8054\u7cfb\u7535\u8bdd\n        String community_layer_info_id = intent.getStringExtra(\"community_layer_info_id\");//\u697c\u5c42\n        String car_info_park = intent.getStringExtra(\"car_info_park\");//\u8f66\u4f4d\u53f7\n        String package_name = intent.getStringExtra(\"package_name\");//\u5957\u9910\u540d\u79f0\n        long order_paytime = intent.getLongExtra(\"order_paytime\", 0);//\u4e0b\u5355\u65f6\u95f4\n        String true_money = intent.getStringExtra(\"true_money\");//\u771f\u5b9e\u4ef7\u683c\n        String order_tip = intent.getStringExtra(\"order_tip\");//\u8f66\u4e3b\u5907\u6ce8\n        mUserName.setText(order_name + \"  \" + mobile);\n        mCarNumber.setText(car_info_plate);\n        mProductType.setText(package_name);\n        mOrderTime.setText(AppUtils.formatDate(order_paytime));\n        mStopSite.setText(community_layer_info_id + car_info_park);\n        mUserRemark.setText(order_tip);\n        mOrderMoney.setText(true_money);\n    }\n\n    @Override\n    protected void setListener() {\n\n    }\n\n    @Override\n    protected int getLayoutID() {\n        return R.layout.activity_task_detail;\n    }\n\n    @OnClick({R.id.title_back})\n    public void onClick(View view) {\n        switch (view.getId()) {\n            case R.id.title_back:\n                finish();\n                break;\n        }\n    }\n}\n",
  "package zh.guava.cache;\n\nimport com.google.common.cache.Cache;\nimport com.google.common.cache.CacheBuilder;\n\n/**\n * \u8bbe\u7f6e\u6700\u5927\u5b58\u50a8\n * \n * @author hui.zhao.cfs\n *\n */\npublic class GuavaCache2 {\n\n\tpublic static void main(String[] args) {\n\t\tCache<String, String> cache = CacheBuilder.newBuilder().maximumSize(2).build();\n\t\tcache.put(\"key1\", \"value1\");\n\t\tcache.put(\"key2\", \"value2\");\n\t\tcache.put(\"key3\", \"value3\");\n\t\tSystem.out.println(\"\u7b2c\u4e00\u4e2a\u503c\uff1a\" + cache.getIfPresent(\"key1\"));\n\t\tSystem.out.println(\"\u7b2c\u4e8c\u4e2a\u503c\uff1a\" + cache.getIfPresent(\"key2\"));\n\t\tSystem.out.println(\"\u7b2c\u4e09\u4e2a\u503c\uff1a\" + cache.getIfPresent(\"key3\"));\n\t}\n}\n",
  "<div class=\"content-wrapper\">\n\t\t<div class=\"page_container\">\n\t\t<div class=\"box\">\n\t\t\t\t<h3>Frequ\u00eancias</h3>\n            <a href=\"javascript:;\" class=\"btn btn-primary pull-right\" data-toggle=\"modal\" data-target=\"#myModal\">Adicionar Frequ\u00eancias</a>\n\t\t\t\t<div style=\"padding-top: 50px;padding-left: 10px;padding-right: 10px\">\n\t\t\t\t<div class=\"table-responsive\">\n                                        <table class=\"table table-striped table-bordered table-hover example\" >\n                                            <thead>\n                                                <tr>\n                                                    <th>#</th>\n                                                    <th>Turma</th>\n                                                    <th>Status</th>\n                                                    <th>A\u00e7\u00e3o</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                            <?php \n                                            $i=1;\n                                            foreach($classes as $class)\n                                            {\n\n                                            $all_students=$this->CM->select_data('student','id,class',array('class'=>$class['name']));\n                                            $main_all_count=0;\n                                            $main_p_count=0;\n                                            foreach($all_students as $student)\n                                            {\n                                              $all_count=sizeof($this->CM->select_data('attendance_manage','status',array('student_id'=>$student['id'])));\n                                              $all_countp=sizeof($this->CM->select_data('attendance_manage','status',array('student_id'=>$student['id'],'status'=>'Present')));\n                                              $main_all_count=$main_all_count+$all_count;\n                                              $main_p_count=$main_p_count+$all_countp;\n                                            }\n                                           ?>\n                                              <tr>\n                                                <td><?php echo $i;?></td>\n                                                <td><?php echo $class['name'];?></td>\n                                                <td><?php echo  $main_all_count*$main_p_count/100?>%</td>\n                                                  <td><a href=\"<?php echo base_url().'index.php/attendance/sttudent_list/'.$class['id']?>\" class=\"btn btn-info\"><i class=\"fa fa-eye\"></i></a></td>\n                                              </tr>\n                                              <?php \n                                            }\n                                             ?>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n\t\t</div>\n\t\t</div>\n</div>\n<!-- Modal -->\n<div id=\"myModal\" class=\"modal fade\" role=\"dialog\">\n  <div class=\"modal-dialog\">\n\n    <!-- Modal content-->\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n        <h4 class=\"modal-title\">Adicionar Frequ\u00eancia</h4>\n      </div>\n      <div class=\"modal-body\">\n      \t<form action=\"<?php  echo base_url().'index.php/school/Attendance'?>\" id=\"add_Attendance_form\">\n        <div class=\"form-group\">\n        \t<label>Nome</label>\n        \t<input type=\"text\" name=\"name\" required=\"required\" class=\"form-control\" id=\"name\" placeholder=\"Digite o nome\">\n        </div>\n        <div class=\"form-group\">\n            <label>Dura\u00e7\u00e3o</label>\n            <input required=\"required\" class=\"form-control\" type=\"text\" name=\"Attendance_duration\" id=\"Attendance_duration\" placeholder=\"Digite a dura\u00e7\u00e3on\">\n        </div>\n        <div class=\"form-group\">\n            <label>Cr\u00e9ditos</label>\n            <input type=\"text\" required=\"required\" class=\"form-control\" name=\"Attendance_fees\" id=\"Attendance_fees\" placeholder=\"Digite cr\u00e9ditos\">\n        </div>\n        <div class=\"form-group\">\n            <label>Inicio</label>\n            <input type=\"text\" required=\"required\" name=\"Attendance_started\" id=\"Attendance_started\" class=\"form-control\" placeholder=\"Digite in\u00edcio\">\n        </div>\n        <div class=\"form-group\">\n        \t<button class=\"btn btn-primary\" type=\"submit\">Adicionar</button>\n        </div>\n       </form>\n      </div>\n    </div>\n\n  </div>\n</div>",
  "<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n\t<link href=\"style/style.css\" rel=\"stylesheet\">\n\t<script src=\"js/front.js\" type=\"text/javascript\"></script>\n\t<script src=\"js/simpleticker.js\" type=\"text/javascript\"></script>\n    <title>SQLite Manager</title>\n  </head>\n  <body>\n\t<div id=\"topbar\"></div>\n\t<div id=\"body\" onload=\"init()\">\n\t\t<div id=\"right-body\">\n\t\t\t<h1 style=\"font-size:90%;\"> Actions </h1>\n\t\t\t<div id=\"actions\">\n\t\t\t<a href=\"javascript:close();\">Exit</a>\n\t\t\t</div>\n\t\t</div>\n\t\t<div id=\"left-body\">\n\t\t\t<h1 id =\"title\">SQLite Electron Manager</h1>\n\t\t\t<p id=\"contents\" style=\"text-align:center;\">Welcome! You may either <a class=\"big-button\" href=\"javascript:openDialog();\">open a database</a> or <a class =\"big-button\" href=\"javascript:newDialog();\">create a new one</a> from scratch.</p>\n\t\t</div>\n\t</div>\n\t<div id = \"console\">\n\t\t<p>Console <a href=\"javascript:toggleConsole();\" id=\"console-toggle-button\">Hide</a> </p>\n\t\t<form style=\"border: 1px #aaa solid;\" id=\"console-form\">\n\t\t<div id=\"log\" style=\"overflow: scroll; height:20vh; width:80vw; font-family:courier; padding-top:5px; overflow-x:hidden;\" readonly></div>\n\t\t<input id=\"querytext\" type=\"text\" placeholder=\"Type here\" style=\"width:80vw; border:none;\">\n\t\t<button type=\"submit\" formaction = \"javascript:executeQuery();\" value=\"Execute\" style=\"width:20%; display:none;\">Execute</button>\n\t\t</form>\n\t</div>\n  </body>\n</html>\n",
  "<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Inherit\\IL_Model;\n\nclass ProductDetailModel extends IL_Model\n{\n    protected $table = \"product_detail\";\n}\n",
  "package com.example.stockapi.service;\n\nimport com.example.stockapi.model.stock.Stock;\nimport com.example.stockapi.model.stock.StockSearchResult;\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.fasterxml.jackson.databind.node.JsonNodeType;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport java.util.ArrayList;\nimport java.util.Iterator;\nimport java.util.List;\n\n@Service\npublic class MyJsonMapper {\n\n    ObjectMapper objectMapper;\n\n    @Autowired\n    public MyJsonMapper() {\n        this.objectMapper = new ObjectMapper();\n    }\n\n    public Stock getStockFromNode(JsonNode node) throws JsonProcessingException {\n        return this.objectMapper.treeToValue(node, Stock.class);\n    }\n\n    public List<StockSearchResult> getAllFromNode(JsonNode node) throws JsonProcessingException {\n\n        if (node.getNodeType() == JsonNodeType.ARRAY) {\n\n            List<StockSearchResult> all = new ArrayList<>();\n            Iterator<JsonNode> elements = node.elements();\n\n\n            while (elements.hasNext())\n                all.add(this.objectMapper.treeToValue(elements.next(), StockSearchResult.class));\n\n            return all;\n        } else\n            throw new IllegalArgumentException(\"Node passed is not an JsonArray\");\n    }\n\n\n}\n",
  "var express = require('express');\nvar bodyParser = require('body-parser');\nvar request = require('request')\nvar app = express();\nvar axios = require('axios');\n\n// Sign up and get your moviedb API key here:\n// https://www.themoviedb.org/account/signup\n\n\n//Helpers\nvar apiHelpers = require('./helpers/apiHelpers.js');\n\n//Middleware\napp.use(bodyParser.json());\n\n// Due to express, when you load the page, it doesn't make a get request to '/', it simply serves up the dist folder\napp.use(express.static(__dirname + '/../client/dist'));\n\n\n// OPTION 1: Use regular routes\n\napp.get('/genres', function(req, res) {\n  axios.get(apiHelpers.genre)\n .then((res) => {\n    console.log('index.js says: ', res.data)\n\n  })\n  \n .catch((error) => console.error(error))\n  \n  \n  // use this endpoint. you will need your API key from signup: https://api.themoviedb.org/3/genre/movie/list\n\n  // send back\n});\n\napp.get('/search', function(req, res) {\n  // use this endpoint to search for movies by genres (using API key): https://api.themoviedb.org/3/discover/movie\n\n  // and sort them by votes (worst first) using the search parameters in themoviedb API\n\n  //would've used the genre_id generated from the genre select to populate the genre search query I generated on tmdb API in apiHelpers.js\n  //`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&region=US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&primary_release_year=1989&with_genres=${genre_id}`\n});\n\n\napp.post('/save', function(req, res) {\n\n  //save movie as favorite\n\n});\n\napp.post('/delete', function(req, res) {\n\n  //remove movie from favorites\n\n});\n\n\n//OPTION 2: Use Express Router\n\n//IF you decide to go with this option, delete OPTION 1 to continue\n\n//Routes\n\n// const movieRoutes = require('./routes/movieRoutes.js');\n\n// //Use routes\n// app.use('/movies', movieRoutes);\n\n\napp.listen(3000, function() {\n  console.log('listening on port 3000!');\n});\n",
  "\n<h3>Selection statements: if and else</h3>\nThe <code>if</code> keyword is used to execute a statement or block, if, and only if, a condition is fulfilled. Its syntax is:<br>\n<br>\n<code>if (condition) statement</code> <br>\n<br>\nHere, <code>condition</code> is the expression that is being evaluated. If this <code>condition</code> is true, <code>statement</code> is executed. If it is false, <code>statement</code> is not executed (it is simply ignored), and the program continues right after the entire selection statement.<br>\nFor example, the following code fragment prints the message <code>(x is 100)</code>, only if the value stored in the <code>x</code> variable is indeed 100:<br>\n<br>\n<div class=\"auto\"><table class=\"snippet\"><tr><td class=\"rownum\"><pre><code>1<br>2<br></code></pre></td>\n<td class=\"source\"><pre><code><var>if</var> (x == 100)\n  cout &lt;&lt; <kbd>\"x is 100\"</kbd>;</code></pre></td></tr></table></div>\n<br>\n<br>\nIf <code>x</code> is not exactly 100, this statement is ignored, and nothing is printed.<br>\n<br>\nIf you want to include more than a single statement to be executed when the condition is fulfilled, these statements shall be enclosed in braces (<code>{}</code>), forming a block:<br>\n<br>\n<div class=\"auto\"><table class=\"snippet\"><tr><td class=\"rownum\"><pre><code>1<br>2<br>3<br>4<br>5<br></code></pre></td>\n<td class=\"source\"><pre><code><var>if</var> (x == 100)\n{\n   cout &lt;&lt; <kbd>\"x is \"</kbd>;\n   cout &lt;&lt; x;\n}</code></pre></td></tr></table></div>\n<br>\n<br>\nAs usual, indentation and line breaks in the code have no effect, so the above code is equivalent to:<br>\n<br>\n<div class=\"auto\"><table class=\"snippet\"><tr><td class=\"rownum\"><pre><code>&nbsp;</code></pre></td>\n<td class=\"source\"><pre><code><var>if</var> (x == 100) { cout &lt;&lt; <kbd>\"x is \"</kbd>; cout &lt;&lt; x; }</code></pre></td></tr></table></div>\n<br>\n<br>\nSelection statements with <code>if</code> can also specify what happens when the condition is not fulfilled, by using the <code>else</code> keyword to introduce an alternative statement. Its syntax is:<br>\n<br>\n<code>\nif (condition) statement1 else statement2<br>\n</code>\n<br>\nwhere <code>statement1</code> is executed in case condition is true, and in case it is not, <code>statement2</code> is executed.<br>\n<br>\nFor example:<br>\n<br>\n<div class=\"auto\"><table class=\"snippet\"><tr><td class=\"rownum\"><pre><code>1<br>2<br>3<br>4<br></code></pre></td>\n<td class=\"source\"><pre><code><var>if</var> (x == 100)\n  cout &lt;&lt; <kbd>\"x is 100\"</kbd>;\n<var>else</var>\n  cout &lt;&lt; <kbd>\"x is not 100\"</kbd>;</code></pre></td></tr></table></div>\n<br>\n<br>\nThis prints <code>x is 100</code>, if indeed x has a value of 100, but if it does not, and only if it does not, it prints <code>x is not 100</code> instead.<br>\nSeveral if + else structures can be concatenated with the intention of checking a range of values. For example:<br>\n<br>\n<div class=\"auto\"><table class=\"snippet\"><tr><td class=\"rownum\"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br></code></pre></td>\n<td class=\"source\"><pre><code><var>if</var> (x &gt; 0)\n  cout &lt;&lt; <kbd>\"x is positive\"</kbd>;\n<var>else</var> <var>if</var> (x &lt; 0)\n  cout &lt;&lt; <kbd>\"x is negative\"</kbd>;\n<var>else</var>\n  cout &lt;&lt; <kbd>\"x is 0\"</kbd>;</code></pre></td></tr></table></div>\n<br>\n<br>\nThis prints whether x is positive, negative, or zero by concatenating two if-else structures. Again, it would have also been possible to execute more than a single statement per case by grouping them into blocks enclosed in braces: <code>{}</code>.<br>\n",
  "#!/usr/bin/env sh\n\nPORT=8080 npm start\n",
  "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst Dropdown_1 = require(\"@patternfly/react-core/dist/js/components/Dropdown\");\nconst KebabToggle_1 = require(\"@patternfly/react-core/dist/js/components/Dropdown/KebabToggle\");\nconst DropdownItem_1 = require(\"@patternfly/react-core/dist/js/components/Dropdown/DropdownItem\");\nconst DropdownSeparator_1 = require(\"@patternfly/react-core/dist/js/components/Dropdown/DropdownSeparator\");\nconst dropdownConstants_1 = require(\"@patternfly/react-core/dist/js/components/Dropdown/dropdownConstants\");\nclass ActionsColumn extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onToggle = (isOpen) => {\n            this.setState({\n                isOpen\n            });\n        };\n        this.onSelect = (event, onClick) => {\n            const { rowData, extraData } = this.props;\n            // Only prevent default if onClick is provided.  This allows href support.\n            if (onClick) {\n                event.preventDefault();\n                // tslint:disable-next-line:no-unused-expression\n                onClick(event, extraData && extraData.rowIndex, rowData, extraData);\n            }\n            this.setState(prevState => ({\n                isOpen:!prevState.isOpen\n            }));\n        };\n        this.state = {\n            isOpen: false\n        };\n    }\n    render() {\n        const { isOpen } = this.state;\n        const { items, children, dropdownPosition, dropdownDirection, isDisabled } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown_1.Dropdown, { toggle: React.createElement(KebabToggle_1.KebabToggle, { isDisabled: isDisabled, onToggle: this.onToggle }), position: dropdownPosition, direction: dropdownDirection, isOpen: isOpen, dropdownItems: items.map((_a, key) => {\n                    var { title, itemKey, onClick, isSeparator } = _a, props = tslib_1.__rest(_a, [\"title\", \"itemKey\", \"onClick\", \"isSeparator\"]);\n                    return isSeparator? (React.createElement(DropdownSeparator_1.DropdownSeparator, Object.assign({}, props, { key: itemKey || key, \"data-key\": itemKey || key }))) : (React.createElement(DropdownItem_1.DropdownItem, Object.assign({ component: \"button\", onClick: event => this.onSelect(event, onClick) }, props, { key: itemKey || key, \"data-key\": itemKey || key }), title));\n                }), isPlain: true }),\n            children));\n    }\n}\nexports.ActionsColumn = ActionsColumn;\nActionsColumn.defaultProps = {\n    children: null,\n    items: [],\n    dropdownPosition: dropdownConstants_1.DropdownPosition.right,\n    dropdownDirection: dropdownConstants_1.DropdownDirection.down,\n    rowData: {},\n    extraData: {}\n};\n//# sourceMappingURL=ActionsColumn.js.map",
  "// Code generated - DO NOT EDIT.\n// This file is a generated binding and any manual changes will be lost.\n\npackage abi\n\nimport (\n\t\"errors\"\n\t\"math/big\"\n\t\"strings\"\n\n\tethereum \"github.com/ethereum/go-ethereum\"\n\t\"github.com/ethereum/go-ethereum/accounts/abi\"\n\t\"github.com/ethereum/go-ethereum/accounts/abi/bind\"\n\t\"github.com/ethereum/go-ethereum/common\"\n\t\"github.com/ethereum/go-ethereum/core/types\"\n\t\"github.com/ethereum/go-ethereum/event\"\n)\n\n// Reference imports to suppress errors if they are not otherwise used.\nvar (\n\t_ = errors.New\n\t_ = big.NewInt\n\t_ = strings.NewReader\n\t_ = ethereum.NotFound\n\t_ = bind.Bind\n\t_ = common.Big1\n\t_ = types.BloomLookup\n\t_ = event.NewSubscription\n)\n\n// ERC1155MetaData contains all meta data concerning the ERC1155 contract.\nvar ERC1155MetaData = &bind.MetaData{\n\tABI: \"[{\\\"inputs\\\":[{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"uri_\\\",\\\"type\\\":\\\"string\\\"}],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":true,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"account\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":true,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"operator\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"approved\\\",\\\"type\\\":\\\"bool\\\"}],\\\"name\\\":\\\"ApprovalForAll\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":true,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"operator\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":true,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":true,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"uint256[]\\\",\\\"name\\\":\\\"ids\\\",\\\"type\\\":\\\"uint256[]\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"uint256[]\\\",\\\"name\\\":\\\"values\\\",\\\"type\\\":\\\"uint256[]\\\"}],\\\"name\\\":\\\"TransferBatch\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":true,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"operator\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":true,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":true,\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"address\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"id\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"indexed\\\":false,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"value\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"TransferSingle\\\",\\\"type\\\":\\\"event\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"value\\\",\\\"type\\\":\\\"string\\\"},{\\\"indexed\\\":true,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"id\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"URI\\\",\\\"type\\\":\\\"event\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"account\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"id\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"balanceOf\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address[]\\\",\\\"name\\\":\\\"accounts\\\",\\\"type\\\":\\\"address[]\\\"},{\\\"internalType\\\":\\\"uint256[]\\\",\\\"name\\\":\\\"ids\\\",\\\"type\\\":\\\"uint256[]\\\"}],\\\"name\\\":\\\"balanceOfBatch\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256[]\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256[]\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"account\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"operator\\\",\\\"type\\\":\\\"address\\\"}],\\\"name\\\":\\\"isApprovedForAll\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bool\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"uint256[]\\\",\\\"name\\\":\\\"ids\\\",\\\"type\\\":\\\"uint256[]\\\"},{\\\"internalType\\\":\\\"uint256[]\\\",\\\"name\\\":\\\"amounts\\\",\\\"type\\\":\\\"uint256[]\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"data\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"safeBatchTransferFrom\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"id\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"amount\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"data\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"safeTransferFrom\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"operator\\\",\\\"type\\\":\\\"address\\\"},{\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"approved\\\",\\\"type\\\":\\\"bool\\\"}],\\\"name\\\":\\\"setApprovalForAll\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes4\\\",\\\"name\\\":\\\"interfaceId\\\",\\\"type\\\":\\\"bytes4\\\"}],\\\"name\\\":\\\"supportsInterface\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"bool\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"uri\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"string\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"}]\",\n}\n\n// ERC1155ABI is the input ABI used to generate the binding from.\n// Deprecated: Use ERC1155MetaData.ABI instead.\nvar ERC1155ABI = ERC1155MetaData.ABI\n\n// ERC1155 is an auto generated Go binding around an Ethereum contract.\ntype ERC1155 struct {\n\tERC1155Caller     // Read-only binding to the contract\n\tERC1155Transactor // Write-only binding to the contract\n\tERC1155Filterer   // Log filterer for contract events\n}\n\n// ERC1155Caller is an auto generated read-only Go binding around an Ethereum contract.\ntype ERC1155Caller struct {\n\tcontract *bind.BoundContract // Generic contract wrapper for the low level calls\n}\n\n// ERC1155Transactor is an auto generated write-only Go binding around an Ethereum contract.\ntype ERC1155Transactor struct {\n\tcontract *bind.BoundContract // Generic contract wrapper for the low level calls\n}\n\n// ERC1155Filterer is an auto generated log filtering Go binding around an Ethereum contract events.\ntype ERC1155Filterer struct {\n\tcontract *bind.BoundContract // Generic contract wrapper for the low level calls\n}\n\n// ERC1155Session is an auto generated Go binding around an Ethereum contract,\n// with pre-set call and transact options.\ntype ERC1155Session struct {\n\tContract     *ERC1155          // Generic contract binding to set the session for\n\tCallOpts     bind.CallOpts",
  "import argparse\nimport asyncio\nimport contextlib\nimport logging\nimport random\n\nimport aiortp\nimport aiosip\n\nsip_config = {\n   'srv_host': '127.0.0.1',\n   'srv_port': 6000,\n   'realm': 'XXXXXX',\n    'user': 'aiosip',\n    'pwd': 'hunter2',\n    'local_host': '127.0.0.1',\n    'local_port': random.randint(6001, 6100)\n}\n\n\nasync def run_call(peer, audio):\n    scheduler = aiortp.RTPScheduler()\n    stream = scheduler.create_new_stream((sip_config['srv_host'], 49709))\n\n    call = await peer.invite(\n        from_details=aiosip.Contact.from_header('sip:{}@{}:{}'.format(\n            sip_config['user'], sip_config['local_host'],\n            sip_config['local_port'])),\n        to_details=aiosip.Contact.from_header('sip:666@{}:{}'.format(\n            sip_config['srv_host'], sip_config['srv_port'])),\n        password=sip_config['pwd'],\n        headers={'Content-Type': 'application/sdp'},\n        payload=str(stream.describe()))\n\n    async with call:\n        async for msg in call.wait_for_terminate():\n            print(\"CALL STATUS:\", msg.status_code)\n\n        await stream.negotiate(msg.payload)\n        await stream.schedule(audio)\n\n    print(\"CALL TERMINATED\")\n\n\nasync def start(app, protocol, audiofile):\n    if protocol is aiosip.WS:\n        peer = await app.connect(\n            'ws://{}:{}'.format(sip_config['srv_host'], sip_config['srv_port']),\n            protocol=protocol,\n            local_addr=(sip_config['local_host'], sip_config['local_port']))\n    else:\n        peer = await app.connect(\n            (sip_config['srv_host'], sip_config['srv_port']),\n            protocol=protocol,\n            local_addr=(sip_config['local_host'], sip_config['local_port']))\n\n    audio = aiortp.AudioFile(audiofile, 8000 // 1000 * 20)\n    await run_call(peer, audio)\n    await app.close()\n\n\ndef main():\n    parser = argparse.ArgumentParser()\n    parser.add_argument('-p', '--protocol', default='udp')\n    parser.add_argument('filename', default='udp')\n    args = parser.parse_args()\n\n    loop = asyncio.get_event_loop()\n    app = aiosip.Application(loop=loop)\n\n    if args.protocol == 'udp':\n        loop.run_until_complete(start(app, aiosip.UDP, args.filename))\n    elif args.protocol == 'tcp':\n        loop.run_until_complete(start(app, aiosip.TCP, args.filename))\n    elif args.protocol == 'ws':\n        loop.run_until_complete(start(app, aiosip.WS, args.filename))\n    else:\n        raise RuntimeError(\"Unsupported protocol: {}\".format(args.protocol))\n\n    loop.close()\n\n\nif __name__ == '__main__':\n    logging.basicConfig(level=logging.DEBUG)\n    main()\n",
  "import { createStore, update } from \"nanostores\";\nimport { BIG_COLLECTION } from \"../../../constants/collections\";\n\nexport const listStore = createStore<\n  {\n    backgroundColor: string;\n    width: number;\n  }[]\n>(() => {\n  listStore.set([]);\n});\nexport function updateList([_idx]: [number]) {\n  update(listStore, (state) =>\n    state.map((props, idx) =>\n      idx === _idx? {...props, width: props.width + 5 } : props\n    )\n  );\n}\nexport function setList(props: { width: number; backgroundColor: string }[]) {\n  update(listStore, () => props);\n}\n\nexport const otherListStore = createStore<number[]>(() => {\n  otherListStore.set([]);\n});\n\nexport function startWithBackground() {\n  update(otherListStore, () => BIG_COLLECTION);\n}\nexport function backgroundAction() {\n  update(otherListStore, (current) => [...current, 0]);\n}\n",
  "<?php\nnamespace Lead\\Router;\n\nclass DispatchingException extends \\RuntimeException\n{\n    /**\n     * The error code.\n     *\n     * @var integer\n     */\n    protected $code = 500;\n}\n",
  "// Copyright (c) Lawrence Livermore National Security, LLC and other VisIt\n// Project developers.  See the top-level LICENSE file for dates and other\n// details.  No copyright assignment is required to contribute to VisIt.\n\n#include \"SimV2Tracing.h\"\n\nstatic int   simv2_trace_indent = 0;\nstatic FILE *simv2_tracefile = NULL;\n\nFILE *\nsimv2_trace_file(void)\n{\n    return simv2_tracefile;\n}\n\nvoid\nsimv2_set_trace_file(FILE *f)\n{\n    if(simv2_tracefile!= NULL)\n        fclose(simv2_tracefile);\n    simv2_tracefile = f;\n}\n\nvoid\nsimv2_write_trace_indent(void)\n{\n    int i;\n    for(i = 0; i < simv2_trace_indent; ++i)\n        fprintf(simv2_trace_file(), \" \");\n}\n\nvoid\nsimv2_begin_trace_indent(void)\n{\n    simv2_write_trace_indent();\n    simv2_trace_indent += 4;\n}\n\nvoid\nsimv2_end_trace_indent(void)\n{\n    simv2_trace_indent -= 4;\n    simv2_write_trace_indent();\n}\n",
  "/*\n * This file is part of SpongeAPI, licensed under the MIT License (MIT).\n *\n * Copyright (c) SpongePowered <https://www.spongepowered.org>\n * Copyright (c) contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\npackage org.spongepowered.api.world.volume.game;\n\nimport org.spongepowered.api.block.BlockState;\nimport org.spongepowered.api.entity.Entity;\nimport org.spongepowered.api.world.BlockChangeFlag;\nimport org.spongepowered.api.world.LightType;\nimport org.spongepowered.math.vector.Vector3i;\n\npublic interface MutableGameVolume {\n\n    default boolean setBlock(Vector3i position, BlockState state, BlockChangeFlag flag) {\n        return this.setBlock(position.x(), position.y(), position.z(), state, flag);\n    }\n\n    boolean setBlock(int x, int y, int z, BlockState state, BlockChangeFlag flag);\n\n    boolean spawnEntity(Entity entity);\n\n    default boolean removeBlock(Vector3i pos) {\n        return this.removeBlock(pos.x(), pos.y(), pos.z());\n    }\n\n    boolean removeBlock(int x, int y, int z);\n\n    boolean destroyBlock(Vector3i pos, boolean performDrops);\n}\n",
  "#!/bin/bash\n\nfor DIR in */ ; do\n    [ $DIR == 'data/' ] && continue\n    echo $DIR\n    cd $DIR\n   ./run_docker.sh\n    cd..\ndone\n",
  "package com.legolas.enums;\r\n\r\npublic enum ClassType {\r\n\tWarrior,\r\n\tMagician,\r\n\tRogue,\r\n}\r\n",
  "const map = L.map(\"mapid\").setView([-23.5493741, -46.6378831], 15);\n\nL.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\").addTo(map);\n\nconst icon = L.icon({\n  iconUrl: \"/images/map-marker.svg\",\n  iconSize: [58, 68],\n  iconAnchor: [29, 68],\n  popupAnchor: [170, 2],\n});\n\nfunction addMarker({id, name, lat, lng}){\n\n  const popup = L.popup({\n    closeButton: false,\n    className: \"map-popup\",\n    minWidth: 240,\n    minHeight: 240,\n  }).setContent(\n    `${name} <a href=\"/orphanage?id=${id}\"><img src=\"/images/arrow-white.svg\"> </a>`);\n  \n  L.marker([lat, lng], { icon }).addTo(map).bindPopup(popup);\n}\n\nconst orphanagesSpan = document.querySelectorAll('.orphanages span')\norphanagesSpan.forEach((span) => {\n  const orphanage = {\n    id: span.dataset.id,\n    name: span.dataset.name,\n    lat: span.dataset.lat,\n    lng: span.dataset.lng\n  }\n\n  addMarker(orphanage)\n})",
  "<?php\ndefined('BASEPATH') or exit('No direct script access allowed');\n?>\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>Show-user</title>\n  <!-- CSS only -->\n\n  <style>\n    /* p{\n      font-family : \n    } */\n   .booder1 {\n      border-bottom: 1px solid #A0A0A0;\n      width: 750px;\n\n    }\n\n   .booder {\n      border-bottom: 1px solid #A0A0A0;\n\n    }\n  </style>\n  <style>\n   .card {\n      margin: 20px 20px 20px 100px;\n    }\n  </style>\n</head>\n\n<body>\n  <br><br>\n  <center>\n    <h1>\u0e23\u0e32\u0e22\u0e0a\u0e37\u0e48\u0e2d\u0e28\u0e34\u0e29\u0e22\u0e4c\u0e40\u0e01\u0e48\u0e32\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14</h1>\n  </center>\n  <br><br>\n\n\n\n\n  <div class=\"container\">\n    <?php foreach ($query->result_array() as $rs) {?>\n      <div class=\"card\">\n\n        <div class=\"card-body\">\n\n          <div class=\"row\">\n\n            <div class=\"col-4\">\n              <img src=\"<?php echo base_url('upload');?>/<?php echo $rs['upload'];?>\" alt=\"\" width=\"180px\" height=\"200px\">\n            </div>\n\n            <div class=\"col-8\">\n              <h5 class=\"card-title\">\u0e0a\u0e37\u0e48\u0e2d :<?php echo $rs['title'];?> <?php echo $rs['fname'];?> <?php echo $rs['lname'];?></h5>\n              <p class=\"card-text\">\u0e2d\u0e35\u0e40\u0e21\u0e25\u0e25\u0e4c : <td><?php echo $rs['email'];?> </p>\n              <p class=\"card-text\">\u0e40\u0e1f\u0e2a\u0e1a\u0e38\u0e4a\u0e04 : <td><?php echo $rs['face'];?></p>\n              <p class=\"card-text\">\u0e27\u0e31\u0e19\u0e40\u0e01\u0e34\u0e14 : <td><?php echo $rs['date'];?></p>\n              <p class=\"card-text\">\u0e40\u0e1e\u0e28 : <td><?php echo $rs['sex'];?></p>\n              <p class=\"card-text\">\u0e1b\u0e35\u0e17\u0e35\u0e48\u0e40\u0e02\u0e49\u0e32\u0e01\u0e32\u0e23\u0e28\u0e36\u0e01\u0e29\u0e32 : <td><?php echo $rs['attend'];?></p>\n              <?php if ($this->session->userdata('email')) {?>\n                <form action=\"<?php echo base_url('index.php/info_c/info_list');?>\" method=\"post\">\n                  <input type=\"hidden\" name=\"id\" value=\"<?php echo $rs['a_id'];?>\">\n                  <div align=\"right\">\n                  <button class=\"btn btn-deep-orange\" name=\"submit\">\u0e14\u0e39\u0e23\u0e32\u0e22\u0e25\u0e30\u0e40\u0e2d\u0e35\u0e22\u0e14</button>\n                </div>\n                </form>\n              <?php } else {\n              }?>\n            </div>\n\n          </div>\n\n        </div>\n\n\n      </div>\n\n    <?php }?>\n  </div>\n</body>\n\n</html>",
  "/*\n\n    Project: roblock.js\n    Author: ProgrammerColton (@___colton)\n    Date: 6/28/2018\n\n*/",
  "import { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport notesReducer from \"./reducers/notes\";\nimport astronomyReducer from \"./reducers/astronomy\";\n\n// applyMiddleware makes asynchronus calls\n\n// this.props.store.dispatch - passes the object to the reducers,\n// then updates state from reducer function - notes reducer\n\nconst reducers = combineReducers({\n  notes: notesReducer,\n  astronomy: astronomyReducer\n});\n\nconst middleware = [thunk];\n\nexport default createStore(\n  reducers,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__\n     ? window.__REDUX_DEVTOOLS_EXTENSION__()\n      : a => a\n  )\n);\n",
  "<?php\n/**\n * Example of Qibla direction using compass in SVG format\n *\n * @category  I18N\n * @package   I18N_Arabic\n * @author    Khaled Al-Sham'aa <khaled@ar-php.org>\n * @copyright 2006-2013 Khaled Al-Sham'aa\n *\n * @license   LGPL <http://www.gnu.org/licenses/lgpl.txt>\n * @link      http://www.ar-php.org\n */\n\nerror_reporting(E_STRICT);\n\nif (isset($_GET['d'])) { \n    $degree = $_GET['d']; \n} else { \n    $degree = 0; \n}\n\nheader(\"Content-type: image/svg+xml\");\n\n$str = file_get_contents('./images/Compass.svg');\n$arrow = '<polyline points=\"200,272,216,300,232,272,216,100\"  transform=\"rotate('.$degree.',216,272)\" style=\"fill:red\"/>';\n$str = str_replace('</svg>', $arrow.'</svg>', $str);\n\necho $str; \n?>",
  " \n/* This file is part of CosmoLattice, available at www.cosmolattice.net.\n   Copyright Daniel G. Figueroa, Adrien Florio, Francisco Torrenti and Wessel Valkenburg.\n   Released under the MIT license, see LICENSE.md. */ \n   \n// File info: Main contributor(s): Adrien Florio,  Year: 2020\n#ifdef HDF5\n#include \"TempLat/lattice/IO/HDF5/helpers/hdf5object.h\"\n\nnamespace {\n    TempLat::TDDContainer<TempLat::HDF5Object> test;\n}\n\n#endif",
  "/**\n *  @file\n *  @copyright defined in eos/LICENSE.txt\n */\n#pragma once\n\n#include <eosiolib/eosio.hpp>\n#include <eosiolib/token.hpp>\n#include <eosiolib/reflect.hpp>\n#include <eosiolib/generic_currency.hpp>\n\n#include <bancor/converter.hpp>\n#include <currency/currency.hpp>\n\nnamespace bancor {\n   typedef eosio::generic_currency< celes::token<N(other),S(4,OTHER)> >  other_currency;\n   typedef eosio::generic_currency< celes::token<N(bancor),S(4,RELAY)> > relay_currency;\n   typedef eosio::generic_currency< celes::token<N(currency),S(4,CUR)> > cur_currency;\n\n   typedef converter<relay_currency, other_currency, cur_currency > example_converter;\n} /// bancor\n\n",
  "# Email Best Practices\n\n#### May 28, 2014\n\nemail is a 20 year old technology, though because of its simplicity and usefulness,\nhas stayed pretty consistent and still highly used all these years.  but because\nit's simple, there have been many usage patterns or mores that have grown about\nemail and i will highlight some of the best practices, though this is more focused\ntowards company (not personal) email:\n\nAngry Email\n-----------\nTone is hard to infer through email often times, so if you have something very\npersonal to say, say it in person, don't send email.\n\nEmail Can Always Be Forwarded\n-----------------------------\nA good rule of thumb is to never write anything you wouldn't want forwarded\nbecause most likely it will, this is a perfect example of murphy's law and\ngoes along with the previous best practice.\n\n\nToo Many Replies\n----------------\nIf an email has more than 3 replies or threads, then it's no longer effective,\nemail is supposed to be simple, asynchronous, and fast, there's free text format\nso you have enough space to put down your thoughts.  if you're going back\nand forth with multiple replies then that means the medium has lost its\neffectiveness and you probably should pick up the phone and talk.\n\nThank You Replies\n-----------------\nI really dislike receiving thank you emails, it's not that I don't like being\npraised or recognized for my efforts, but I get on order of 50-100 emails a day,\nthis just adds to the number and the processing time to get to the meat of the\nmatter in my day.  I kind of like the social way of doing things by clicking\na thanks or like button.\n\nEmail Groups\n------------\nIf you're a part of an email group, you have the responsibility to be a good\ncitizen within the group.  I often times see people reply all for things\nlike thank you emails.  Leverage the bcc feature.\n\nCall out Bcc\n------------\nNot sure what the original use case was in mind for bcc, it's definitely quite\nstealthy, but if you bcc someone for the effect of not wanting to get spam via\npeople that reply all, you should also mention who you're bcc'ing.\n\nAdding or Removing Users\n------------------------\nEver get an email reply where someone was silently added to the list and then\nbecause you didn't know, replied with something that you shouldn't have?  You\nshould always note changes to added or removed people in an email thread.\n\nEpic Emails\n-----------\nEven though email is asynchronous and there are no real limitations to length\nof email, but it shouldn't be used to write lengthy articles, people can\ncertainly ignore these emails, but with the increase in smartphones, these are\njust not sane.  there are better mediums for these types of things like blogs\nwhich could certainly be referenced via email.\n\n",
  "package io.github.qwefgh90.handyfinder.springweb.config;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.web.context.WebApplicationContext;\nimport org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer;\n\nimport io.github.qwefgh90.handyfinder.gui.AppStartup;\nimport io.github.qwefgh90.handyfinder.gui.Java2JavascriptUtils;\n\npublic class ContainerInitializer extends\n\t\tAbstractAnnotationConfigDispatcherServletInitializer {\n\n\tprivate final static Logger LOG = LoggerFactory.getLogger(ContainerInitializer.class);\n\t@Override\n\tprotected Class<?>[] getRootConfigClasses() {\n\t\t//root-context.xml\n\t\treturn new Class<?>[]{RootContext.class};\n\t}\n\n\t@Override\n\tprotected Class<?>[] getServletConfigClasses() {\n\t\t//myservlet-context.xml\n\t\treturn new Class<?>[]{ServletContext.class, RootWebSocketConfig.class, AppDataConfig.class};\n\t}\n\n\t@Override\n\tprotected String[] getServletMappings() {\n\t\t//root url\n\t\treturn new String[]{\"/\"}; \n\t}\n\n\t@Override\n\tprotected WebApplicationContext createRootApplicationContext() {\n\t\t// TODO Auto-generated method stub\n\t\tWebApplicationContext context = super.createRootApplicationContext();\n\t\tAppStartup.setRootAppContext(context);\n\t\treturn context;\n\t}\n\n\t@Override\n\tprotected WebApplicationContext createServletApplicationContext() {\n\t\t// TODO Auto-generated method stub\n\t\tWebApplicationContext context = super.createServletApplicationContext();\n\t\tAppStartup.setServletAppContext(context);\n\t\treturn context;\n\t}\n\n}\n",
  "<?php\r\n/*\r\nPlugin Name: Recaptcha Class\r\nPlugin URI: http://themeforest.net/user/phpface\r\nDescription: Recaptcha Class\r\nAuthor: Toan Nguyen\r\nVersion: 1.0.0\r\nAuthor URI: http://themeforest.net/user/phpface\r\n*/\r\nif(!defined( 'ABSPATH' ) ) exit;\r\nif(!class_exists( 'VideoTube_Recaptchalib' ) ){\r\n\tclass VideoTube_Recaptchalib {\r\n\t\tfunction __construct() {\r\n\t\t\tadd_action('init', array( $this, 'init' ) );\r\n\t\t}\r\n\t\tfunction init(){\r\n\t\t\tif(!function_exists('recaptcha_check_answer') ){\r\n\t\t  \t\trequire_once 'class/recaptchalib.php';\r\n\t\t  \t}\t\t\t\r\n\t\t}\r\n\t}\r\n\tnew VideoTube_Recaptchalib();\r\n}",
  "---\nlayout: posts_by_category\ncategories: codechef\ntitle: Codechef\npermalink: /category/codechef\n---\n",
  "package webster.decisions;\n\nimport webster.requestresponse.Request;\nimport webster.requestresponse.Response;\nimport webster.requestresponse.Responses;\nimport webster.requestresponse.parsing.Parsable;\nimport webster.util.Maps;\n\nimport java.time.Instant;\nimport java.util.*;\nimport java.util.concurrent.CompletableFuture;\nimport java.util.concurrent.CompletionStage;\nimport java.util.function.Function;\nimport java.util.stream.Collectors;\n\nimport static java.util.function.Function.identity;\nimport static webster.decisions.NodeBuilder.*;\nimport static webster.requestresponse.parsing.Parsers.*;\nimport static webster.resource.ContentNegotiation.bestMediaTypeFor;\n\npublic class DefaultFlow {\n\n    public static final Collection<Integer> etagStatuses = Arrays.asList(200, 206, 304);\n\n    public static Response withContentType(Response resp, Request req, Set<String> mediaTypes) {\n        return resp.withAdditionalHeader(\"Content-Type\", bestMediaTypeFor(req, mediaTypes).orElse(\"text/plain\"));\n    }\n\n    public static <T> Function<Response, CompletionStage<Response>> withOptionalHeader(\n            String header,\n            Function<Response, CompletionStage<Optional<T>>> value,\n            Function<T, String> format) {\n        return resp ->\n                value.apply(resp).thenApply(v -> v.isPresent()\n                       ? resp.withAdditionalHeader(header, format.apply(v.get()))\n                        : resp);\n    }\n\n    public static Completion.Fn completionWithDefaults(Completion.Fn c) {\n        return (r, req) -> {\n            Function<Response, CompletionStage<Response>> setContentType = resp ->\n                    resp.body() == null\n                           ? CompletableFuture.completedFuture(resp)\n                            : r.supportedMediaTypes(req).thenApply(mediaTypes -> withContentType(resp, req, mediaTypes));\n            Function<Response, CompletionStage<Response>> setLastModified = withOptionalHeader(\n                    \"Last-Modified\",\n                    resp -> r.lastModified(req),\n                    lastModified -> rfc1123().format(new Date(lastModified.toEpochMilli())));\n            Function<Response, CompletionStage<Response>> setExpires = withOptionalHeader(\n                    \"Expires\",\n                    resp -> r.expires(req),\n                    expires -> rfc1123().format(new Date(expires.toEpochMilli())));\n            Function<Response, CompletionStage<Response>> setETag = withOptionalHeader(\n                    \"ETag\",\n                    resp -> etagStatuses.contains(resp.status())\n                           ? r.etag(req)\n                            : CompletableFuture.completedFuture(Optional.empty()),\n                    identity()\n            );\n            return c.apply(r, req)\n                   .thenCompose(setContentType)\n                   .thenCompose(setLastModified)\n                   .thenCompose(setExpires)\n                   .thenCompose(setETag)\n                   .thenApply(resp -> resp.withAdditionalHeader(\"Date\", rfc1123().format(new Date())))\n                   .thenCompose(resp -> r.additionalHeaders(resp.status(), req).thenApply(resp::withAdditionalHeaders))\n                   .thenCompose(resp -> r.override(req, resp));\n        };\n    }\n\n    public static Completion.Fn completionWithLocationAndStatus(int status) {\n        return completionWithDefaults((r, req) ->\n                r.locationHeader(req)\n                       .thenApply(location -> location!= null\n                               ? Maps.newStringMap().with(\"Location\", location).build()\n                                : Maps.newStringMap().build())\n                       .thenApply(headers -> new Response(status, headers)));\n    }\n\n    public static Completion.Fn notYetImplemented = (r, req) ->\n            CompletableFuture.completedFuture(new Response(500, Responses.bodyFrom(\"--- NOT YET IMPLEMENTED ---\")));\n\n    public static Completion.Fn created = completionWithLocationAndStatus(201);\n\n    public static Completion.Fn noContent = completionWithDefaults((r, req) ->\n            CompletableFuture.completedFuture(new Response(204)));\n\n    public static Decision.Fn isServiceAvailable = (r, req) ->\n            CompletableFuture.completedFuture(true);\n\n    public static Decision.Fn isKnownMethod = (r, req) ->\n            CompletableFuture.completedFuture(r.knownMethods().contains(req.method()));\n\n    public static Completion.Fn serviceNotAvailable = completionWithDefaults((r, req) ->\n            CompletableFuture.completedFuture(new Response(503)));\n\n    public static Completion.Fn unknownMethod = completionWithDefaults((r, req) ->\n            CompletableFuture.completedFuture(new Response(501)));\n\n    public static Decision.Fn isMethodAllowed = (r, req) ->\n            CompletableFuture.completedFuture(r.allowedMethods().contains(req.method().toUpperCase()));\n\n    public static Completion.Fn methodNotAllowed = completionWithDefaults((r, req) -> {\n        String allow = r.allowedMethods().stream().collect(Collectors.joining(\", \"));\n        Map<String, String> headers = new HashMap<>();\n        headers.put(\"Allow\", allow);\n        return CompletableFuture.completedFuture(new Response(405, headers));\n    });\n\n    public static Decision.Fn unknownContentType = (r, req) -> {\n        Set<String> knownTypes = r.supportedContentTypes();\n        Optional<String> unknownType = req.header(\"Content-Type\").value()\n               .filter(ct -> knownTypes!= null &&!knownTypes.contains(ct));\n        return CompletableFuture.completedFuture(unknownType.isPresent());\n    };\n\n    public static Completion.Fn unsupportedMediaType = completionWithDefaults((r, req) ->\n            CompletableFuture.completedFuture(new Response(415)));\n\n    public static Decision.Fn isMalformed = (r, req) ->\n            r.isMalformed(req);\n\n    public static Completion.Fn badRequest = completionWithDefaults((r, req) ->\n            r.badRequestEntity(req).thenApply(e -> new Response(400, Responses.bodyFrom(e))));\n\n    public static Action.Fn doDelete = (r, req) -> r.onDelete(req);\n\n    public static Action.Fn doPost = (r, req) -> r.onPost(req);\n\n    public static Action.Fn doPut = (r, req) -> r.onPut(req);\n\n    public static Decision.Fn isDeleteEnacted = (r, req) ->\n            CompletableFuture.completedFuture(true);\n\n    public static Decision.Fn isRespondWithEntity = (r, req) ->\n            r.respondWithEntity(req);\n\n    public static Completion.Fn ok = completionWithDefaults((r, req) ->\n            r.entity(req).thenApply(e -> new Response(200, e)));\n\n    public static Decision.Fn isUnauthorized = (r, req) ->\n            r.isAuthorized(req).thenApply(a ->!a);\n\n    public static Completion.Fn unauthorized = completionWithDefaults((r, req) ->\n            CompletableFuture.completedFuture(new Response(401)));\n\n    public static Decision.Fn isForbidden = (r, req) ->\n            r.isAllowed(req).thenApply(a ->!a);\n\n    public static Completion.Fn forbidden = completionWithDefaults((r, req) ->\n            CompletableFuture.completedFuture(new Response(403)));\n\n    public static Completion.Fn options = completionWithDefaults((r, req) ->\n            // TODO options\n            CompletableFuture.completedFuture(new Response(200)));\n\n    public static Decision.Fn isExistingResource = (r, req) ->\n            r.doesRequestedResourceExist(req);\n\n    public static Decision.Fn isMethodOptions = (r, req) ->\n            CompletableFuture.completedFuture(\"OPTIONS\".equalsIgnoreCase(req.method()));\n\n    public static Decision.Fn isMethodPost = (r, req) ->\n            CompletableFuture.completedFuture(\"POST\".equalsIgnoreCase(req.method()));\n\n    public static Decision.Fn isMethodPut = (r, req) ->\n            CompletableFuture.completedFuture(\"PUT\".equalsIgnoreCase(req.method()));\n\n    public static Decision.Fn isMethodDelete = (r, req) ->\n            CompletableFuture.completedFuture(\"DELETE\".equalsIgnoreCase(req.method()));\n\n    public static Decision.Fn isMethodGetOrHead = (r, req) ->\n            CompletableFuture.completedFuture(\"GET\".equalsIgnoreCase(req.method()) ||",
  "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon[\"default\"])( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17.38 10.79l-2.2-2.2c-.28-.28-.36-.67-.25-1.02.37-1.12.57-2.32.57-3.57 0-.55.45-1 1-1H20c.55 0 1.45 1 1 0 9.39-7.61 17-17 17-.55 0-1-.45-1-1v-3.49c0-.55.45-1 1-1 1.24 0 2.45-.2 3.57-.57.35-.12.75-.03 1.02.24l2.2 2.2c2.83-1.45 5.15-3.76 6.59-6.59z\"\n}), 'PhoneEnabled');\n\nexports[\"default\"] = _default;",
  "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _createIcon = _interopRequireDefault(require(\"../util/createIcon\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule? obj : { \"default\": obj }; }\n\nvar _default = (0, _createIcon[\"default\"])('M2.79,4.46L3.5,3.75L20.25,20.5L19.54,21.21L14,15.66V16H9V15L10.86,12.5L2.79,4.46M2,13H7V14L3.26,19H7V20H2V19L5.75,14H2V13M14,9V10L12.79,11.62L12.07,10.91L12.75,10H11.16L10.16,9H14M10.26,15H13.34L11.58,13.24L10.26,15M16,5H21V6L17.26,11H21V12H16V11L19.75,6H16V5Z');\n\nexports[\"default\"] = _default;",
  "import { MyPromise } from '../promise'\nimport type { ResolveFn, RejectFn } from '../type'\n\nexport function reject(arg?: unknown) {\n  if (!arg) arg = undefined\n  return new MyPromise((_: ResolveFn, reject: RejectFn) => {\n    reject(arg)\n  })\n}\n",
  "<!--\n=========================================================\n* Paper Dashboard 2 - v2.0.1\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-2\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n-->\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"utf-8\" />\n  <link rel=\"apple-touch-icon\" sizes=\"76x76\" href=\"../assets/img/apple-icon.png\">\n  <link rel=\"icon\" type=\"image/png\" href=\"../assets/img/favicon.png\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <title>\n    Administrativo\n  </title>\n  <meta content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0, shrink-to-fit=no' name='viewport' />\n  <!--     Fonts and icons     -->\n  <link href=\"https://fonts.googleapis.com/css?family=Montserrat:400,700,200\" rel=\"stylesheet\" />\n  <link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/latest/css/font-awesome.min.css\" rel=\"stylesheet\">\n  <!-- CSS Files -->\n  <link href=\"../assets/css/bootstrap.min.css\" rel=\"stylesheet\" />\n  <link href=\"../assets/css/paper-dashboard.css?v=2.0.1\" rel=\"stylesheet\" />\n  <!-- CSS Just for demo purpose, don't include it in your project -->\n  <link href=\"../assets/demo/demo.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"\">\n  <!-- Navegabilidad lateral izquierdo -->\n  <div class=\"wrapper \">\n    <div class=\"sidebar\" data-color=\"white\" data-active-color=\"danger\">\n      <div class=\"logo\">\n        <a href=\"Inicio.html\" >\n          <div class=\"logo-image-small\">\n            <img src=\"../images/logo_header.png\">\n          </div>\n        </a>\n      \n      </div>\n      <div class=\"sidebar-wrapper\">\n        <ul class=\"nav\">\n          <li class=\"active \">\n            <a href=\"./Inicio.html\">\n              <i class=\"nc-icon nc-single-02\"></i>\n              <p>Inicio</p>\n            </a>\n          </li>\n          <li>\n            <a href=\"./AdministrariUsuarios.html\">\n              <i class=\"nc-icon nc-zoom-split\"></i>\n              <p>Administrar Usuarios</p>\n            </a>\n          </li>\n          <li>\n            <a href=\"./Bitacora.html\">\n              <i class=\"nc-icon nc-zoom-split\"></i>\n              <p>Bit\u00e1cora</p>\n            </a>\n          </li>\n          <li>\n            <a href=\"./EstadosDeCuenta.html\">\n              <i class=\"nc-icon nc-zoom-split\"></i>\n              <p>Estados de cuenta</p>\n            </a>\n          </li>\n          \n          <li class=\"active-pro\">\n            <a href=\"./upgrade.html\">\n              <i class=\"nc-icon nc-button-power\"></i>\n              <p>Cerrar Sesion</p>\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n    <!-- Fin Navegabilidad lateral izquierdo -->\n    \n    <div class=\"main-panel\">\n      <!-- Navbar -->\n      <nav class=\"navbar navbar-expand-lg navbar-absolute fixed-top navbar-transparent\">\n        <div class=\"container-fluid\">\n          <div class=\"navbar-wrapper\">\n            <div class=\"navbar-toggle\">\n              <button type=\"button\" class=\"navbar-toggler\">\n                <span class=\"navbar-toggler-bar bar1\"></span>\n                <span class=\"navbar-toggler-bar bar2\"></span>\n                <span class=\"navbar-toggler-bar bar3\"></span>\n              </button>\n            </div>\n            <a class=\"navbar-brand\" href=\"javascript:;\">Inicio</a>\n          </div>\n          <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navigation\" aria-controls=\"navigation-index\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-bar navbar-kebab\"></span>\n            <span class=\"navbar-toggler-bar navbar-kebab\"></span>\n            <span class=\"navbar-toggler-bar navbar-kebab\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse justify-content-end\" id=\"navigation\">\n          \n            <ul class=\"navbar-nav\">\n              \n              <li class=\"nav-item btn-rotate dropdown\">\n                <a class=\"nav-link dropdown-toggle\" href=\"javascript:;\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                  <i class=\"nc-icon nc-bell-55\"></i>\n                  <p>\n                    <span class=\"d-lg-none d-md-block\">Some Actions</span>\n                  </p>\n                </a>\n                <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdownMenuLink\">\n                  <a class=\"dropdown-item\" href=\"#\">Action</a>\n                  <a class=\"dropdown-item\" href=\"#\">Another action</a>\n                  <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n                </div>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link btn-rotate\" href=\"javascript:;\">\n                  <i class=\"nc-icon nc-settings-gear-65\"></i>\n                  <p>\n                    <span class=\"d-lg-none d-md-block\">Account</span>\n                  </p>\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n      <!-- End Navbar -->\n      \n      <div class=\"content\">\n        <div class=\"row\">\n          <div class=\"col-lg-3 col-md-6 col-sm-6\">\n            <div class=\"card card-stats\">\n              <div class=\"card-body \">\n                <div class=\"row\">\n                  <div class=\"col-5 col-md-4\">\n                    <div class=\"icon-big text-center icon-warning\">\n                      <i class=\"nc-icon nc-single-02 text-warning\"></i>\n                    </div>\n                  </div>\n                  <div class=\"col-7 col-md-8\">\n                    <div class=\"numbers\">\n                      <p class=\"card-category\">Administrar Usuarios</p>\n                      <a class=\"card-title\" href=\"AdministrariUsuarios.html\">Dale clic aqu\u00ed</a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"card-footer \">\n                <hr>\n                <div class=\"stats\">\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-lg-3 col-md-6 col-sm-6\">\n            <div class=\"card card-stats\">\n              <div class=\"card-body \">\n                <div class=\"row\">\n                  <div class=\"col-5 col-md-4\">\n                    <div class=\"icon-big text-center icon-warning\">\n                      <i class=\"nc-icon nc-zoom-split text-success\"></i>\n                    </div>\n                  </div>\n                  <div class=\"col-7 col-md-8\">\n                    <div class=\"numbers\">\n                      <p class=\"card-category\">Bit\u00e1cora</p>\n                      <a class=\"card-title\" href=\"Bitacora.html\">Dale clic aqu\u00ed</a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"card-footer \">\n",
  "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing StartupManager.Commands.StartupList;\nusing StartupManager.ConsoleOutputters;\nusing StartupManager.Models;\nusing StartupManager.Services.Identity;\nusing StartupManager.Services.Registries;\nusing StartupManager.Services.Schedulers;\n\nnamespace StartupManager.Commands.Add {\n    public static class AddCommandHandler {\n        private static ITaskSchedulerService TaskSchedulerService = new TaskSchedulerService();\n        private static IWindowsIdentityService WindowsIdentityService = new WindowsIdentityService();\n        private static IRegistryService RegistryService = new RegistryService();\n        public static IEnumerable<ConsoleColorOutput> Run(StartupProgram program) {\n            var existingPrograms = ListCommandHandler.Run().Programs.ToList();\n            var programAlreadyStarts = existingPrograms.FirstOrDefault(x => x.Path.Contains(program.File.FullName, StringComparison.OrdinalIgnoreCase) &&!x.Disabled);\n            var nameInUseBy = existingPrograms.FirstOrDefault(x => x.Name.Equals(program.Name, StringComparison.OrdinalIgnoreCase));\n\n            if (nameInUseBy!= null) {\n                return new [] {\n                new ConsoleColorOutput(WriteMode.Write, program.Name, ConsoleColor.Yellow),\n                new ConsoleColorOutput(WriteMode.Writeline, \" is already in use, please try again with a different name\", ConsoleColor.Red),\n                };\n            }\n\n            if (programAlreadyStarts!= null) {\n                var messages = new [] {\n                new ConsoleColorOutput(WriteMode.Write, program.File.Name, ConsoleColor.Yellow),\n                new ConsoleColorOutput(WriteMode.Writeline, \" already starts with windows\", ConsoleColor.Red),\n                new ConsoleColorOutput(WriteMode.Write, \"Want to add another instance of it to startup? y/n: \"),\n                };\n                ConsoleOutputWriter.WriteToConsole(messages);\n\n                var userWantsToContinue = ConsoleStepWizard.PromptUserForBool(\"y\", \"n\", $\"Want to add another? y/n: \");\n                if (!userWantsToContinue) {\n                    return new List<ConsoleColorOutput>();\n                }\n            }\n\n            if (program.AllUsers || program.Administrator) {\n                if (!WindowsIdentityService.IsElevated()) {\n                    return new [] {\n                        new ConsoleColorOutput(WriteMode.Writeline, \"This requires you run the command as administrator\", ConsoleColor.Red)\n                    };\n                }\n            }\n\n            //Current user only programs requires a schedule task to run as Administrator\n            if (program.Administrator &&!program.AllUsers) {\n                TaskSchedulerService.AddProgramToStartup(program);\n            } else {\n                RegistryService.AddProgramToStartup(program);\n            }\n            return new [] {\n                new ConsoleColorOutput(WriteMode.Write, \"Added \"),\n                    new ConsoleColorOutput(WriteMode.Write, program.Name, ConsoleColor.Yellow),\n                    new ConsoleColorOutput(WriteMode.Writeline, \" to startup\")\n            };\n        }\n    }\n}",
  "import sdk from \"./1-initialize-sdk.js\";\nimport { readFileSync } from \"fs\";\n\nconst bundleDrop = sdk.getBundleDropModule(\n  \"0x9F686E523B0DAe5C188882Ab16Bdfa4358651B15\"\n);\n\n(async () => {\n  try {\n    await bundleDrop.createBatch([\n      {\n        name: \"Early Adopter\",\n        description: \"This NFT will give you access to RoundtableDAO!\",\n        image: readFileSync(\"scripts/assets/icon.png\"),\n      },\n    ]);\n    console.log(\"\u2705 Successfully created a new NFT in the drop!\");\n  } catch (error) {\n    console.error(\"failed to create the new NFT\", error);\n  }\n})();\n",
  "<?php\n\nheader(\"Access-Control-Allow-Origin: *\");\nheader(\"Content-Type: application/json; charset=UTF-8\");\n\ninclude_once '../objects/user.php';\ninclude_once '../config/dbConnector.php';\n$db = DbConnector::getConnection();\n$user = new User($db);\n\n$stmt = $user->read();\n$num = $stmt->rowCount();\n\nif($num > 0) {\n    $result = array();\n\n    while($row = $stmt->fetch(PDO::FETCH_ASSOC)) {\n            $item = array(\n                \"id\" => $row['id'],\n                \"name\" => $row['name'],\n                \"lastName\" => $row['lastName'],\n                \"age\" => $row['age'],\n                \"birthday\" => $row['birthday']\n            );\n            array_push($result, $item);\n        \n    }\n    http_response_code(200);\n\n    echo json_encode($result);\n\n} else {\n    http_response_code(200);\n\n    echo json_encode(array(\"message\" => \"No Users found.\"));\n\n}\n?>",
  "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<!-- NewPage -->\n<html lang=\"en\">\n<head>\n<!-- Generated by javadoc (version 1.7.0_51) on Wed Apr 09 11:30:51 EDT 2014 -->\n<title>InterpolationUtil (Javadocs: peasycam)</title>\n<meta name=\"date\" content=\"2014-04-09\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"../stylesheet.css\" title=\"Style\">\n</head>\n<body>\n<script type=\"text/javascript\"><!--\n    if (location.href.indexOf('is-external=true') == -1) {\n        parent.document.title=\"InterpolationUtil (Javadocs: peasycam)\";\n    }\n//-->\n</script>\n<noscript>\n<div>JavaScript is disabled on your browser.</div>\n</noscript>\n<!-- ========= START OF TOP NAVBAR ======= -->\n<div class=\"topNav\"><a name=\"navbar_top\">\n<!--   -->\n</a><a href=\"#skip-navbar_top\" title=\"Skip navigation links\"></a><a name=\"navbar_top_firstrow\">\n<!--   -->\n</a>\n<ul class=\"navList\" title=\"Navigation\">\n<li><a href=\"../overview-summary.html\">Overview</a></li>\n<li><a href=\"package-summary.html\">Package</a></li>\n<li class=\"navBarCell1Rev\">Class</li>\n<li><a href=\"package-tree.html\">Tree</a></li>\n<li><a href=\"../deprecated-list.html\">Deprecated</a></li>\n<li><a href=\"../index-all.html\">Index</a></li>\n<li><a href=\"../help-doc.html\">Help</a></li>\n</ul>\n</div>\n<div class=\"subNav\">\n<ul class=\"navList\">\n<li><a href=\"../peasy/DampedAction.html\" title=\"class in peasy\"><span class=\"strong\">Prev Class</span></a></li>\n<li><a href=\"../peasy/PeasyCam.html\" title=\"class in peasy\"><span class=\"strong\">Next Class</span></a></li>\n</ul>\n<ul class=\"navList\">\n<li><a href=\"../index.html?peasy/InterpolationUtil.html\" target=\"_top\">Frames</a></li>\n<li><a href=\"InterpolationUtil.html\" target=\"_top\">No Frames</a></li>\n</ul>\n<ul class=\"navList\" id=\"allclasses_navbar_top\">\n<li><a href=\"../allclasses-noframe.html\">All Classes</a></li>\n</ul>\n<div>\n<script type=\"text/javascript\"><!--\n  allClassesLink = document.getElementById(\"allclasses_navbar_top\");\n  if(window==top) {\n    allClassesLink.style.display = \"block\";\n  }\n  else {\n    allClassesLink.style.display = \"none\";\n  }\n  //-->\n</script>\n</div>\n<div>\n<ul class=\"subNavList\">\n<li>Summary:&nbsp;</li>\n<li>Nested&nbsp;|&nbsp;</li>\n<li>Field&nbsp;|&nbsp;</li>\n<li><a href=\"#constructor_summary\">Constr</a>&nbsp;|&nbsp;</li>\n<li><a href=\"#method_summary\">Method</a></li>\n</ul>\n<ul class=\"subNavList\">\n<li>Detail:&nbsp;</li>\n<li>Field&nbsp;|&nbsp;</li>\n<li><a href=\"#constructor_detail\">Constr</a>&nbsp;|&nbsp;</li>\n<li><a href=\"#method_detail\">Method</a></li>\n</ul>\n</div>\n<a name=\"skip-navbar_top\">\n<!--   -->\n</a></div>\n<!-- ========= END OF TOP NAVBAR ========= -->\n<!-- ======== START OF CLASS DATA ======== -->\n<div class=\"header\">\n<div class=\"subTitle\">peasy</div>\n<h2 title=\"Class InterpolationUtil\" class=\"title\">Class InterpolationUtil</h2>\n</div>\n<div class=\"contentContainer\">\n<ul class=\"inheritance\">\n<li>java.lang.Object</li>\n<li>\n<ul class=\"inheritance\">\n<li>peasy.InterpolationUtil</li>\n</ul>\n</li>\n</ul>\n<div class=\"description\">\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<hr>\n<br>\n<pre>public class <span class=\"strong\">InterpolationUtil</span>\nextends java.lang.Object</pre>\n</li>\n</ul>\n</div>\n<div class=\"summary\">\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<!-- ======== CONSTRUCTOR SUMMARY ======== -->\n<ul class=\"blockList\">\n<li class=\"blockList\"><a name=\"constructor_summary\">\n<!--   -->\n</a>\n<h3>Constructor Summary</h3>\n<table class=\"overviewSummary\" border=\"0\" cellpadding=\"3\" cellspacing=\"0\" summary=\"Constructor Summary table, listing constructors, and an explanation\">\n<caption><span>Constructors</span><span class=\"tabEnd\">&nbsp;</span></caption>\n<tr>\n<th class=\"colOne\" scope=\"col\">Constructor and Description</th>\n</tr>\n<tr class=\"altColor\">\n<td class=\"colOne\"><code><strong><a href=\"../peasy/InterpolationUtil.html#InterpolationUtil()\">InterpolationUtil</a></strong>()</code>&nbsp;</td>\n</tr>\n</table>\n</li>\n</ul>\n<!-- ========== METHOD SUMMARY =========== -->\n<ul class=\"blockList\">\n<li class=\"blockList\"><a name=\"method_summary\">\n<!--   -->\n</a>\n<h3>Method Summary</h3>\n<table class=\"overviewSummary\" border=\"0\" cellpadding=\"3\" cellspacing=\"0\" summary=\"Method Summary table, listing methods, and an explanation\">\n<caption><span>Methods</span><span class=\"tabEnd\">&nbsp;</span></caption>\n<tr>\n<th class=\"colFirst\" scope=\"col\">Modifier and Type</th>\n<th class=\"colLast\" scope=\"col\">Method and Description</th>\n</tr>\n<tr class=\"altColor\">\n<td class=\"colFirst\"><code>static double</code></td>\n<td class=\"colLast\"><code><strong><a href=\"../peasy/InterpolationUtil.html#linear(double, double, double)\">linear</a></strong>(double&nbsp;a,\n      double&nbsp;b,\n      double&nbsp;t)</code>&nbsp;</td>\n</tr>\n<tr class=\"rowColor\">\n<td class=\"colFirst\"><code>static <a href=\"../peasy/org/apache/commons/math/geometry/Vector3D.html\" title=\"class in peasy.org.apache.commons.math.geometry\">Vector3D</a></code></td>\n<td class=\"colLast\"><code><strong><a href=\"../peasy/InterpolationUtil.html#linear(peasy.org.apache.commons.math.geometry.Vector3D, peasy.org.apache.commons.math.geometry.Vector3D, double)\">linear</a></strong>(<a href=\"../peasy/org/apache/commons/math/geometry/Vector3D.html\" title=\"class in peasy.org.apache.commons.math.geometry\">Vector3D</a>&nbsp;a,\n      <a href=\"../peasy/org/apache/commons/math/geometry/Vector3D.html\" title=\"class in peasy.org.apache.commons.math.geometry\">Vector3D</a>&nbsp;b,\n      double&nbsp;t)</code>&nbsp;</td>\n</tr>\n<tr class=\"altColor\">\n<td class=\"colFirst\"><code>static <a href=\"../peasy/org/apache/commons/math/geometry/Rotation.html\" title=\"class in peasy.org.apache.commons.math.geometry\">Rotation</a></code></td>\n<td class=\"colLast\"><code><strong><a href=\"../peasy/InterpolationUtil.html#slerp(peasy.org.apache.commons.math.geometry.Rotation, peasy.org.apache.commons.math.geometry.Rotation, double)\">slerp</a></strong>(<a href=\"../peasy/org/apache/commons/math/geometry/Rotation.html\" title=\"class in pe",
  "import React, { FunctionComponent } from \"react\";\nimport Register from \"./CreateEmployee\";\nimport QueueAnim from \"rc-queue-anim\";\nconst Page: FunctionComponent = () => {\n  return (\n    <QueueAnim type={[\"right\", \"left\"]}>\n      <div key=\"0\">\n        <Register />\n      </div>\n    </QueueAnim>\n  );\n};\n\nexport default Page;\n",
  "/*\n * Copyright (C) 2012 Ren\u00e9 Jeschke <rene_jeschke@yahoo.de>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.rjeschke.neetutils.ai;\n\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\nimport com.github.rjeschke.neetutils.SysUtils;\nimport com.github.rjeschke.neetutils.ai.Layer.State;\nimport com.github.rjeschke.neetutils.io.NInputStream;\nimport com.github.rjeschke.neetutils.io.NOutputStream;\nimport com.github.rjeschke.neetutils.rng.RNG;\n\n/**\n *\n * @author Ren\u00e9 Jeschke (rene_jeschke@yahoo.de)\n *\n */\n@Deprecated\npublic class Net\n{\n    final Layer[]    layers;\n    public final int numInputs;\n    public final int numOutputs;\n\n    Net(final int numLayers, final int numInputs, final int numOutputs)\n    {\n        this.layers = new Layer[numLayers];\n        this.numInputs = numInputs;\n        this.numOutputs = numOutputs;\n    }\n\n    @Override\n    public Net clone()\n    {\n        final Net net = new Net(this.layers.length, this.numInputs, this.numOutputs);\n        for (int i = 0; i < this.layers.length; i++)\n            net.layers[i] = this.layers[i].clone();\n        return net;\n    }\n\n    public Net randomize()\n    {\n        for (final Layer l : this.layers)\n        {\n            Arrays.fill(l.matrix, 0);\n            for (int i = 0; i < l.matrix.length; i++)\n            {\n                while (l.matrix[i] == 0)\n                    l.matrix[i] = SysUtils.rndDoubleBipolar();\n            }\n        }\n        return this;\n    }\n\n    public Net randomize(final RNG rng)\n    {\n        for (final Layer l : this.layers)\n        {\n            Arrays.fill(l.matrix, 0);\n            for (int i = 0; i < l.matrix.length; i++)\n            {\n                while (l.matrix[i] == 0)\n                    l.matrix[i] = rng.nextDoubleBipolar();\n            }\n        }\n        return this;\n    }\n\n    public Net clear()\n    {\n        for (final Layer l : this.layers)\n            Arrays.fill(l.matrix, 0);\n        return this;\n    }\n\n    public Net zeroNaNsAndInfs()\n    {\n        for (final Layer l : this.layers)\n            l.zeroNaNsAndInfs();\n        return this;\n    }\n\n    public double[] run(final double[] inputs, final double[] outputs)\n    {\n        final State[] states = this.createStates(outputs);\n\n        for (int i = 0; i < this.layers.length; i++)\n        {\n            if (i == 0)\n                this.layers[i].eval(inputs, states[i].values);\n            else this.layers[i].eval(states[i - 1].values, states[i].values);\n        }\n\n        return outputs;\n    }\n\n    double[] run(final State[] states)\n    {\n        for (int i = 0; i < this.layers.length; i++)\n            this.layers[i].eval(states[i].values, states[i + 1].values);\n        return states[this.layers.length].values;\n    }\n\n    State[] createStates(final double[] outputs)\n    {\n        final State[] s = new State[this.layers.length];\n        for (int i = 0; i < this.layers.length; i++)\n        {\n            if (i == this.layers.length - 1)\n                s[i] = this.layers[i].createState(outputs);\n            else s[i] = this.layers[i].createState();\n        }\n        return s;\n    }\n\n    State[] createExtraStates(final double[] inputs)\n    {\n        final State[] s = new State[this.layers.length + 1];\n        for (int i = 0; i < this.layers.length + 1; i++)\n        {\n            if (i == 0)\n                s[i] = new State(inputs);\n            else s[i] = this.layers[i - 1].createState();\n        }\n        return s;\n    }\n\n    public void toStream(final NOutputStream out) throws IOException\n    {\n        out.write32(this.layers.length);\n        out.write32(this.numInputs);\n        out.write32(this.numOutputs);\n        for (final Layer l : this.layers)\n            l.toStream(out);\n    }\n\n    public static Net fromStream(final NInputStream in) throws IOException\n    {\n        final int l = in.readI32();\n        final int a = in.readI32();\n        final int b = in.readI32();\n        final Net net = new Net(l, a, b);\n        for (int i = 0; i < l; i++)\n            net.layers[i] = Layer.fromStream(in);\n        return net;\n    }\n\n    public static Builder builder(final int numInputs)\n    {\n        return new Builder(numInputs);\n    }\n\n    public static class Builder\n    {\n        private final int                 numInputs;\n        ArrayList<Integer>          outputs = new ArrayList<>();\n        ArrayList<TransferFunction> tfs     = new ArrayList<>();\n\n        Builder(final int numInputs)\n        {\n            this.numInputs = numInputs;\n        }\n\n        public Builder addLayer(final int outputs, final TransferFunction tf)\n        {\n            if (outputs < 1) throw new IllegalArgumentException(\"Number of outputs must be greater than zero\");\n            this.outputs.add(outputs);\n            this.tfs.add(tf);\n            return this;\n        }\n\n        public Net build()\n        {\n            if (this.outputs.size() == 0) throw new IllegalStateException(\"At least one layer is needed\");\n\n            final Net net = new Net(this.outputs.size(), this.numInputs, this.outputs.get(this.outputs.size() - 1));\n            for (int i = 0; i < net.layers.length; i++)\n            {\n                net.layers[i] = new Layer(this.tfs.get(i), i == 0? this.numInputs : this.outputs.get(i - 1), this.outputs.get(i));\n            }\n\n            return net;\n        }\n    }\n}\n",
  "module.exports = (options, req) => {\n  const base = {\n    entry: {\n      'vuex-geolocation': './src/vuex-geolocation.js',\n      'geolocation-utilities': './src/geolocation-utilities.js'\n    },\n    sourceMap: false,\n    vendor: false\n  };\n\n  const dev = {\n    entry: './src/demo.js'\n  };\n\n  const production = {\n    html: false,\n    library: true,\n    filename: {\n      js: '[name].js'\n    }\n  };\n  const extend = options.mode === 'production'? production : dev;\n  return {\n   ...base,\n   ...extend\n  };\n};\n",
  "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <!-- METADATA -->\n    <meta charset=\"UTF-8\" />\n    <meta name=\"author\" content=\"Damir Akchurin\" />\n    <meta name=\"description\" content=\"Damir Akchurin's personal website.\" />\n    <meta name=\"keywords\" content=\"Damir, Akchurin, SUNY Poly, JHU\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\n    <!-- FAVICON -->\n    <link rel=\"shortcut icon\" href=\"images/me.png\" type=\"image/x-icon\" />\n\n    <!-- FONTAWESOME -->\n    <script\n      src=\"https://kit.fontawesome.com/37dc442ad6.js\"\n      crossorigin=\"anonymous\"\n    ></script>\n\n    <!-- BOOTSTRAP -->\n    <link\n      href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\"\n      rel=\"stylesheet\"\n      integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\"\n      crossorigin=\"anonymous\"\n    />\n\n    <!-- CSS -->\n    <link rel=\"stylesheet\" href=\"css/style.css\" />\n\n    <!-- TITLE -->\n    <title>Damir Akchurin's Personal Website</title>\n  </head>\n  <body>\n    <header>\n      <!-- NAVIGATION -->\n      <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <div class=\"container-fluid\">\n          <!-- BRAND -->\n          <a href=\"index.html\" class=\"navbar-brand\">Damir Akchurin</a>\n\n          <!-- NAVBAR TOGGLE BUTTON -->\n          <button\n            class=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#BurgerMenu\"\n            aria-controls=\"BurgerMenu\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span class=\"navbar-toggler-icon\"></span>\n          </button>\n\n          <!-- NAVBAR ITEMS -->\n          <div class=\"collapse navbar-collapse\" id=\"BurgerMenu\">\n            <ul class=\"navbar-nav\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"index.html\">Home</a>\n              </li>\n              <li class=\"nav-item\">\n                <a\n                  class=\"nav-link active text-success\"\n                  aria-current=\"page\"\n                  href=\"research.html\"\n                  >Research</a\n                >\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"publications.html\">Publications</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"talks.html\">Talks</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </header>\n\n    <main>\n      <div class=\"container-fluid\">\n        <!-- HEADER IMAGE -->\n        <div class=\"row\">\n          <div class=\"col p-0\">\n            <div class=\"img-header-container\">\n              <img\n                src=\"images/research.jpg\"\n                class=\"img-header border-bottom\"\n                alt=\"Research\"\n              />\n              <p class=\"text-over-img-header fs-2 text-uppercase text-light\">\n                Research\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <!-- CONTENT -->\n        <div class=\"row\">\n          <!-- GUTTER -->\n          <div class=\"col-md-2\"></div>\n\n          <!-- RESEARCH -->\n          <div class=\"col-md-8 pt-5\">\n            <!-- CURRENT -->\n            <div class=\"callout\">\n              <h5>Current Research</h5>\n              <div class=\"text-center\">\n                <p>In progress...</p>\n                <p><i class=\"fa fa-cog fa-spin fa-lg\"></i></p>\n              </div>\n            </div>\n\n            <!-- PAST -->\n            <div class=\"callout\">\n              <h5>Past Research</h5>\n              <div class=\"text-center\">\n                <p>In progress...</p>\n                <p><i class=\"fa fa-cog fa-spin fa-lg\"></i></p>\n              </div>\n            </div>\n          </div>\n\n          <!-- GUTTER -->\n          <div class=\"col-md-2\"></div>\n        </div>\n      </div>\n    </main>\n\n    <!-- FOOTER -->\n    <footer class=\"pt-3 px-3 bg-dark\">\n      <div class=\"small text-light\">\n        <p class=\"text-center\">\n          Damir Akchurin &copy; 2022 - <span id=\"Year\"></span>\n        </p>\n        <p class=\"text-end\">Powered by ridiculous amounts of caffeine</p>\n      </div>\n    </footer>\n\n    <!-- SCRIPTS -->\n    <!-- BOOTSTRAP -->\n    <script\n      src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\"\n      integrity=\"sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p\"\n      crossorigin=\"anonymous\"\n    ></script>\n    <script src=\"js/main.js\"></script>\n  </body>\n</html>\n",
  "\nTi=Data security roles and their relationships</b> \n\n1.sec=The GA4GH expects that in many cases, one organization may behave in more than one operational stakeholder role. For example, a data controller may also be a data service provider; an infrastructure service provider might also offer application and data services hosted on the infrastructure they support. In such cases, the organization as a whole must demosntrate control effectiveness for the applicable controls. The expectation is that operational stakeholders should document the roles and responsibilities as appropriate within that community. Furthermore, such organization should assure that security-critical functions and responsibilities are delegated among multiple roles and multiple individuals to help avoid conflicts of interest, prevent inappropriate activities, provide broader coverage and reduce key person-risk. \n\n2.0.sec=Figure 3 below is a graphical representation of the delegation of responsibilities for implementing and operating in accordance with the GA4GH <b>Data Security Infrastructure Policy</b>. \n\n2.1.sec=<img height=500 width=700 src=\"https://github.com/ga4gh/data-security/raw/master/DSIP/Figures/Fig.3-responsibilities.png\"> \n\n2.00.sec=<b>Figure 3. Allocation of responsibility for security protections.*</b> \n\n2.=[G/Z/ol-none/1]\n\n3.sec=The functions listed in the vertical leftmost block are shared by all operational stakeholders, albeit in a different way for each actor (e.g data processors should notify if any breach occurs, but they are not responsible to act upon it). Functions listed in the other blocks are allocated to data controllers, data processors, and GA4GH. \n\n4.sec=Infrastructure service providers may provide a wide range of services to data and application service providers, including computing, storage, network, and security services. Most commonly, these services will be virtualized across data centers and geographic locations. The applicability of, and responsibility for providing, each of the security functions within the \u201cdata processor\u201d block will depend upon the specific services provided, as well as the contractual agreements established between infrastructure service providers and their customers. \n\n=[G/Z/ol/s4]\n",
  "@extends('layouts.app')\n\n@section('content')\n<div class=\"container\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-md-8\">\n            <div class=\"card\">\n                <div class=\"card-header\">Create A New MotorBikes</div>\n                <span style=\"padding:10px;color:red\">Note: All field is required</span>\n                <div class=\"card-body\">\n\n                <div class=\"card-body\">\n                    @if (session('status'))\n                        <div class=\"alert alert-success in alert-dismissible\">\n                        <a href=\"#\" class=\"close\" data-dismiss=\"alert\" aria-label=\"close\" title=\"close\">\u00d7</a>\n                          <strong>Success!</strong>  {{ session('status') }}\n                        </div>\n                    @endif\n\n                    {{$errors->first()}}\n                </div>\n\n                    <form method=\"POST\" action=\"{{ route('motors.store') }}\" enctype=\"multipart/form-data\">\n                        @csrf\n\n                        <div class=\"form-group row\">\n                            <label for=\"model\" class=\"col-sm-4 col-form-label text-md-right\">Model</label>\n\n                            <div class=\"col-md-6\">\n                                <input id=\"model\" type=\"text\" class=\"form-control{{ $errors->has('model')?'is-invalid' : '' }}\" name=\"model\" value=\"{{ old('model') }}\" required autofocus>\n\n                                @if ($errors->has('model'))\n                                    <span class=\"invalid-feedback\">\n                                        <strong>{{ $errors->first('model') }}</strong>\n                                    </span>\n                                @endif\n                            </div>\n                        </div>\n\n                        <div class=\"form-group row\">\n                            <label for=\"cc\" class=\"col-sm-4 col-form-label text-md-right\">CC</label>\n\n                            <div class=\"col-md-6\">\n                                <input id=\"cc\" type=\"text\" class=\"form-control{{ $errors->has('cc')?'is-invalid' : '' }}\" name=\"cc\" value=\"{{ old('cc') }}\" required>\n\n                                @if ($errors->has('cc'))\n                                    <span class=\"invalid-feedback\">\n                                        <strong>{{ $errors->first('cc') }}</strong>\n                                    </span>\n                                @endif\n                            </div>\n                        </div>\n                        \n                        <div class=\"form-group row\">\n                            <label for=\"weight\" class=\"col-sm-4 col-form-label text-md-right\">Weight</label>\n\n                            <div class=\"col-md-6\">\n                                <input id=\"weight\" type=\"number\"  min=\"100\" max=\"500\" step=\"10\" class=\"form-control{{ $errors->has('weight')?'is-invalid' : '' }}\" name=\"weight\" value=\"{{ old('weight') }}\" required>\n\n                                @if ($errors->has('weight'))\n                                    <span class=\"invalid-feedback\">\n                                        <strong>{{ $errors->first('weight') }}</strong>\n                                    </span>\n                                @endif\n                            </div>\n                        </div>\n                       \n                        <div class=\"form-group row\">\n                            <label for=\"price\" class=\"col-sm-4 col-form-label text-md-right\">Price</label>\n\n                            <div class=\"col-md-6\">\n                                <input id=\"price\" type=\"number\" min=\"100\" step=\"0.22\" class=\"form-control{{ $errors->has('price')?'is-invalid' : '' }}\" name=\"price\" value=\"{{ old('price') }}\" required>\n\n                                @if ($errors->has('price'))\n                                    <span class=\"invalid-feedback\">\n                                        <strong>{{ $errors->first('price') }}</strong>\n                                    </span>\n                                @endif\n                            </div>\n                        </div>\n                       \n                        <div class=\"form-group row\">\n                            <label for=\"color\" class=\"col-sm-4 col-form-label text-md-right\">Color</label>\n\n                            <div class=\"col-md-6\">\n                                <select name=\"color\" id=\"color\" class=\"form-control{{ $errors->has('color')?'is-invalid' : '' }}\" required>\n                                <option value=''>--- Please select a color ---</option>\n                                <option value=\"white\">White</option>\n                                <option value=\"black\">Black</option>\n                                <option value=\"red\">Red</option>\n                                <option value=\"orang\">Orang</option>\n                                <option value=\"blue\">Blue</option>\n                                <option value=\"yellow\">Yellow</option>\n                                <option value=\"gray\">Gray</option>\n                                </select>\n                                @if ($errors->has('color'))\n                                    <span class=\"invalid-feedback\">\n                                        <strong>{{ $errors->first('color') }}</strong>\n                                    </span>\n                                @endif\n                            </div>\n                        </div>\n\n                          <div class=\"form-group row\">\n                            <label for=\"photo\" class=\"col-sm-4 col-form-label text-md-right\">Photo</label>\n\n                            <div class=\"col-md-6\">\n                                <input id=\"photo\" type=\"file\"  class=\"form-control{{ $errors->has('photo')?'is-invalid' : '' }}\" name=\"photo\" value=\"{{ old('photo') }}\" required>\n\n                                @if ($errors->has('photo'))\n                                    <span class=\"invalid-feedback\">\n                                        <strong>{{ $errors->first('photo') }}</strong>\n                                    </span>\n                                @endif\n                            </div>\n                        </div>\n\n                  \n                        <div class=\"form-group row\">\n                            <div  class=\"col-md-4\"></div>\n\n                            <div class=\"col-md-6\">\n                                <button type=\"submit\" class=\"btn btn-success btn-lg btn-block\">\n                                    Create MotorBikes!\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n@endsection\n",
  "import { StudentProfile } from './student-profile.model';\nimport { TeachingStaffProfile } from './teaching-staff-profile.model';\nimport { CompanyProfile } from './company-profile.model';\nimport { ModeratorProfile } from './moderator-profile.model';\nimport { Faculty } from '../../faculty/models/faculty.model';\nimport { Course } from '../../course/models/course.model';\n\nexport class User {\n\tpublic id: number;\n\tpublic name: string;\n\tpublic email: string;\n\tpublic password: string;\n\tpublic verified: boolean;\n\tpublic gender: string;\n\tpublic blocked: boolean;\n\tpublic address: string;\n\tpublic mobile: string;\n\tpublic avatar;\n\tpublic type: string;\n\tpublic profile;\n\tpublic faculties: Array<Faculty>;\n\tpublic courses: Array<Course>;\n\n\tconstructor(id: number = 0, name: string = '', email: string = '', password: string = '', verified: boolean = false, gender: string = '', blocked: boolean = false, address: string = '', mobile: string = '', avatar = null, type: string = '', profile: StudentProfile | TeachingStaffProfile | CompanyProfile | ModeratorProfile = null, faculties: Faculty[] = null, courses: Course[] = null) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.email = email;\n\t\tthis.password = password;\n\t\tthis.verified = verified;\n\t\tthis.gender = gender;\n\t\tthis.blocked = blocked;\n\t\tthis.address = address;\n\t\tthis.mobile = mobile;\n\t\tthis.avatar = avatar;\n\t\tthis.type = type;\n\t\tthis.profile = profile;\n\n\t\tif (faculties) this.faculties = new Array<Faculty>(...faculties);\n\t\tif (courses) this.courses = new Array<Course>(...courses);\n\t}\n\n\ttoJson(method = '') {\n\t\tlet data = new FormData();\n\t\tlet type;\n\t\tlet profileData = this.profile? this.profile.toJson() : undefined;\n\n\t\tif (this.type === 'Student')\n\t\t\ttype = 0;\n\t\telse if (this.type === 'TeachingStaff')\n\t\t\ttype = 1;\n\t\telse if (this.type === 'Company')\n\t\t\ttype = 2;\n\t\telse if (this.type === 'Moderator')\n\t\t\ttype = 3;\n\t\telse if (this.type === 'Admin')\n\t\t\ttype = 4;\n\n\t\tif (method) data.append('_method', method);\n\t\t\n\t\tdata.append('id', this.id.toString());\n\t\tdata.append('name', this.name);\n\t\tdata.append('email', this.email);\n\n\t\tif (this.password) data.append('password', this.password);\n\n\t\tdata.append('gender', (this.gender === 'Male'? 0 : 1).toString());\n\t\tdata.append('blocked', (this.blocked? 1 : 0).toString());\n\t\tdata.append('address', this.address);\n\t\tdata.append('mobile', this.mobile);\n\n\t\tif (this.avatar instanceof File) data.append('avatar', this.avatar);\n\n\t\tdata.append('type', type);\n\n\t\tfor (var property in profileData)\n\t\t\tif (profileData.hasOwnProperty(property))\n\t\t\t\tdata.append(property, profileData[property]);\n\n\t\treturn data;\n\t}\n}",
  "---\ntitle: \"Promise yourself. Next 30 days.\"\ndescription: \"Those who cannot change their minds cannot change anything. You want to improve yourself and willing to become a better person tomorrow. That sounds great and it\u2019s a wonderful thought.  What you do next is something actually matters.\"\nlead: \"Those who cannot change their minds cannot change anything. You want to improve yourself and willing to become a better person tomorrow. That sounds great and it\u2019s a wonderful thought.  What you do next is something actually matters.\"\ndate: 2022-01-01T13:59:12+05:30\nlastmod: 2022-01-01T13:59:12+05:30\ndraft: false\nweight: 50\nimages: [\"promise-yourself-30-days.jpg\"]\ncontributors: ['modernmonkvibes']\nlayout: single\ntype: blog\n---\n> \u201cThose who cannot change their minds cannot change anything.\u201d \u2015 George\n> Bernard Shaw\n\n  \nLet\u2019s keep it simple.\nYou want to improve yourself and willing to become a better person tomorrow.\n\nThat sounds great and it\u2019s a wonderful thought.  What you do next is something actually matters.\n\n## Two choices are available:\n1. Think more\n2. Start from today.\n\n  \n\n### Option 1- Think more\n\nYou will get into the flow of keep thinking, or probably you will also think that let me finalize what I want to become first. Honestly, it\u2019s a serious concern if that\u2019s taking you more than a day. You are escaping from hard work and enjoying the comfort of keep thinking. Since you are still in the thinking process, you will never feel that you not making progress but in reality, you are still in the same old place. Delusion or making progress\n\n  \n### Option 2- Start from today\n\nYou can spend a day writing a list of items you want to work on for the next 30 days. It can be 5-10 or based on your comfort level. The next day, when you get up, you HAVE to work on those things you list down. It may not be in a perfect state but you can always and always improvise on them. Working towards your goal sooner, defines everything and reduces overthinking. It will eventually lead to great confidence and a positive mindset.\n\n \n### In Summary: Please start early and improvise as you go.\n",
  "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<!-- NewPage -->\n<html lang=\"ja\">\n<head>\n<!-- Generated by javadoc (1.8.0_131) on Tue Sep 05 10:46:01 JST 2017 -->\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n<title>ContentItemInfo (MiraiDesign FW version:1.000;)</title>\n<meta name=\"date\" content=\"2017-09-05\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"../../../stylesheet.css\" title=\"Style\">\n<script type=\"text/javascript\" src=\"../../../script.js\"></script>\n</head>\n<body>\n<script type=\"text/javascript\"><!--\n    try {\n        if (location.href.indexOf('is-external=true') == -1) {\n            parent.document.title=\"ContentItemInfo (MiraiDesign FW version:1.000;)\";\n        }\n    }\n    catch(err) {\n    }\n//-->\nvar methods = {\"i0\":10,\"i1\":10,\"i2\":10,\"i3\":10,\"i4\":10,\"i5\":10,\"i6\":10,\"i7\":10,\"i8\":10,\"i9\":10,\"i10\":10,\"i11\":10,\"i12\":10,\"i13\":10,\"i14\":10,\"i15\":10,\"i16\":10,\"i17\":10,\"i18\":10,\"i19\":10,\"i20\":10,\"i21\":10,\"i22\":10,\"i23\":10,\"i24\":10,\"i25\":10,\"i26\":10,\"i27\":10,\"i28\":10,\"i29\":10};\nvar tabs = {65535:[\"t0\",\"\u3059\u3079\u3066\u306e\u30e1\u30bd\u30c3\u30c9\"],2:[\"t2\",\"\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30fb\u30e1\u30bd\u30c3\u30c9\"],8:[\"t4\",\"concrete\u30e1\u30bd\u30c3\u30c9\"]};\nvar altColor = \"altColor\";\nvar rowColor = \"rowColor\";\nvar tableTab = \"tableTab\";\nvar activeTableTab = \"activeTableTab\";\n</script>\n<noscript>\n<div>\u30d6\u30e9\u30a6\u30b6\u306eJavaScript\u304c\u7121\u52b9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002</div>\n</noscript>\n<!-- ========= START OF TOP NAVBAR ======= -->\n<div class=\"topNav\"><a name=\"navbar.top\">\n<!--   -->\n</a>\n<div class=\"skipNav\"><a href=\"#skip.navbar.top\" title=\"\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u30fb\u30ea\u30f3\u30af\u3092\u30b9\u30ad\u30c3\u30d7\">\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u30fb\u30ea\u30f3\u30af\u3092\u30b9\u30ad\u30c3\u30d7</a></div>\n<a name=\"navbar.top.firstrow\">\n<!--   -->\n</a>\n<ul class=\"navList\" title=\"\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\">\n<li><a href=\"../../../overview-summary.html\">\u6982\u8981</a></li>\n<li><a href=\"package-summary.html\">\u30d1\u30c3\u30b1\u30fc\u30b8</a></li>\n<li class=\"navBarCell1Rev\">\u30af\u30e9\u30b9</li>\n<li><a href=\"package-tree.html\">\u968e\u5c64\u30c4\u30ea\u30fc</a></li>\n<li><a href=\"../../../deprecated-list.html\">\u975e\u63a8\u5968</a></li>\n<li><a href=\"../../../index-all.html\">\u7d22\u5f15</a></li>\n<li><a href=\"../../../help-doc.html\">\u30d8\u30eb\u30d7</a></li>\n</ul>\n</div>\n<div class=\"subNav\">\n<ul class=\"navList\">\n<li><a href=\"../../../com/miraidesign/content/ContentItem.html\" title=\"com.miraidesign.content\u5185\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\"><span class=\"typeNameLink\">\u524d\u306e\u30af\u30e9\u30b9</span></a></li>\n<li><a href=\"../../../com/miraidesign/content/ContentItemNode.html\" title=\"com.miraidesign.content\u5185\u306e\u30af\u30e9\u30b9\"><span class=\"typeNameLink\">\u6b21\u306e\u30af\u30e9\u30b9</span></a></li>\n</ul>\n<ul class=\"navList\">\n<li><a href=\"../../../index.html?com/miraidesign/content/ContentItemInfo.html\" target=\"_top\">\u30d5\u30ec\u30fc\u30e0</a></li>\n<li><a href=\"ContentItemInfo.html\" target=\"_top\">\u30d5\u30ec\u30fc\u30e0\u306a\u3057</a></li>\n</ul>\n<ul class=\"navList\" id=\"allclasses_navbar_top\">\n<li><a href=\"../../../allclasses-noframe.html\">\u3059\u3079\u3066\u306e\u30af\u30e9\u30b9</a></li>\n</ul>\n<div>\n<script type=\"text/javascript\"><!--\n  allClassesLink = document.getElementById(\"allclasses_navbar_top\");\n  if(window==top) {\n    allClassesLink.style.display = \"block\";\n  }\n  else {\n    allClassesLink.style.display = \"none\";\n  }\n  //-->\n</script>\n</div>\n<div>\n<ul class=\"subNavList\">\n<li>\u30b5\u30de\u30ea\u30fc:&nbsp;</li>\n<li>\u30cd\u30b9\u30c8&nbsp;|&nbsp;</li>\n<li><a href=\"#field.summary\">\u30d5\u30a3\u30fc\u30eb\u30c9</a>&nbsp;|&nbsp;</li>\n<li><a href=\"#constructor.summary\">\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf</a>&nbsp;|&nbsp;</li>\n<li><a href=\"#method.summary\">\u30e1\u30bd\u30c3\u30c9</a></li>\n</ul>\n<ul class=\"subNavList\">\n<li>\u8a73\u7d30:&nbsp;</li>\n<li><a href=\"#field.detail\">\u30d5\u30a3\u30fc\u30eb\u30c9</a>&nbsp;|&nbsp;</li>\n<li><a href=\"#constructor.detail\">\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf</a>&nbsp;|&nbsp;</li>\n<li><a href=\"#method.detail\">\u30e1\u30bd\u30c3\u30c9</a></li>\n</ul>\n</div>\n<a name=\"skip.navbar.top\">\n<!--   -->\n</a></div>\n<!-- ========= END OF TOP NAVBAR ========= -->\n<!-- ======== START OF CLASS DATA ======== -->\n<div class=\"header\">\n<div class=\"subTitle\">com.miraidesign.content</div>\n<h2 title=\"\u30af\u30e9\u30b9 ContentItemInfo\" class=\"title\">\u30af\u30e9\u30b9 ContentItemInfo</h2>\n</div>\n<div class=\"contentContainer\">\n<ul class=\"inheritance\">\n<li><a href=\"http://docs.oracle.com/javase/jp/8/docs/api/java/lang/Object.html?is-external=true\" title=\"java.lang\u5185\u306e\u30af\u30e9\u30b9\u307e\u305f\u306f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\">java.lang.Object</a></li>\n<li>\n<ul class=\"inheritance\">\n<li><a href=\"http://docs.oracle.com/javase/jp/8/docs/api/javax/swing/table/AbstractTableModel.html?is-external=true\" title=\"javax.swing.table\u5185\u306e\u30af\u30e9\u30b9\u307e\u305f\u306f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\">javax.swing.table.AbstractTableModel</a></li>\n<li>\n<ul class=\"inheritance\">\n<li><a href=\"../../../com/miraidesign/util/QueueTable.html\" title=\"com.miraidesign.util\u5185\u306e\u30af\u30e9\u30b9\">com.miraidesign.util.QueueTable</a></li>\n<li>\n<ul class=\"inheritance\">\n<li>com.miraidesign.content.ContentItemInfo</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<div class=\"description\">\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<dl>\n<dt>\u3059\u3079\u3066\u306e\u5b9f\u88c5\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9:</dt>\n<dd><a href=\"http://docs.oracle.com/javase/jp/8/docs/api/java/io/Serializable.html?is-external=true\" title=\"java.io\u5185\u306e\u30af\u30e9\u30b9\u307e\u305f\u306f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\">Serializable</a>, <a href=\"http://docs.oracle.com/javase/jp/8/docs/api/javax/swing/table/TableModel.html?is-external=true\" title=\"javax.swing.table\u5185\u306e\u30af\u30e9\u30b9\u307e\u305f\u306f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\">TableModel</a></dd>\n</dl>\n<hr>\n<br>\n<pre>public class <span class=\"typeNameLabel\">ContentItemInfo</span>\nextends <a href=\"../../../com/mira",
  "# GestionProject\nGestionProject\n",
  "<!doctype html>\n<!--\n* Tabler - Premium and Open Source dashboard template with responsive and high quality UI.\n* @version v1.0.0-alpha\n* @link https://github.com/tabler/tabler\n* Copyright 2018-2019 The Tabler Authors\n* Copyright 2018-2019 codecalm.net Pawe\u0142 Kuna\n* Licensed under MIT (https://tabler.io/license)\n-->\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\"/>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"/>\n    <meta http-equiv=\"Content-Language\" content=\"en\"/>\n    <meta name=\"msapplication-TileColor\" content=\"#206bc4\"/>\n    <meta name=\"theme-color\" content=\"#206bc4\"/>\n    <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\"/>\n    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\"/>\n    <meta name=\"mobile-web-app-capable\" content=\"yes\"/>\n    <meta name=\"HandheldFriendly\" content=\"True\"/>\n    <meta name=\"MobileOptimized\" content=\"320\"/>\n    <meta name=\"robots\" content=\"noindex,nofollow,noarchive\"/>\n    <link rel=\"icon\" href=\"../favicon.ico\" type=\"image/x-icon\"/>\n    <link rel=\"shortcut icon\" href=\"../favicon.ico\" type=\"image/x-icon\"/>\n    <title>Tables - Documentation - Tabler - Premium and Open Source dashboard template with responsive and high quality UI.</title>\n    <!-- Libs CSS -->\n    <link href=\"../dist/libs/jqvmap/dist/jqvmap.min.css?1576885231\" rel=\"stylesheet\"/>\n    <link href=\"../dist/libs/selectize/dist/css/selectize.css?1576885231\" rel=\"stylesheet\"/>\n    <link href=\"../dist/libs/fullcalendar/core/main.min.css?1576885231\" rel=\"stylesheet\"/>\n    <link href=\"../dist/libs/fullcalendar/daygrid/main.min.css?1576885231\" rel=\"stylesheet\"/>\n    <link href=\"../dist/libs/fullcalendar/timegrid/main.min.css?1576885231\" rel=\"stylesheet\"/>\n    <link href=\"../dist/libs/fullcalendar/list/main.min.css?1576885231\" rel=\"stylesheet\"/>\n    <!-- Tabler Core -->\n    <link href=\"../dist/css/tabler.min.css?1576885231\" rel=\"stylesheet\"/>\n    <!-- Tabler Plugins -->\n    <link href=\"../dist/css/tabler-flags.min.css?1576885231\" rel=\"stylesheet\"/>\n    <style>\n      body { display: none; }\n    </style>\n  </head>\n  <body class=\"antialiased\">\n    <div class=\"wrapper\">\n      <aside class=\"sidebar sidebar-dark\">\n        <!-- Sidebar logo -->\n        <a href=\"..\" class=\"sidebar-brand\">\n          <img src=\"../img/logo.svg\" alt=\"Tabler\" class=\"sidebar-brand-logo sidebar-brand-logo-lg\">\n          <img src=\"../img/logo-small.svg\" alt=\"Tabler\" class=\"sidebar-brand-logo sidebar-brand-logo-sm\">\n        </a>\n        <div class=\"sidebar-content\">\n          <div>\n            <!-- Sidebar menu -->\n            <ul class=\"sidebar-nav\">\n              <li class=\"sidebar-nav-title\">Navigation</li>\n              <li class=\"sidebar-nav-item\">\n                <a href=\"../index.html\" class=\"sidebar-nav-link\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"icon nav-icon\"><path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path><polyline points=\"9 22 9 12 15 12 15 22\"></polyline></svg>\n                  <span class=\"nav-text\">Dashboard</span>\n                  <span class=\"badge bg-blue\"></span>\n                </a>\n              </li>\n              <li class=\"sidebar-nav-item\">\n                <a href=\"../form-elements.html\" class=\"sidebar-nav-link\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"icon nav-icon\"><polyline points=\"9 11 12 14 22 4\"></polyline><path d=\"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11\"></path></svg>\n                  <span class=\"nav-text\">Form elements</span>\n                  <span class=\"badge bg-red\">New</span>\n                </a>\n              </li>\n              <li class=\"sidebar-nav-item\">\n                <a href=\"../\" class=\"sidebar-nav-link\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"icon nav-icon\"><path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path><polyline points=\"14 2 14 8 20 8\"></polyline><line x1=\"9\" y1=\"15\" x2=\"15\" y2=\"15\"></line></svg>\n                  <span class=\"nav-text\">Error pages</span>\n                </a>\n                <ul class=\"sidebar-subnav\">\n                  <li class=\"sidebar-nav-item\">\n                    <a href=\"../400.html\" class=\"sidebar-nav-link\">\n                      <span>400 page</span>\n                    </a>\n                  </li>\n                  <li class=\"sidebar-nav-item\">\n                    <a href=\"../401.html\" class=\"sidebar-nav-link\">\n                      <span>401 page</span>\n                    </a>\n                  </li>\n                  <li class=\"sidebar-nav-item\">\n                    <a href=\"../403.html\" class=\"sidebar-nav-link\">\n                      <span>403 page</span>\n                    </a>\n                  </li>\n                  <li class=\"sidebar-nav-item\">\n                    <a href=\"../404.html\" class=\"sidebar-nav-link\">\n                      <span>404 page</span>\n                    </a>\n                  </li>\n                  <li class=\"sidebar-nav-item\">\n                    <a href=\"../500.html\" class=\"sidebar-nav-link\">\n                      <span>500 page</span>\n                    </a>\n                  </li>\n                  <li class=\"sidebar-nav-item\">\n                    <a href=\"../503.html\" class=\"sidebar-nav-link\">\n                      <span>503 page</span>\n                    </a>\n                  </li>\n                  <li class=\"sidebar-nav-item\">\n                    <a href=\"../maintenance.html\" class=\"sidebar-nav-link\">\n                      <span>Maintenance page</span>\n                    </a>\n                  </li>\n                </ul>\n              </li>\n              <li class=\"sidebar-nav-item\">\n                <a href=\"../\" class=\"sidebar-nav-link\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"icon nav-icon\"><line x1=\"16.5\" y1=\"9.4\" x2=\"7.5\" y2=\"4.21\"></line><path d=\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a",
  "import { Box, Heading, Divider, Link, Icon } from \"@chakra-ui/core\";\n\nconst News = () => {\n  return (\n    <Box rounded=\"lg\" boxShadow=\"md\" bg=\"#ffffff\" maxW=\"3xl\" mx=\"auto\" p={4}>\n      <Heading size=\"sm\" textAlign=\"center\">\n        Novidades\n      </Heading>\n      <Divider />\n      <Link\n        href=\"https://www.medrxiv.org/content/10.1101/2020.06.05.20123604v1\"\n        isExternal\n      >\n        \u2022 Scrutinizing the heterogeneous spreading of COVID-19 outbreak in\n        Brazilian territory <Icon name=\"external-link\" mx=\"2px\" />\n      </Link>{\" \"}\n      <br />\n      <Link\n        href=\"https://ricmais.com.br/videos/parana-no-ar/diagnostico-do-coronavirus-exame-de-raio-x-identifica-doenca/\"\n        isExternal\n      >\n        \u2022 Diagn\u00f3stico do Corona V\u00edrus por Raio-X - professores UFPR e UFOP{\" \"}\n        <Icon name=\"external-link\" mx=\"2px\" />\n      </Link>{\" \"}\n      <br />\n      <Link\n        href=\"https://www.youtube.com/watch?v=4HHOuDnW2DQ&feature=emb_logo&fbclid=IwAR3vxB3jC2TkUP9hWTp-9fEqgQ6xlOFKLSRTll5fj6NOjZqtpUzTrAX9tw8\"\n        isExternal\n      >\n        \u2022 Painel da SBF: F\u00edsicos e a Pandemia{\" \"}\n        <Icon name=\"external-link\" mx=\"2px\" />\n      </Link>{\" \"}\n      <br />\n      <Link\n        href=\"https://www.insper.edu.br/noticias/covid-19-portal-marco-antonio/\"\n        isExternal\n      >\n        \u2022 Professor do Insper colabora com a UFPR em portal sobre a Covid-19{\" \"}\n        <Icon name=\"external-link\" mx=\"2px\" />\n      </Link>{\" \"}\n      <br />\n    </Box>\n  );\n};\n\nexport default News;\n",
  "use std::ops::RangeInclusive;\n\nuse bevy::{\n    core::Time,\n    math::{Vec3, Vec4},\n    prelude::{GlobalTransform, Query, Res, Transform},\n};\nuse rand::Rng;\n\nuse rose_file_readers::{PtlKeyframeData, PtlUpdateCoords};\n\nuse crate::{\n    components::{ActiveParticle, ParticleSequence},\n    render::ParticleRenderData,\n};\n\nfn rng_gen_range<R: Rng>(rng: &mut R, range: &RangeInclusive<f32>) -> f32 {\n    // This function is intentionally written this way to match the\n    // original ROSE engine code to behave the same when fmin > fmax\n    let fmin = *range.start();\n    let fmax = *range.end();\n\n    if fmin == fmax {\n        return fmin;\n    }\n\n    let frandom = rng.gen_range(0.0..=1.0);\n    (frandom * (fmax - fmin).abs()) + fmin\n}\n\nfn apply_timestep(\n    particle_sequence: &mut ParticleSequence,\n    particle_index: usize,\n    timestep: f32,\n) -> bool {\n    let particle = &mut particle_sequence.particles[particle_index];\n\n    particle.age += timestep;\n    if particle.age >= particle.life {\n        return false;\n    }\n\n    particle.keyframe_timer += timestep;\n\n    particle.position += particle.velocity * timestep;\n\n    particle.rotation += particle.rotation_step * timestep;\n    while particle.rotation > 360.0 {\n        particle.rotation -= 360.0;\n    }\n\n    particle.size += particle.size_step * timestep;\n    particle.color += particle.color_step * timestep;\n    particle.velocity += particle.velocity_step * timestep;\n    particle.texture_atlas_index += particle.texture_atlas_index_step * timestep;\n\n    true\n}\n\nfn apply_keyframes<R: Rng>(\n    rng: &mut R,\n    particle_sequence: &mut ParticleSequence,\n    particle_index: usize,\n) {\n    let keyframe_timer = particle_sequence.particles[particle_index].keyframe_timer;\n    let next_keyframe_index = particle_sequence.particles[particle_index].next_keyframe_index;\n\n    for keyframe in particle_sequence\n       .keyframes\n       .iter()\n       .skip(next_keyframe_index)\n       .filter(|keyframe| keyframe.start_time <= keyframe_timer)\n    {\n        let next_fade_keyframe = keyframe\n           .next_fade_keyframe_index\n           .map(|fade_index| &particle_sequence.keyframes[fade_index]);\n        let particle = &mut particle_sequence.particles[particle_index];\n\n        match &keyframe.data {\n            PtlKeyframeData::SizeXY(x_value_range, y_value_range) => {\n                if!keyframe.fade {\n                    particle.size.x = rng_gen_range(rng, x_value_range);\n                    particle.size.y = rng_gen_range(rng, y_value_range);\n                }\n\n                if let Some(next_fade_keyframe) = next_fade_keyframe {\n                    if let PtlKeyframeData::SizeXY(next_x_value_range, next_y_value_range) =\n                        &next_fade_keyframe.data\n                    {\n                        let dt = next_fade_keyframe.start_time - keyframe.start_time;\n                        let next_x = rng_gen_range(rng, next_x_value_range);\n                        let next_y = rng_gen_range(rng, next_y_value_range);\n                        particle.size_step.x = (next_x - particle.size.x) / dt;\n                        particle.size_step.y = (next_y - particle.size.y) / dt;\n                    }\n                }\n            }\n            PtlKeyframeData::Timer(value_range) => {\n                // Update the timer and next keyframe index, then return so next frame can handle applying events\n                particle.keyframe_timer = rng_gen_range(rng, value_range);\n                particle.next_keyframe_index = particle_sequence\n                   .keyframes\n                   .iter()\n                   .filter(|keyframe| keyframe.start_time <= particle.keyframe_timer)\n                   .count();\n                return;\n            }\n            PtlKeyframeData::Red(value_range) => {\n                if!keyframe.fade {\n                    particle.color.x = rng_gen_range(rng, value_range);\n                }\n\n                if let Some(next_fade_keyframe) = next_fade_keyframe {\n                    if let PtlKeyframeData::Red(next_value_range) = &next_fade_keyframe.data {\n                        let dt = next_fade_keyframe.start_time - keyframe.start_time;\n                        let next_value = rng_gen_range(rng, next_value_range);\n                        particle.color_step.x = (next_value - particle.color.x) / dt;\n                    }\n                }\n            }\n            PtlKeyframeData::Green(value_range) => {\n                if!keyframe.fade {\n                    particle.color.y = rng_gen_range(rng, value_range);\n                }\n\n                if let Some(next_fade_keyframe) = next_fade_keyframe {\n                    if let PtlKeyframeData::Green(next_value_range) = &next_fade_keyframe.data {\n                        let dt = next_fade_keyframe.start_time - keyframe.start_time;\n                        let next_value = rng_gen_range(rng, next_value_range);\n                        particle.color_step.y = (next_value - particle.color.y) / dt;\n                    }\n                }\n            }\n            PtlKeyframeData::Blue(value_range) => {\n                if!keyframe.fade {\n                    particle.color.z = rng_gen_range(rng, value_range);\n                }\n\n                if let Some(next_fade_keyframe) = next_fade_keyframe {\n                    if let PtlKeyframeData::Blue(next_value_range) = &next_fade_keyframe.data {\n                        let dt = next_fade_keyframe.start_time - keyframe.start_time;\n                        let next_value = rng_gen_range(rng, next_value_range);\n                        particle.color_step.z = (next_value - particle.color.z) / dt;\n                    }\n                }\n            }\n            PtlKeyframeData::Alpha(value_range) => {\n                if!keyframe.fade {\n                    particle.color.w = rng_gen_range(rng, value_range);\n                }\n\n                if let Some(next_fade_keyframe) = next_fade_keyframe {\n                    if let PtlKeyframeData::Alpha(next_value_range) = &next_fade_keyframe.data {\n                        let dt = next_fade_keyframe.start_time - keyframe.start_time;\n                        let next_value = rng_gen_range(rng, next_value_range);\n                        particle.color_step.w = (next_value - particle.color.w) / dt;\n                    }\n                }\n            }\n            PtlKeyframeData::ColourRGBA(red_range, green_range, blue_range, alpha_range) => {\n                if!keyframe.fade {\n                    particle.color.x = rng_gen_range(rng, red_range);\n                    particle.color.y = rng_gen_range(rng, green_range);\n                    particle.color.z = rng_gen_range(rng, blue_range);\n                    particle.color.w = rng_gen_range(rng, alpha_range);\n                }\n\n                if let Some(next_fade_keyframe) = next_fade_keyframe {\n                    if let PtlKeyframeData::ColourRGBA(\n                        next_red_range,\n                        next_green_range,\n                        next_blue_range,\n                        next_alpha_range,\n                    ) = &next_fade_keyframe.data\n                    ",
  "/**\n * @service persian\n * @pathname /persian/articles/c4vlle3q337o\n */\n\nimport runCrossPlatformTests from '../crossPlatformTests';\nimport runCanonicalTests from '../canonicalTests';\n\ndescribe('Canonical', () => {\n  describe(pageType, () => {\n    runCrossPlatformTests();\n    runCanonicalTests();\n  });\n});\n",
  "/*\n *  This file is part of FH8620 BSP for RT-Thread distribution.\n *\n *  Copyright (c) 2016 Shanghai Fullhan Microelectronics Co., Ltd.\n *  All rights reserved\n *\n *  This program is free software; you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation; either version 2 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n *\n *  You should have received a copy of the GNU General Public License along\n *  with this program; if not, write to the Free Software Foundation, Inc.,\n *  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n *  Visit http://www.fullhan.com to get contact with Fullhan.\n *\n * Change Logs:\n * Date           Author       Notes\n */\n\n/*****************************************************************************\n *  Include Section\n *  add all #include here\n *****************************************************************************/\n#include \"drivers/dma.h\"\n/*****************************************************************************\n * Define section\n * add all #define here\n *****************************************************************************/\n\n\n/****************************************************************************\n * ADT section\n *  add definition of user defined Data Type that only be used in this file  here\n ***************************************************************************/\n\n\n/******************************************************************************\n * Function prototype section\n * add prototypes for all functions called by this file,execepting those\n * declared in header file\n *****************************************************************************/\n\n\n/*****************************************************************************\n * Global variables section - Exported\n * add declaration of global variables that will be exported here\n * e.g.\n *  int8_t foo;\n ****************************************************************************/\n\n\n/*****************************************************************************\n\n *  static fun;\n *****************************************************************************/\nstatic rt_err_t rt_dma_init(struct rt_device *dev);\nstatic rt_err_t rt_dma_open(struct rt_device *dev, rt_uint16_t oflag);\nstatic rt_err_t rt_dma_close(struct rt_device *dev);\nstatic rt_err_t rt_dma_control(struct rt_device *dev,\n                                    rt_uint8_t        cmd,\n                                    void             *args);\n/*****************************************************************************\n * Global variables section - Local\n * define global variables(will be refered only in this file) here,\n * static keyword should be used to limit scope of local variable to this file\n * e.g.\n *  static uint8_t ufoo;\n *****************************************************************************/\n\n\n\n\n /* function body */\n/*****************************************************************************\n * Description:\n *      add funtion description here\n * Parameters:\n *      description for each argument, new argument starts at new line\n * Return:\n *      what does this function returned?\n *****************************************************************************/\nstatic rt_err_t rt_dma_init(struct rt_device *dev)\n{\n    struct rt_dma_device *dma;\n\n    RT_ASSERT(dev!= RT_NULL);\n    dma = (struct rt_dma_device *)dev;\n    if (dma->ops->init)\n    {\n        return (dma->ops->init(dma));\n    }\n\n    return (-RT_ENOSYS);\n}\n\nstatic rt_err_t rt_dma_open(struct rt_device *dev, rt_uint16_t oflag)\n{\n    return (RT_EOK);\n}\n\nstatic rt_err_t rt_dma_close(struct rt_device *dev)\n{\n    struct rt_dma_device *dma;\n\n    RT_ASSERT(dev!= RT_NULL);\n    dma = (struct rt_dma_device *)dev;\n\n    if (dma->ops->control(dma, RT_DEVICE_CTRL_DMA_CLOSE, RT_NULL)!= RT_EOK)\n    {\n        return (-RT_ERROR);\n    }\n\n    return (RT_EOK);\n}\n\nstatic rt_err_t rt_dma_control(struct rt_device *dev,\n                                    rt_uint8_t        cmd,\n                                    void             *args)\n{\n    struct rt_dma_device *dma;\n\n    RT_ASSERT(dev!= RT_NULL);\n    dma = (struct rt_dma_device *)dev;\n\n    //args is the private data for the soc!!\n    return (dma->ops->control(dma, cmd, args));\n}\n\n/**\n * This function register a dma device\n */\nrt_err_t rt_hw_dma_register(struct rt_dma_device *dma,\n                                 const char                *name,\n                                 rt_uint32_t                flag,\n                                 void                      *data)\n{\n    rt_uint32_t ret;\n    struct rt_device *device;\n    RT_ASSERT(dma!= RT_NULL);\n\n    device = &(dma->parent);\n\n    device->type        = RT_Device_Class_Miscellaneous;\n    device->rx_indicate = RT_NULL;\n    device->tx_complete = RT_NULL;\n\n    device->init        = rt_dma_init;\n    device->open        = rt_dma_open;\n    device->close       = rt_dma_close;\n    device->read        = RT_NULL;\n    device->write       = RT_NULL;\n    device->control     = rt_dma_control;\n    device->user_data   = data;\n\n    /* register a character device */\n    ret = rt_device_register(device, name, flag);\n    rt_kprintf(\"dma ret is :%x\\n\",ret);\n    return ret;\n}\n\n\n\n\n",
  "# HashJoin &mdash; Hash-Based Join Physical Operators\n\n`HashJoin` is an [abstraction](#contract) of [hash-based join physical operators](#implementations).\n\n## Contract\n\n### <span id=\"leftKeys\"> leftKeys\n\n```scala\nleftKeys: Seq[Expression]\n```\n\n### <span id=\"rightKeys\"> rightKeys\n\n```scala\nrightKeys: Seq[Expression]\n```\n\n### <span id=\"joinType\"> joinType\n\n```scala\njoinType: JoinType\n```\n\n### <span id=\"buildSide\"> buildSide\n\n```scala\nbuildSide: BuildSide\n```\n\n### <span id=\"condition\"> condition\n\n```scala\ncondition: Option[Expression]\n```\n\n### <span id=\"left\"> left\n\n```scala\nleft: SparkPlan\n```\n\n### <span id=\"right\"> right\n\n```scala\nright: SparkPlan\n```\n\n## Implementations\n\n* [BroadcastHashJoinExec](BroadcastHashJoinExec.md)\n* [ShuffledHashJoinExec](ShuffledHashJoinExec.md)\n\n## <span id=\"join\"> join Method\n\n```scala\njoin(\n  streamedIter: Iterator[InternalRow],\n  hashed: HashedRelation,\n  numOutputRows: SQLMetric): Iterator[InternalRow]\n```\n\n`join` branches off per [joinType](#joinType) to create a join iterator of internal rows (`Iterator[InternalRow]`) for the input `streamedIter` and `hashed`:\n\n* [innerJoin](#innerJoin) for a [InnerLike](../spark-sql-joins.md#InnerLike) join\n\n* [outerJoin](#outerJoin) for a [LeftOuter](../spark-sql-joins.md#LeftOuter) or a [RightOuter](../spark-sql-joins.md#RightOuter) join\n\n* [semiJoin](#semiJoin) for a [LeftSemi](../spark-sql-joins.md#LeftSemi) join\n\n* [antiJoin](#antiJoin) for a [LeftAnti](../spark-sql-joins.md#LeftAnti) join\n\n* [existenceJoin](#existenceJoin) for a [ExistenceJoin](../spark-sql-joins.md#ExistenceJoin) join\n\n`join` requests `TaskContext` to add a `TaskCompletionListener` to update the input avg hash probe SQL metric. The `TaskCompletionListener` is executed on a task completion (regardless of the task status: success, failure, or cancellation) and uses [getAverageProbesPerLookup](HashedRelation.md#getAverageProbesPerLookup) from the input `hashed` to set the input avg hash probe.\n\n`join` [createResultProjection](#createResultProjection).\n\nIn the end, for every row in the join iterator of internal rows `join` increments the input `numOutputRows` SQL metric and applies the result projection.\n\n`join` reports a `IllegalArgumentException` when the [joinType](#joinType) is not supported:\n\n```text\n[x] JoinType is not supported\n```\n\n`join` is used when [BroadcastHashJoinExec](BroadcastHashJoinExec.md) and [ShuffledHashJoinExec](ShuffledHashJoinExec.md) are executed.\n",
  "package grandet\n\nimport (\n\t\"bytes\"\n\t\"context\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"os\"\n\t\"path\"\n\t\"strconv\"\n\t\"strings\"\n\t\"sync\"\n\n\t\"github.com/BurntSushi/toml\"\n\t\"github.com/Shopify/sarama\"\n\t\"github.com/juju/errors\"\n\t\"github.com/ngaut/log\"\n\t\"github.com/siddontang/go-mysql/mysql\"\n\t\"github.com/siddontang/go-mysql/schema\"\n\t\"github.com/siddontang/go/ioutil2\"\n)\n\nvar errCanalClosed = errors.New(\"canal was closed\")\nvar MysqlTimeout string = \"?timeout=10000ms&writeTimeout=10000ms&readTimeout=10000ms\"\n\ntype KafkaKey struct {\n\tPos    mysql.Position\n\tAction string\n}\n\ntype EventDiscrip struct {\n\tHeader *KafkaKey\n\tEvent  interface{}\n}\n\ntype ReplicateInfo struct {\n\tMasterName string `toml:\"mastername\"`\n\tMasterPos  uint32 `toml:\"masterpos\"`\n\tOffset     int64  `toml:\"offset\"`\n}\n\nfunc LoadRepliInfo(name string) (*ReplicateInfo, error) {\n\tvar m ReplicateInfo\n\n\tf, err := os.Open(name)\n\tif err!= nil &&!os.IsNotExist(errors.Cause(err)) {\n\t\treturn nil, errors.Trace(err)\n\t} else if os.IsNotExist(errors.Cause(err)) {\n\t\tm.MasterName = \"PLEASERELOAD\"\n\t\treturn &m, nil\n\t}\n\tdefer f.Close()\n\n\t_, err = toml.DecodeReader(f, &m)\n\n\treturn &m, err\n}\n\ntype Config struct {\n\tBrokers       []string `toml:\"brokers\"`\n\tZkPath        []string `toml:\"zkpath\"`\n\tNodeName      string   `toml:\"nodename\"`\n\tTopic         string   `toml:\"topic\"`\n\tFirstLoad     bool     `toml:\"firstload\"`\n\tServerip      string   `toml:\"serverip\"`\n\tServerport    string   `toml:\"serverport\"`\n\tLogFile       string   `toml:\"logfile\"`\n\tLogLevel      string   `toml:\"log_level\"`\n\tLogDir        string   `toml:\"log_dir\"`\n\tMirrorenable  bool     `toml:\"mirror_enable\"`\n\tKeepAlivepath string   `toml:\"keepalivepath\"`\n\tReplinfopath  string   `toml:\"replinfopath\"`\n\tMasterName    string   `toml:\"mastername\"`\n\tMasterPos     uint32   `toml:\"masterpos\"`\n}\n\ntype Client struct {\n\tm    sync.Mutex\n\tcfg  *Config\n\trpl  *ReplicateInfo\n\tDump DumpSyncMetaData\n\tch   chan *EventDiscrip\n\n\trsLock     sync.Mutex\n\trsHandlers []RowsEventHandler\n\n\ttableLock sync.Mutex\n\ttables    map[string]*schema.Table\n}\n\nfunc NewClient(cfg *Config) (*Client, error) {\n\n\tc := new(Client)\n\tc.cfg = cfg\n\n\tc.ch = make(chan *EventDiscrip)\n\n\t// \u6307\u5b9alog\u7684\u7ea7\u522b\u548c\u65e5\u5fd7\u6587\u4ef6\n\tlog.SetLevelByString(cfg.LogLevel)\n\tlog.SetOutputByName(path.Join(cfg.LogDir, cfg.LogFile))\n\n\tlog.Info(\"LoadRepliInfo\\n\")\n\t// \u521d\u59cb\u5316\u5f53\u524dOFFSET\u4f4d\u7f6e\n\tif len(cfg.Replinfopath) == 0 {\n\t\tcfg.Replinfopath = \"./Repl.info\"\n\t}\n\trpl, err := LoadRepliInfo(cfg.Replinfopath)\n\tif err!= nil {\n\t\tlog.Fatalf(\"parse replicateInfo file failed(%s): %s\", cfg.Replinfopath, err)\n\t}\n\n\tc.rpl = rpl\n\n\tif c.rpl.MasterName!= \"PLEASERELOAD\" {\n\t\treturn c, nil\n\t}\n\n\t// \u5224\u65ad\u662f\u5426\u4e0d\u843d\u5730\uff0c\u5e76\u4e14\u6ca1\u6709Repl\u6587\u4ef6\uff0c\u4e14\u6709\u5916\u90e8\u53c2\u6570\u5f55\u5165\n\tif rpl.MasterName == \"PLEASERELOAD\" &&!cfg.FirstLoad {\n\t\tif len(cfg.MasterName) == 0 || cfg.MasterPos == 0 {\n\t\t\tlog.Error(\"When FirstLoad false,and Have not Repl.info,Your MasterName and MasterPos is Wrong!\")\n\t\t\treturn nil, errors.New(\"Wrong MasterName or MasterPos\")\n\t\t}\n\t}\n\n\t// \u5224\u65ad\u662f\u5426\u4e0d\u843d\u5730\uff0c\u5e76\u4e14\u6ca1\u6709Repl\u6587\u4ef6\uff0c\u4e14\u6709\u5916\u90e8\u53c2\u6570\u5f55\u5165\n\tif rpl.MasterName == \"PLEASERELOAD\" &&!cfg.FirstLoad {\n\t\tlog.Info(\"GetOffset while Start by MasterName and Master Pos \\n\")\n\t\toffsetNew, err := GetOffset(cfg)\n\t\tif err!= nil {\n\t\t\tlog.Error(err)\n\t\t\treturn nil, errors.New(\"Can Not Get Offset by Configuration\")\n\t\t}\n\n\t\tc.rpl = &ReplicateInfo{MasterName: cfg.MasterName, MasterPos: cfg.MasterPos, Offset: offsetNew}\n\t\treturn c, nil\n\t}\n\n\tlog.Info(\"Get Zk Message\\n\")\n\t// \u83b7\u53d6ZK\u7684\u4fe1\u606f\n\tinitPath := \"/Databus\"\n\tzkConn, connErr := ZkConnection(cfg.ZkPath, initPath)\n\tif connErr!= nil {\n\t\tpanic(connErr)\n\t}\n\tdefer zkConn.Close()\n\n\tvalue, _ := zkConn.Get(cfg.NodeName + \"/\" + cfg.Topic)\n\tzkDumpMetadata, err := DumpsyncMetaDataDecode(value)\n\tif err!= nil {\n\t\tpanic(err)\n\t}\n\n\tc.Dump = zkDumpMetadata\n\tfmt.Printf(\"c.Dump is %v\", c.Dump)\n\n\tlog.Infof(\"ZK MESSAGE: Offset is %d, Dumpfile is %s \\n\", zkDumpMetadata.Offset, zkDumpMetadata.Dumpfile)\n\n\tlog.Info(\"Get KeepAliveNode \\n\")\n\t// \u83b7\u53d6Server\u7684KeepAliveNode\u76d1\u542c\u4fe1\u606f\n\tif cfg.Mirrorenable {\n\t\tok, _ := checkMasterAliveClient(cfg)\n\t\tif!ok {\n\t\t\tlog.Error(\"In cluster mode,can not get Master ip/port from zk\")\n\t\t}\n\t\tlog.Infof(\"Get Master IP %s, Port %s\", cfg.Serverip, cfg.Serverport)\n\t}\n\n\treturn c, nil\n}\n\nfunc (c *Client) ClientStart() {\n\tgo c.start()\n}\n\nfunc (c *Client) start() {\n\t// Dump\u6570\u636e\u83b7\u53d6\u542f\u52a8\n\tc.getDump()\n\t// \u83b7\u53d6KAFKA\u4e2dBinlogEvent\u6570\u636e\n\tc.getKafka()\n}\n\nfunc (c *Client) getDump() {\n\n\t// \u83b7\u53d6\u6587\u4ef6\u6570\u636e\n\tif c.cfg.FirstLoad && c.rpl.MasterName == \"PLEASERELOAD\" {\n\t\tlog.Info(\"Start Get Dump Rows!\\n\")\n\t\t// \u83b7\u53d6\u6587\u4ef6\u6570\u636e\n\t\tc.NewFileCapture(c.cfg.Serverip, c.cfg.Serverport, c.Dump.Dumpfile)\n\t\tc.rpl.MasterName = c.Dump.Name\n\t\tc.rpl.MasterPos = c.Dump.Pos\n\t\tc.rpl.Offset = c.Dump.Offset\n\t\tSaveRpl(c.cfg.Replinfopath, c.rpl)\n\t}\n}\n\nfunc (c *Client) getKafka() {\n\n\tlog.Info(\"Start Get Kafka Rows and Query!\\n\")\n\n\tconfig := sarama.NewConfig()\n\tconfig.Consumer.Return.Errors = true\n\n\t// Create new consumer\n\tmaster, err := sarama.NewConsumer(c.cfg.Brokers, config)\n\tif err!= nil {\n\t\tpanic(err)\n\t}\n\n\tconsumer, err := master.ConsumePartition(c.cfg.Topic, 0, c.rpl.Offset)\n\tif err!= nil {\n\t\tpanic",
  "import { storiesOf } from '@storybook/svelte';\n\nimport BasicMenuStory from './BasicMenuStory.svelte';\nimport FloatingMenuStory from './FloatingMenuStory.svelte';\nimport MenuButtonStory from './MenuButtonStory.svelte';\n\nimport '../../../public/global.css';\nimport '../../glean-design-stories.css';\n\nstoriesOf('UX Components|Menu', module)\n .add('Basic Menus', () => ({\n    Component: BasicMenuStory,\n  })).add('Floating Menus', () => ({\n    Component: FloatingMenuStory,\n  }))\n .add('Menu Button', () => ({\n    Component: MenuButtonStory,\n  }));\n",
  "<!DOCTYPE html><html lang='fr' class='normalFont' data-direction='ltr' data-theme='dark' data-style='1'><head><meta charset='utf-8'/><meta http-equiv='X-UA-Compatible' content='IE=edge'/><meta name='viewport' content='width=device-width,initial-scale=1'/><link rel='apple-touch-icon' sizes='180x180' href='images/icons/apple-touch-icon.png'/><link rel='icon' type='image/png' sizes='32x32' href='./favicon-32x32.png'/><link rel='icon' type='image/png' sizes='16x16' href='./favicon-16x16.png'/><link rel='manifest' href='manifest.json'/><link rel='mask-icon' href='safari-pinned-tab.svg' color='#0078d7'/><meta name='msapplication-TileColor' content='#0078d7'/><meta name='msapplication-TileImage' content='images/icons/mstile-144x144.png'/><meta name='msapplication-square70x70logo' content='images/icons/mstile-70x70.png'/><meta name='msapplication-square150x150logo' content='images/icons/mstile-150x150.png'/><meta name='msapplication-wide310x150logo' content='images/icons/mstile-310x150.png'/><meta name='msapplication-square310x310logo' content='images/icons/mstile-310x310.png'/><meta name='theme-color' content='#003c6c'/><meta name='google' content='notranslate'/><meta name='robots' content='index,follow'/><meta name='format-detection' content='telephone=no'/><meta name='mobile-web-app-capable' content='yes'/><meta name='apple-mobile-web-app-capable' content='yes'/><meta name='author' content='Naveen CS'/><meta name='twitter:card' content='summary_large_image'/><meta name='twitter:site' content='@periodictableio'/><meta property='og:site_name' content='Periodic-Table.io'/><meta property='og:type' content='website'/><meta name='keywords' content='Argon, Tableau P\u00e9riodique, chemical, \u00e9l\u00e9ments, interactive, PWA, Propri\u00e9t\u00e9s, Applications, Histoire, Isotopes, Configuration \u00e9lectronique, \u00c9lectrons par couche, name origin, images, hazards, diagram, chemistry, information' /><meta name='description' content='Argon - Properties, history, name origin, facts, applications, isotopes, electronic configuation, crystal structure, hazards and more; Interactive periodic table of the chemical elements.' /><meta property='og:description' content='Argon - Properties, history, name origin, facts, applications, isotopes, electronic configuation, crystal structure, hazards and more; Interactive periodic table of the chemical elements.' /><meta name='twitter:description' content='Argon - Properties, history, name origin, facts, applications, isotopes, electronic configuation, crystal structure, hazards and more; Interactive periodic table of the chemical elements.' /><meta property='og:title' content='Argon - Tableau P\u00e9riodique' /><meta name='twitter:title' content='Argon - Tableau P\u00e9riodique' /><title id='homeTitle'>Argon - Tableau P\u00e9riodique</title><meta property='og:image' content='https://periodic-table.io/images/og-images/fr/element-18.png' /><meta name='twitter:image' content='https://periodic-table.io/images/og-images/fr/element-18.png' /><meta name='twitter:image:src' content='https://periodic-table.io/images/og-images/fr/element-18.png' /><meta property='og:url' content='https://fr.periodic-table.io/element-18' /><link rel='canonical' href='https://fr.periodic-table.io/element-18' /><link rel='alternate' hreflang='en' href='https://periodic-table.io/element-18'/><link rel='alternate' hreflang='en-gb' href='https://en-gb.periodic-table.io/element-18'/><link rel='alternate' hreflang='af' href='https://af.periodic-table.io/element-18'/><link rel='alternate' hreflang='id' href='https://id.periodic-table.io/element-18'/><link rel='alternate' hreflang='ms' href='https://ms.periodic-table.io/element-18'/><link rel='alternate' hreflang='ca' href='https://ca.periodic-table.io/element-18'/><link rel='alternate' hreflang='cs' href='https://cs.periodic-table.io/element-18'/><link rel='alternate' hreflang='da' href='https://da.periodic-table.io/element-18'/><link rel='alternate' hreflang='de' href='https://de.periodic-table.io/element-18'/><link rel='alternate' hreflang='es' href='https://es.periodic-table.io/element-18'/><link rel='alternate' hreflang='fr' href='https://fr.periodic-table.io/element-18'/><link rel='alternate' hreflang='hr' href='https://hr.periodic-table.io/element-18'/><link rel='alternate' hreflang='it' href='https://it.periodic-table.io/element-18'/><link rel='alternate' hreflang='hu' href='https://hu.periodic-table.io/element-18'/><link rel='alternate' hreflang='nl' href='https://nl.periodic-table.io/element-18'/><link rel='alternate' hreflang='nb-no' href='https://nb-no.periodic-table.io/element-18'/><link rel='alternate' hreflang='nn-no' href='https://nn-no.periodic-table.io/element-18'/><link rel='alternate' hreflang='pl' href='https://pl.periodic-table.io/element-18'/><link rel='alternate' hreflang='pt' href='https://pt.periodic-table.io/element-18'/><link rel='alternate' hreflang='ro' href='https://ro.periodic-table.io/element-18'/><link rel='alternate' hreflang='sk' href='https://sk.periodic-table.io/element-18'/><link rel='alternate' hreflang='sl' href='https://sl.periodic-table.io/element-18'/><link rel='alternate' hreflang='fi' href='https://fi.periodic-table.io/element-18'/><link rel='alternate' hreflang='sv' href='https://sv.periodic-table.io/element-18'/><link rel='alternate' hreflang='vi' href='https://vi.periodic-table.io/element-18'/><link rel='alternate' hreflang='tr' href='https://tr.periodic-table.io/element-18'/><link rel='alternate' hreflang='el' href='https://el.periodic-table.io/element-18'/><link rel='alternate' hreflang='bg' href='https://bg.periodic-table.io/element-18'/><link rel='alternate' hreflang='mk' href='https://mk.periodic-table.io/element-18'/><link rel='alternate' hreflang='ru' href='https://ru.periodic-table.io/element-18'/><link rel='alternate' hreflang='sr' href='https://sr.periodic-table.io/element-18'/><link rel='alternate' hreflang='uk' href='https://uk.periodic-table.io/element-18'/><link rel='alternate' hreflang='hy' href='https://hy.periodic-table.io/element-18'/><link rel='alternate' hreflang='he' href='https://he.periodic-table.io/element-18'/><link rel='alternate' hreflang='ar' href='https://ar.periodic-table.io/element-18'/><link rel='alternate' hreflang='fa' href='https://fa.periodic-table.io/element-18'/><link rel='alternate' hreflang='hi' href='https://hi.periodic-table.io/element-18'/><link rel='alternate' hreflang='th' href='https://th.periodic-table.io/element-18'/><link rel='alternate' hreflang='ja' href='https://ja.periodic-table.io/element",
  "import * as urlJoin from \"url-join\";\nimport { productPath } from \"../../urls\";\n\nexport const productRemovePath = (id: string) =>\n  urlJoin(productPath(id), \"remove\");\nexport const productRemoveUrl = (id: string) =>\n  productRemovePath(encodeURIComponent(id));\n",
  "SET SQL_MODE = \"NO_AUTO_VALUE_ON_ZERO\";\nSET time_zone = \"+00:00\";\n\nCREATE TABLE `reg_entries` (\n  `id` int(11) NOT NULL,\n  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  `updated` timestamp NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,\n  `email` varchar(100) NOT NULL,\n  `firstname` varchar(25) NOT NULL,\n  `lastname` varchar(50) NOT NULL,\n  `study` varchar(100) NOT NULL,\n  `matrikel` int(5) NOT NULL,\n  `semester` int(11) NOT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\n-- --------------------------------------------------------\n\nCREATE TABLE `reg_entries_to_courses` (\n  `entry_id` int(11) NOT NULL,\n  `course_id` int(11) NOT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;\n\n-- --------------------------------------------------------\n\nCREATE TABLE `reg_lists` (\n  `id` int(11) NOT NULL,\n  `name` varchar(150) NOT NULL,\n  `start_date` datetime DEFAULT NULL,\n  `end_date` datetime DEFAULT NULL,\n  `slug` varchar(160) NOT NULL,\n  `visible` tinyint(1) NOT NULL DEFAULT '1',\n  `public` tinyint(1) NOT NULL DEFAULT '1',\n  `matrikel` tinyint(4) NOT NULL DEFAULT '0',\n  `description` text NOT NULL,\n  `dozent` varchar(50) NOT NULL,\n  `max_limit` int(3) NOT NULL DEFAULT '0',\n  `dozent_url` varchar(300) DEFAULT NULL,\n  `study` varchar(300) NOT NULL,\n  `updated` timestamp NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\n-- --------------------------------------------------------\n\nCREATE TABLE `reg_members` (\n  `memberID` int(11) UNSIGNED NOT NULL,\n  `username` varchar(255) DEFAULT NULL,\n  `password` varchar(255) DEFAULT NULL,\n  `email` varchar(255) DEFAULT NULL,\n  `addedDate` timestamp NULL DEFAULT CURRENT_TIMESTAMP,\n  `last_login` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',\n  `attempts` int(1) NOT NULL DEFAULT '0'\n) ENGINE=InnoDB DEFAULT CHARSET=latin1;\n\nINSERT INTO `reg_members` ( `username`, `password`, `email`,  `last_login`, `attempts`) VALUES\n( 'demo', '$2y$10$uJjZZN7yEf85Eso.A.H2deUiDK1k80TkEIFEJTKcYd/LWi0lvEx46', '', '0000-00-00 00:00:00', 0);\n\nALTER TABLE `reg_entries`\n  ADD PRIMARY KEY (`id`),\n  ADD UNIQUE KEY `id` (`id`);\n\nALTER TABLE `reg_entries_to_courses`\n  ADD PRIMARY KEY (`entry_id`,`course_id`);\n\nALTER TABLE `reg_lists`\n  ADD PRIMARY KEY (`id`),\n  ADD UNIQUE KEY `name` (`name`),\n  ADD UNIQUE KEY `safe-title` (`slug`);\n\nALTER TABLE `reg_members`\n  ADD PRIMARY KEY (`memberID`);\n\nALTER TABLE `reg_members`\n  MODIFY `memberID` int(11) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=1;",
  "<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass CreateCustomersTable extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::create('customers', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('jbk')->default('/');\n            $table->string('konzola')->default('/');\n            $table->string('opstina')->default('/');\n            $table->string('address')->default('/');\n            $table->string('name')->default('No Name');\n            $table->string('phone_number')->default('00000000000');\n            $table->integer('number_of_rent')->default(0);\n            $table->decimal('money_spent')->default(0);\n            $table->string('comment')->default('/');\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::dropIfExists('customers');\n    }\n}\n",
  "package testesex4;\r\n\r\nimport static org.junit.jupiter.api.Assertions.assertEquals;\r\n\r\nimport org.junit.jupiter.api.Test;\r\n\r\nimport arranjo.ArrayIndexList;\r\nimport metodo_ex4b.B04;\r\n\r\nclass Ex_04_b {\r\n\tObject o;\r\n\tArrayIndexList<Integer> arranjo = new ArrayIndexList<Integer>();\r\n\r\n\t@Test\r\n\tvoid invertearranjoPilhaLSE() {\r\n\t\t// Cria e preenche arranjo\r\n\t\tfor (int i = 0; i < 4; i++) {\r\n\t\t\tarranjo.add(i, i + 1);\r\n\t\t}\r\n\t\t// Usa invertearranjo para inverter e realiza teste\r\n\t\tassertEquals(\"(4, 3, 2, 1)\", B04.invertearranjo(arranjo).toString());\r\n\t}\r\n\r\n}\r\n",
  "# \u4e0d\u53ef\u7528\n\n- order: 1\n\ncheckbox \u4e0d\u53ef\u7528\n\n---\n\n````jsx\nvar Checkbox = antd.Checkbox;\nvar container = document.getElementById('components-checkbox-demo-disable');\n\nReact.render(\n<ul>\n  <li>\n    <Checkbox defaultChecked={false} disabled={true} label={\"checkbox\"} label={\"\u4e0d\u53ef\u7528\"}/>\n  </li>\n  <li>\n    <Checkbox defaultChecked={true} disabled={true} label={\"checkbox\"} label={\"\u4e0d\u53ef\u7528\"}/>\n  </li>\n</ul>\n, container);\n````\n",
  "<!DOCTYPE html>\n<html lang='en'>\n<head>\n <title>masking-path-03-b-manual.svg</title>\n <meta charset='utf-8'>\n</head>\n<body>\n <h1>Source SVG: masking-path-03-b-manual.svg</h1>\n<svg version=\"1.1\" baseProfile=\"basic\" id=\"svg-root\"\n  width=\"100%\" height=\"100%\" viewBox=\"0 0 480 360\"\n  xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n  <!--======================================================================-->\n  <!--=  SVG 1.1 2nd Edition Test Case                                     =-->\n  <!--======================================================================-->\n  <!--=  Copyright 2009 World Wide Web Consortium, (Massachusetts          =-->\n  <!--=  Institute of Technology, European Research Consortium for         =-->\n  <!--=  Informatics and Mathematics (ERCIM), Keio University).            =-->\n  <!--=  All Rights Reserved.                                              =-->\n  <!--=  See http://www.w3.org/Consortium/Legal/.                          =-->\n  <!--======================================================================-->\n  \n  <title id=\"test-title\">$RCSfile: masking-path-03-b.svg,v $</title>\n  <defs>\n    <font-face font-family=\"SVGFreeSansASCII\" unicode-range=\"U+0-7F\">\n      <font-face-src>\n        <font-face-uri xlink:href=\"../resources/SVGFreeSans.svg#ascii\"/>\n      </font-face-src>\n    </font-face>\n  </defs>\n  <g id=\"test-body-content\" font-family=\"SVGFreeSansASCII,sans-serif\" font-size=\"18\">\n    <g shape-rendering=\"geometricPrecision\">\n      <!--text font-size=\"18\" text-anchor=\"middle\" x=\"240\" y=\"70\">Test 'overflow'/'clip' on outermost and inner'svg' elements</text-->\n      <text font-size=\"18\" x=\"10\" y=\"70\">Test 'overflow'/'clip' on outermost and inner'svg' elements</text>\n      <!-- Test initial value for 'overflow' property (i.e., hidden)\n       on outermost'svg' -->\n      <g font-size=\"48\" stroke-width=\"2\">\n        <g transform=\"translate(115,-20)\">\n          <rect width=\"250\" height=\"60\" fill=\"#ccccff\" stroke=\"#ff8888\"/>\n          <text x=\"15\" y=\"45\">Outer Clip</text>\n        </g>\n        <g transform=\"translate(-175,150)\">\n          <rect width=\"250\" height=\"60\" fill=\"#ccccff\" stroke=\"#ff8888\"/>\n          <text x=\"15\" y=\"45\">Outer Clip</text>\n        </g>\n        <g transform=\"translate(405,150)\">\n          <rect width=\"250\" height=\"60\" fill=\"#ccccff\" stroke=\"#ff8888\"/>\n          <text x=\"15\" y=\"45\">Outer Clip</text>\n        </g>\n        <g transform=\"translate(115,330)\">\n          <rect width=\"250\" height=\"60\" fill=\"#ccccff\" stroke=\"#ff8888\"/>\n          <text x=\"15\" y=\"45\">Outer Clip</text>\n        </g>\n      </g>\n      <!-- Test initial value for 'overflow' property (i.e., hidden)\n       on inner'svg' -->\n      <rect x=\"115\" y=\"100\" width=\"250\" height=\"160\" fill=\"none\" stroke=\"#006600\" stroke-width=\"5\"/>\n      <svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"115\" y=\"100\" width=\"250\" height=\"160\">\n        <g font-size=\"32\" stroke-width=\"2\">\n          <g transform=\"translate(50,-15)\">\n            <rect width=\"150\" height=\"35\" fill=\"#ffaaaa\" stroke=\"#6666ff\"/>\n            <text x=\"6\" y=\"26\">Inner Clip</text>\n          </g>\n          <g transform=\"translate(-50,62.5)\">\n            <rect width=\"150\" height=\"35\" fill=\"#ffaaaa\" stroke=\"#6666ff\"/>\n            <text x=\"6\" y=\"26\">Inner Clip</text>\n          </g>\n          <g transform=\"translate(150,62.5)\">\n            <rect width=\"150\" height=\"35\" fill=\"#ffaaaa\" stroke=\"#6666ff\"/>\n            <text x=\"6\" y=\"26\">Inner Clip</text>\n          </g>\n          <g transform=\"translate(50,140)\">\n            <rect width=\"150\" height=\"35\" fill=\"#ffaaaa\" stroke=\"#6666ff\"/>\n            <text x=\"6\" y=\"26\">Inner Clip</text>\n          </g>\n        </g>\n      </svg>\n    </g>\n  </g>\n  <g font-family=\"SVGFreeSansASCII,sans-serif\" font-size=\"32\">\n    <text id=\"revision\" x=\"10\" y=\"340\" stroke=\"none\" fill=\"black\">$Revision: 1.7 $</text>\n  </g>\n  <rect id=\"test-frame\" x=\"1\" y=\"1\" width=\"478\" height=\"358\" fill=\"none\" stroke=\"#000000\"/>\n  <!-- comment out this watermark once the test is approved -->\n  <!--<g id=\"draft-watermark\">\n    <rect x=\"1\" y=\"1\" width=\"478\" height=\"20\" fill=\"red\" stroke=\"black\" stroke-width=\"1\"/>\n    <text font-family=\"SVGFreeSansASCII,sans-serif\" font-weight=\"bold\" font-size=\"20\" x=\"240\"\n      text-anchor=\"middle\" y=\"18\" stroke-width=\"0.5\" stroke=\"black\" fill=\"white\">DRAFT</text>\n  </g>-->\n</svg>\n</body>\n</html>\n",
  "# hercules_ci_agent_nixos Terraform module\n\nThis module deploys a suitable NixOS configuration onto a system that runs NixOS.\n\n\n",
  "import React from \"react\";\nimport { Col, Container, Row, Footer } from \"mdbreact\";\n\nclass FooterPage extends React.Component {\n  render() {\n    return (\n      <Footer color=\"mdb-color\" className=\"font-small lighten-3 pt-4 mt-4\">\n        <Container className=\"text-center text-md-left\">\n          <Row className=\"my-4\">\n           \n            <hr className=\"clearfix w-100 d-md-none\" />\n            <Col md=\"2\" lg=\"2\" className=\"ml-auto\">\n              <h5 className=\"text-uppercase mb-4 font-weight-bold\">About</h5>\n              <ul className=\"list-unstyled\">\n                <p>\n                  <a href=\"#!\">PROJECTS</a>\n                </p>\n                <p>\n                  <a href=\"#!\">ABOUT US</a>\n                </p>\n                <p>\n                  <a href=\"#!\">BLOG</a>\n                </p>\n                <p>\n                  <a href=\"#!\">AWARDS</a>\n                </p>\n              </ul>\n            </Col>\n            <hr className=\"clearfix w-100 d-md-none\" />\n            <Col md=\"5\" lg=\"3\">\n              <h5 className=\"text-uppercase mb-4 font-weight-bold\">Address</h5>\n              <p>\n                <i className=\"fa fa-home mr-3\" /> 38 Av Franklin roosevelt 77210\n                Avon\n              </p>\n              <p>\n                <i className=\"fa fa-envelope mr-3\" />{\" \"}\n                nadege.tchuindem.pro@gmail.com\n              </p>\n              <p>\n                <i className=\"fa fa-phone mr-3\" /> + 0751626384\n              </p>\n            </Col>\n            <hr className=\"clearfix w-100 d-md-none\" />\n            <Col md=\"2\" lg=\"2\" className=\"text-center\">\n              <h5 className=\"text-uppercase mb-4 font-weight-bold\">About</h5>\n              <div className=\"mt-2 \">\n                <a type=\"button\" className=\"btn-floating btn-small btn-fb\">\n                  <i className=\"fa fa-facebook\" />\n                </a>\n                <a type=\"button\" className=\"btn-floating btn-small btn-tw\">\n                  <i className=\"fa fa-twitter\" />\n                </a>\n                <a type=\"button\" className=\"btn-floating btn-small btn-gplus\">\n                  <i className=\"fa fa-google-plus\" />\n                </a>\n                <a\n                  type=\"button\"\n                  className=\"btn-floating btn-small btn-dribbble\"\n                >\n                  <i className=\"fa fa-dribbble\" />\n                </a>\n              </div>\n            </Col>\n            <hr className=\"clearfix w-100 d-md-none\" />\n          </Row>\n        </Container>\n        <div className=\"footer-copyright text-center\">\n          <Container fluid>\n            &copy; {new Date().getFullYear()} Copyright:{\" \"}\n            <a href=\"#\"> tots-consulting.business.site</a>\n          </Container>\n        </div>\n      </Footer>\n    );\n  }\n}\n\nexport default FooterPage;\n",
  "# pip install psycopg2\n\nimport configparser\nimport psycopg2\nimport sys\n\n\nuser = None\npassword = None\nhost_ip = None\ndbname = None\nport = None\ndata_check_minute = 20 # \uc13c\uc11c \ub370\uc774\ud130 \uc218\uc9d1 \ud655\uc778 \uae30\uc900 \uc2dc\uac04 (\ubd84)\n\n# \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc5f0\uacb0 \uc815\ubcf4 \uc77d\uc5b4\uc624\uae30\nconfig = configparser.ConfigParser()\nconfig.read('db/mariadb/postgres.ini', encoding=\"UTF-8\")\n\ndata_check_minute = config.get('OPTION', 'data_check_minute', fallback = data_check_minute)\n\nif 'DB' in config: # check 'DB' section\n\t# don't care : 'DB' section or db info option not exists, default value = None\n\tuser = config.get('DB', 'user', fallback = None) \n\tpassword = config.get('DB', 'password', fallback = None) \n\thost_ip = config.get('DB', 'host_ip', fallback = None) \n\tdbname = config.get('DB', 'dbname', fallback = None) \n\tport = config.get('DB', 'port', fallback = None) \nelse:\n\tprint(f'Error: postgres.ini has no DB section!')\n\tsys.exit(1)\n\n# \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc5f0\uacb0 \uc815\ubcf4 \ub204\ub77d \ud655\uc778\nif user == None or password == None or host_ip == None or dbname == None or port == None:\n\tprint(f'Error: postgres.ini has no DB info option!')\n\tsys.exit(2)\n\nconnection_string = \"dbname={dbname} user={user} host={host} password={password} port={port}\"\\\n\t\t\t\t\t.format(dbname=dbname,\n\t\t\t\t\t\t\tuser=user,\n\t\t\t\t\t\t\thost=host_ip,\n\t\t\t\t\t\t\tpassword=password,\n\t\t\t\t\t\t\tport=port)    \ntry:\n\tdbconn = psycopg2.connect(connection_string)\nexcept psycopg2.DatabaseError as e:\n\tprint(f'Error: {e}')\n\tsys.exit(2)\n\ndbcur = dbconn.cursor()\n\n# \ub370\uc774\ud130 \uc870\ud68c \ucffc\ub9ac\nquery = f\"\"\"\nSELECT\n\tmonitor_name, sensor_id, sensor_type\n\t, ( SELECT MAX(reg_dt) FROM dts_sensor_data WHERE LEFT(sensor_seq, CHAR_LENGTH(sensor_seq) - 1) = M.sensor_id )\nFROM MONITOR_ITEM AS M\nWHERE 1 = 1\n\tAND NOT EXISTS (\n\t\tSELECT\n\t\t\tLEFT(sensor_seq, CHAR_LENGTH(sensor_seq) - 1) AS sensor_id\n\t\t\t, CASE RIGHT(sensor_seq, 1) WHEN '4' THEN '4' WHEN '9' THEN '4' ELSE '0' END AS sensor_type\n\t\t\t, COUNT(*) AS data_count\n\t\tFROM dts_sensor_data\n\t\tWHERE 1 = 1\n\t\t\tAND reg_dt > CURRENT_TIMESTAMP + '-{data_check_minute} minutes'\n\t\t\tAND LEFT(sensor_seq, CHAR_LENGTH(sensor_seq) - 1) = M.sensor_id\n\t\t\tAND CASE RIGHT(sensor_seq, 1) WHEN '4' THEN '4' WHEN '9' THEN '4' ELSE '0' END = M.sensor_type\n\t\tGROUP BY LEFT(sensor_seq, CHAR_LENGTH(sensor_seq) - 1), CASE RIGHT(sensor_seq, 1) WHEN '4' THEN '4' WHEN '9' THEN '4' ELSE '0' END\n\t)\n\"\"\"\n\n# \ucffc\ub9ac \uc870\ud68c\ndbcur.execute(query)\nmsg = f\"\ucd5c\uadfc {data_check_minute}\ubd84 \ub3d9\uc548 \uc218\uc9d1\ub418\uc9c0 \uc54a\ub294 \uc13c\uc11c \ubaa9\ub85d:\\n\\n\"\ncount = 0\nwhile True:\n\trow = dbcur.fetchone()\n\tif row == None:\n\t\tbreak\n\n\tmsg += f\"{row[0]} \ucd5c\uc885 \uc218\uc9d1 \uc2dc\uac01 : {row[3]}\\n\"\n\tcount += 1\n\nif count > 1:\n\tprint(msg)\nelse:\n\tprint(f\"\ucd5c\uadfc {data_check_minute}\ubd84 \ub3d9\uc548 \uc13c\uc11c \ub370\uc774\ud130 \uc218\uc9d1 \uc815\uc0c1\")\n\t\ndbconn.close()\n",
  "<?php\n\n\nnamespace MezzoLabs\\Mezzo\\Modules\\User\\Http\\Requests;\n\n\ntrait StoresOrUpdatesUser\n{\n    protected function unsetPasswordConfirmationRules($rules) : array\n    {\n        if (isset($rules['password']))\n            $rules['password'] = str_replace(['|confirmed', 'confirmed'], '', $rules['password']);\n\n        if (isset($rules['password_confirmation']))\n            unset($rules['password_confirmation']);\n\n        return $rules;\n    }\n\n    protected function setPasswordRulesForCreate($rules) : array\n    {\n        $rules['password'] = str_replace('sometimes','required', $rules['password']);\n\n        return $rules;\n    }\n\n}",
  "#include <components/AnimationComponent.hpp>\n#include <GameEntity.hpp>\n#include <iostream>\n\nAnimationComponent::AnimationComponent(int _numberOfFrames, int _frameDuration)\n{\n    this->numberOfFrames = _numberOfFrames;\n    this->frameDuration = _frameDuration;\n    return;\n}\n\nAnimationComponent::~AnimationComponent()\n{\n    return;\n}\n\nvoid AnimationComponent::update(GameEntity& _gameEntity, double _dt)\n{\n    if (_gameEntity.components->GraphicsComponent == nullptr)\n    {\n        std::cout << \"AnimationComponent::update, Entity was built without a graphics component\" << std::endl;\n        return;\n    };\n\n    animationFrameTimer += _dt;\n\n    if (animationFrameTimer >= frameDuration)\n    {  \n        animationFrameTimer = 0;\n        if (currentFrameNumber >= (numberOfFrames - 1))\n        {\n\n            currentFrameNumber = 0;\n            _gameEntity.components->GraphicsComponent->textureRect.x = 0;\n            return;\n        };\n\n        currentFrameNumber++;\n\n        _gameEntity.components->GraphicsComponent->textureRect.x = currentFrameNumber *   _gameEntity.components->GraphicsComponent->textureRect.w;\n    };\n\n    return;\n\n}\n",
  "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>dom-repeat4</title>\n  <script src=\"../bower_components/webcomponentsjs/webcomponents.js\"></script>\n  <link rel=\"import\" href=\"../host-element2.html\">\n  <link rel=\"import\" href=\"../item-element2.html\">\n</head>\n<body>\n<div>\n  <a href=\"../index.html\">Back</a>\n</div>\n<template is=\"dom-bind\">\n  <!--setup model-->\n  <host-element2 items=\"{{itemElements}}\">\n    <item-element2 item-id=\"1\" values='[1]'></item-element2>\n    <item-element2 item-id=\"2\" values='[2]'></item-element2>\n  </host-element2>\n\n  <button on-tap=\"_reRender\">Re-Render</button>\n\n  <!--create view-->\n  <h2>itemElements</h2>\n  <template is=\"dom-repeat\" items=\"{{itemElements}}\">\n    <div>\n      <h3>itemId: <span>[[item.itemId]]</span></h3>\n      <h3>Values: <span>[[item.values]]</span></h3>\n      <h3>Values:</h3>\n      <ul>\n      <template is=\"dom-repeat\" items=\"{{item.values}}\" as=\"value\">\n        <li>[[value]]</li>\n      </template>\n      </ul>\n    </div>\n  </template>\n\n</template>\n<script>\n  var demo = document.querySelector('template[is=\"dom-bind\"]');\n  demo._reRender = function(){\n    var templates = document.querySelectorAll('template[is=\"dom-repeat\"]');\n    Array.prototype.slice.call(templates).forEach(function(t){t.render();});\n  };\n</script>\n</body>\n</html>",
  "import { AppGlobals } from './../../utility/AppGlobals';\nimport { MenuController } from '@ionic/angular';\nimport { AuthService } from './../../providers/auth.service';\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { UserCreds } from '../../providers/models/interfaces/usercreds';\n\n\n\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n  styleUrls: ['./login.scss'],\n})\nexport class LoginPage {\n  login: UserCreds = { username: '', password: '' };\n  submitted = false;\n\n  constructor(\n    public authService: AuthService,\n    public router: Router,\n    public menu: MenuController\n  ) { \n    this.menu.enable(false);\n  }\n\n  onLogin(form: NgForm) {\n    this.submitted = true;\n\n    if (form.valid) {\n    this.authService.login({ username: this.login.username, password: this.login.password}).subscribe(res => {\n      if(res === true){\n        if(AppGlobals.IsSlidingMenuVisible){\n        this.router.navigate(['chatdetails']).then(() => this.menu.enable(true));\n        }\n        else{\n          this.router.navigate(['app/chat','chatusers']).then(() => this.menu.enable(true));\n        }\n      }\n      else{\n        alert('Invalid usernam or passowrd.');\n      }\n    });\n  }\n}\n\n\n  onSignup() {\n    this.router.navigateByUrl('/signup');\n  }\n}\n",
  "<!-- Buttons to add to the header. -->\n<core-navbar-buttons end>\n    <core-context-menu>\n        <core-context-menu-item *ngIf=\"externalUrl\" [priority]=\"900\" [content]=\"'core.openinbrowser' | translate\" [href]=\"externalUrl\" [iconAction]=\"'open'\"></core-context-menu-item>\n        <core-context-menu-item *ngIf=\"description\" [priority]=\"800\" [content]=\"'core.moduleintro' | translate\" (action)=\"expandDescription()\" [iconAction]=\"'arrow-forward'\"></core-context-menu-item>\n        <core-context-menu-item *ngIf=\"loaded &&!hasOffline && isOnline\" [priority]=\"700\" [content]=\"'core.refresh' | translate\" (action)=\"doRefresh(null, $event)\" [iconAction]=\"refreshIcon\" [closeOnClick]=\"false\"></core-context-menu-item>\n        <core-context-menu-item *ngIf=\"loaded && hasOffline && isOnline\"  [priority]=\"600\" [content]=\"'core.settings.synchronizenow' | translate\" (action)=\"doRefresh(null, $event, true)\" [iconAction]=\"syncIcon\" [closeOnClick]=\"false\"></core-context-menu-item>\n        <core-context-menu-item *ngIf=\"prefetchStatusIcon\" [priority]=\"500\" [content]=\"prefetchText\" (action)=\"prefetch()\" [iconAction]=\"prefetchStatusIcon\" [closeOnClick]=\"false\"></core-context-menu-item>\n        <core-context-menu-item *ngIf=\"size\" [priority]=\"400\" [content]=\"size\" [iconDescription]=\"'cube'\" (action)=\"removeFiles()\" [iconAction]=\"'trash'\"></core-context-menu-item>\n    </core-context-menu>\n</core-navbar-buttons>\n\n<!-- Content. -->\n<core-loading [hideUntil]=\"loaded\" class=\"core-loading-center\">\n\n    <core-course-module-description [description]=\"description\" [component]=\"component\" [componentId]=\"componentId\"></core-course-module-description>\n\n    <ng-container *ngIf=\"showTabs\">\n        <core-tabs [hideUntil]=\"tabsReady\" [selectedIndex]=\"firstSelectedTab\">\n            <core-tab [title]=\"'addon.mod_feedback.overview' | translate\" (ionSelect)=\"tabChanged('overview')\">\n                <ng-template>\n                    <ng-container *ngTemplateOutlet=\"tabOverview\"></ng-container>\n                </ng-template>\n            </core-tab>\n            <core-tab [show]=\"access.canviewreports\" [title]=\"'addon.mod_feedback.analysis' | translate\" (ionSelect)=\"tabChanged('analysis')\">\n                <ng-template>\n                    <ng-container *ngTemplateOutlet=\"tabAnalysis\"></ng-container>\n                </ng-template>\n            </core-tab>\n\n            <core-tab [show]=\"!access.canviewreports\" [title]=\"'addon.mod_feedback.completed_feedbacks' | translate\" (ionSelect)=\"tabChanged('analysis')\">\n                <ng-template>\n                    <ng-container *ngTemplateOutlet=\"tabAnalysis\"></ng-container>\n                </ng-template>\n            </core-tab>\n        </core-tabs>\n    </ng-container>\n\n    <ng-container *ngIf=\"!showTabs\">\n        <ng-container *ngTemplateOutlet=\"tabOverview\"></ng-container>\n    </ng-container>\n</core-loading>\n\n\n<ng-template #basicInfo>\n    <ion-list *ngIf=\"(access.canedititems || access.canviewreports) &&!access.isempty\">\n        <ion-item text-wrap *ngIf=\"access.canedititems && (groupInfo.separateGroups || groupInfo.visibleGroups)\">\n            <ion-label id=\"addon-feedback-groupslabel\" *ngIf=\"groupInfo.separateGroups\">{{ 'core.groupsseparate' | translate }}</ion-label>\n            <ion-label id=\"addon-feedback-groupslabel\" *ngIf=\"groupInfo.visibleGroups\">{{ 'core.groupsvisible' | translate }}</ion-label>\n            <ion-select [(ngModel)]=\"group\" (ionChange)=\"setGroup(group)\" aria-labelledby=\"addon-feedback-groupslabel\" interface=\"popover\">\n                <ion-option *ngFor=\"let groupOpt of groupInfo.groups\" [value]=\"groupOpt.id\">{{groupOpt.name}}</ion-option>\n            </ion-select>\n        </ion-item>\n        <a ion-item text-wrap *ngIf=\"access.canviewreports || access.canedititems\" (click)=\"access.canviewreports && openFeature('Respondents')\" [attr.detail-none]=\"access.canviewreports? null : true\">\n            <h2>{{ 'addon.mod_feedback.completed_feedbacks' | translate }}</h2>\n            <ion-badge item-end>{{feedback.completedCount}}</ion-badge>\n        </a>\n        <a ion-item text-wrap *ngIf=\"!access.isanonymous && access.canviewreports\" (click)=\"openFeature('NonRespondents')\" detail-push>\n            <h2>{{ 'addon.mod_feedback.show_nonrespondents' | translate }}</h2>\n        </a>\n        <ion-item text-wrap *ngIf=\"access.canedititems\">\n            <h2>{{ 'addon.mod_feedback.questions' | translate }}</h2>\n            <ion-badge item-end>{{feedback.itemsCount}}</ion-badge>\n        </ion-item>\n    </ion-list>\n</ng-template>\n\n<!-- Template to render the overview. -->\n<ng-template #tabOverview>\n    <core-loading [hideUntil]=\"tabsLoaded.overview\">\n        <ng-container *ngTemplateOutlet=\"basicInfo\"></ng-container>\n\n        <!-- Feedback done in offline but not synchronized -->\n        <div class=\"core-warning-card\" icon-start *ngIf=\"hasOffline\">\n            <ion-icon name=\"warning\"></ion-icon>\n            {{ 'core.hasdatatosync' | translate: {$a: moduleName} }}\n        </div>\n\n        <div class=\"core-info-card\" icon-start *ngIf=\"access.cancomplete &&!access.isopen\">\n            <ion-icon name=\"information-circle\"></ion-icon>\n            {{ 'addon.mod_feedback.feedback_is_not_open' | translate }}\n        </div>\n\n        <div class=\"core-success-card\" *ngIf=\"access.cancomplete && access.isopen &&!access.cansubmit\">\n            <ion-icon name=\"checkmark\"></ion-icon>\n            {{ 'addon.mod_feedback.this_feedback_is_already_submitted' | translate }}\n        </div>\n\n        <ion-list *ngIf=\"access.canedititems || access.canviewreports ||!access.isempty\">\n            <ion-item text-wrap *ngIf=\"access.canedititems && overview.timeopen\">\n                <h2>{{ 'addon.mod_feedback.feedbackopen' | translate }}</h2>\n                <p>{{overview.openTimeReadable}}</p>\n            </ion-item>\n            <ion-item text-wrap *ngIf=\"access.canedititems && overview.timeclose\">\n                <h2>{{ 'addon.mod_feedback.feedbackclose' | translate }}</h2>\n                <p>{{overview.closeTimeReadable}}</p>\n            </ion-item>\n            <ion-item text-wrap *ngIf=\"access.canedititems && feedback.page_after_submit\">\n                <h2>{{ 'addon.mod_feedback.page_after_submit' | translate }}</h2>\n                <core-format-text  [component]=\"component\" [componentId]=\"componentId\" [text]=\" feedback.page_after_submit\"></core-format-text>\n            </ion-item>\n            <ng-container *ngIf=\"!access.isempty\">\n                <ion-item text-wrap>\n                    <h2>{{ 'addon.mod_feedback.mode' | translate }}</h2>\n                    <p *ngIf=\"access.isanonymous\">{{ 'addon.mod_feedback.anonymous' | translate }}</p>\n                    <p *ngIf=\"!access.isanonymous\">{{ 'addon.mod_feedback.non_anonymous' | translate }}</p>\n                </ion-item>\n                <ion",
  "import { moduleForComponent, test } from 'ember-qunit';\nimport hbs from 'htmlbars-inline-precompile';\n\nmoduleForComponent('v2/editor/show-markdown', 'Integration | Component | v2/editor/show markdown', {\n  integration: true\n});\n\ntest('it renders', function(assert) {\n\n  // Set any properties with this.set('myProperty', 'value');\n  // Handle any actions with this.on('myAction', function(val) {... });\n\n  this.render(hbs`{{v2/editor/show-markdown}}`);\n\n  assert.equal(this.$().text().trim(), '');\n\n  // Template block usage:\n  this.render(hbs`\n    {{#v2/editor/show-markdown}}\n      template block text\n    {{/v2/editor/show-markdown}}\n  `);\n\n  assert.equal(this.$().text().trim(), 'template block text');\n});\n",
  "# Shozy & Neo BG (sample 2)\nSee [usage instructions](https://github.com/jaakkopasanen/AutoEq#usage) for more options and info.\n\n### Parametric EQs\nIn case of using parametric equalizer, apply preamp of **-7.1dB** and build filters manually\nwith these parameters. The first 5 filters can be used independently.\nWhen using independent subset of filters, apply preamp of **-7.1dB**.\n\n| Type    | Fc       |    Q | Gain    |\n|:--------|:---------|:-----|:--------|\n| Peaking | 206 Hz   | 0.62 | -4.5 dB |\n| Peaking | 1732 Hz  | 1.63 | -9.9 dB |\n| Peaking | 2364 Hz  | 0.61 | 8.4 dB  |\n| Peaking | 5087 Hz  | 2.24 | 6.1 dB  |\n| Peaking | 6706 Hz  | 1.51 | -6.3 dB |\n| Peaking | 18 Hz    | 1.34 | 2.2 dB  |\n| Peaking | 3115 Hz  | 2.53 | 1.0 dB  |\n| Peaking | 3332 Hz  | 5.62 | -2.2 dB |\n| Peaking | 14427 Hz | 0.86 | 3.4 dB  |\n| Peaking | 19168 Hz | 0.49 | -7.9 dB |\n\n### Fixed Band EQs\nIn case of using fixed band (also called graphic) equalizer, apply preamp of **-7.8dB**\n(if available) and set gains manually with these parameters.\n\n| Type    | Fc       |    Q | Gain    |\n|:--------|:---------|:-----|:--------|\n| Peaking | 31 Hz    | 1.41 | 1.2 dB  |\n| Peaking | 62 Hz    | 1.41 | -0.6 dB |\n| Peaking | 125 Hz   | 1.41 | -3.0 dB |\n| Peaking | 250 Hz   | 1.41 | -3.9 dB |\n| Peaking | 500 Hz   | 1.41 | -0.6 dB |\n| Peaking | 1000 Hz  | 1.41 | 0.9 dB  |\n| Peaking | 2000 Hz  | 1.41 | -1.6 dB |\n| Peaking | 4000 Hz  | 1.41 | 8.0 dB  |\n| Peaking | 8000 Hz  | 1.41 | -3.0 dB |\n| Peaking | 16000 Hz | 1.41 | -2.5 dB |\n\n### Graphs\n![](./Shozy%20&%20Neo%20BG%20(sample%202).png)",
  "/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set ts=8 sts=2 et sw=2 tw=80: */\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n#ifndef mozilla_MemoryTelemetry_h\n#define mozilla_MemoryTelemetry_h\n\n#include \"mozilla/TimeStamp.h\"\n#include \"mozilla/Result.h\"\n#include \"nsIObserver.h\"\n#include \"nsITimer.h\"\n#include \"nsTArray.h\"\n#include \"nsWeakReference.h\"\n\n#include <functional>\n\nclass nsIEventTarget;\n\nnamespace mozilla {\n\nnamespace ipc {\nenum class ResponseRejectReason;\n}\n\n/**\n * Periodically gathers memory usage metrics after cycle collection, and\n * populates telemetry histograms with their values.\n */\nclass MemoryTelemetry final : public nsIObserver,\n                              public nsSupportsWeakReference {\n public:\n  NS_DECL_ISUPPORTS\n  NS_DECL_NSIOBSERVER\n\n  static MemoryTelemetry& Get();\n\n  nsresult GatherReports(\n      const std::function<void()>& aCompletionCallback = nullptr);\n\n  void GetUniqueSetSize(std::function<void(const int64_t&)>&& aCallback);\n\n  /**\n   * Does expensive initialization, which should happen only after startup has\n   * completed, and the event loop is idle.\n   */\n  nsresult DelayedInit();\n\n  nsresult Shutdown();\n\n private:\n  MemoryTelemetry();\n\n  ~MemoryTelemetry() = default;\n\n  void Init();\n\n  static Result<uint32_t, nsresult> GetOpenTabsCount();\n\n  class TotalMemoryGatherer final : public nsITimerCallback {\n   public:\n    NS_DECL_THREADSAFE_ISUPPORTS\n    NS_DECL_NSITIMERCALLBACK\n\n    TotalMemoryGatherer() = default;\n\n    void CollectParentSize(int64_t aResident);\n    void CollectResult(int64_t aChildUSS);\n    void OnFailure(ipc::ResponseRejectReason aReason);\n\n    void Begin(nsIEventTarget* aThreadPool);\n\n   private:\n    ~TotalMemoryGatherer() = default;\n\n    nsresult MaybeFinish();\n\n    nsCOMPtr<nsITimer> mTimeout;\n\n    nsTArray<int64_t> mChildSizes;\n\n    int64_t mTotalMemory = 0;\n    uint32_t mRemainingChildCount = 0;\n\n    bool mHaveParentSize = false;\n  };\n\n  nsCOMPtr<nsIEventTarget> mThreadPool;\n  RefPtr<TotalMemoryGatherer> mTotalMemoryGatherer;\n\n  TimeStamp mLastPoll{};\n};\n\n}  // namespace mozilla\n\n#endif  // defined mozilla_MemoryTelemetry_h\n",
  "\ufeffnamespace AdminEmpleados\n{\n    partial class Form1\n    {\n        /// <summary>\n        /// Variable del dise\u00f1ador necesaria.\n        /// </summary>\n        private System.ComponentModel.IContainer components = null;\n\n        /// <summary>\n        /// Limpiar los recursos que se est\u00e9n usando.\n        /// </summary>\n        /// <param name=\"disposing\">true si los recursos administrados se deben desechar; false en caso contrario.</param>\n        protected override void Dispose(bool disposing)\n        {\n            if (disposing && (components!= null))\n            {\n                components.Dispose();\n            }\n            base.Dispose(disposing);\n        }\n\n        #region C\u00f3digo generado por el Dise\u00f1ador de Windows Forms\n\n        /// <summary>\n        /// M\u00e9todo necesario para admitir el Dise\u00f1ador. No se puede modificar\n        /// el contenido de este m\u00e9todo con el editor de c\u00f3digo.\n        /// </summary>\n        private void InitializeComponent()\n        {\n            this.button1 = new System.Windows.Forms.Button();\n            this.button2 = new System.Windows.Forms.Button();\n            this.SuspendLayout();\n            // \n            // button1\n            // \n            this.button1.Location = new System.Drawing.Point(51, 46);\n            this.button1.Name = \"button1\";\n            this.button1.Size = new System.Drawing.Size(104, 60);\n            this.button1.TabIndex = 0;\n            this.button1.Text = \"Departamentos\";\n            this.button1.UseVisualStyleBackColor = true;\n            // \n            // button2\n            // \n            this.button2.Location = new System.Drawing.Point(203, 46);\n            this.button2.Name = \"button2\";\n            this.button2.Size = new System.Drawing.Size(104, 60);\n            this.button2.TabIndex = 1;\n            this.button2.Text = \"Empleados\";\n            this.button2.UseVisualStyleBackColor = true;\n            // \n            // Form1\n            // \n            this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);\n            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;\n            this.ClientSize = new System.Drawing.Size(357, 155);\n            this.Controls.Add(this.button2);\n            this.Controls.Add(this.button1);\n            this.Name = \"Form1\";\n            this.Text = \"Form1\";\n            this.ResumeLayout(false);\n\n        }\n\n        #endregion\n\n        private System.Windows.Forms.Button button1;\n        private System.Windows.Forms.Button button2;\n    }\n}\n\n",
  "/*\n * Generated by the Jasper component of Apache Tomcat\n * Version: Apache Tomcat/7.0.47\n * Generated at: 2018-03-07 02:31:30 UTC\n * Note: The last modified time of this file was set to\n *       the last modified time of the source file after\n *       generation to assist with modification tracking.\n */\npackage org.apache.jsp.WEB_002dINF.jsp;\n\nimport javax.servlet.*;\nimport javax.servlet.http.*;\nimport javax.servlet.jsp.*;\n\npublic final class index_jsp extends org.apache.jasper.runtime.HttpJspBase\n    implements org.apache.jasper.runtime.JspSourceDependent {\n\n  private static final javax.servlet.jsp.JspFactory _jspxFactory =\n          javax.servlet.jsp.JspFactory.getDefaultFactory();\n\n  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;\n\n  private javax.el.ExpressionFactory _el_expressionfactory;\n  private org.apache.tomcat.InstanceManager _jsp_instancemanager;\n\n  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {\n    return _jspx_dependants;\n  }\n\n  public void _jspInit() {\n    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();\n    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());\n  }\n\n  public void _jspDestroy() {\n  }\n\n  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)\n        throws java.io.IOException, javax.servlet.ServletException {\n\n    final javax.servlet.jsp.PageContext pageContext;\n    javax.servlet.http.HttpSession session = null;\n    final javax.servlet.ServletContext application;\n    final javax.servlet.ServletConfig config;\n    javax.servlet.jsp.JspWriter out = null;\n    final java.lang.Object page = this;\n    javax.servlet.jsp.JspWriter _jspx_out = null;\n    javax.servlet.jsp.PageContext _jspx_page_context = null;\n\n\n    try {\n      response.setContentType(\"text/html; charset=UTF-8\");\n      pageContext = _jspxFactory.getPageContext(this, request, response,\n      \t\t\tnull, true, 8192, true);\n      _jspx_page_context = pageContext;\n      application = pageContext.getServletContext();\n      config = pageContext.getServletConfig();\n      session = pageContext.getSession();\n      out = pageContext.getOut();\n      _jspx_out = out;\n\n      out.write(\"\\r\\n\");\n      out.write(\"<!DOCTYPE html PUBLIC \\\"-//W3C//DTD HTML 4.01 Transitional//EN\\\" \\\"http://www.w3.org/TR/html4/loose.dtd\\\">\\r\\n\");\n      out.write(\"<html>\\r\\n\");\n      out.write(\"<head>\\r\\n\");\n      out.write(\"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=UTF-8\\\">\\r\\n\");\n      out.write(\"<title>\u865a\u62df\u5b9e\u9a8c\u5ba4\u9996\u9875</title>\\r\\n\");\n      out.write(\"<link rel=\\\"stylesheet\\\" href=\\\"http://cdn.static.runoob.com/libs/bootstrap/3.3.7/css/bootstrap.min.css\\\">\\r\\n\");\n      out.write(\"<script src=\\\"http://cdn.static.runoob.com/libs/jquery/2.1.1/jquery.min.js\\\"></script>\\r\\n\");\n      out.write(\"<script src=\\\"http://cdn.static.runoob.com/libs/bootstrap/3.3.7/js/bootstrap.min.js\\\"></script>\\r\\n\");\n      out.write(\"<link rel=\\\"stylesheet\\\" href=\\\"/css/zhouyu/test1.css\\\">\\r\\n\");\n      out.write(\"</head>\\r\\n\");\n      out.write(\"<body>\\r\\n\");\n      out.write(\"\\t<div class=\\\"container\\\">\\r\\n\");\n      out.write(\"\\t\\t<div class=\\\"header\\\">\\r\\n\");\n      out.write(\"\\t\\t\\t<img src=\\\"/images/logo2.jpg\\\" alt=\\\"logo\\\" class=\\\"logo\\\">\\r\\n\");\n      out.write(\"\\t\\t\\t<h3 class=\\\"title\\\">\u7b2c\u4e00\u865a\u62df\u5b9e\u9a8c\u5ba4 The First Virtual Class --\u76f8\u5173\u865a\u62df\u5b9e\u9a8c\u8bfe\u7a0b</h3>\\r\\n\");\n      out.write(\"\\t\\t</div>\\r\\n\");\n      out.write(\"\\t</div>\\r\\n\");\n      out.write(\"<div id=\\\"myCarousel\\\" class=\\\"carousel slide\\\" style=\\\"width:100%;height:400px;\\\">\\r\\n\");\n      out.write(\"\\t<!-- \u8f6e\u64ad\uff08Carousel\uff09\u6307\u6807 -->\\r\\n\");\n      out.write(\"\\t<ol class=\\\"carousel-indicators\\\">\\r\\n\");\n      out.write(\"\\t\\t<li data-target=\\\"#myCarousel\\\" data-slide-to=\\\"0\\\" class=\\\"active\\\"></li>\\r\\n\");\n      out.write(\"\\t\\t<li data-target=\\\"#myCarousel\\\" data-slide-to=\\\"1\\\"></li>\\r\\n\");\n      out.write(\"\\t\\t<li data-target=\\\"#myCarousel\\\" data-slide-to=\\\"2\\\"></li>\\r\\n\");\n      out.write(\"\\t</ol>   \\r\\n\");\n      out.write(\"\\t<!-- \u8f6e\u64ad\uff08Carousel\uff09\u9879\u76ee -->\\r\\n\");\n      out.write(\"\\t<div class=\\\"carousel-inner\\\">\\r\\n\");\n      out.write(\"\\t\\t<div class=\\\"item active\\\">\\r\\n\");\n      out.write(\"\\t\\t\\t<img src=\\\"/images/1.jpg\\\" alt=\\\"First slide\\\" style=\\\"width:100%;height:400px;\\\">\\r\\n\");\n      out.write(\"\\t\\t</div>\\r\\n\");\n      out.write(\"\\t\\t<div class=\\\"item\\\">\\r\\n\");\n      out.write(\"\\t\\t\\t<img src=\\\"/images/2.jpg\\\" alt=\\\"Second slide\\\" style=\\\"width:100%;height:400px;\\\">\\r\\n\");\n      out.write(\"\\t\\t</div>\\r\\n\");\n      out.write(\"\\t\\t<div class=\\\"item\\\">\\r\\n\");\n      out.write(\"\\t\\t\\t<img src=\\\"/images/3.jpg\\\" alt=\\\"Third slide\\\" style=\\\"width:100%;height:400px;\\\">\\r\\n\");\n      out.write(\"\\t\\t</div>\\r\\n\");\n      out.write(\"\\t</div>\\r\\n\");\n      out.write(\"\\t<!-- \u8f6e\u64ad\uff08Carousel\uff09\u5bfc\u822a -->\\r\\n\");\n      out.write(\"\\t<a class=\\\"carousel-control left\\\" href=\\\"#myCarousel\\\" \\r\\n\");\n      out.write(\"\\t   data-slide=\\\"prev\\\"><span class=\\\"glyphicon glyphicon-chevron-left\\\"></span></a>\\r\\n\");\n      out.write(\"\\t<a class=\\\"carousel-control right\\\" href=\\\"#myCarousel\\\" \\r\\n\");\n      out.write(\"\\t   data-slide=\\\"next\\\"><span class=\\\"glyphicon glyphicon-chevron-right\\\"></span></a>\\r\\n\");\n      out.write(\"</div>   \\r\\n\");\n      out.write(\"     <div class=\\\"main\\\">\\r\\n\");\n      out.write(\"     \\r\\n\");\n      out.write(\"    <div class=\\\"container1 clearfix\\\">\\r\\n\");\n      out.write(\"       <div class=\\\"intro\\\">\\r\\n\");\n      out.write(\" \\t     <div class=\\\"hot\\\"><h1>\u70ed\u95e8\u865a\u62df\u5b9e\u9a8c\u8bfe\u7a0b\u63a8\u8350</h1>\\r\\n\");\n      out.write(\" \\t   </div>\\r\\n\");\n      out.write(\" \\t  <div class=\\\"teach \\\">\\r\\n\");\n      out.write(\" \\t\\t<a href=\\\"/physical\\\" target=\\\"_blank\\\"  \\\">\\r\\",
  "import os\nimport numpy\nimport cryspy\n\nfrom cryspy.D_functions_item_loop.function_1_calc_for_magcrystal import calc_f_mag\n\ndef test_f_mag():\n    dir = os.path.dirname(__file__)\n    f_name = os.path.join(dir, \"1.0.2_URu0.96Rh0.04Si2.mcif\")\n    globaln = cryspy.file_to_globaln(f_name)\n    mag_cif = globaln.mag_crystal_5yOhtAoR\n    \n    index_hkl = numpy.array(\n    [[1, 2, 0, 1, 0, 3, 2, 2, 4],\n     [0, 0, 0, 1, 1, 0, 0, 1, 0],\n     [1, 0, 2, 0, 1, 1, 2, 1, 0]], dtype=int)\n    space_group_symop_magn_operation = mag_cif.space_group_symop_magn_operation\n    space_group_symop_magn_centering = mag_cif.space_group_symop_magn_centering\n    cell = mag_cif.cell\n    atom_site = mag_cif.atom_site\n    try:\n        atom_site_aniso = mag_cif.atom_site_aniso\n    except AttributeError as e:\n        atom_site_aniso = None\n    atom_site_scat = mag_cif.atom_site_scat\n    atom_site_scat.load_atom_type_scat_by_atom_site(atom_site)\n    atom_site_moment = mag_cif.atom_site_moment\n    flag_derivatives = False\n    flag_only_orbital= False\n    f_mag, dder = calc_f_mag(index_hkl, space_group_symop_magn_operation,\n    space_group_symop_magn_centering, cell, atom_site,\n    atom_site_aniso, atom_site_scat, atom_site_moment,\n    flag_derivatives=flag_derivatives, flag_only_orbital=flag_only_orbital)\n\n\ndef test_refine_mcif():\n    dir = os.path.dirname(__file__)\n    f_name = os.path.join(dir, \"pd_test.rcif\")\n    rhochi = cryspy.file_to_globaln(f_name)\n    chi_sq, n_points = rhochi.calc_chi_sq()\n\ntest_f_mag()\ntest_refine_mcif()\n",
  "\ufeffusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing IdentityServer4.Models;\nusing IdentityServer4.Stores;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Options;\nusing MongoDB.Driver;\n\nnamespace Gilmond.MongoDB.IdentityServer4.IntegrationTests.Fixtures\n{\n\tpublic class CollectionProviderFixture : IDisposable\n\t{\n\t\tprivate readonly string _clientCollectionName = Guid.NewGuid().ToString(\"N\");\n\t\tprivate readonly List<Client> _clients = new List<Client>();\n\t\tprivate readonly Lazy<IServiceProvider> _provider;\n\n\t\tprivate IClientStore _clientStore;\n\n\t\tpublic CollectionProviderFixture()\n\t\t{\n\t\t\t_provider = new Lazy<IServiceProvider>(BuildServiceProvider);\n\t\t}\n\n\t\tpublic void AddClient(Client client) => _clients.Add(client);\n\n\t\tprivate IServiceProvider BuildServiceProvider()\n\t\t{\n\t\t\tvar configuration = new ConfigurationBuilder()\n\t\t\t\t.AddUserSecrets<CollectionProviderFixture>()\n\t\t\t\t.AddInMemoryCollection(GetOverridenConfiguration())\n\t\t\t\t.Build();\n\t\t\t\t\n\t\t\tvar services = new ServiceCollection();\n\t\t\tservices.AddIdentityServer().AddConfigurationStore(configuration);\n\t\t\treturn services.BuildServiceProvider();\n\t\t}\n\n\t\tprivate IEnumerable<KeyValuePair<string, string>> GetOverridenConfiguration()\n\t\t{\n\t\t\tyield return new KeyValuePair<string, string>(\"Collections:Client\", _clientCollectionName);\n\t\t}\n\n\t\tpublic IClientStore GetClientStore()\n\t\t{\n\t\t\tif (_clientStore!= null)\n\t\t\t\treturn _clientStore;\n\t\t\tif (_clients.Any())\n\t\t\t\tAddClients();\n\t\t\treturn _clientStore = _provider.Value.GetRequiredService<IClientStore>();\n\t\t}\n\n\t\tprivate void AddClients()\n\t\t{\n\t\t\tvar manager = _provider.Value.GetRequiredService<ClientManager>();\n\t\t\tforeach (var client in _clients)\n\t\t\t\tmanager.AddClientAsync(client).Wait();\n\t\t}\n\n\t\tpublic void Dispose()\n\t\t{\n\t\t\tif (!_provider.IsValueCreated) return;\n\n\t\t\tvar config = _provider.Value.GetRequiredService<IOptions<MongoDatabaseConfigurationStoreOptions>>().Value;\n\t\t\tvar client = new MongoClient(new MongoClientSettings\n\t\t\t{\n\t\t\t\tServer = new MongoServerAddress(config.Connection.Server.Host, config.Connection.Server.Port),\n\t\t\t\tCredentials = new[]\n\t\t\t\t{\n\t\t\t\t\tMongoCredential.CreateCredential(\n\t\t\t\t\t\tconfig.Connection.AuthenticationDatabaseName, \n\t\t\t\t\t\tconfig.Connection.Username,\n\t\t\t\t\t\tconfig.Connection.Password)\n\t\t\t\t}\n\t\t\t});\n\t\t\tvar database = client.GetDatabase(config.Connection.DatabaseName);\n\t\t\tdatabase.DropCollection(config.Collections.Client);\n\n\t\t\tif (_provider.Value is IDisposable disposable)\n\t\t\t\tdisposable.Dispose();\n\t\t}\n\t}\n}\n",
  "<?php\n\nnamespace gospelcenterSimpleBundle;\n\nuse Symfony\\Component\\HttpKernel\\Bundle\\Bundle;\n\nclass gospelcenterSimpleBundle extends Bundle\n{\n}\n",
  "\nexport { default as Expression } from './components/Expression';\nexport { default as SpSelect } from './components/SpSelect';\nexport { default as SelectHeaderChart } from './components/SelectHeaderChart';\nexport { default as PerfectSelectHeaderChart } from './components/PerfectSelectHeaderChart';\nexport { default as SelectHeaderTable } from './components/SelectHeaderTable';\n",
  "\ufeff// PkgCmdID.cs\n// MUST match PkgCmdID.h\n\nnamespace AlwaysAligned\n{\n    static class PkgCmdIDList\n    {\n\t\tpublic const uint AlwaysAlignedMenu = 0x100;\n\t\tpublic const uint cmdidConvertToSpaces = 0x300;\n\t\tpublic const uint cmdidConvertToElasticTabstops = 0x301;\n\t\tpublic const uint cmdidSettings = 0x302;\n\t\tpublic const uint cmdidAbout = 0x303;\n\n    };\n}",
  "import { createSlice } from \"@reduxjs/toolkit\";\nimport Route from \"../components/models/Route\";\n\n// step 3 for redux - create slices for each components \nconst RouteSlice = createSlice({\n\n    name: 'route',\n\n    initialState: {\n        RouteState: new Route(),\n        RouteList: []\n    },\n\n    reducers: {\n\n        getRouteById: (state, action) => {\n            console.log('route slice reducer');\n            state.RouteState = action.payload;\n        },\n\n        getAllRoute: (state, action) => {\n            console.log('RouteSlice reducers getAllRoute');\n            state.RouteList = action.payload;\n        },\n        deleteRouteById: (state, action) => {\n            console.log('RouteSlice reducers deleteRouteById');\n            state.RouteList = action.payload;\n        },\n        updateRoute: (state, action) => {\n            console.log('RouteSlice reducers update RouteById');\n            state.RouteList = action.payload;\n        },\n        insertRoute: (state, action) => {\n            console.log('RouteSlice reducers addRouteById');\n            state.RouteList = action.payload;\n        },\n\n        // more methods will be added \n    }\n});\n\nexport const { getRouteById, getAllRoute, deleteRouteById, updateRoute, insertRoute } = RouteSlice.actions;\n\nexport default RouteSlice.reducer;",
  "import Exceptions from \"../../src/exceptions\";\nexport function exceptionInstance() {\n    let exception = new Exceptions.Exception(\"name\", \"message\");\n    expect(exception.toString()).toBe(\"[Anslo][name] message\");\n}\n",
  "html {\n  background-color: #36505b;\n  background: url(../img/bg.jpg) no-repeat center center fixed;\n  -webkit-background-size: cover;\n  -moz-background-size: cover;\n  -o-background-size: cover;\n  background-size: cover;\n}\n\nbody {\n  background: transparent;\n  color: rgb(12, 51, 70);\n}\n\nh2 {\n  font-size: 22px;\n  padding-bottom:.4rem;\n}\n\nh3 {\n  font-size: 22px;\n  font-weight: normal;\n}\n\n.container {\n  width: 90%;\n  max-width: 800px;\n  min-height: 100vh;\n  padding-top: 2em;\n  padding-bottom: 4em;\n  margin-left: 5%;\n  background-color: rgba(246, 255, 253, 0.48);\n}\n\n.page-header {\n  margin: 0px.5em;\n}\n\n.page-header, h2 {\n  border-bottom: 1px solid rgb(96, 131, 148);\n}\n\n.col-sm-6 {\n  padding: 0px 1.5em;\n}\n\n.btn {\n  color: #deefec;\n  background-color: #256c90;\n  border-color: #4a7082;\n}\n\n.btn:hover {\n  color: #fbfbfb;\n  background-color: #4b9bc3;\n  border-color: #76a5bb;\n}\n",
  "Test\nREADME",
  "// Copyright (c) 2017-2019 The Fonero developers\n// Use of this source code is governed by an ISC\n// license that can be found in the LICENSE file.\n\npackage cockroachdb\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n\t\"strings\"\n\n\t\"github.com/fonero-project/politeia/foneroplugin\"\n\t\"github.com/fonero-project/politeia/politeiad/cache\"\n)\n\nfunc convertMDStreamFromCache(ms cache.MetadataStream) MetadataStream {\n\treturn MetadataStream{\n\t\tID:      ms.ID,\n\t\tPayload: ms.Payload,\n\t}\n}\n\nfunc convertMDStreamsFromCache(ms []cache.MetadataStream) []MetadataStream {\n\tm := make([]MetadataStream, 0, len(ms))\n\tfor _, v := range ms {\n\t\tm = append(m, convertMDStreamFromCache(v))\n\t}\n\treturn m\n}\n\nfunc convertRecordFromCache(r cache.Record, version uint64) Record {\n\tfiles := make([]File, 0, len(r.Files))\n\tfor _, f := range r.Files {\n\t\tfiles = append(files,\n\t\t\tFile{\n\t\t\t\tName:    f.Name,\n\t\t\t\tMIME:    f.MIME,\n\t\t\t\tDigest:  f.Digest,\n\t\t\t\tPayload: f.Payload,\n\t\t\t})\n\t}\n\n\treturn Record{\n\t\tKey:       r.CensorshipRecord.Token + r.Version,\n\t\tToken:     r.CensorshipRecord.Token,\n\t\tVersion:   version,\n\t\tStatus:    int(r.Status),\n\t\tTimestamp: r.Timestamp,\n\t\tMerkle:    r.CensorshipRecord.Merkle,\n\t\tSignature: r.CensorshipRecord.Signature,\n\t\tMetadata:  convertMDStreamsFromCache(r.Metadata),\n\t\tFiles:     files,\n\t}\n}\n\nfunc convertRecordToCache(r Record) cache.Record {\n\tcr := cache.CensorshipRecord{\n\t\tToken:     r.Token,\n\t\tMerkle:    r.Merkle,\n\t\tSignature: r.Signature,\n\t}\n\n\tmetadata := make([]cache.MetadataStream, 0, len(r.Metadata))\n\tfor _, ms := range r.Metadata {\n\t\tmetadata = append(metadata,\n\t\t\tcache.MetadataStream{\n\t\t\t\tID:      ms.ID,\n\t\t\t\tPayload: ms.Payload,\n\t\t\t})\n\t}\n\n\tfiles := make([]cache.File, 0, len(r.Files))\n\tfor _, f := range r.Files {\n\t\tfiles = append(files,\n\t\t\tcache.File{\n\t\t\t\tName:    f.Name,\n\t\t\t\tMIME:    f.MIME,\n\t\t\t\tDigest:  f.Digest,\n\t\t\t\tPayload: f.Payload,\n\t\t\t})\n\t}\n\n\treturn cache.Record{\n\t\tVersion:          strconv.FormatUint(r.Version, 10),\n\t\tStatus:           cache.RecordStatusT(r.Status),\n\t\tTimestamp:        r.Timestamp,\n\t\tCensorshipRecord: cr,\n\t\tMetadata:         metadata,\n\t\tFiles:            files,\n\t}\n}\n\nfunc convertNewCommentFromFonero(nc foneroplugin.NewComment, ncr foneroplugin.NewCommentReply) Comment {\n\treturn Comment{\n\t\tKey:       nc.Token + ncr.CommentID,\n\t\tToken:     nc.Token,\n\t\tParentID:  nc.ParentID,\n\t\tComment:   nc.Comment,\n\t\tSignature: nc.Signature,\n\t\tPublicKey: nc.PublicKey,\n\t\tCommentID: ncr.CommentID,\n\t\tReceipt:   ncr.Receipt,\n\t\tTimestamp: ncr.Timestamp,\n\t\tCensored:  false,\n\t}\n}\n\nfunc convertCommentFromFonero(c foneroplugin.Comment) Comment {\n\treturn Comment{\n\t\tKey:       c.Token + c.CommentID,\n\t\tToken:     c.Token,\n\t\tParentID:  c.ParentID,\n\t\tComment:   c.Comment,\n\t\tSignature: c.Signature,\n\t\tPublicKey: c.PublicKey,\n\t\tCommentID: c.CommentID,\n\t\tReceipt:   c.Receipt,\n\t\tTimestamp: c.Timestamp,\n\t\tCensored:  false,\n\t}\n}\n\nfunc convertCommentToFonero(c Comment) foneroplugin.Comment {\n\treturn foneroplugin.Comment{\n\t\tToken:       c.Token,\n\t\tParentID:    c.ParentID,\n\t\tComment:     c.Comment,\n\t\tSignature:   c.Signature,\n\t\tPublicKey:   c.PublicKey,\n\t\tCommentID:   c.CommentID,\n\t\tReceipt:     c.Receipt,\n\t\tTimestamp:   c.Timestamp,\n\t\tTotalVotes:  0,\n\t\tResultVotes: 0,\n\t\tCensored:    c.Censored,\n\t}\n}\n\nfunc convertLikeCommentFromFonero(lc foneroplugin.LikeComment) LikeComment {\n\treturn LikeComment{\n\t\tToken:     lc.Token,\n\t\tCommentID: lc.CommentID,\n\t\tAction:    lc.Action,\n\t\tSignature: lc.Signature,\n\t\tPublicKey: lc.PublicKey,\n\t}\n}\n\nfunc convertLikeCommentToFonero(lc LikeComment) foneroplugin.LikeComment {\n\treturn foneroplugin.LikeComment{\n\t\tToken:     lc.Token,\n\t\tCommentID: lc.CommentID,\n\t\tAction:    lc.Action,\n\t\tSignature: lc.Signature,\n\t\tPublicKey: lc.PublicKey,\n\t}\n}\n\nfunc convertAuthorizeVoteFromFonero(av foneroplugin.AuthorizeVote, avr foneroplugin.AuthorizeVoteReply, version uint64) AuthorizeVote {\n\treturn AuthorizeVote{\n\t\tKey:       av.Token + avr.RecordVersion,\n\t\tToken:     av.Token,\n\t\tVersion:   version,\n\t\tAction:    av.Action,\n\t\tSignature: av.Signature,\n\t\tPublicKey: av.PublicKey,\n\t\tReceipt:   avr.Receipt,\n\t\tTimestamp: avr.Timestamp,\n\t}\n}\n\nfunc convertAuthorizeVoteToFonero(av AuthorizeVote) foneroplugin.AuthorizeVote {\n\treturn foneroplugin.AuthorizeVote{\n\t\tAction:    av.Action,\n\t\tToken:     av.Token,\n\t\tSignature: av.Signature,\n\t\tPublicKey: av.PublicKey,\n\t\tReceipt:   av.Receipt,\n\t\tTimestamp: av.Timestamp,\n\t}\n}\n\nfunc convertStartVoteFromFonero(sv foneroplugin.StartVote, svr foneroplugin.StartVoteReply, endHeight uint64) StartVote {\n\topts := make([]VoteOption, 0, len(sv.Vote.Options))\n\tfor _, v := range sv.Vote.Options {\n\t\topts = append(opts, VoteOption{\n\t\t\tToken:       sv.Vote.Token,\n\t\t\tID:          v.Id,\n\t\t\tDescription: v.Description,\n\t\t\tBits:        v.Bits,\n\t\t})\n\t}\n\treturn StartVote{\n\t\tToken:               sv.Vote.Token,\n\t\tMask:                sv.Vote.Mask,\n\t\tDuration:            sv.Vote.Duration,\n\t\tQuorumPercentage:    sv.Vote.QuorumPercentage,\n\t\tPassPercentage:      sv.Vote.PassPercentage,\n\t\tOptions:             opts,\n\t\tPublicKey:           sv.PublicKey,\n\t\tSignature:           sv.Signature,\n\t\tStartBlockHeight:    svr.StartBlockHeight,\n\t\tStartBlockHash:      svr.StartBlockHash,\n\t\tEndHeight:           endHeight,\n\t\tEligibleTickets:     strings.Join(svr.EligibleTickets, \",\"),\n\t\tEligibleTicketCount: len(svr.EligibleTickets),\n\t}\n}\n\nfunc convertStartVoteToFonero(sv StartVote) (foneroplugin.StartVote, foneroplugin.StartVoteReply) {\n\topts := make([]foneroplugin.VoteOption, 0, len(sv.Options))\n\tfor _, v := range sv.Options {\n\t\topts = append(opts, foneroplugin.VoteOption{\n\t\t\tId:          v.ID,\n\t\t\tDescription: v.Description,\n\t\t\tBits:        v.Bits,\n\t\t})\n\t}\n\n\tdsv := foneroplugin.StartVote{\n\t\tPublicKey: sv.PublicKey,\n\t\t",
  "\ufeffusing System;\nusing System.Collections.Generic;\nusing System.Threading;\nusing System.Threading.Tasks;\nusing Akka.Actor;\n\nnamespace Akka.Remote.Transport\n{\n    public interface ITransportAdapterProvider\n    {\n        /// <summary>\n        /// Create a transport adapter that wraps the underlying transport\n        /// </summary>\n        Transport Create(Transport wrappedTransport, ActorSystem system);\n    }\n\n    internal class TransportAdaptersExtension : ExtensionIdProvider<TransportAdapters>\n    {\n        public override TransportAdapters CreateExtension(ActorSystem system)\n        {\n            return new TransportAdapters(system);\n        }\n\n        #region Static methods\n\n        public static TransportAdapters For(ActorSystem system)\n        {\n            return system.WithExtension<TransportAdapters, TransportAdaptersExtension>();\n        }\n\n        #endregion\n    }\n\n    /// <summary>\n    /// INTERNAL API\n    /// \n    /// Extension that allows us to look up transport adapters based upon the settings provided inside <see cref=\"RemoteSettings\"/>\n    /// </summary>\n    internal class TransportAdapters : IExtension\n    {\n        public TransportAdapters(ActorSystem system)\n        {\n            System = system;\n            Settings = ((RemoteActorRefProvider)system.Provider).RemoteSettings;\n        }\n\n        public ActorSystem System { get; private set; }\n\n        protected RemoteSettings Settings;\n\n        private Dictionary<string, ITransportAdapterProvider> _adaptersTable;\n\n        private Dictionary<string, ITransportAdapterProvider> AdaptersTable()\n        {\n            if (_adaptersTable!= null) return _adaptersTable;\n            _adaptersTable = new Dictionary<string, ITransportAdapterProvider>();\n            foreach (var adapter in Settings.Adapters)\n            {\n                try\n                {\n                    var adapterTypeName = Type.GetType(adapter.Value);\n                    // ReSharper disable once AssignNullToNotNullAttribute\n                    var newAdapter = (ITransportAdapterProvider)Activator.CreateInstance(adapterTypeName);\n                    _adaptersTable.Add(adapter.Key, newAdapter);\n                }\n                catch (Exception ex)\n                {\n                    throw new ArgumentException(string.Format(\"Cannot initiate transport adapter {0}\", adapter.Value), ex);\n                }\n            }\n\n            return _adaptersTable;\n        }\n\n        public ITransportAdapterProvider GetAdapterProvider(string name)\n        {\n            if (_adaptersTable.ContainsKey(name))\n            {\n                return _adaptersTable[name];\n            }\n\n            throw new ArgumentException(string.Format(\"There is no registered transport adapter provider with name {0}\", name));\n        }\n    }\n\n    internal class SchemeAugmenter\n    {\n        public SchemeAugmenter(string addedSchemeIdentifier)\n        {\n            AddedSchemeIdentifier = addedSchemeIdentifier;\n        }\n\n        public readonly string AddedSchemeIdentifier;\n\n        public string AugmentScheme(string originalScheme)\n        {\n            return string.Format(\"{0}.{1}\", AddedSchemeIdentifier, originalScheme);\n        }\n\n        public Address AugmentScheme(Address address)\n        {\n            return address.Copy(protocol: AugmentScheme(address.Protocol));\n        }\n\n        public string RemoveScheme(string scheme)\n        {\n            if (scheme.StartsWith(string.Format(\"{0}.\", AddedSchemeIdentifier)))\n                return scheme.Remove(0, AddedSchemeIdentifier.Length + 1);\n            return scheme;\n        }\n\n        public Address RemoveScheme(Address address)\n        {\n            return address.Copy(protocol: RemoveScheme(address.Protocol));\n        }\n    }\n\n    /// <summary>\n    /// An adapter that wraps a transport and provides interception capabilities\n    /// </summary>\n    internal abstract class AbstractTransportAdapter : Transport\n    {\n        protected AbstractTransportAdapter(Transport wrappedTransport)\n        {\n            WrappedTransport = wrappedTransport;\n        }\n\n        protected Transport WrappedTransport;\n\n        protected abstract SchemeAugmenter SchemeAugmenter { get; }\n\n        public override string SchemeIdentifier\n        {\n            get\n            {\n                return SchemeAugmenter.AugmentScheme(WrappedTransport.SchemeIdentifier);\n            }\n        }\n\n        protected abstract Task<IAssociationEventListener> InterceptListen(Address listenAddress,\n            Task<IAssociationEventListener> listenerTask);\n\n        protected abstract void InterceptAssociate(Address remoteAddress,\n            TaskCompletionSource<AssociationHandle> statusPromise);\n\n        public override bool IsResponsibleFor(Address remote)\n        {\n            return WrappedTransport.IsResponsibleFor(remote);\n        }\n\n        public override Task<Tuple<Address, TaskCompletionSource<IAssociationEventListener>>> Listen()\n        {\n            var upstreamListenerPromise = new TaskCompletionSource<IAssociationEventListener>();\n            return WrappedTransport.Listen().ContinueWith(async listenerTask =>\n            {\n                var listenAddress = listenerTask.Result.Item1;\n                var listenerPromise = listenerTask.Result.Item2;\n                listenerPromise.TrySetResult(await InterceptListen(listenAddress, upstreamListenerPromise.Task));\n                return\n                    new Tuple<Address, TaskCompletionSource<IAssociationEventListener>>(\n                        SchemeAugmenter.AugmentScheme(listenAddress), upstreamListenerPromise);\n            }, TaskContinuationOptions.ExecuteSynchronously & TaskContinuationOptions.AttachedToParent).Unwrap();\n        }\n\n        public override Task<AssociationHandle> Associate(Address remoteAddress)\n        {\n            var statusPromise = new TaskCompletionSource<AssociationHandle>();\n            InterceptAssociate(SchemeAugmenter.RemoveScheme(remoteAddress), statusPromise);\n            return statusPromise.Task;\n        }\n\n        public override Task<bool> Shutdown()\n        {\n            return WrappedTransport.Shutdown();\n        }\n    }\n\n    internal abstract class AbstractTransportAdapterHandle : AssociationHandle\n    {\n        protected AbstractTransportAdapterHandle(Address originalLocalAddress, Address originalRemoteAddress, AssociationHandle wrappedHandle, string addedSchemeIdentifier) : base(originalLocalAddress, originalRemoteAddress)\n        {\n            WrappedHandle = wrappedHandle;\n            OriginalRemoteAddress = originalRemoteAddress;\n            OriginalLocalAddress = originalLocalAddress;\n            SchemeAugmenter = new SchemeAugmenter(addedSchemeIdentifier);\n            RemoteAddress = SchemeAugmenter.AugmentScheme(OriginalRemoteAddress);\n            LocalAddress = SchemeAugmenter.AugmentScheme(OriginalLocalAddress);\n        }\n\n        public Address OriginalLocalAddress { get; private set; }\n\n        public Address OriginalRemoteAddress { get; private set; }\n\n        public AssociationHandle WrappedHandle { get; private set; }\n\n        protected SchemeAugmenter SchemeAugmenter { get; private set; }\n\n        protected bool Equals(AbstractTransportAdapterHandle other)\n        {\n            return Equals(OriginalLocalAddress, other.OriginalLocalAddress) && Equals(OriginalRemoteAddress, other.OriginalRemoteAddress) && Equals(WrappedHandle, other.WrappedHandle);\n        }\n\n        public override bool Equals(object obj)\n        {\n            if (ReferenceEquals(null, obj)) return false;\n            if (ReferenceEquals(this, obj)) return true;\n            if (obj.GetType()!= this.GetType()) return false;\n            return Equals((AbstractTransportAdapterHandle) obj);\n        }\n\n        public override int GetHashCode()\n        {\n            unchecked\n            {\n                var hashCode = base.GetHashCode() + (OriginalLocalAddress!= null? OriginalLocalAddress.GetHashCode() : 0);\n                hashCode = (hashCode * 397) ^ (OriginalRemoteAddress!= null? OriginalRemoteAddress.GetHashCode() : 0);\n                hashCode = (hashCode * 397) ^ (WrappedHandle!= null? WrappedHandle.GetHashCode() : 0);\n                return hashCode;\n            }\n        }\n    }\n\n    /// <summary>\n    /// Marker interface for all transport operations\n    /// </summary>\n    internal abstract class TransportOperation\n    {\n        public static readonly TimeSpan AskTimeout = TimeSpan.FromSeconds(5);\n    }\n\n    internal sealed class ListenerRegistered : TransportOperation\n    {\n        public ListenerRegistered(IAssociationEventListener listener)\n        {\n            Listener = listener;\n        }\n\n        public IAssociationEventListener Listener { get; private set; }\n    }\n\n    internal sealed class AssociateUnderlying : TransportOperation\n    {\n        public AssociateUnderlying(Address remoteAddress, TaskCompletionSource<AssociationHandle> statusPromise)\n        {\n            RemoteAddress = remoteAddress;\n            StatusPromise = statusPromise;\n        }\n\n        public Address RemoteAddress { get; private set; }\n\n        public TaskCompletionSource<AssociationHandle> StatusPromise { get; private set; }\n    }\n\n    internal sealed class ListenUnderlying : TransportOperation\n    {\n        public ListenUnderlying(Address listenAddress, Task<IAssociationEventListener> upstreamListener)\n        {\n            UpstreamListener = upstreamListener;\n            ListenAddress = listenAddress;\n        ",
  "#ifndef COIN_SOSHADER_H\n#define COIN_SOSHADER_H\n\n/**************************************************************************\\\n * Copyright (c) Kongsberg Oil & Gas Technologies AS\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n * \n * Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n * \n * Redistributions in binary form must reproduce the above copyright\n * notice, this list of conditions and the following disclaimer in the\n * documentation and/or other materials provided with the distribution.\n * \n * Neither the name of the copyright holder nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\\**************************************************************************/\n\n#ifndef COIN_INTERNAL\n#error this is a private header file\n#endif\n\n// *************************************************************************\n\nclass SbName;\n\nclass SoShader\n{\npublic:\n  static void init(void);\n\n  enum Type {\n    ARB_SHADER,\n    CG_SHADER,\n    GLSL_SHADER\n  };\n\n  static const char * getNamedScript(const SbName & name, const Type type);\n  static void setupBuiltinShaders(void);\n};\n\n// *************************************************************************\n\n#endif /*! COIN_SOSHADER_H */\n",
  "# -*- coding: utf-8 -*-\n\n\"\"\"Entry point to the command line interface for :mod:`GenRisk`.\"\"\"\n\nfrom.cli import main\n\nif __name__ == '__main__':\n    main()",
  "<?php if(empty($errors)):?>\n     \u041c\u043e\u043b\u043e\u0434\u0446\u044b, \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u0434\u0430\u043b\u044c\u0448\u0435 \u0442\u0430\u043a \u0442\u0430\u0449\u0438\u0442\u044c!!!!!\n<?php else:?>\n    <?php foreach($errors as $key => $error):?>\n        <div class=\"string_errors_content\" id=\"<?= $error->id?>\">\n            <?= ($key+1).\". \".$error->title?>\n\t\t\t\u041e\u0431\u043d\u0430\u0440\u0443\u0436\u0438\u043b \u043e\u0448\u0438\u0431\u043a\u0443 - <?= $error->creator->username?>\n\t\t\t\u0412 <?= Yii::$app->formatter->asDate($error->create_at, 'd.M.yyyy')?>\n        </div>\n    <?php endforeach;?>\n<?php endif;?>",
  "\n/******************************  LICENSE  *******************************\n\n * (C) Copyright 1996-2017 ECMWF.\n *\n * This software is licensed under the terms of the Apache Licence Version 2.0\n * which can be obtained at http://www.apache.org/licenses/LICENSE-2.0.\n * In applying this licence, ECMWF does not waive the privileges and immunities\n * granted to it by virtue of its status as an intergovernmental organisation nor\n * does it submit to any jurisdiction.\n\n *******************************  LICENSE  *******************************/\n\n/*! \\\\file IsoPlotAttributes.h\n    \\\\brief Definition of IsoPlot Attributes class.\n\n    This file is automatically generated.\n    Do Not Edit!\n\n*/\n\n#include \"MagRequest.h\"\n#include \"IsoPlotWrapper.h\"\n#include \"MagicsParameter.h\"\n#include \"Factory.h\"\n#include \"MagTranslator.h\"\n#include \"MagicsGlobal.h\"\n\nusing namespace magics;\n\n\n\nIsoPlotWrapper::IsoPlotWrapper(): isoplot_(new IsoPlot())\n\n\n{\n\n\n\t\n\n}\nIsoPlotWrapper::IsoPlotWrapper(IsoPlot* isoplot): isoplot_(isoplot)\n{\n\n\t\n}\n\nIsoPlotWrapper::~IsoPlotWrapper()\n{\n\n}\n\nvoid IsoPlotWrapper::set(const MagRequest& request)\n{\n\n\t\n\n\tif  (request.countValues(\"CONTOUR_SPECIAL_LEGEND\") ) {\n\t\tstring legend_special_value = request(\"CONTOUR_SPECIAL_LEGEND\");\n\t\tisoplot_->legend_special_ = legend_special_value;\n\t\t}\n\tif  (request.countValues(\"CONTOUR_THREADS\") ) {\n\t\tint user_thread_value = request(\"CONTOUR_THREADS\");\n\t\tisoplot_->user_thread_ = user_thread_value;\n\t\t}\n\tif  (request.countValues(\"CONTOUR_INTERNAL_REDUCTION_FACTOR\") ) {\n\t\tdouble resolution_value = request(\"CONTOUR_INTERNAL_REDUCTION_FACTOR\");\n\t\tisoplot_->resolution_ = resolution_value;\n\t\t}\n\tif  (request.countValues(\"CONTOUR_INTERNAL_TECHNIQUE\") ) {\n\t\tstring technique_value = request(\"CONTOUR_INTERNAL_TECHNIQUE\");\n\t\tisoplot_->technique_ = technique_value;\n\t\t}\n\tif  (request.countValues(\"CONTOUR_LEGEND_TEXT\") ) {\n\t\tstring legend_text_value = request(\"CONTOUR_LEGEND_TEXT\");\n\t\tisoplot_->legend_text_ = legend_text_value;\n\t\t}\n\tif  (request.countValues(\"CONTOUR_LINE_THICKNESS\") ) {\n\t\tint thickness_value = request(\"CONTOUR_LINE_THICKNESS\");\n\t\tisoplot_->thickness_ = thickness_value;\n\t\t}\n\tif  (request.countValues(\"CONTOUR_LINE_COLOUR_RAINBOW\") ) {\n\t\tstring rainbow_value = request(\"CONTOUR_LINE_COLOUR_RAINBOW\");\n\t\t\n\t\tisoplot_->rainbow_ = MagTranslator<string, bool>()(rainbow_value);\n\t\t\n\t\t}\n\tif  (request.countValues(\"CONTOUR_LINE_COLOUR_RAINBOW_DIRECTION\") ) {\n\t\tstring rainbowDirection_value = request(\"CONTOUR_LINE_COLOUR_RAINBOW_DIRECTION\");\n\t\tisoplot_->rainbowDirection_ = rainbowDirection_value;\n\t\t}\n\tstringarray  rainbowColours_value;\n\tfor (int i = 0; i < request.countValues(\"CONTOUR_LINE_COLOUR_RAINBOW_COLOUR_LIST\"); i++)\n\t\trainbowColours_value.push_back((string)request(\"CONTOUR_LINE_COLOUR_RAINBOW_COLOUR_LIST\", i));\n\tif (!rainbowColours_value.empty() )\n\t\tisoplot_->rainbowColours_ = rainbowColours_value;\n\tintarray rainbowThicknessList_value;\n\tfor (int i = 0; i < request.countValues(\"CONTOUR_LINE_THICKNESS_RAINBOW_LIST\"); i++)\n\t\trainbowThicknessList_value.push_back((int)request(\"CONTOUR_LINE_THICKNESS_RAINBOW_LIST\", i));\n\tif (!rainbowThicknessList_value.empty() )\n\t\tisoplot_->rainbowThicknessList_ = rainbowThicknessList_value;\n\tstringarray  rainbowStyleList_value;\n\tfor (int i = 0; i < request.countValues(\"CONTOUR_LINE_STYLE_RAINBOW_LIST\"); i++)\n\t\trainbowStyleList_value.push_back((string)request(\"CONTOUR_LINE_STYLE_RAINBOW_LIST\", i));\n\tif (!rainbowStyleList_value.empty() )\n\t\tisoplot_->rainbowStyleList_ = rainbowStyleList_value;\n\tif  (request.countValues(\"CONTOUR_LEGEND_ONLY\") ) {\n\t\tstring legend_only_value = request(\"CONTOUR_LEGEND_ONLY\");\n\t\t\n\t\tisoplot_->legend_only_ = MagTranslator<string, bool>()(legend_only_value);\n\t\t\n\t\t}\n\t\n\t\n\tif  (request.countValues(\"CONTOUR_LINE_STYLE\") ) {\n\t\tstring style_value = request(\"CONTOUR_LINE_STYLE\");\n\t\tisoplot_->style_ = MagTranslator<string, LineStyle>()(style_value);\n\t}\n\t\t\n\tif  (request.countValues(\"CONTOUR_LINE_COLOUR\") ) {\n\t\tstring colour_value = request(\"CONTOUR_LINE_COLOUR\");\n\t\tisoplot_->colour_ = unique_ptr<Colour>(MagTranslator<string, Colour>()(colour_value));\n\t}\n\t\t\n\t\n\t\tstring rainbowMethod_value = request.countValues(\"CONTOUR_LINE_COLOUR_RAINBOW_METHOD\")?  (string) request(\"CONTOUR_LINE_COLOUR_RAINBOW_METHOD\") : \"calculate\";\n\tMagLog::debug() << \" CONTOUR_LINE_COLOUR_RAINBOW_METHOD set to \" << rainbowMethod_value << endl;\n\tColourTechniqueWrapper* rainbowMethod_wrapper = 0;\n\ttry\n\t{\n\t\trainbowMethod_wrapper = SimpleFactory<ColourTechniqueWrapper>::create(rainbowMethod_value);\n\t}\n\t catch (NoFactoryException&) {\n\t\tif (MagicsGlobal::strict()) {\n            throw;\n        }\n\t\tMagLog::warning() << \"[\" << rainbowMethod_value << \"] is not a valid value for rainbowMethod: reset to default -> [calculate]\" << endl;\n\t\trainbowMethod_wrapper = SimpleFactory<ColourTechniqueWrapper>::create(\"calculate\");\n\t}\n\trainbowMethod_wrapper->set(request);\n\tisoplot_->rainbowMethod_ =  unique_ptr<ColourTechnique>(rainbowMethod_wrapper->object());\n\tdelete rainbowMethod_wrapper;\n\tif  (request.countValues(\"CONTOUR_LINE_COLOUR_RAINBOW_MAX_LEVEL_COLOUR\") ) {\n\t\tstring rainbowMaxColour_value = request(\"CONTOUR_LINE_COLOUR_RAINBOW_MAX_LEVEL_COLOUR\");\n\t\tisoplot_->rainbowMaxColour_ = unique_ptr<Colour>(MagTranslator<string, Colour>()(rainbowMaxColour_value));\n\t}\n\t\t\n\tif  (request.countValues(\"CONTOUR_LINE_COLOUR_RAINBOW_MIN_LEVEL_COLOUR\") ) {\n\t\tstring rainbowMinColour_value = request(\"CONTOUR_LINE_COLOUR_RAINBOW_MIN_LEVEL_COLOUR\");\n\t\tisoplot_->rainbowMinColour_ = unique_ptr<Colour>(MagTranslator<string, Colour>()(rainbowMinColour_value));\n\t}\n\t\t\n\t\n\tif  (request.countValues(\"CONTOUR_LINE_COLOUR_RAINBOW_COLOUR_LIST_POLICY\") ) {\n\t\tstring rainbowColourPolicy_value = request(\"CONTOUR_LINE_COLOUR_RAINBOW_COLOUR_LIST_POLICY\");\n\t\tisoplot_->rainbowColourPolicy_ = MagTranslator<string, ListPolicy>()(rainbowColourPolicy_value);\n\t}\n\t\t\n\t\n\tif  (request.countValues(\"CONTOUR_LINE_THICKNESS_RAINBOW_LIST_POLICY\") ) {\n\t\tstring rainbowThicknessListPolicy_value = request(\"CONTOUR_LINE_THICKNESS_RAINBOW_LIST_POLICY\");\n\t",
  "// Copyright \u00a9 Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.\n\n// Ported from shared/udpmib.h in the Windows SDK for Windows 10.0.20348.0\n// Original source is Copyright \u00a9 Microsoft. All rights reserved.\n\nnamespace TerraFX.Interop.Windows;\n\n/// <include file='MIB_UDP6ROW.xml' path='doc/member[@name=\"MIB_UDP6ROW\"]/*' />\npublic partial struct MIB_UDP6ROW\n{\n    /// <include file='MIB_UDP6ROW.xml' path='doc/member[@name=\"MIB_UDP6ROW.dwLocalAddr\"]/*' />\n    public IN6_ADDR dwLocalAddr;\n\n    /// <include file='MIB_UDP6ROW.xml' path='doc/member[@name=\"MIB_UDP6ROW.dwLocalScopeId\"]/*' />\n    [NativeTypeName(\"DWORD\")]\n    public uint dwLocalScopeId;\n\n    /// <include file='MIB_UDP6ROW.xml' path='doc/member[@name=\"MIB_UDP6ROW.dwLocalPort\"]/*' />\n    [NativeTypeName(\"DWORD\")]\n    public uint dwLocalPort;\n}\n",
  "/**\n * generated by Xtext 2.17.1\n */\npackage com.specmate.cause_effect_patterns.internal.specDSL.impl;\n\nimport org.eclipse.emf.ecore.EAttribute;\nimport org.eclipse.emf.ecore.EClass;\nimport org.eclipse.emf.ecore.EPackage;\nimport org.eclipse.emf.ecore.EReference;\n\nimport org.eclipse.emf.ecore.impl.EPackageImpl;\n\nimport com.specmate.cause_effect_patterns.internal.specDSL.AbstractElement;\nimport com.specmate.cause_effect_patterns.internal.specDSL.DepDef;\nimport com.specmate.cause_effect_patterns.internal.specDSL.DepTag;\nimport com.specmate.cause_effect_patterns.internal.specDSL.DependencyRule;\nimport com.specmate.cause_effect_patterns.internal.specDSL.ExplicitNode;\nimport com.specmate.cause_effect_patterns.internal.specDSL.Import;\nimport com.specmate.cause_effect_patterns.internal.specDSL.Model;\nimport com.specmate.cause_effect_patterns.internal.specDSL.Node;\nimport com.specmate.cause_effect_patterns.internal.specDSL.OptionNode;\nimport com.specmate.cause_effect_patterns.internal.specDSL.POSTag;\nimport com.specmate.cause_effect_patterns.internal.specDSL.PosDef;\nimport com.specmate.cause_effect_patterns.internal.specDSL.Rule;\nimport com.specmate.cause_effect_patterns.internal.specDSL.SpecDSLFactory;\nimport com.specmate.cause_effect_patterns.internal.specDSL.SpecDSLPackage;\nimport com.specmate.cause_effect_patterns.internal.specDSL.Subtree;\nimport com.specmate.cause_effect_patterns.internal.specDSL.Tag;\nimport com.specmate.cause_effect_patterns.internal.specDSL.TreeDef;\nimport com.specmate.cause_effect_patterns.internal.specDSL.TreeNode;\nimport com.specmate.cause_effect_patterns.internal.specDSL.TreeTag;\n\n/**\n * <!-- begin-user-doc --> An implementation of the model <b>Package</b>. <!--\n * end-user-doc -->\n * \n * @generated\n */\npublic class SpecDSLPackageImpl extends EPackageImpl implements SpecDSLPackage {\n\t/**\n\t * <!-- begin-user-doc --> <!-- end-user-doc -->\n\t * \n\t * @generated\n\t */\n\tprivate EClass modelEClass = null;\n\n\t/**\n\t * <!-- begin-user-doc --> <!-- end-user-doc -->\n\t * \n\t * @generated\n\t */\n\tprivate EClass abstractElementEClass = null;\n\n\t/**\n\t * <!-- begin-user-doc --> <!-- end-user-doc -->\n\t * \n\t * @generated\n\t */\n\tprivate EClass importEClass = null;\n\n\t/**\n\t * <!-- begin-user-doc --> <!-- end-user-doc -->\n\t * \n\t * @generated\n\t */\n\tprivate EClass posDefEClass = null;\n\n\t/**\n\t * <!-- begin-user-doc --> <!-- end-user-doc -->\n\t * \n\t * @generated\n\t */\n\tprivate EClass posTagEClass = null;\n\n\t/**\n\t * <!-- begin-user-doc --> <!-- end-user-doc -->\n\t * \n\t * @generated\n\t */\n\tprivate EClass depDefEClass = null;\n\n\t/**\n\t * <!-- begin-user-doc --> <!-- end-user-doc -->\n\t * \n\t * @generated\n\t */\n\tprivate EClass depTagEClass = null;\n\n\t/**\n\t * <!-- begin-user-doc --> <!-- end-user-doc -->\n\t * \n\t * @generated\n\t */\n\tprivate EClass treeDefEClass = null;\n\n\t/**\n\t * <!-- begin-user-doc --> <!-- end-user-doc -->\n\t * \n\t * @generated\n\t */\n\tprivate EClass treeTagEClass = null;\n\n\t/**\n\t * <!-- begin-user-doc --> <!-- end-user-doc -->\n\t * \n\t * @generated\n\t */\n\tprivate EClass ruleEClass = null;\n\n\t/**\n\t * <!-- begin-user-doc --> <!-- end-user-doc -->\n\t * \n\t * @generated\n\t */\n\tprivate EClass dependencyRuleEClass = null;\n\n\t/**\n\t * <!-- begin-user-doc --> <!-- end-user-doc -->\n\t * \n\t * @generated\n\t */\n\tprivate EClass nodeEClass = null;\n\n\t/**\n\t * <!-- begin-user-doc --> <!-- end-user-doc -->\n\t * \n\t * @generated\n\t */\n\tprivate EClass optionNodeEClass = null;\n\n\t/**\n\t * <!-- begin-user-doc --> <!-- end-user-doc -->\n\t * \n\t * @generated\n\t */\n\tprivate EClass treeNodeEClass = null;\n\n\t/**\n\t * <!-- begin-user-doc --> <!-- end-user-doc -->\n\t * \n\t * @generated\n\t */\n\tprivate EClass explicitNodeEClass = null;\n\n\t/**\n\t * <!-- begin-user-doc --> <!-- end-user-doc -->\n\t * \n\t * @generated\n\t */\n\tprivate EClass subtreeEClass = null;\n\n\t/**\n\t * <!-- begin-user-doc --> <!-- end-user-doc -->\n\t * \n\t * @generated\n\t */\n\tprivate EClass tagEClass = null;\n\n\t/**\n\t * Creates an instance of the model <b>Package</b>, registered with\n\t * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the\n\t * package package URI value.\n\t * <p>\n\t * Note: the correct way to create the package is via the static factory method\n\t * {@link #init init()}, which also performs initialization of the package, or\n\t * returns the registered package, if one already exists. <!-- begin-user-doc\n\t * --> <!-- end-user-doc -->\n\t * \n\t * @see org.eclipse.emf.ecore.EPackage.Registry\n\t * @see com.specmate.cause_effect_patterns.specDSL.SpecDSLPackage#eNS_URI\n\t * @see #init()\n\t * @generated\n\t */\n\tprivate SpecDSLPackageImpl() {\n\t\tsuper(eNS_URI, SpecDSLFactory.eINSTANCE);\n\t}\n\n\t/**\n\t * <!-- begin-user-doc --> <!-- end-user-doc -->\n\t * \n\t * @generated\n\t */\n\tprivate static boolean isInited = false;\n\n\t/**\n\t * Creates, registers, and initializes the <b>Package</b> for this model, and\n\t * for any others upon which it depends.\n\t * \n\t * <p>\n\t * This method is used to initialize {@link SpecDSLPackage#eINSTANCE} when that\n\t * field is accessed. Clients should not invoke it directly. Instead, they\n\t * should simply access that field to obtain the package. <!-- begin-user-doc\n\t * --> <!-- end-user-doc -->\n\t * \n\t * @see #eNS_URI\n\t * @see #createPackageContents()\n\t * @see #initializePackageContents()\n\t * @generated\n\t */\n\tpublic static SpecDSLPackage init() {\n\t\tif (isInited)\n\t\t\treturn (SpecDSLPackage) EPackage.Registry.INSTANCE.getEPackage(SpecDSLPackage.eNS_URI);\n\n\t\t// Obtain or create and register package\n\t\tSpecDSLPackageImpl theSpecDSLPackage = (SpecDSLPackageImpl) (EPackage.Registry.INSTANCE\n\t\t\t\t.get(eNS_URI) instanceof SpecDSLPackageImpl? EPackage.Registry.INSTANCE.get(eNS_URI)\n\t\t\t\t\t\t: new SpecDSLPackageImpl());\n\n\t\tisInited = true;\n\n\t\t// Create package meta-data objects\n\t\ttheSpecDSLPackage.createPackageContents();\n\n\t\t// Initialize created meta-data\n\t\ttheSpecDSLPackage.initializePackageContents();\n\n\t\t// Mark meta-data to indicate it can't be changed\n\t\ttheSpecDSLPackage.freeze();\n\n\t\t// Update the registry and return the package\n\t\tEPackage.Registry.INSTANCE.put(SpecDSLPackage.eNS_URI, theSpecDSLPackage);\n\t\treturn theSpecDSLPackage;\n\t}\n\n\t/**\n\t * <!-- begin-user-doc --> <!-- end-user-doc -->\n\t * \n\t * @generated\n\t */\n\tpublic EClass getModel() {\n\t\treturn modelEClass;\n\t}\n\n\t/**\n\t * <!-- begin-user-doc --> <!-- end-user-doc -->\n\t * \n\t * @generated\n\t */\n\tpublic EReference getModel_Elements() {\n\t\treturn (EReference) modelEClass.getEStructuralFeatures().get(0);\n\t}\n\n\t/**\n\t * <!-- begin-user-doc --> <!-- end-user-doc",
  "/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  margin: 0;\n  padding: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n  display: block;\n}\nbody {\n  line-height: 1;\n}\nol,\nul {\n  list-style: none;\n}\nblockquote,\nq {\n  quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n  max-width: 100%;\n}\nhtml {\n  font-size: 62.5%;\n}\nhtml,\nbody {\n  font-family: 'Roboto', sans-serif;\n}\nh1,\nh2,\nh3,\nh4,\nh5 {\n  font-family: 'Indie Flower', cursive;\n}\nh1 {\n  font-size: 4rem;\n}\nh2 {\n  font-size: 3.2rem;\n  padding-bottom: 10px;\n}\nh4 {\n  font-size: 2.5rem;\n  padding-bottom: 10px;\n}\np {\n  line-height: 1.5;\n  font-size: 1.6rem;\n  padding-bottom: 10px;\n}\nimg {\n  max-width: 100%;\n  height: auto;\n}\n.container {\n  width: 100%;\n  margin: 0 auto;\n}\nheader {\n  display: flex;\n  justify-content: space-between;\n  width: 80%;\n  margin-right: 10%;\n  margin-left: 10%;\n  background: white;\n}\n@media (max-width: 800px) {\n  header {\n    width: 100%;\n    margin-left: 0;\n    margin-right: 0;\n  }\n}\n@media (max-width: 500px) {\n  header {\n    width: 100%;\n    margin-left: 0;\n    margin-right: 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n}\nheader.nav-logo {\n  display: flex;\n  align-items: center;\n}\n@media (max-width: 500px) {\n  header.nav-logo {\n    width: 60%;\n    flex-direction: column;\n    justify-content: center;\n    align-content: center;\n  }\n}\nheader.nav-logo.logo-pencil {\n  width: 14%;\n}\nheader.nav-logo.logo-pencil img {\n  width: 100%;\n}\n@media (max-width: 500px) {\n  header.nav-logo.logo-pencil img {\n    display: none;\n  }\n}\nheader.nav-logo.logo-title {\n  width: 50%;\n}\nheader.nav-logo.logo-title img {\n  width: 70%;\n}\n@media (max-width: 500px) {\n  header.nav-logo.logo-title img {\n    width: 100%;\n  }\n}\nheader nav {\n  display: flex;\n  align-items: center;\n  padding: 0px 0px 0px 0px;\n  justify-content: space-between;\n  width: 50%;\n  margin-right: 3%;\n}\n@media (max-width: 500px) {\n  header nav {\n    width: 70%;\n    margin-bottom: 1%;\n  }\n}\nheader nav a {\n  font-size: 1.5rem;\n  text-decoration: none;\n  color: #5574F7;\n  display: flex;\n}\nheader nav a:hover {\n  color: #60C3FF;\n}\n@media (max-width: 500px) {\n  header nav a {\n    font-size: 1.3rem;\n  }\n}\nfooter {\n  width: 60%;\n  background: white;\n  padding: 20px 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n}\n* {\n  font-family: 'Muli', sans-serif;\n}\nh1,\nh2,\nh3,\nh4,\nh5 {\n  font-family: 'Muli', sans-serif;\n}\nbody {\n  background: linear-gradient(to right, #5574F7, #60C3FF);\n}\n.cta-section {\n  width: 60%;\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n  margin-top: 5%;\n  margin-bottom: 10%;\n  color: white;\n}\n.cta-section p {\n  font-size: 1.8rem;\n}\n.cta-section.btn {\n  width: 50%;\n  height: 25%;\n  border-radius: 5px;\n  font-size: 2.4rem;\n  color: #BCC5D3;\n  font-weight: bold;\n  background: #dbf4a7;\n}\n.cta-section.btn:hover {\n  color: #5574F7;\n  background: white;\n}\n@media (max-width: 500px) {\n .cta-section {\n    width: 80%;\n    margin-bottom: 10%;\n  }\n .cta-section.btn {\n    width: 100%;\n    height: 20%;\n  }\n}\n.description-content {\n  width: 60%;\n  margin: 0 auto;\n  margin-top: 5%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: white;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n}\n@media (max-width: 800px) {\n .description-content {\n    width: 80%;\n  }\n}\n@media (max-width: 500px) {\n .description-content {\n    width: 90%;\n    background: none;\n  }\n}\n.description-content img {\n  width: 70%;\n  margin-left: 30px;\n}\n@media (max-width: 500px) {\n .description-content img {\n    width: 50%;\n    margin-top: 5%;\n    margin-bottom: 5%;\n    margin-left: 100px;\n  }\n}\n.description-content p {\n  padding-right: 3%;\n  padding-left: 3%;\n}\n.features-content {\n  width: 75%;\n  margin: 0 auto;\n  margin-top: 10%;\n  margin-bottom: 10%;\n  display: flex;\n  justify-content: space-between;\n  color: white;\n  border-top: 1px dashed black;\n  padding-",
  "// ------------------------------------------------------------------------------\n//  Copyright (c) 2017 RobotlegsJS. All Rights Reserved.\n//\n//  NOTICE: You are permitted to use, modify, and distribute this file\n//  in accordance with the terms of the license agreement accompanying it.\n// ------------------------------------------------------------------------------\n\nnamespace robotlegs.bender.extensions.viewProcessorMap.dsl {\n\n    import ITypeFilter = robotlegs.bender.extensions.matching.ITypeFilter;\n\n    /**\n     * View Processor Mapping\n     */\n    export interface IViewProcessorMapping {\n        /**\n         * The matcher for this mapping\n         */\n        matcher: ITypeFilter;\n\n        /**\n         * The processor for this mapping\n         */\n        processor: Object;\n\n        /**\n         * Sets the processor for this mapping\n         */\n        /*function set processor(value: Object): void;*/\n\n        /**\n         * The processor class for this mapping\n         */\n        processorClass: Class;\n\n        /**\n         * A list of guards to consult before allowing a view to be processed\n         */\n        guards: any[];\n\n        /**\n         * A list of hooks to run before processing a view\n         */\n        hooks: any[];\n    }\n}\n",
  "<?php\n\nuse Illuminate\\Support\\Facades\\Route;\n\n/*\n|--------------------------------------------------------------------------\n| API Routes\n|--------------------------------------------------------------------------\n|\n| Here is where you can register API routes for your application. These\n| routes are loaded by the RouteServiceProvider within a group which\n| is assigned the \"api\" middleware group. Enjoy building your API!\n|\n */\n\n// Route::middleware('auth:api')->get('/user', function (Request $request) {\n//     return $request->user();\n// });\nRoute::group(['middleware' => ['api']], function () {\n\n    Route::post('masuk', 'UserController@login');\n\n    Route::group(['middleware' => ['jwt.auth']], function () {\n\n        Route::post('keluar', 'UserController@logout');\n\n        //cabang\n        Route::get('cabang', 'CabangController@index');\n        Route::post('cabang', 'CabangController@create');\n        Route::put('cabang', 'CabangController@update');\n        Route::delete('cabang', 'CabangController@delete');\n\n        //user management\n        Route::get('user', 'UserController@index');\n        Route::post('user', 'UserController@register');\n        Route::put('user', 'UserController@update');\n        Route::delete('user', 'UserController@delete');\n\n        Route::get('user/dokter', 'UserController@doctor');\n\n        Route::post('user/upload-image', 'ProfileController@upload_photo_profile');\n        Route::get('user/profile', 'ProfileController@get_data_user');\n        Route::put('user/profile', 'ProfileController@update_data_user');\n\n        //Warehouse\n        Route::get('gudang', 'WarehouseController@index');\n        Route::post('gudang', 'WarehouseController@create');\n        Route::post('gudang/update', 'WarehouseController@update');\n        Route::delete('gudang', 'WarehouseController@delete');\n\n        Route::get('gudang/template', 'WarehouseController@download_template_excel');\n        Route::get('gudang/generate', 'WarehouseController@download_report_excel');\n        Route::post('gudang/upload', 'WarehouseController@upload_excel');\n\n        //Payment\n        Route::get('payment', 'PaymentController@index');\n        Route::post('payment', 'PaymentController@create');\n        Route::delete('payment', 'PaymentController@delete');\n\n        Route::get('payment/filteritem', 'PaymentController@filter_item');\n        Route::get('payment/generate', 'PaymentController@download_report_excel');\n        Route::get('payment/printreceipt', 'PaymentController@print_receipt');\n\n        Route::get('daily-finance-report', 'DailyFinancialReportController@index');\n        Route::get('daily-finance-report/generate', 'DailyFinancialReportController@download_report');\n\n        Route::get('weekly-finance-report', 'WeeklyFinancialReportController@index');\n        Route::get('weekly-finance-report/generate', 'WeeklyFinancialReportController@download_report');\n\n        Route::get('monthly-finance-report', 'MonthlyFinancialReportController@index');\n        Route::get('monthly-finance-report/generate', 'MonthlyFinancialReportController@download_report');\n    });\n});\n",
  "/*******************************************************************************\n * Copyright (c) 2010, Elexis und Niklaus Giger <niklaus.giger@member.fsf.org\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *    N. Giger - initial implementation\n * \n *******************************************************************************/\n\npackage ch.elexis.importer.div;\n\nimport org.junit.BeforeClass;\nimport org.junit.runner.RunWith;\nimport org.junit.runners.Suite;\n\nimport ch.elexis.core.data.service.ContextServiceHolder;\nimport ch.elexis.core.data.service.CoreModelServiceHolder;\nimport ch.elexis.core.model.IMandator;\nimport ch.elexis.core.model.IPerson;\nimport ch.elexis.core.model.builder.IContactBuilder;\nimport ch.elexis.core.types.Gender;\nimport ch.elexis.data.Labor;\nimport ch.rgw.tools.TimeTool;\nimport junit.framework.Test;\nimport junit.framework.TestSuite;\n\n@RunWith(Suite.class)\n@Suite.SuiteClasses({\n\tTest_HL7_parser.class, MultiFileParserTests.class, HL7InitLabItemTest.class,\n\tTestPathologicDescription.class, Test_HL7Import_MPFRule.class, Test_Import_LabItemInconclusiveRefValue.class\n})\npublic class AllTests {\n\t\n\tpublic static Labor testLab;\n\t\n\t@BeforeClass\n\tpublic static void beforeClass(){\n\t\ttestLab = new Labor(\"HL7_Test\", \"HL7_Test\");\n\t\t\n\t\tTimeTool timeTool = new TimeTool();\n\t\tIPerson _mandator =\n\t\t\tnew IContactBuilder.PersonBuilder(CoreModelServiceHolder.get(), \"mandator1 \" + timeTool.toString(),\n\t\t\t\t\"Anton\" + timeTool.toString(), timeTool.toLocalDate(), Gender.MALE).mandator()\n\t\t\t\t\t.buildAndSave();\n\t\tIMandator mandator = CoreModelServiceHolder.get().load(_mandator.getId(), IMandator.class).get();\n\t\tContextServiceHolder.get().setActiveMandator(mandator);\n\t\t\n\t}\n\t\n\tpublic static Test suite() throws ClassNotFoundException{\n\t\treturn new TestSuite(\"Importer Tests\");\n\t}\n}\n",
  "package uk.gov.hmcts.reform.sscs.services.mapper;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.mockito.ArgumentMatchers.anyString;\nimport static org.mockito.Mockito.when;\nimport static uk.gov.hmcts.reform.sscs.services.mapper.TransformAppealCaseToCaseDataTest.getAppealCase;\n\nimport junitparams.JUnitParamsRunner;\nimport junitparams.Parameters;\nimport junitparams.converters.Nullable;\nimport org.junit.Before;\nimport org.junit.ClassRule;\nimport org.junit.Rule;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.springframework.boot.test.mock.mockito.MockBean;\nimport org.springframework.test.context.junit4.rules.SpringClassRule;\nimport org.springframework.test.context.junit4.rules.SpringMethodRule;\nimport uk.gov.hmcts.reform.sscs.ccd.domain.SscsCaseData;\nimport uk.gov.hmcts.reform.sscs.model.VenueDetails;\nimport uk.gov.hmcts.reform.sscs.models.deserialize.gaps2.AppealCase;\nimport uk.gov.hmcts.reform.sscs.services.refdata.ReferenceDataService;\n\n@RunWith(JUnitParamsRunner.class)\n@SpringBootTest\npublic class TransformAppealCaseToCaseDataIntegrationTest {\n\n    @ClassRule\n    public static final SpringClassRule SPRING_CLASS_RULE = new SpringClassRule();\n\n    @Rule\n    public final SpringMethodRule springMethodRule = new SpringMethodRule();\n\n    @MockBean\n    private ReferenceDataService referenceDataService;\n\n    @Autowired\n    private TransformAppealCaseToCaseData transformAppealCaseToCaseData;\n    private AppealCase appealCase;\n\n    @Before\n    public void setUp() throws Exception {\n        when(referenceDataService.getBenefitType(anyString())).thenReturn(\"pip\");\n        when(referenceDataService.getVenueDetails(anyString())).thenReturn(VenueDetails.builder().build());\n        appealCase = getAppealCase(\"AppealCaseWithAdjournedEventCreatedByOutcomeId.json\");\n    }\n\n    @Test\n    @Parameters({\n        \"100, 91, 90, No, No, No\",\n        \"110, 91, 90, Yes, No, No\",\n        \"100, 115, 90, No, Yes, No\",\n        \"100, 90, 126, No, No, Yes\",\n        \"200, 90, 126, No, No, Yes\",\n        \"0, 90, 126, No, No, Yes\",\n        \"120, 90, 126, Yes, No, Yes\",\n        \"120, 117, 126, Yes, Yes, Yes\",\n        \"null, 117, 126, No, Yes, Yes\",\n    })\n    public void givenHearingAdjournedEvent_shouldSetAdjournedFlagToYes(@Nullable String outcomeId0, String outcomeId1,\n                                                                       String outcomeId2,\n                                                                       String expectedHearingAdjourned0,\n                                                                       String expectedHearingAdjourned1,\n                                                                       String expectedHearingAdjourned2) {\n        setOutcomeIdValue(outcomeId0, outcomeId1, outcomeId2);\n\n        final SscsCaseData caseData = transformAppealCaseToCaseData.transform(appealCase);\n\n        assertEquals(3, caseData.getHearings().size());\n        assertEquals(expectedHearingAdjourned0, caseData.getHearings().get(0).getValue().getAdjourned());\n        assertEquals(expectedHearingAdjourned1, caseData.getHearings().get(1).getValue().getAdjourned());\n        assertEquals(expectedHearingAdjourned2, caseData.getHearings().get(2).getValue().getAdjourned());\n        assertEquals(\"Liverpool\", caseData.getProcessingVenue());\n    }\n\n    private void setOutcomeIdValue(String outcomeId0, String outcomeId1, String outcomeId2) {\n        setOutcomeIdValueForIndex(outcomeId0, 0);\n        setOutcomeIdValueForIndex(outcomeId1, 1);\n        setOutcomeIdValueForIndex(outcomeId2, 2);\n    }\n\n    private void setOutcomeIdValueForIndex(String outcomeId, int index) {\n        appealCase.getHearing().set(index, appealCase.getHearing().get(index).toBuilder().outcomeId(outcomeId).build());\n    }\n\n    @Test(expected = NumberFormatException.class)\n    @Parameters({\n        \"wrongFormat,125,117\",\n        \",125,117\",\n    })\n    public void givenHearingAdjournedEventWithWrongOutcomeIdFormat_shouldThrowException(@Nullable String outcomeId0,\n                                                                                        String outcomeId1,\n                                                                                        String outcomeId2) {\n        setOutcomeIdValue(outcomeId0, outcomeId1, outcomeId2);\n        transformAppealCaseToCaseData.transform(appealCase);\n    }\n\n}\n",
  "---\nlayout: post\ntitle: Rails UJS and Callbacks\ndescription: Rails give us very nice unobtrusive JS features, but what's *the* way to handle responses?\n<!-- modified: 2015-02-23 -->\ntags: [rails, ujs, javascript, callbacks, jquery]\nimage:\n  feature: rails-ujs-and-callbacks.jpg\n  credit:\n  creditlink: \n---\n\nI was recently teaching a beginner's course in web development with Rails, and when we got to the \"JavaScript week\" everyone loved the ability to fire AJAX requests with jQuery and to handle the responses with callback functions. Then, when we looked at integrating with Rails, the \"Rails Way\" seemed at odds with the \"pure JS\" way.\n\nIn summary, [Rails' process][1] is to add `remote: true` to form- and link-helpers, then add `format.js` as a responder in the controller action, and set up `action.js.erb` view files to generate JavaScript that will get sent in the response to be executed in the browser.\n\nHowever, there are [arguments against this approach][2], and people who would argue for the preference to keep JavaScript in the asset pipeline rather than scatter it around view files -- and such responded-with JS could be limited in its access to the rest of the app's JS if that was written inside a closure.\n\n## So what are the polar choices\n\n  1. Do things the Rails Way (and your JS will be scattered).\n  2. Write all your own JS handlers for AJAX form and link submission, and attach callback handlers for success/error responses -- all the JS can be in the asset pipeline (but none of the Rails magic is going to be there to save you time) and effort.\n  3. Find some middle-ground that uses some of the Rails Way, and some of your own JS to keep things a bit \"neater\", but make user of the helpers.\n\n## A 'Middle' way\n\nSo this post is about a middle way -- not _the_ middle way, as you could draw the line yourself in different places. But the motivation is to give an end-to-end solution that \"works\".\n\nIf you search for \"[ajax callbacks with Rails remote forms](https://www.google.co.uk/search?q=ajax+callbacks+with+Rails+remote+forms)\", you get lots of resources, but none of them *quite* work 100% (unless you know what they're missing, and what other pieces need to be in place -- and if you know that, you don't need to Google for them).\n\nWe're going to imagine an app that models an index of products, and the index view has a search form on it to filter products by name -- pretty vanilla Rails CRUD (with a little feature we can wire our AJAX into).\n\n> This code was written with and for Rails 4.1.9\n\n{% highlight ruby %}\n# products_controller.rb\ndef index\n  if params[:search]\n    @products = Product.where(\"name like?\", \"%#{params[:search]}%\")\n  else\n    @products = Product.all\n  end\nend\n{% endhighlight %}\n\n{% highlight erb %}\n<!-- views/products/index.html.erb -->\n<%= form_tag products_path, method: :get, id: :search_form do %>\n  <p>\n    <%= text_field_tag :search, params[:search] %>\n    <%= submit_tag \"Search\", name: nil %>\n  </p>\n<% end %>\n\n<table>\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Price</th>\n      <th colspan=\"3\"></th>\n    </tr>\n  </thead>\n  <tbody id='products_list'>\n    <%= render @products %>\n  </tbody>\n</table>\n{% endhighlight %}\n\n{% highlight erb %}\n<!-- views/products/_product.html.erb -->\n<tr>\n  <td><%= product.name %></td>\n  <td><%= product.price %></td>\n  <td><%= link_to 'Show', product %></td>\n  <td><%= link_to 'Edit', edit_product_path(product) %></td>\n  <td><%= link_to 'Destroy', product, method: :delete, data: { confirm: 'Are you sure?' } %></td>\n</tr>\n{% endhighlight %}\n\n### A UJS form\n\nFirst, we'll add the `remote: true` parameter to the form:\n\n{% highlight erb %}\n<!-- views/products/index.html.erb -->\n<%= form_tag products_path, method: :get, id: :search_form, remote: true do %>\n{% endhighlight %}\n\n> This `:remote` parameter can also be used with other helper methods such as `link_to`, `button_to` and `form_for`.\n\nIf we reload the page and look at the source we can see how Rails builds the form now.\n\n{% highlight html %}\n<!-- view source of products index -->\n<form action=\"/products\" id=\"search_form\" data-remote=\"true\" method=\"get\">\n  <p>\n    <input id=\"search\" name=\"search\" type=\"text\" />\n    <input type=\"submit\" value=\"Search\" />\n  </p>\n</form>\n{% endhighlight %}\n\nThe form element is almost exactly the same as it was before we added the remote parameter: there is just one extra attribute for `data-remote=\"true\"`.\n\nThere's no inline JavaScript, the new attribute is enough to make the form submit via AJAX -- this is handled by Rails' UJS functionality.\n\nIf we submit the form, nothing happens... that we see -- but we can use our browser development tools to see the background request, and the response.\n\n### JS response handlers\n\nWe are going to add some JS to handle the response from the form being submitted. The JS attaches two event observers to the `#search_form` element -- one on success of an AJAX request, and one for if there was any AJAX error response.\n\nBoth functions are set initially to just console log the data that comes back to them (I always like to take things step-by-step, and logging to the console allows me to make sure everything up to this point is working).\n\n{% highlight js %}\n// application.js\n$(function() {\n  $('#search_form').\n    on('ajax:success',function(evt, data, status, xhr){\n      console.log('success:', data);\n    }).\n    on('ajax:error',function(xhr, status, error){\n      console.log('failed:', error);\n    }); \n});\n{% endhighlight %}\n\n### Controller action response\n\nThe search form is submitted to the ProductController's index action (it was before, and the `:remote` parameter doesn't change that) and we need to add a handler for an \"XML HTTP request\" -- to do something different from a normal HTML request.\n\n> If you have any other responder blocks of code in your controller action, make sure that this comes before them.\n\n{% highlight ruby %}\n# products_controller.rb\nrender @products, layout: false if request.xhr?\n{% endhighlight %}\n\nTo use that syntax of `render`, we need to have a partial that will be rendered for each object in the collection -- they're all `Product` objects in our case, so we need a `_product.html.erb`. So ensure your view code in the index calls the same `render @products` and you're not iterating the products in the index itself.\n\nNow the console is showing the right response contents, we can do something with it -- like replace the current content of the product list.\n\nEdit the success callback we wrote earlier to update the body of the table with the data that comes back from the server.\n\n{% highlight js %}\non('ajax:success',function(evt, data, status, xhr){\n  $('#products_list').html(data);\n}).\n{% endhighlight %}\n\n### Further JS fun\n\nWe now have a search form which submits with Rails UJS to the products controller, and the controller sends us back some HTML that we insert into our app. If you wanted, you *could* respond with JSON, and build the HTML for the view client side (using [Underscore templates](http://underscorejs.org/#template), or something similar, maybe).\n\nBut that _would_ be duplicating view logic, so I'm going to draw the line (my totally arbitrary line) at rendering the HTML with Rails, and sending it to the JS callbacks for them to insert it in the view.\n\nWe could extend the functionality of our form though -- and get rid of the need to submit it manually.\n\n{% highlight js %}\n// application.js\n$(function() {\n  $('#search').on('keyup', function() {\n    $('#search_form').submit();\n",
  "<?php\nclass Datosclien_model extends CI_model{\n\tpublic $idcliente;\n\tpublic $edad;\n\tpublic $area;\n\tpublic $saldo;\n\tpublic function __construct(){\n\t\t$this->load->database();\n\t}\n\tpublic function find($idcliente){\n\t\treturn $this->db->get_where('datosclien', ['idcliente' => $idcliente])->result_array();\n\t}\n\tpublic function byEdad($edad){\n\t\t$data = [];\n\t\t$this->db->select('idcliente');\n\t\t$this->db->from('datosclien');\n\t\t$this->db->where('edad >=', $edad);\n\t\tforeach($this->db->get()->result_array() as $cliente){\n\t\t\tarray_push($data, $cliente['idcliente']);\n\t\t}\n\t\treturn $data;\n\t}\n}",
  "# MaskWolf`s Note\n\n> MaskWolf \u7684\u7b14\u8bb0\n",
  "@extends('layouts.app')\n@section('content')\nI am Admin\n\n@endsection\n",
  "/*\n *\t\tMain.cpp\n *\t\tCreated on: 21/08/2017\n *\t\tAuthor: Mohamed Khalil Labidi\n */\n\n#include <stdlib.h>\n#include <stdio.h>\n#include <assert.h>\n#include <time.h>\n#include <iostream>\n#include <fstream>\n#include <math.h>\n#include <string.h>\n#include <errno.h>\n#include <sstream>\n#include <vector>\n#include <algorithm>\n#include <set>\n#include <iomanip> // for precision\n\nusing namespace std;\n\n#include \"BB_FORM_EXT.h\"\n#include \"global_functions.h\"\n#include \"global_variables.h\"\n#include \"control_panel.h\"\n\n\nint main(int argc, char** argv)\n{\n    ////////////////////////////////////////////\n    // Initialize the MPI environment\n    MPI_Init(NULL, NULL);\n    ////////////////////////////////////////////\n\n    ////////////////////////////////////////////\n    // Find out rank, size\n    MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);\n    MPI_Comm_size(MPI_COMM_WORLD, &world_size);\n    ////////////////////////////////////////////\n\n    if ( argc == 5 )\n    {\n        ////////////////////////////////////////////\n        pathNameI = \"../../Instances/\";\n\n        name =  argv[1];\n        TIME_LIMIT = atof(argv[2]);\n\n        k = atof(argv[3]);;\n        L = atof(argv[4]);;\n        ////////////////////////////////////////////\n\n        ////////////////////////////////////////////\n        MPI_MyBBInit();\n        ////////////////////////////////////////////\n\n        ////////////////////////////////////////////\n        if (world_rank == 0)\n        {\n            cout <<         \"---------------------------------------------\" << endl ;\n            //\tcout << \"Instance\\t->\" << argv[1] << endl;\n            cout << \"Instance\\t-> \" << name << endl;\n            cout <<         \"---------------------------------------------\" << endl ;\n\n            cout << \"Time limit\\t->\" << TIME_LIMIT << endl;\n        }\n        ////////////////////////////////////////////\n\n        ////////////////////////////////////////////\n        kHNDP_instance_read(name.c_str());\n        //\tkHNDP_instance_read(argv[1]);\n        ////////////////////////////////////////////\n\n        ////////////////////////////////////////////\n        master_kHNDP_initialize();\n        ////////////////////////////////////////////\n\n        ////////////////////////////////////////////\n        if (world_rank == 0)\n            master();\n        else\n            slave();\n        ////////////////////////////////////////////\n\n        ////////////////////////////////////////////\n        master_kHNDP_free();\n        ////////////////////////////////////////////\n\n        ////////////////////////////////////////////\n        if (world_rank == 0)\n            master_kHNDP_Output();\n        ////////////////////////////////////////////\n\n        ////////////////////////////////////////////\n        kHNDP_instance_free();\n        ////////////////////////////////////////////\n\n        ////////////////////////////////////////////\n        MPI_MyBBfree();\n        ////////////////////////////////////////////\n\n    }\n    else\n    {\n        if (world_rank == 0)\n        {\n            cout << \"ERROR Invalid Number of Parameters \" << endl;\n            cout << \"  usage: mpirun -np NB_PROCS./FILENAME INSTANCE TIME_LIMIT K L\" << endl;\n        }\n    }\n\n    ////////////////////////////////////////////\n    //Finalizing the MPI environment\n    MPI_Finalize();\n    ////////////////////////////////////////////\n\n    return 1;\n}\n",
  "import numpy as np\nimport random\nfrom. import noise\n\nX = [\n    np.array([\n        0,0,1,0,0,\n        0,1,1,1,0,\n        1,0,1,0,1,\n        0,0,1,0,0,\n        0,0,1,0,0,\n    ], dtype=float),\n    np.array([\n        0,0,1,0,0,\n        0,0,0,1,0,\n        1,1,1,1,1,\n        0,0,0,1,0,\n        0,0,1,0,0,\n    ], dtype=float),\n    np.array([\n        0,0,1,0,0,\n        0,0,1,0,0,\n        1,0,1,0,1,\n        0,1,1,1,0,\n        0,0,1,0,0,\n    ], dtype=float),\n    np.array([\n        0,0,1,0,0,\n        0,1,0,0,0,\n        1,1,1,1,1,\n        0,1,0,0,0,\n        0,0,1,0,0,\n    ], dtype=float),\n]\n\n# Add noise data\nX.append(noise.binary(X[0]))\nX.append(noise.binary(X[1]))\nX.append(noise.binary(X[2]))\nX.append(noise.binary(X[3]))\n\nY = [\n    np.array([1,0,0,0], dtype=float),\n    np.array([0,1,0,0], dtype=float),\n    np.array([0,0,1,0], dtype=float),\n    np.array([0,0,0,1], dtype=float),\n    np.array([1,0,0,0], dtype=float),\n    np.array([0,1,0,0], dtype=float),\n    np.array([0,0,1,0], dtype=float),\n    np.array([0,0,0,1], dtype=float),\n]\n\ntrain_data = [\n    (X[0], Y[0]),\n    (X[1], Y[1]),\n    (X[2], Y[2]),\n    (X[3], Y[3]),\n]\n\ntest_data = [\n    (noise.binary(X[0]), Y[0]),\n    (noise.binary(X[1]), Y[1]),\n    (noise.binary(X[2]), Y[2]),\n    (noise.binary(X[3]), Y[3]),\n]\n\ndef display(x):\n    x = x.reshape(25)\n    def strof(i):\n        if x[i] > 0.75:   return '\u25a0'\n        elif x[i] > 0.5:  return '\u25a5'\n        elif x[i] > 0.25: return '\u25a1'\n        else:             return''\n    for i in range(0, 25, 5):\n        print(\"{} {} {} {} {}\".format(strof(i), strof(i+1), strof(i+2), strof(i+3), strof(i+4)))\n\n",
  "package com.geektcp.alpha.design.pattern.flyweight;\n\nimport java.util.HashMap;\n\n/**\n * @author tanghaiyang on 2019/9/21.\n */\npublic class FlyweightFactory {\n\n    private HashMap<String, Flyweight> flyweights = new HashMap<>();\n\n    Flyweight getFlyweight(String intrinsicState) {\n        if (!flyweights.containsKey(intrinsicState)) {\n            Flyweight flyweight = new ConcreteFlyweight(intrinsicState);\n            flyweights.put(intrinsicState, flyweight);\n        }\n        return flyweights.get(intrinsicState);\n    }\n}\n",
  "import React from'react';\nimport { Components, registerComponent } from '../../lib/vulcan-lib';\nimport { useMulti } from '../../lib/crud/withMulti';\n\nconst styles = (theme: ThemeType): JssStyles => ({\n  icon: {\n    marginRight: 4\n  }\n})\n\n\nconst AFSuggestCommentsList = ({ classes }: {\n  classes: ClassesType,\n}) => {\n  const { results, loadMoreProps } = useMulti({\n    terms: {view:\"alignmentSuggestedComments\"},\n    enableTotal: true, itemsPerPage: 30,\n    collectionName: \"Comments\",\n    fragmentName: 'SuggestAlignmentComment',\n    fetchPolicy: 'cache-and-network',\n  });\n  const { SunshineListTitle, OmegaIcon, AFSuggestCommentsItem, LoadMore } = Components;\n  \n  if (results && results.length) {\n    return <div>\n      <SunshineListTitle>\n        <div><OmegaIcon className={classes.icon}/> Suggested Comments</div>\n      </SunshineListTitle>\n      {results.map(comment =>\n        <div key={comment._id} >\n          <AFSuggestCommentsItem comment={comment}/>\n        </div>\n      )}\n      <LoadMore {...loadMoreProps}/>\n    </div>\n  } else {\n    return null\n  }\n}\n\nconst AFSuggestCommentsListComponent = registerComponent('AFSuggestCommentsList', AFSuggestCommentsList, {styles});\n\ndeclare global {\n  interface ComponentTypes {\n    AFSuggestCommentsList: typeof AFSuggestCommentsListComponent\n  }\n}\n\n",
  "package org.cyclops.everlastingabilities.ability;\n\nimport net.minecraft.entity.Entity;\nimport net.minecraft.entity.EntityLivingBase;\nimport net.minecraft.entity.IEntityOwnable;\nimport net.minecraft.entity.player.EntityPlayer;\nimport net.minecraft.item.EnumRarity;\nimport net.minecraft.util.math.AxisAlignedBB;\nimport net.minecraft.util.math.MathHelper;\nimport net.minecraft.util.math.RayTraceResult;\nimport net.minecraft.util.math.Vec3d;\nimport net.minecraft.world.World;\nimport org.cyclops.cyclopscore.helper.MinecraftHelpers;\nimport org.cyclops.everlastingabilities.ability.config.AbilityPowerStareConfig;\n\nimport java.util.List;\n\n/**\n * Ability type for pushing in the direction your looking mobs away.\n * @author rubensworks\n */\npublic class AbilityTypePowerStare extends AbilityTypeDefault {\n\n    private static final int TICK_MODULUS = MinecraftHelpers.SECOND_IN_TICKS / 4;\n\n    public AbilityTypePowerStare(String id, int rarity, int maxLevel, int baseXpPerLevel) {\n        super(id, rarity, maxLevel, baseXpPerLevel);\n    }\n\n    @Override\n    public void onTick(EntityPlayer player, int level) {\n    \n        if ( AbilityPowerStareConfig.requireSneak &&!player.isSneaking() ) {\n            return;\n        }\n\n        World world = player.world;\n        if (!world.isRemote && player.world.getTotalWorldTime() % TICK_MODULUS == 0) {\n            int range = level * 10;\n            double eyeHeight = player.getEyeHeight();\n            Vec3d lookVec = player.getLookVec();\n            Vec3d origin = new Vec3d(player.posX, player.posY + eyeHeight, player.posZ);\n            Vec3d direction = origin.add(lookVec.x * range, lookVec.y * range, lookVec.z * range);\n\n            List<Entity> list = world.getEntitiesWithinAABBExcludingEntity(player,\n                    player.getEntityBoundingBox().expand(lookVec.x * range, lookVec.y * range, lookVec.z * range)\n                           .grow((double) range));\n            for (Entity e : list) {\n                if (e.canBeCollidedWith() && (!(e instanceof IEntityOwnable) || ((IEntityOwnable) e).getOwner()!= player) &&!player.isOnSameTeam(e)) {\n                    Entity entity = null;\n                    float f10 = e.getCollisionBorderSize();\n                    AxisAlignedBB axisalignedbb = e.getEntityBoundingBox().expand((double) f10, (double) f10, (double) f10);\n                    RayTraceResult mop = axisalignedbb.calculateIntercept(origin, direction);\n\n                    if (axisalignedbb.contains(origin)) {\n                        entity = e;\n                    } else if (mop!= null) {\n                        double distance = origin.distanceTo(mop.hitVec);\n                        if (distance < range || range == 0.0D) {\n                            if (e == player.getRidingEntity() &&!player.canRiderInteract()) {\n                                if (range == 0.0D) {\n                                    entity = e;\n                                }\n                            } else {\n                                entity = e;\n                            }\n                        }\n                    }\n\n                    if (entity!= null) {\n                        double dx = entity.posX - player.posX;\n                        double dy = entity.posY - player.posY;\n                        double dz = entity.posZ - player.posZ;\n                        double d = (double) MathHelper.sqrt(dx * dx + dy * dy + dz * dz);\n                        double m = 1 / (2 * (Math.max(1, d)));\n                        dx *= m;\n                        dy *= m;\n                        dz *= m;\n\n                        double strength = 3F;\n\n                        entity.motionX = dx * strength;\n                        entity.motionY = dy * strength;\n                        entity.motionZ = dz * strength;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n}\n",
  "# IMR R1 (blue close)\nSee [usage instructions](https://github.com/jaakkopasanen/AutoEq#usage) for more options and info.\n\n### Parametric EQs\nIn case of using parametric equalizer, apply preamp of **-4.8dB** and build filters manually\nwith these parameters. The first 5 filters can be used independently.\nWhen using independent subset of filters, apply preamp of **-4.8dB**.\n\n| Type    | Fc      |    Q | Gain     |\n|:--------|:--------|:-----|:---------|\n| Peaking | 420 Hz  | 0.43 | -1.1 dB  |\n| Peaking | 1322 Hz | 0.56 | 5.5 dB   |\n| Peaking | 2921 Hz | 2.12 | -9.8 dB  |\n| Peaking | 5158 Hz | 2.2  | -11.8 dB |\n| Peaking | 6811 Hz | 3.96 | 6.6 dB   |\n| Peaking | 13 Hz   | 0.72 | 0.7 dB   |\n| Peaking | 36 Hz   | 0.91 | -0.4 dB  |\n| Peaking | 9424 Hz | 4.17 | 0.6 dB   |\n\n### Fixed Band EQs\nIn case of using fixed band (also called graphic) equalizer, apply preamp of **-5.3dB**\n(if available) and set gains manually with these parameters.\n\n| Type    | Fc       |    Q | Gain     |\n|:--------|:---------|:-----|:---------|\n| Peaking | 31 Hz    | 1.41 | -0.1 dB  |\n| Peaking | 62 Hz    | 1.41 | -0.2 dB  |\n| Peaking | 125 Hz   | 1.41 | -0.2 dB  |\n| Peaking | 250 Hz   | 1.41 | -0.5 dB  |\n| Peaking | 500 Hz   | 1.41 | -0.0 dB  |\n| Peaking | 1000 Hz  | 1.41 | 4.9 dB   |\n| Peaking | 2000 Hz  | 1.41 | 1.7 dB   |\n| Peaking | 4000 Hz  | 1.41 | -11.3 dB |\n| Peaking | 8000 Hz  | 1.41 | 2.0 dB   |\n| Peaking | 16000 Hz | 1.41 | -0.1 dB  |\n\n### Graphs\n![](https://raw.githubusercontent.com/jaakkopasanen/AutoEq/master/results/referenceaudioanalyzer/zero/IMR%20R1%20(blue%20close)/IMR%20R1%20(blue%20close).png)",
  "module SmartStats\n  class IpCounter < Counter\n    private\n\n    def extract_key(value)\n      value.to_s[/\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b/]\n    end\n  end\nend\n",
  "\ufeffusing System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\nusing System.Web;\nusing System.Web.Mvc;\nusing VMS.Models;\n\nnamespace VMS.Controllers\n{\n    public class SIFController : Controller\n    {\n        // GET: SIF\n        public ActionResult Index()\n        {\n            return View(\"sif\");\n        }\n        public ActionResult Sif(FormCollection collection)\n        {\n            return View(\"sif\");\n        }\n\n        [HttpPost]\n        public ActionResult SubmitAction()\n        {\n            App_Code.Utilities util = new App_Code.Utilities();\n\n            #region \"dataGet\"\n            string orgName = Request.Form[\"orgname\"];\n            string []orgType = Request.Form[\"orgtype\"].Split(new Char[] {','});\n            DateTime orgDOE = DateTime.ParseExact(Request.Form[\"orgdoe\"], \"d/M/yyyy\", System.Globalization.CultureInfo.InvariantCulture);\n            string orgEmail = Request.Form[\"orgemail\"];\n\n            string headOfficeStreet = Request.Form[\"orghoastreet\"];\n            string headOfficeCity = Request.Form[\"orghoacity\"];\n            string headOfficeThana = Request.Form[\"orghoathana\"];\n            string headOfficeCountry = Request.Form[\"orghoacountry\"];\n\n            string salesOfficeStreet = Request.Form[\"orgsoastreet\"];\n            string salesOfficeCity = Request.Form[\"orgsoacity\"];\n            string salesOfficeThana = Request.Form[\"orgsoathana\"];\n            string salesOfficeCountry = Request.Form[\"orgsoacountry\"];\n\n            string factoryOfficeStreet = Request.Form[\"orgfastreet\"];\n            string factoryOfficeCity = Request.Form[\"orgfacity\"];\n            string factoryOfficeThana = Request.Form[\"orgfathana\"];\n            string factoryOfficeCountry = Request.Form[\"orgfacountry\"];\n\n            string warehouseOfficeStreet = Request.Form[\"orgwhdastreet\"];\n            string warehouseOfficeCity = Request.Form[\"orgwhdacity\"];\n            string warehouseOfficeThana = Request.Form[\"orgwhdathana\"];\n            string warehouseOfficeCountry = Request.Form[\"orgwhdacountry\"];\n\n            string primaryContactDesig = Request.Form[\"orgcontactprimarydesig\"];\n            string primaryContactName = Request.Form[\"orgcontactprimaryname\"];\n            string primaryContactCell = Request.Form[\"orgcontactprimarycell\"];\n            string primaryContactEmail = Request.Form[\"orgcontactprimaryemail\"];\n\n            string secondaryContactDesig = Request.Form[\"orgcontactsecondarydesig\"];\n            string secondaryContactName = Request.Form[\"orgcontactsecondaryname\"];\n            string secondaryContactCell = Request.Form[\"orgcontactsecondarycell\"];\n            string secondaryContactEmail = Request.Form[\"orgcontactsecondaryemail\"];\n\n            string representativeContactDesig = Request.Form[\"orgcontactrepresentativedesig\"];\n            string representativeContactName = Request.Form[\"orgcontactrepresentativename\"];\n            string representativeContactCell = Request.Form[\"orgcontactrepresentativephone\"];\n            string representativeContactEmail = Request.Form[\"orgcontactrepresentativeemail\"];\n\n            string website = Request.Form[\"orgwebsite\"];\n            #endregion \"dataGet\"\n\n            if (!util.checkVendorNameExists(orgName))\n            {\n                if (!util.checkVendorEmailExists(orgEmail))\n                {\n                    Vendor_SIF_Form vendor = new Vendor_SIF_Form();\n                    vendor.VendorName = orgName;\n                    vendor.Doe = orgDOE;\n                    vendor.Website = website;\n                    vendor.Email = orgEmail;\n                    string vendorGuid = vendor.InsertVendor(vendor);\n\n                    Model_Contact mcRep = new Model_Contact();\n                    mcRep.VendorGUID = vendorGuid;\n                    mcRep.Designation = representativeContactDesig;\n                    mcRep.Name = representativeContactName;\n                    mcRep.Phone = representativeContactCell;\n                    mcRep.Email = representativeContactEmail;\n                    mcRep.InsertContactRepresentative(mcRep);\n\n                    int productsCount = (Request.Form.Count - 33) / 2;\n                    //string[] productName = new string[productsCount];\n                    //string[] productCategory = new string[productsCount];\n\n                    for (int i = 0; i < productsCount; i++)\n                    {\n                        Model_Product mp = new Model_Product();\n                        mp.VendorGUID = vendorGuid;\n                        mp.ProductName = Request.Form[\"product\" + i];\n                        mp.ProductCategory = Request.Form[\"productType\" + i];\n                        if (mp.ProductCategory.ToLower() == \"service\")\n                        {\n                            mp.IsService = \"Y\";\n                        }\n                        else\n                        {\n                            mp.IsService = \"N\";\n                        }\n                        mp.InsertProduct(mp);\n                        //productName[i] = Request.Form[\"product\" + i];\n                        //productCategory[i] = Request.Form[\"productType\" + i];\n                    }\n\n                    foreach (string upload in Request.Files)\n                    {\n                        if (!(Request.Files[upload]!= null && Request.Files[upload].ContentLength > 0)) continue;\n\n                        HttpPostedFileBase file = Request.Files[upload];\n\n                        if (file == null)\n                        {\n                            ModelState.AddModelError(\"File\", \"Please Upload Your file\");\n                        }\n                        else if (file.ContentLength > 0)\n                        {\n                            checkFolderPath(vendorGuid);\n\n                            string NewFileName = upload.ToString() + Path.GetExtension(file.FileName).ToLower(); ;\n                            if ((Path.GetExtension(file.FileName).ToLower().Contains(\".jpg\"))\n                                || (Path.GetExtension(file.FileName).ToLower().Contains(\".jpeg\"))\n                                || (Path.GetExtension(file.FileName).ToLower().Contains(\".png\"))\n                                || (Path.GetExtension(file.FileName).ToLower().Contains(\".pdf\")))\n                            {\n                                if (upload.ToString().Contains(\"_proFile_\"))\n                                {\n                                    file.SaveAs(Server.MapPath(\"~/Content/Uploads/\" + vendorGuid + \"/Products/\" + NewFileName));\n\n                                    PImage pImage = new PImage();\n                                    pImage.VendorGuid = vendorGuid;\n                                    pImage.PName = upload.ToString().Substring(0, upload.ToString().IndexOf(\"_proFile_\"));\n                                    pImage.FileNameUploaded = file.FileName.ToString();\n                                    pImage.FileExtention = Path.GetExtension(file.FileName).ToLower();\n                                    pImage.FileRenamed = upload.ToString();\n                                    pImage.FileSavedRootPath = \"/Content/Uploads/\" + vendorGuid + \"/Products/\" + NewFileName;\n                                    pImage.FileSavedAbsolutePath = Server.MapPath(\"~/Content/Uploads/\" + vendorGuid + \"/Products/\" + NewFileName);\n                                    pImage.InsertProductImage();\n                                }\n                                else if (upload.ToString().Contains(\"_vCard\"))\n                                {\n                                    file.SaveAs(Server.MapPath(\"~/Content/Uploads/\" + vendorGuid + \"/VCards/\" + NewFileName));\n\n                                    VCard vc = new VCard();\n                                    vc.VendorGuid = vendorGuid;\n                                    vc.VcpName = upload.ToString().Substring(0, upload.ToString().IndexOf(\"_vCard\"));\n                                    vc.FileNameUploaded = file.FileName.ToString();\n                                    vc.FileExtention = Path.GetExtension(file.FileName).ToLower();\n                                    vc.FileRenamed = upload.ToString();\n                                    vc.FileSavedRootPath = \"/Content/Uploads/\" + vendorGuid + \"/VCards/\" + NewFileName;\n                                    vc.FileSavedAbsolutePath = Server.MapPath(\"~/Content/Uploads/\" + vendorGuid + \"/VCards/\" + NewFileName);\n                                    vc.InsertVCard();\n                                }\n                            }\n                        }\n                    }\n\n                    for (int i = 0; i < orgType.Length; i++)\n                    {\n                        Model_Business_Type businessType = new Model_Business_Type();\n                        businessType.VendorGUID = vendorGuid;\n                        businessType.BusinessTypeName = orgType[i].ToString();\n                        businessType.SearchMapBusinessType(businessType);\n                    }\n\n                    Model_Address maHo = new Model_Address();\n                    maHo.VendorGUID = vendorGuid;\n                    maHo.StreetAddress = headOfficeStreet;\n                    maHo.City = headOfficeCity;\n                    maHo.Thana = headOfficeThana;\n                    maHo.Country = headOfficeCountry;\n                    maHo.Insert_Address_HO(maHo);\n\n                    if ((!string.IsNullOrEmpty(salesOfficeStreet)) &&",
  "---\nlayout: default\ntitle: \"404: Page not found\"\npermalink: /404\n---\n\n<div class=\"page\">\n  <h1 class=\"page-title\">404: Page not found</h1>\n\n  <p class=\"lead\">Sorry, you engaged in so much handwaving that you fell off the rails of the site. <a href=\"{{ site.baseurl }}\">Head back home</a> to try finding it again, or search for it on the <a href=\"{{ site.baseurl }}/archive\">archives page</a>.</p>\n</div>\n",
  "require'spec_helper'\n\ndescribe Subject do\n  context 'validations' do\n    let(:subject) { build :subject }\n\n    it 'is invalid without name' do\n      expect(Subject.new).to have(1).error_on(:name)\n    end\n\n    it 'is invalid with duplicated name for the same course' do\n      create :subject, name: 'Intro'\n      duplicated = Subject.new(name: 'Intro')\n      expect(duplicated).to have(1).error_on(:name)\n    end\n\n    it 'is valid with duplicated name for different courses' do\n      rails = create :course, name: 'Rails'\n      design = create :course, name: 'Design'\n\n      rails_intro = create :subject, name: 'Intro', course: rails\n      design_intro = Subject.new(name: 'Intro', course: design)\n\n      expect(design_intro).to be_valid\n    end\n\n    it 'is invalid without slug' do\n      expect(Subject.new).to have(1).error_on(:slug)\n    end\n\n    it 'is invalid with duplicated slug for the same course' do\n      create :subject, slug: 'rails-for-designers'\n      duplicated = Subject.new(slug: 'rails-for-designers')\n      expect(duplicated).to have(1).error_on(:slug)\n    end\n\n    it 'is valid with duplicated name for different courses' do\n      rails = create :course, name: 'Rails'\n      design = create :course, name: 'Design'\n\n      rails_intro = create :subject, name: 'Intro', course: rails\n      design_intro = Subject.new(name: 'Intro', course: design)\n\n      expect(design_intro).to be_valid\n    end\n  end\n\n  context 'validations' do\n    it 'belongs to Course' do\n      rails = create :course\n      intro = create :subject, course: rails\n      expect(intro.course).to eql rails\n    end\n  end\nend\n",
  "html, body {\n    padding: 0;\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, \"Roboto\", \"Droid Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    font-size: 14px;\n}\n\n.wrapper {\n    width: 50rem;\n    max-width: 100%;\n    padding: 1rem;\n    margin: 0 auto;\n}\n\nfieldset {\n    padding: 1rem;\n    border: solid 1px #ccc;\n}\n\nlegend {\n    padding: 0 1rem;\n    text-transform: uppercase;\n}\n\nlabel {\n    font-weight: 500;\n}",
  "// Copyright (c) 2020 PaddlePaddle Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n#include \"lite/operators/acos_op.h\"\n#include \"lite/core/op_registry.h\"\n\nnamespace paddle {\nnamespace lite {\nnamespace operators {\n\nbool AcosOpLite::CheckShape() const {\n  CHECK_OR_FALSE(param_.X);\n  CHECK_OR_FALSE(param_.Out);\n  return true;\n}\n\nbool AcosOpLite::InferShape() {\n  lite::DDim x_dims = param_.X->dims();\n  param_.Out->Resize(x_dims);\n\n  return true;\n}\n\nbool AcosOpLite::AttachImpl(const cpp::OpDesc &op_desc, lite::Scope *scope) {\n  auto x = op_desc.Input(\"X\").front();\n  auto out = op_desc.Output(\"Out\").front();\n\n  param_.X = scope->FindVar(x)->GetMutable<lite::Tensor>();\n  param_.Out = scope->FindVar(out)->GetMutable<lite::Tensor>();\n\n  return true;\n}\n\n}  // namespace operators\n}  // namespace lite\n}  // namespace paddle\n\nREGISTER_LITE_OP(acos, paddle::lite::operators::AcosOpLite);\n",
  "### ToSlugParam\n\nConvert strings and symbols to slug param\n\nTransliteration + Parameterization for slugs building\n\n#### Install\n\n```ruby\ngem \"to_slug_param\", \"~> 1.2\"\n```\n\n<a href=\"http://rubygems.org/gems/to_slug_param\">RubyGems/to_slug_param</a>\n\n#### Using\n\nFor russian transliteration by default\n\n```ruby\nI18n.enforce_available_locales = true\n\nmodule DummyApp\n  class Application < Rails::Application\n    config.i18n.default_locale = :ru\n  end\nend\n```\n\n```ruby\n\"\u041f\u0440\u0438\u0432\u0435\u0442 \u041c\u0438\u0440! Hello world!\".to_slug_param\n# => \"privet-mir-hello-world\"\n\nString.to_slug_param(\"\u041f\u0440\u0438\u0432\u0435\u0442 \u041c\u0438\u0440! Hello world!\")\n# => \"privet-mir-hello-world\"\n```\n\nBe carefully with file extension\n\n```ruby\n\"\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442.doc\".to_slug_param\n# => \"dokument-doc\"\n```\n\nFor filenames:\n\n```ruby\n\"/\u0434\u043e\u043a\u0438/dir/\u0442\u0435\u0441\u0442/\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442.doc\".slugged_filename         #=> \"dokument.doc\"\nString.slugged_filename(\"/\u0434\u043e\u043a\u0438/dir/\u0442\u0435\u0441\u0442/\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442.doc\") #=> \"dokument.doc\"\n```\n\nFor full file path:\n\n```ruby\n\"/\u0434\u043e\u043a\u0438/dir/\u0442\u0435\u0441\u0442/\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442.doc\".slugged_filepath         #=> \"/\u0434\u043e\u043a\u0438/dir/\u0442\u0435\u0441\u0442/dokument.doc\"\nString.slugged_filepath(\"/\u0434\u043e\u043a\u0438/dir/\u0442\u0435\u0441\u0442/\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442.doc\") #=> \"/\u0434\u043e\u043a\u0438/dir/\u0442\u0435\u0441\u0442/dokument.doc\"\n```\n\nParams\n\n```ruby\n\"\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442.doc\".to_slug_param(locale: :ru) # => \"dokument-doc\"\n\"\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442.doc\".to_slug_param(locale: :en) # => \"doc\"\n```\n\n```ruby\n\"\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442.doc\".to_slug_param(sep: '_', locale: :ru) # => \"dokument_doc\"\n\"\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442.doc\".to_slug_param(sep: '_', locale: :en) # => \"doc\"\n```\n\n#### HOW TO TEST\n\nFor testing there is a [Dummy App](./spec/dummy_app).\n\nYou can run specs for this Dymmy App and check if they pass.\n\n- cd **spec/dummy_app**\n- Follow **spec/dummy_app/README.md**\n\n### MIT-LICENSE\n\n##### Copyright (c) 2013-2014 [Ilya N.Zykin]\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n/**\n * Styled spinner component\n */\nexport declare class NbSpinnerComponent {\n    static readonly SIZE_XXSMALL = \"xxsmall\";\n    static readonly SIZE_XSMALL = \"xsmall\";\n    static readonly SIZE_SMALL = \"small\";\n    static readonly SIZE_MEDIUM = \"medium\";\n    static readonly SIZE_LARGE = \"large\";\n    static readonly SIZE_XLARGE = \"xlarge\";\n    static readonly SIZE_XXLARGE = \"xxlarge\";\n    static readonly STATUS_ACTIVE = \"active\";\n    static readonly STATUS_DISABLED = \"disabled\";\n    static readonly STATUS_PRIMARY = \"primary\";\n    static readonly STATUS_INFO = \"info\";\n    static readonly STATUS_SUCCESS = \"success\";\n    static readonly STATUS_WARNING = \"warning\";\n    static readonly STATUS_DANGER = \"danger\";\n    size: string;\n    status: string;\n    /**\n     * Loading text that is shown near the icon\n     * @type string\n     */\n    message: string;\n    /**\n     * Spiiner size, available sizes:\n     * xxsmall, xsmall, small, medium, large, xlarge, xxlarge\n     * @param {string} val\n     */\n    private setSize;\n    /**\n     * Spiiner status (adds specific styles):\n     * active, disabled, primary, info, success, warning, danger\n     * @param {string} val\n     */\n    private setStatus;\n    readonly xxsmall: boolean;\n    readonly xsmall: boolean;\n    readonly small: boolean;\n    readonly medium: boolean;\n    readonly large: boolean;\n    readonly xlarge: boolean;\n    readonly xxlarge: boolean;\n    readonly active: boolean;\n    readonly disabled: boolean;\n    readonly primary: boolean;\n    readonly info: boolean;\n    readonly success: boolean;\n    readonly warning: boolean;\n    readonly danger: boolean;\n}\n",
  "\ufeffnamespace Microsoft.eShopOnContainers.Services.Catalog.API.Infrastructure.Exceptions;\n\n/// <summary>\n/// Exception type for app exceptions\n/// </summary>\npublic class CatalogDomainException : Exception\n{\n    public CatalogDomainException()\n    { }\n\n    public CatalogDomainException(string message)\n        : base(message)\n    { }\n\n    public CatalogDomainException(string message, Exception innerException)\n        : base(message, innerException)\n    { }\n}\n",
  "\ninterface InterfaceUsersService {\n  userId?: string,\n  firstName?: string,\n  lastName?: string,\n  email?: string,\n  phone?: string,\n  gender?: string,\n  dateBirth?: string,\n  password?: string,\n  token?: string\n  admin: boolean\n  emailVerified?: Date\n}\n\ninterface interfaceLogin {\n  email: string,\n  password: string\n}\n\nexport { InterfaceUsersService, interfaceLogin }\n",
  "#include \"CubeRenderer.h\"\n\n//#include \"../../Engine/Registries/ResourceManager.h\"\n\nCubeRenderer::CubeRenderer()\n{\n\t\n\timg.create(16, 16, vn::u8vec4(255.0f, 0.0f, 0.0f, 255.0f));\n\n\t//img = resources::TexManager.getSheet();\n\t//img.saveToFile(\"test.png\");\n\n\tm_shader.load(\"res/Shaders/Other/vert.glsl\", \"res/Shaders/Other/frag.glsl\");\n\n\ttex.loadFromImage(img);\n\n\n\tstd::vector<float> vertexCoords\n\t{\n\t\t//Back\n\t\t1, 0, 0,\n\t\t0, 0, 0,\n\t\t0, 1, 0,\n\t\t1, 1, 0,\n\n\t\t//Front\n\t\t0, 0, 1,\n\t\t1, 0, 1,\n\t\t1, 1, 1,\n\t\t0, 1, 1,\n\n\t\t//Right\n\t\t1, 0, 1,\n\t\t1, 0, 0,\n\t\t1, 1, 0,\n\t\t1, 1, 1,\n\n\t\t//Left\n\t\t0, 0, 0,\n\t\t0, 0, 1,\n\t\t0, 1, 1,\n\t\t0, 1, 0,\n\n\t\t//Top\n\t\t0, 1, 1,\n\t\t1, 1, 1,\n\t\t1, 1, 0,\n\t\t0, 1, 0,\n\n\t\t//Bottom\n\t\t0, 0, 0,\n\t\t1, 0, 0,\n\t\t1, 0, 1,\n\t\t0, 0, 1.\n\t};\n\n\tstd::vector<unsigned int> indices\n\t{\n\t\t0, 1, 2,\n\t\t2, 3, 0,\n\n\t\t4, 5, 6,\n\t\t6, 7, 4,\n\n\t\t8, 9, 10,\n\t\t10, 11, 8,\n\n\t\t12, 13, 14,\n\t\t14, 15, 12,\n\n\t\t16, 17, 18,\n\t\t18, 19, 16,\n\n\t\t20, 21, 22,\n\t\t22, 23, 20\n\t};\n\n\tstd::vector<float> texCoords \n\t{ \n\t0.0f, 0.0f, 0.0f, 1.0f, 1.0f, 1.0f, 1.0f, 0.0f,\n\t0.0f, 0.0f, 0.0f, 1.0f, 1.0f, 1.0f, 1.0f, 0.0f,\n\t0.0f, 0.0f, 0.0f, 1.0f, 1.0f, 1.0f, 1.0f, 0.0f,\n\t0.0f, 0.0f, 0.0f, 1.0f, 1.0f, 1.0f, 1.0f, 0.0f,\n\t0.0f, 0.0f, 0.0f, 1.0f, 1.0f, 1.0f, 1.0f, 0.0f,\n\t0.0f, 0.0f, 0.0f, 1.0f, 1.0f, 1.0f, 1.0f, 0.0f\n\t};\n\t\n\t/*for (auto& f : resources::TexManager.getTexCoords(\"grass_side\"))\n\t{\n\t\ttexCoords.push_back(f);\n\t}\n\tfor (auto& f : resources::TexManager.getTexCoords(\"grass_side\"))\n\t{\n\t\ttexCoords.push_back(f);\n\t}\n\tfor (auto& f : resources::TexManager.getTexCoords(\"grass_side\"))\n\t{\n\t\ttexCoords.push_back(f);\n\t}\n\tfor (auto& f : resources::TexManager.getTexCoords(\"grass_side\"))\n\t{\n\t\ttexCoords.push_back(f);\n\t}\n\tfor (auto& f : resources::TexManager.getTexCoords(\"grass_top\"))\n\t{\n\t\ttexCoords.push_back(f);\n\t}\n\tfor (auto& f : resources::TexManager.getTexCoords(\"dirt\"))\n\t{\n\t\ttexCoords.push_back(f);\n\t}*/\n\n\n\n\t//m_cubeModel.addData({ vertexCoords, indices, texCoords});\n}\n\nvoid CubeRenderer::addCube(vn::Transform& entity)\n{\n\tm_queue.push_back(entity);\n}\n\nvoid CubeRenderer::render(Camera& cam)\n{\n\t//m_shader.use();\n\t//m_cubeModel.bindVAO();\n\ttex.bind();\n\n\t//m_shader.setMat4(\"view\", cam.getViewMatrix(cam));\n\t//m_shader.setMat4(\"proj\", cam.getProjMatrix());\n\n\tglEnable(GL_CULL_FACE);\n\n\tfor (auto& entity : m_queue)\n\t{\n\t\t//m_shader.setMat4(\"model\", makeModelMatrix(entity));\n\n\t\t//glDrawElements(GL_TRIANGLES, m_cubeModel.getNumIndicies(), GL_UNSIGNED_INT, nullptr);\n\t}\n}\n\nvoid CubeRenderer::clearQueue()\n{\n\tm_queue.clear();\n}\n\nCubeRenderer::~CubeRenderer()\n{\n\n}\n",
  "<?php\n/**\n * Template for displaying default template Learnpress Course Collections element layout layout-slider.\n *\n * This template can be overridden by copying it to yourtheme/builderpress/course-collections/layout-grid.php.\n *\n * @author      ThimPress\n * @package     BuilderPress/Templates\n * @version     1.0.0\n * @author      Thimpress, leehld\n */\n\n/**\n * Prevent loading this file directly\n */\ndefined( 'ABSPATH' ) || exit;\n$size = apply_filters( 'builder-press/course-collections/layout-grid/image-size', '360x238' );\n$course_link  = $params['course_link'];\n?>\n<div class=\"wrap-element\">\n    <?php\n        if($course_link):\n   ?>\n            <a href=\"<?php echo esc_url($course_link['url']);?>\" class=\"link-view-all\">\n                <?php echo esc_html($course_link['title']);?>\n            </a>\n    <?php\n        endif;\n   ?>\n    <div class=\"row\">\n    <?php\n        $i=1;\n        while ( $collections->have_posts() ) {\n            $collections->the_post();\n   ?>\n            <div class=\"col-sm-6 col-lg-4\">\n                <div class=\"course-item color-<?php echo $i;?>\">\n                    <div class=\"course-image\">\n                        <a href=\"<?php the_permalink();?>\">\n                           <?php\n                                builder_press_get_attachment_image( get_post_thumbnail_id( get_the_ID() ), $size );\n                          ?>\n                        </a>\n                    </div>\n\n                    <div class=\"course-text\">\n                        <h4 class=\"title\">\n                            <a href=\"<?php the_permalink();?>\">\n                                <?php the_title();?>\n                            </a>\n                        </h4>\n                        <div class=\"content\">\n                            <?php echo get_post_meta( get_the_ID(), '_thim_course_collection_sub_title', true );?>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        <?php\n            $i++;\n    }\n       ?>\n</div>\n</div>",
  "<?php\n\nnamespace AlibabaCloud\\EcsInc;\n\n/**\n * @method string getResourceOwnerId()\n * @method $this withResourceOwnerId($value)\n * @method string getResourceOwnerAccount()\n * @method $this withResourceOwnerAccount($value)\n * @method string getOwnerAccount()\n * @method $this withOwnerAccount($value)\n * @method string getCommodityCode()\n * @method $this withCommodityCode($value)\n * @method string getOwnerId()\n * @method $this withOwnerId($value)\n */\nclass GetActiveRegions extends Rpc\n{\n}\n",
  "\ufeffnamespace MSTeams.Karma\r\n{\r\n    using System.Web.Http;\r\n\r\n    /// <summary>\r\n    /// Web API configuration.\r\n    /// </summary>\r\n    public static class WebApiConfig\r\n    {\r\n        /// <summary>\r\n        /// Registers the API configuration.\r\n        /// </summary>\r\n        /// <param name=\"config\">The configuration.</param>\r\n        public static void Register(HttpConfiguration config)\r\n        {\r\n            // Web API configuration and services\r\n\r\n            // Web API routes\r\n            config.MapHttpAttributeRoutes();\r\n\r\n            config.Routes.MapHttpRoute(\r\n                name: \"DefaultApi\",\r\n                routeTemplate: \"api/{controller}/{id}\",\r\n                defaults: new { id = RouteParameter.Optional });\r\n        }\r\n    }\r\n}",
  "/*\n * Copyright (C) 2017 Buglife, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\npackage com.buglife.sdk.reporting;\n\nimport com.buglife.sdk.Report;\n\npublic interface BugReporter {\n    void report(Report report, ReportSubmissionCallback callback);\n}\n",
  "# Non-Unicode filenames, command-line args, and environment variables\n\n## Status\n\nThis document is not yet an official WASI proposal. It may be in the\nfuture, but for now it's just an experiment.\n\n## Background\n\nPOSIX-ish platforms don't provide a way to reliably determine the encoding for filenames, command-line arguments, and environment variables. And on Windows, filenames, command-line arguments, and environment variables aren't guaranteed to be well-formed UTF-16.\n\nHowever, applications often need to know the encoding to correctly display, compare, or serialize these names. POSIX provides a flock of environment variables, but for filenames, that assumes that the program is running with the same locale as the user which created the files, which isn't always true. There are also heuristics which can help guess at the encodings of filenames, however they're not reliable.\n\nThere isn't a great reason for imposing the resulting complexity on applications, other than POSIX simply predating Unicode and UTF-8. In practice, many applications end up assuming that the inputs are UTF-8 anyway.\n\nFor WASI, rather than forever insisting that such applications are at fault, it's preferable to define APIs so that the things applications want to do are straightforward.\n\n## Proposal\n\nAll WASI filenames, command-line arguments, and environment variables are valid UTF-8 strings, using the same definition as the [wasm core spec](https://webassembly.github.io/spec/core/binary/values.html#binary-utf8).\n\nWhen the host environment needs to pass in strings which aren't a known and well-formed Unicode encoding, implementations may do any of the following:\n\n - Use the host-specific mechanisms to determine the encoding and transparently transcode the strings into UTF-8,\n - Fail with `EILSEQ`, or\n - Translate strings into *ARF strings*.\n\nSimilarly, when Wasm code passes a string into a WASI API which is an *ARF string*, implementations may either:\n - Fail with `EILSEQ`, or\n - Translate *ARF strings* into host-specific strings.\n\n## ARF strings\n\nARF is the Alternative Representation for Filenames, an encoding for\nrepresenting NUL-terminated strings of potentially non-UTF-8 or ill-formed UTF-16 data, as can occur within\nfilesystem paths, as non-NUL-terminated and valid [UTF-8] strings.\n\n[UTF-8]: https://en.wikipedia.org/wiki/UTF-8\n\nFor a description of ARF strings, see [this page](https://github.com/bytecodealliance/arf-strings/blob/main/README.md).\n",
  "/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\npackage UI;\n\nimport java.sql.SQLException;\nimport java.util.Map;\nimport javax.swing.JOptionPane;\nimport javax.swing.table.DefaultTableModel;\nimport trainalgo.Codes;\nimport trainalgo.stations.Dataset;\n\n/**\n *\n * @author Hishara\n */\npublic class ManageStations extends javax.swing.JFrame {\n\n    private static Map<Integer, String> stationDataTreeMap;\n    Dataset ds;\n    DefaultTableModel defaultTableModel;\n    String selectedStation;\n\n    /**\n     * Creates new form ManageStations\n     */\n    public ManageStations() {\n        initComponents();\n        initTrainInfoDataStruct();\n    }\n\n    private void initTrainInfoDataStruct() {\n        System.out.println(\"Initializing Data Structures\");\n        ds = new Dataset();\n        try {\n            ds.initStationInfoDatastruct();\n            stationDataTreeMap = ds.getStationDataTreeMap();\n            if (stationDataTreeMap == null || stationDataTreeMap.isEmpty()) {\n                JOptionPane.showMessageDialog(this, \"Data set is empty\", \"Exception\", JOptionPane.WARNING_MESSAGE);\n                return;\n            }\n\n            defaultTableModel = new DefaultTableModel();\n            defaultTableModel.addColumn(\"Station ID\");\n            defaultTableModel.addColumn(\"Station Name\");\n            tblStationInfo.setModel(defaultTableModel);\n\n            for (Map.Entry<Integer, String> entry : stationDataTreeMap.entrySet()) {\n                defaultTableModel.insertRow(tblStationInfo.getRowCount(), new Object[]{entry.getKey(), entry.getValue()});\n            }\n            \n            txtExecutionTime.setText(String.valueOf(ds.getExecutionTime()));\n\n        } catch (SQLException e) {\n            JOptionPane.showMessageDialog(this, \"SQL Error : \" + e.getMessage(), \"Exception\", JOptionPane.ERROR_MESSAGE);\n        } catch (Exception e) {\n            JOptionPane.showMessageDialog(this, \"Error : \" + e.getMessage(), \"Exception\", JOptionPane.ERROR_MESSAGE);\n        }\n    }\n\n    private void refreshData() {\n        stationDataTreeMap = ds.getStationDataTreeMap();\n        defaultTableModel.setRowCount(0);\n        for (Map.Entry<Integer, String> entry : stationDataTreeMap.entrySet()) {\n            defaultTableModel.insertRow(tblStationInfo.getRowCount(), new Object[]{entry.getKey(), entry.getValue()});\n        }\n        txtExecutionTime.setText(String.valueOf(ds.getExecutionTime()));\n    }\n\n    /**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        jPanel1 = new javax.swing.JPanel();\n        txtStationName = new javax.swing.JTextField();\n        jLabel1 = new javax.swing.JLabel();\n        jLabel2 = new javax.swing.JLabel();\n        txtStationID = new javax.swing.JTextField();\n        jScrollPane1 = new javax.swing.JScrollPane();\n        tblStationInfo = new javax.swing.JTable();\n        btnRemoveStation = new javax.swing.JButton();\n        btnAddStation = new javax.swing.JButton();\n        btnUpdateStation = new javax.swing.JButton();\n        btnLoadData = new javax.swing.JButton();\n        jLabel4 = new javax.swing.JLabel();\n        jPanel2 = new javax.swing.JPanel();\n        jPanel3 = new javax.swing.JPanel();\n        btnClose = new javax.swing.JLabel();\n        jLabel3 = new javax.swing.JLabel();\n        jLabel5 = new javax.swing.JLabel();\n        txtExecutionTime = new javax.swing.JLabel();\n\n        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);\n        setBackground(new java.awt.Color(255, 255, 255));\n        setUndecorated(true);\n\n        jPanel1.setBackground(new java.awt.Color(255, 255, 255));\n        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 153, 255)));\n\n        txtStationName.setBackground(new java.awt.Color(255, 255, 255));\n        txtStationName.setForeground(new java.awt.Color(102, 102, 102));\n\n        jLabel1.setForeground(new java.awt.Color(102, 102, 102));\n        jLabel1.setText(\"Station ID\");\n\n        jLabel2.setForeground(new java.awt.Color(102, 102, 102));\n        jLabel2.setText(\"Station Name\");\n\n        txtStationID.setEditable(false);\n        txtStationID.setBackground(new java.awt.Color(255, 255, 255));\n        txtStationID.setForeground(new java.awt.Color(102, 102, 102));\n\n        tblStationInfo.setBackground(new java.awt.Color(255, 255, 255));\n        tblStationInfo.setModel(new javax.swing.table.DefaultTableModel(\n            new Object [][] {\n                {null, null, null, null},\n                {null, null, null, null},\n                {null, null, null, null},\n                {null, null, null, null}\n            },\n            new String [] {\n                \"Title 1\", \"Title 2\", \"Title 3\", \"Title 4\"\n            }\n        ));\n        tblStationInfo.addMouseListener(new java.awt.event.MouseAdapter() {\n            public void mouseClicked(java.awt.event.MouseEvent evt) {\n                tblStationInfoMouseClicked(evt);\n            }\n        });\n        jScrollPane1.setViewportView(tblStationInfo);\n\n        btnRemoveStation.setBackground(new java.awt.Color(102, 153, 255));\n        btnRemoveStation.setForeground(new java.awt.Color(255, 255, 255));\n        btnRemoveStation.setText(\"Remove Station\");\n        btnRemoveStation.setBorder(null);\n        btnRemoveStation.setBorderPainted(false);\n        btnRemoveStation.setOpaque(true);\n        btnRemoveStation.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                btnRemoveStationActionPerformed(evt);\n            }\n        });\n\n        btnAddStation.setBackground(new java.awt.Color(102, 153, 255));\n        btnAddStation.setForeground(new java.awt.Color(255, 255, 255));\n        btnAddStation.setText(\"Add Station\");\n        btnAddStation.setBorder(null);\n        btnAddStation.setBorderPainted(false);\n        btnAddStation.setOpaque(true);\n        btnAddStation.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                btnAddStationActionPerformed(evt);\n            }\n        });\n\n        btnUpdateStation.setBackground(new java.awt.Color(102, 153, 255));\n        btnUpdateStation.setForeground(new java.awt.Color(255, 255, 255));\n        btnUpdateStation.setText(\"Update Station\");\n        btnUpdateStation.setBorder(null);\n        btnUpdateStation.setBorderPainted(false);\n        btnUpdateStation.setOpaque(true);\n        btnUpdateStation.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                btnUpdateStationActionPerformed(evt);\n            }\n        });\n\n        btnLoadData.setBackground(new java.awt.Color(102, 153, 255));\n        btnLoadData.setForeground(new java.awt.Color(255, 255, 255));\n        btnLoadData.setText(\"Load Data\");\n        btnLoadData.setBorder(null);\n        btnLoadData.setBorderPainted(false);\n        btnLoadData.setOpaque(true);\n        btnLoadData.addActionListener(new java.awt.",
  "/*\n * Copyright 2011 SpringSource\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.codehaus.groovy.grails.cli;\n\nimport org.apache.tools.ant.BuildException;\nimport org.apache.tools.ant.input.InputHandler;\nimport org.apache.tools.ant.input.InputRequest;\nimport org.apache.tools.ant.input.MultipleChoiceInputRequest;\nimport grails.build.logging.GrailsConsole;\n\nimport java.util.List;\n\n/**\n * Custom input handler mechanism for Ant that ignores case of input.\n *\n * @author Graeme Rocher\n * @since 2.0\n */\npublic class CommandLineInputHandler implements InputHandler {\n\n    public void handleInput(InputRequest inputRequest) throws BuildException {\n       String[] validInputs = null;\n       if (inputRequest instanceof MultipleChoiceInputRequest) {\n           @SuppressWarnings(\"unchecked\")\n           List<String> choices = ((MultipleChoiceInputRequest) inputRequest).getChoices();\n           validInputs = choices.toArray(new String[choices.size()]);\n       }\n       String result = GrailsConsole.getInstance().userInput(inputRequest.getPrompt(), validInputs);\n       if (result == null || result.length() == 0) {\n           result = inputRequest.getDefaultValue();\n       }\n       inputRequest.setInput(result);\n    }\n}\n",
  "<?php\ndefined('BASEPATH') or exit('No direct script access allowed');\n\nclass Dashboard extends CI_Controller\n{\n\tpublic function __construct()\n\t{\n\t\tparent::__construct();\n\t\tbelum_login();\n\t}\n\n\tpublic function index()\n\t{\n\t\t$data = [\n\t\t\t'judul'\t\t=> 'Dashboard',\n\t\t\t'user'      => $this->db->get_where('user', ['email' => $this->session->userdata('email')])->row_array(),\n\t\t\t'total_user' => $this->db->get_where('user', ['role!=' => 'admin'])->num_rows(),\n\t\t\t'total_reseller' => $this->db->get_where('user', ['reseller' => 1])->num_rows(),\n\t\t\t'total_dropshipper' => $this->db->get_where('user', ['dropship' => 1])->num_rows(),\n\t\t\t'total_transaksi'\t=> $this->db->query(\"SELECT * FROM pesanan JOIN user ON pesanan.user_id = user.id_user WHERE user.dropship = 0 AND user.reseller = 0 AND pesanan.status!= 2\")->num_rows(),\n\t\t\t'total_transaksi_reseller' => $this->db->query(\"SELECT * FROM pesanan JOIN user ON pesanan.user_id = user.id_user WHERE user.dropship = 0 AND user.reseller = 1 AND pesanan.status!= 2\")->num_rows(),\n\t\t\t'total_transaksi_dropshipper' => $this->db->query(\"SELECT * FROM pesanan JOIN user ON pesanan.user_id = user.id_user WHERE user.dropship = 1 AND user.reseller = 0 AND pesanan.status!= 2 \")->num_rows(),\n\t\t\t'total_return' => $this->db->get('return_barang')->num_rows(),\n\t\t\t'about'\t\t=> $this->db->get('about')->row()\n\t\t];\n\t\t$this->load->view('template/admin_header', $data);\n\t\t$this->load->view('admin/dashboard');\n\t\t$this->load->view('template/admin_footer');\n\t}\n\n\tpublic function about()\n\t{\n\t\t$this->db->set('about', $this->input->post('about'));\n\t\t$this->db->set('alamat', $this->input->post('alamat'));\n\t\t$this->db->where('id_about', $this->input->post('id_about'));\n\t\t$this->db->update('about');\n\t\tredirect('admin/dashboard');\n\t}\n}\n",
  "/*\n * Copyright Tomer Figenblat.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage info.tomfi.alexa.skillstester.steps.impl;\n\nimport static java.util.Objects.isNull;\nimport static java.util.Objects.nonNull;\n\nimport com.amazon.ask.Skill;\nimport com.amazon.ask.model.RequestEnvelope;\nimport com.amazon.ask.model.ResponseEnvelope;\nimport com.amazon.ask.request.SkillRequest;\nimport info.tomfi.alexa.skillstester.steps.FollowingUp;\nimport info.tomfi.alexa.skillstester.steps.ThenResponse;\nimport java.util.Map;\n\n/**\n * Then step, encapsulating the Skill, implementing assertion methods and the next optionally\n * Followup step logic.\n */\npublic final class ThenResponseImpl extends ThenResponse {\n  public ThenResponseImpl(final Skill skill, final ResponseEnvelope responseEnvelope) {\n    super(skill, responseEnvelope);\n  }\n\n  @Override\n  public FollowingUp followingUpWith(final RequestEnvelope followupRequestEnvelope) {\n    waitForFollowup();\n    return new FollowingUpImpl(skill, responseEnvelope, followupRequestEnvelope);\n  }\n\n  @Override\n  public FollowingUp followingUpWith(final String followupJsonString) {\n    waitForFollowup();\n    return new FollowingUpImpl(skill, responseEnvelope, followupJsonString);\n  }\n\n  @Override\n  public FollowingUp followingUpWith(final byte[] followupJsonByte) {\n    waitForFollowup();\n    return new FollowingUpImpl(skill, responseEnvelope, followupJsonByte);\n  }\n\n  @Override\n  public FollowingUp followingUpWith(final SkillRequest followupSkillRequest) {\n    waitForFollowup();\n    return new FollowingUpImpl(skill, responseEnvelope, followupSkillRequest);\n  }\n\n  @Override\n  public ThenResponseImpl haveOutputSpeechOf(final String testSpeech) {\n    var optText = extractOutputSpeech(responseEnvelope.getResponse().getOutputSpeech());\n    assert optText.isPresent() : \"Output speech is empty\";\n    assert optText.get().equals(testSpeech)\n        : String.format(\"Output speech '%s' is not '%s'\", optText.get(), testSpeech);\n    return this;\n  }\n\n  @Override\n  public ThenResponseImpl haveOutputSpeechThatStartsWith(final String testSpeech) {\n    var optText = extractOutputSpeech(responseEnvelope.getResponse().getOutputSpeech());\n    assert optText.isPresent() : \"Output speech is empty\";\n    assert optText.get().startsWith(testSpeech)\n        : String.format(\"Output speech '%s' should start with '%s'\", optText.get(), testSpeech);\n    return this;\n  }\n\n  @Override\n  public ThenResponseImpl haveOutputSpeechThatEndsWith(final String testSpeech) {\n    var optText = extractOutputSpeech(responseEnvelope.getResponse().getOutputSpeech());\n    assert optText.isPresent() : \"Output speech is empty\";\n    assert optText.get().endsWith(testSpeech)\n        : String.format(\"Output speech '%s' should end with '%s'\", optText.get(), testSpeech);\n    return this;\n  }\n\n  @Override\n  public ThenResponseImpl haveOutputSpeechThatContains(final String testSpeech) {\n    var optText = extractOutputSpeech(responseEnvelope.getResponse().getOutputSpeech());\n    assert optText.isPresent() : \"Output speech is empty\";\n    assert optText.get().contains(testSpeech)\n        : String.format(\"Output speech '%s' does not contain '%s'\", optText.get(), testSpeech);\n    return this;\n  }\n\n  @Override\n  public ThenResponseImpl haveRepromptSpeechOf(final String testSpeech) {\n    var reprompt = responseEnvelope.getResponse().getReprompt();\n    assert nonNull(reprompt) : \"Reprompt object is null\";\n    var optText = extractOutputSpeech(reprompt.getOutputSpeech());\n    assert optText.isPresent() : \"Reprompt speech is empty\";\n    assert optText.get().equals(testSpeech)\n        : String.format(\"Reprompt speech '%s' is not '%s'\", optText.get(), testSpeech);\n    return this;\n  }\n\n  @Override\n  public ThenResponseImpl haveRepromptSpeechThatStartsWith(final String testSpeech) {\n    var reprompt = responseEnvelope.getResponse().getReprompt();\n    assert nonNull(reprompt) : \"Reprompt object is null\";\n    var optText = extractOutputSpeech(reprompt.getOutputSpeech());\n    assert optText.isPresent() : \"Reprompt speech is empty\";\n    assert optText.get().startsWith(testSpeech)\n        : String.format(\"Reprompt speech '%s' should start with '%s'\", optText.get(), testSpeech);\n    return this;\n  }\n\n  @Override\n  public ThenResponseImpl haveRepromptSpeechThatEndsWith(final String testSpeech) {\n    var reprompt = responseEnvelope.getResponse().getReprompt();\n    assert nonNull(reprompt) : \"Reprompt object is null\";\n    var optText = extractOutputSpeech(reprompt.getOutputSpeech());\n    assert optText.isPresent() : \"Reprompt speech is empty\";\n    assert optText.get().endsWith(testSpeech)\n        : String.format(\"Reprompt speech '%s' should end with '%s'\", optText.get(), testSpeech);\n    return this;\n  }\n\n  @Override\n  public ThenResponseImpl haveRepromptSpeechThatContains(final String testSpeech) {\n    var reprompt = responseEnvelope.getResponse().getReprompt();\n    assert nonNull(reprompt) : \"Reprompt object is null\";\n    var optText = extractOutputSpeech(reprompt.getOutputSpeech());\n    assert optText.isPresent() : \"Reprompt speech is empty\";\n    assert optText.get().contains(testSpeech)\n        : String.format(\"Reprompt speech '%s' does not contain '%s'\", optText.get(), testSpeech);\n    return this;\n  }\n\n  @Override\n  public ThenResponseImpl notWaitForFollowup() {\n    assert responseEnvelope.getResponse().getShouldEndSession() : \"Session is marked as open\";\n    return this;\n  }\n\n  @Override\n  public ThenResponseImpl waitForFollowup() {\n    assert!responseEnvelope.getResponse().getShouldEndSession() : \"Session is marked as closed\";\n    return this;\n  }\n\n  @Override\n  public ThenResponseImpl beEmpty() {\n    assert isNull(responseEnvelope.getResponse()) : \"Response object is not empty\";\n    return this;\n  }\n\n  @Override\n  public ThenResponseImpl haveNoOutputSpeech() {\n    assert isNull(responseEnvelope.getResponse().getOutputSpeech()) : \"Found output speech object\";\n    return this;\n  }\n\n  @Override\n  public ThenResponseImpl haveNoReprompt() {\n    assert isNull(responseEnvelope.getResponse().getReprompt()) : \"Found reprompt object\";\n    return this;\n  }\n\n  @Override\n  public ThenResponseImpl haveNoCard() {\n    assert isNull(responseEnvelope.getResponse().getCard()) : \"Found card object\";\n    return this;\n  }\n\n  @Override\n  public ThenResponseImpl haveCardTitleOf(final String testTitle) {\n    var card = responseEnvelope.getResponse().getCard();\n    assert nonNull(card) : \"Card object is null\";\n    var optTitle = extractCardTitle(card);\n    assert optTitle.isPresent() : \"Card title is empty\";\n    assert optTitle.get().equals(testTitle)\n        : String.format(\"Card title '%s' is not '%s'\", optTitle",
  "namespace Meraki.Api.Data;\n\n/// <summary>\n/// Resolution of the camera. Can be one of '1080x1080' or '2058x2058'.\n/// </summary>\n/// <value>Resolution of the camera. Can be one of '1080x1080' or '2058x2058'.</value>\n[JsonConverter(typeof(StringEnumConverter))]\npublic enum Mv32Resolution\n{\n\t/// <summary>\n\t/// Enum _1080x1080 for \"1080x1080\"\n\t/// </summary>\n\t[EnumMember(Value = \"1080x1080\")]\n\tSize1080x1080,\n\n\t/// <summary>\n\t/// Enum _2058x2058 for \"2058x2058\"\n\t/// </summary>\n\t[EnumMember(Value = \"2058x2058\")]\n\tSize2058x2058\n}\n",
  "package com.keqi.springbootmvcjackson.config;\n\nimport com.fasterxml.jackson.databind.DeserializationFeature;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.fasterxml.jackson.databind.module.SimpleModule;\nimport com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;\nimport com.fasterxml.jackson.datatype.jsr310.deser.LocalDateDeserializer;\nimport com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer;\nimport com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer;\nimport com.fasterxml.jackson.datatype.jsr310.ser.LocalDateSerializer;\nimport com.fasterxml.jackson.datatype.jsr310.ser.LocalDateTimeSerializer;\nimport com.fasterxml.jackson.datatype.jsr310.ser.LocalTimeSerializer;\nimport com.keqi.springbootmvcjackson.enums.BaseEnum;\nimport com.keqi.springbootmvcjackson.serialize.BaseEnumDeSerializer;\nimport com.keqi.springbootmvcjackson.serialize.BaseEnumSerializer;\nimport com.keqi.springbootmvcjackson.serialize.BigDecimalDeSerialize;\nimport com.keqi.springbootmvcjackson.serialize.BigDecimalSerialize;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n\nimport java.math.BigDecimal;\nimport java.time.LocalDate;\nimport java.time.LocalDateTime;\nimport java.time.LocalTime;\nimport java.time.format.DateTimeFormatter;\n\n/**\n * web mvc \u914d\u7f6e\u7c7b\n *\n * @author keqi\n */\n@Configuration\npublic class WebMvcConfig implements WebMvcConfigurer {\n\n\t/**\n\t * \u66ff\u6362\u6389 SpringBoot \u9ed8\u8ba4\u914d\u7f6e\u7684 MappingJackson2HttpMessageConverter \u5bf9\u8c61\n\t *\n\t * @return r\n\t */\n\t@Bean\n\tpublic MappingJackson2HttpMessageConverter mappingJackson2HttpMessageConverter() {\n\t\tMappingJackson2HttpMessageConverter converter = new MappingJackson2HttpMessageConverter();\n\n\t\tObjectMapper objectMapper = new ObjectMapper();\n\t\t// \u53cd\u5e8f\u5217\u5316\u65f6\uff0c\u5ffd\u7565\u6389\u4e0d\u8ba4\u8bc6\u7684\u5c5e\u6027\n\t\tobjectMapper.disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES);\n\n\n\t\t// Java8 \u65e5\u671f\u65f6\u95f4\u5904\u7406(\u6b64\u5904\u523b\u610f\u4e0d\u5bf9 java.util.Date \u505a\u914d\u7f6e\uff0c\u7a0b\u5e8f\u4e2d\u80fd\u4e0d\u7528\u8fd9\u4e2a\u7c7b\u5c31\u4e0d\u7528)\n\t\tJavaTimeModule javaTimeModule = new JavaTimeModule();\n\t\tjavaTimeModule.addSerializer(LocalDateTime.class,\n\t\t\t\tnew LocalDateTimeSerializer(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\")));\n\t\tjavaTimeModule.addSerializer(LocalDate.class,\n\t\t\t\tnew LocalDateSerializer(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")));\n\t\tjavaTimeModule.addSerializer(LocalTime.class,\n\t\t\t\tnew LocalTimeSerializer(DateTimeFormatter.ofPattern(\"HH:mm:ss\")));\n\t\tjavaTimeModule.addDeserializer(LocalDateTime.class,\n\t\t\t\tnew LocalDateTimeDeserializer(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\")));\n\t\tjavaTimeModule.addDeserializer(LocalDate.class,\n\t\t\t\tnew LocalDateDeserializer(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")));\n\t\tjavaTimeModule.addDeserializer(LocalTime.class,\n\t\t\t\tnew LocalTimeDeserializer(DateTimeFormatter.ofPattern(\"HH:mm:ss\")));\n\t\tobjectMapper.registerModule(javaTimeModule);\n\n\t\tSimpleModule bigDecimalModule = new SimpleModule();\n\t\tbigDecimalModule.addSerializer(BigDecimal.class, new BigDecimalSerialize());\n\t\tbigDecimalModule.addDeserializer(BigDecimal.class, new BigDecimalDeSerialize());\n\t\tobjectMapper.registerModule(bigDecimalModule);\n\n\t\t// \u8fd9\u79cd\u65b9\u5f0f\u7684\u7f3a\u70b9\u662f\u53ea\u80fd\u652f\u6301 BaseEnum.clazz \uff0c\u5b83\u7684\u5b50\u7c7b\u662f\u4e0d\u652f\u6301\u7684\n\t\tSimpleModule baseEnumModule = new SimpleModule();\n\t\tbaseEnumModule.addSerializer(BaseEnum.class, new BaseEnumSerializer<>());\n\t\tbaseEnumModule.addDeserializer(BaseEnum.class, new BaseEnumDeSerializer());\n\n\t\tconverter.setObjectMapper(objectMapper);\n\t\treturn converter;\n\t}\n}\n\n",
  "import os\n\nimport numpy as np\n\nSPEECH_DATA_PATH = './../Data_Clean'\nDUMP_DATA_PATH = './../Data_Clean/Filtered_Dev'\n\ntrain_y = np.load(os.path.join(SPEECH_DATA_PATH, 'train_transcripts.npy'),\n                  encoding='bytes')\ndev_y = np.load(os.path.join(SPEECH_DATA_PATH, 'dev_transcripts.npy'),\n                encoding='bytes')\ndev_x = np.load(os.path.join(SPEECH_DATA_PATH, 'dev.npy'), encoding='bytes')\ndup_list = []\nfor i in range(len(dev_y)):\n    for j in range(len(train_y)):\n        if np.array_equal(dev_y[i], train_y[j]):\n            dup_list.append(i)\n            break\n\ndev_y_rev = np.delete(dev_y, dup_list)\ndev_x_rev = np.delete(dev_x, dup_list)\nassert (len(dev_y_rev) == len(dev_x_rev))\n\nnp.save(os.path.join(DUMP_DATA_PATH, 'dev.npy'), dev_x_rev)\nnp.save(os.path.join(DUMP_DATA_PATH, 'dev_transcripts.npy'), dev_y_rev)\n",
  "# Generated by Django 3.0.5 on 2020-04-13 02:38\n\nfrom django.conf import settings\nfrom django.db import migrations, models\nimport django.db.models.deletion\n\n\nclass Migration(migrations.Migration):\n\n    dependencies = [\n        ('profile_api', '0001_initial'),\n    ]\n\n    operations = [\n        migrations.CreateModel(\n            name='ProfileFeedItem',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('status_text', models.CharField(max_length=255)),\n                ('created_on', models.DateTimeField(auto_now_add=True)),\n                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),\n            ],\n        ),\n    ]\n",
  "# -*- coding: utf-8 -*-\n\n\ndef includeme(config):\n    config.include('h.activity.views')\n\n    config.add_route('activity.search', '/search')\n    config.add_route('activity.group_search', '/groups/{pubid}/search')\n    config.add_route('activity.user_search', '/users/{username}/search')\n",
  "CREATE TABLE `user` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `name` varchar(255) DEFAULT NULL COMMENT 'name',\n  `password` varchar(60) CHARACTER SET utf8 NOT NULL COMMENT '\u5bc6\u7801',\n  `salt` varchar(16) DEFAULT NULL COMMENT '\u52a0\u5bc6\u76d0\u503c',\n  `email` varchar(64) DEFAULT NULL,\n  `mobile` varchar(15) DEFAULT NULL COMMENT '\u624b\u673a\u53f7',\n  `reg_time` int(11) NOT NULL COMMENT '\u6ce8\u518c\u65f6\u95f4\u6233',\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8mb4;\n\nCREATE TABLE `user_info` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `user_id` int(11) NOT NULL DEFAULT '0' COMMENT '\u7528\u6237ID',\n  `address` varchar(100) DEFAULT NULL COMMENT '\u8054\u7cfb\u65b9\u5f0f',\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='\u7528\u6237\u4fe1\u606f\u8868';\n",
  "<?php\n\nnamespace app\\fish\\controller;\n\nclass UserSell extends Base{\n    protected  $title = '\u7528\u6237\u5356\u623f\u7ba1\u7406';\n    protected  $controller_name = \"UserSell\";\n}\n\n",
  "\ufeffusing System;\nusing System.ComponentModel;\nusing Foundation;\nusing LetterApp.Core.ViewModels;\nusing LetterApp.iOS.Helpers;\nusing LetterApp.iOS.Sources;\nusing LetterApp.iOS.Views.Base;\nusing LetterApp.Models.DTO.ReceivedModels;\nusing UIKit;\n\nnamespace LetterApp.iOS.Views.SelectDivision\n{\n    public partial class SelectDivisionViewController : XViewController<SelectDivisionViewModel>, IUIGestureRecognizerDelegate\n    {\n        public override bool HandlesKeyboardNotifications => true;\n        private SelectDivisionsSource _source;\n\n        public SelectDivisionViewController() : base(\"SelectDivisionViewController\", null) {}\n\n        public override void ViewDidLoad()\n        {\n            base.ViewDidLoad();\n\n            SetupView();\n            _tableView.Hidden = true;\n\n            //NavigationController.SetNavigationBarHidden(true, true);\n\n            ViewModel.PropertyChanged -= ViewModel_PropertyChanged;\n            ViewModel.PropertyChanged += ViewModel_PropertyChanged;\n\n            _closeButton.TouchUpInside -= OnCloseButton_TouchUpInside;\n            _closeButton.TouchUpInside += OnCloseButton_TouchUpInside;\n        }\n\n        private void ViewModel_PropertyChanged(object sender, PropertyChangedEventArgs e)\n        {\n            switch (e.PropertyName)\n            {\n                case nameof(ViewModel.Divisions):\n                    SetupTableView();\n                    break;\n            }\n        }\n\n        private void SetupTableView()\n        {\n            _tableView.Hidden = false;\n            _source = new SelectDivisionsSource(_tableView, ViewModel.Divisions, ViewModel.LocationResources, ViewModel.NewUser);\n            _tableView.BackgroundColor = Colors.SelectBlue;\n            _tableView.Source = _source;\n            _tableView.SeparatorStyle = UITableViewCellSeparatorStyle.None;\n            _tableView.ReloadData();\n\n            _source.DivisionSelectedEvent -= OnSource_DivisionSelectedEvent;\n            _source.DivisionSelectedEvent += OnSource_DivisionSelectedEvent;\n\n            _source.SubmitButtonEvent -= OnSource_SubmitButtonEvent;\n            _source.SubmitButtonEvent += OnSource_SubmitButtonEvent;\n\n            _source.LeaveOrganizationEvent -= OnSource_LeaveOrganizationEvent;\n            _source.LeaveOrganizationEvent += OnSource_LeaveOrganizationEvent;\n        }\n\n        private void OnSource_SubmitButtonEvent(object sender, string code)\n        {\n            if (ViewModel.VerifyDivisionCodeCommand.CanExecute(code))\n                ViewModel.VerifyDivisionCodeCommand.Execute(code);\n        }\n\n        private void OnSource_DivisionSelectedEvent(object sender, DivisionModel division)\n        {\n            if (ViewModel.ShowDivisionInformationCommand.CanExecute(division))\n                ViewModel.ShowDivisionInformationCommand.Execute(division);\n        }\n\n        private void OnSource_LeaveOrganizationEvent(object sender, EventArgs e)\n        {\n            if (ViewModel.LeaveOrganizationCommand.CanExecute())\n                ViewModel.LeaveOrganizationCommand.Execute();\n        }\n\n        private void OnCloseButton_TouchUpInside(object sender, EventArgs e)\n        {\n            if (ViewModel.CloseViewCommand.CanExecute())\n                ViewModel.CloseViewCommand.Execute();\n        }\n\n        private void SetupView()\n        {\n            _closeButton.SetImage(UIImage.FromBundle(\"close_white\"), UIControlState.Normal);\n            _closeButton.TintColor = Colors.White;\n            _backgroundView.BackgroundColor = Colors.SelectBlue;\n            UILabelExtensions.SetupLabelAppearance(_titleLabel, ViewModel.NewUser? ViewModel.TitleMainLabel : ViewModel.TitleLabel, Colors.White, 24f);\n            CustomUIExtensions.LabelShadow(_titleLabel);\n        }\n\n        public override void ViewWillAppear(bool animated)\n        {\n            base.ViewWillAppear(animated);\n            UIApplication.SharedApplication.StatusBarStyle = UIStatusBarStyle.LightContent;\n\n            NavigationController.SetNavigationBarHidden(true, true);\n\n            _navigationGesture = this.NavigationController.InteractivePopGestureRecognizer.Delegate;\n            this.NavigationController.InteractivePopGestureRecognizer.Delegate = null;\n        }\n\n        public override void ViewDidAppear(bool animated)\n        {\n            base.ViewDidAppear(animated);\n\n            if (NavigationController?.InteractivePopGestureRecognizer!= null)\n                NavigationController.InteractivePopGestureRecognizer.Enabled = false;\n        }\n\n        public override void ViewWillDisappear(bool animated)\n        {\n            base.ViewWillDisappear(animated);\n\n            if (NavigationController?.InteractivePopGestureRecognizer!= null)\n            {\n                NavigationController.InteractivePopGestureRecognizer.Delegate = _navigationGesture;\n                NavigationController.InteractivePopGestureRecognizer.Enabled = true;\n            }\n\n        }\n\n        public override void ViewDidDisappear(bool animated)\n        {\n            if (this.IsMovingFromParentViewController)\n            {\n                _source?.Dispose();\n                _source = null;\n                MemoryUtility.ReleaseUIViewWithChildren(this.View);\n                base.ViewDidDisappear(animated);\n            }\n        }\n\n        IUIGestureRecognizerDelegate _navigationGesture;\n\n        [Export(\"gestureRecognizerShouldBegin:\")]\n        public bool ShouldBegin(UIGestureRecognizer recognizer)\n        {\n            return false;\n        }\n    }\n}\n\n",
  "## Apuntes Arduino.\n\n``` \n### Primer Interfaz:\n \n int switchState = 0;\n\nvoid setup() {\n\npinMode(3,OUTPUT);\npinMode(4,OUTPUT);\npinMode(5,OUTPUT);\npinMode(2,INPUT);\n\n}\n\nvoid loop(){\n\nswitchState = digitalRead(2);\n// esto es un comentario\n\nif (switchState == HIGH) {\n// el boton no esta pulsado\n\ndigitalWrite(3, HIGH); // LED verde\ndigitalWrite(4, LOW); // LED rojos\ndigitalWrite(5, LOW); // LED rojos\n\n}\n\nelse { // the button is pressed\ndigitalWrite(3, LOW);\ndigitalWrite(4, LOW);\ndigitalWrite(5, HIGH);\n\ndelay(250); // espera un cuarto de segundo\n// permuta les LEDs\ndigitalWrite(4, HIGH);\ndigitalWrite(5, LOW);\ndelay(250); // espera un cuarto de segundo\n\n}\n\n} // vuelve al inicio del bucle\n\n```\n\nHemos hecho el primer proyecto de interfaz de nave escrito que hemos puesto todos los cables en su sitio y el boton, el libro nos ha ayudado al principo para cojer ritmo en el codigo.\n\n\n\n# Proyecto\n\n## Resumen\n\nSi aprieto el boton las luces parpadean \n\n## Introduccion teorica:\n\nEjemplo:\nswichState = 0;\n\nSwichState es de tipo \"int\" \nque significa que es un Numero Entero\n\nProgramacion Interfaz:\nVoid Setup(){\n      PinMode (3,OUTPUT);\n      PinMode(2,INPUT);\n      }\n      \nVoid loop (){ ASIGNAR SWICHSTATE = Digital Read (2);\n(switchState== LOW)\n D.w (3,HIGH);\n d.w (4,LOW);\n D.w (5,LOW);\n HacerKebab\n \n }\n else (); \n {PEDIR PIZZA }\n \n ## Proceso de Montaje\n \n  - Materiales necesarios----->(leds,resistencies,boton)\n   \n  - Circuito\n  \n  - Foto del circuito\n\n  ## Codigo \n   - Explicar\n   - Enlace codigo utilizado \n   ## Resultado \n  -Foto\n  \n  -Video\n  \n  -Funciona o no \n  \n   ## Variaciones \n   \n   -\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "from hat.Arg import ARGS\n\n\nif __name__ == \"__main__\":\n\n  ARGS.run()\n  ",
  "local dispatcher = require \"nvim-lsp-installer.dispatcher\"\nlocal fs = require \"nvim-lsp-installer.fs\"\nlocal log = require \"nvim-lsp-installer.log\"\nlocal installers = require \"nvim-lsp-installer.installers\"\nlocal servers = require \"nvim-lsp-installer.servers\"\nlocal status_win = require \"nvim-lsp-installer.ui.status-win\"\n\nlocal M = {}\n\n-- old, but also somewhat convenient, API\nM.get_server_root_path = servers.get_server_install_path\n\nM.Server = {}\nM.Server.__index = M.Server\n\n---@class Server\n--@param opts table\n-- @field name (string)                  The name of the LSP server. This MUST correspond with lspconfig's naming.\n--\n-- @field homepage (string)              A URL to the homepage of this server. This is for example where users can\n--                                       report issues and receive support.\n--\n-- @field installer (function)           The function that installs the LSP (see the.installers module). The function signature should be `function (server, callback)`, where\n--                                       `server` is the Server instance being installed, and `callback` is a function that must be called upon completion. The `callback` function\n--                                       has the signature `function (success, result)`, where `success` is a boolean and `result` is of any type (similar to `pcall`).\n--\n-- @field default_options (table)        The default options to be passed to lspconfig's.setup() function. Each server should provide at least the `cmd` field.\n--\n-- @field root_dir (string)              The absolute path to the directory of the installation.\n--                                       This MUST be a directory inside nvim-lsp-installer's designated root install directory inside stdpath(\"data\"). Most servers will make use of server.get_server_root_path() to produce its root_dir path.\n--\n-- @field post_setup (function)          An optional function to be executed after the setup function has been successfully called.\n--                                       Use this to defer setting up server specific things until they're actually\n--                                       needed, like custom commands.\n--\n-- @field pre_setup (function)           An optional function to be executed prior to calling lspconfig's setup().\n--                                       Use this to defer setting up server specific things until they're actually needed.\n--\nfunction M.Server:new(opts)\n    return setmetatable({\n        name = opts.name,\n        root_dir = opts.root_dir,\n        homepage = opts.homepage,\n        deprecated = opts.deprecated,\n        _root_dir = opts.root_dir, -- @deprecated Use the `root_dir` property instead.\n        _installer = type(opts.installer) == \"function\" and opts.installer or installers.pipe(opts.installer),\n        _default_options = opts.default_options,\n        _post_setup = opts.post_setup,\n        _pre_setup = opts.pre_setup,\n    }, M.Server)\nend\n\nfunction M.Server:setup(opts)\n    if self._pre_setup then\n        log.fmt_debug(\"Calling pre_setup for server=%s\", self.name)\n        self._pre_setup()\n    end\n    -- We require the lspconfig server here in order to do it as late as possible.\n    -- The reason for this is because once a lspconfig server has been imported, it's\n    -- automatically registered with lspconfig and causes it to show up in :LspInfo and whatnot.\n    local lsp_server = require(\"lspconfig\")[self.name]\n    if lsp_server then\n        lsp_server.setup(vim.tbl_deep_extend(\"force\", self._default_options, opts or {}))\n        if self._post_setup then\n            log.fmt_debug(\"Calling post_setup for server=%s\", self.name)\n            self._post_setup()\n        end\n    else\n        error((\"Unable to setup server %q: Could not find lspconfig server entry.\"):format(self.name))\n    end\nend\n\nfunction M.Server:get_default_options()\n    return vim.deepcopy(self._default_options)\nend\n\nfunction M.Server:get_supported_filetypes()\n    local metadata = require \"nvim-lsp-installer._generated.metadata\"\n\n    if metadata[self.name] then\n        return metadata[self.name].filetypes\n    end\n\n    return {}\nend\n\nfunction M.Server:is_installed()\n    return servers.is_server_installed(self.name)\nend\n\nfunction M.Server:create_root_dir()\n    fs.mkdirp(self.root_dir)\nend\n\nfunction M.Server:install()\n    status_win().install_server(self)\nend\n\nfunction M.Server:install_attached(context, callback)\n    local uninstall_ok, uninstall_err = pcall(self.uninstall, self)\n    if not uninstall_ok then\n        context.stdio_sink.stderr(tostring(uninstall_err).. \"\\n\")\n        callback(false)\n        return\n    end\n\n    self:create_root_dir()\n\n    local install_ok, install_err = pcall(self._installer, self, function(success)\n        if not success then\n            vim.schedule(function()\n                pcall(self.uninstall, self)\n            end)\n        else\n            vim.schedule(function()\n                dispatcher.dispatch_server_ready(self)\n            end)\n        end\n        callback(success)\n    end, context)\n    if not install_ok then\n        context.stdio_sink.stderr(tostring(install_err).. \"\\n\")\n        callback(false)\n    end\nend\n\nfunction M.Server:uninstall()\n    log.debug(\"Uninstalling server\", self.name)\n    if fs.dir_exists(self.root_dir) then\n        fs.rmrf(self.root_dir)\n    end\nend\n\nreturn M\n",
  "#pragma once\n\n#include <ostream>\n\nnamespace metronome {\n\ntemplate <typename Domain>\nclass SuccessorBundle {\n public:\n  typedef typename Domain::State State;\n  typedef typename Domain::Action Action;\n  typedef typename Domain::Cost Cost;\n\n  SuccessorBundle(State state, Action action, Cost actionCost)\n      : state(state), action(action), actionCost(actionCost) {}\n\n  State state;\n  Action action;\n  Cost actionCost;\n\n    friend std::ostream& operator<<(std::ostream& os, const SuccessorBundle& bundle) {\n      os << \"SuccessorBundle - state: \" << bundle.state\n         << \", action: \" << bundle.action\n         << \", cost: \" << bundle.actionCost;\n      return os;\n    }\n\n    friend void swap(SuccessorBundle& lhs, SuccessorBundle& rhs) {\n      using std::swap;\n      swap(lhs.state, rhs.state);\n      swap(lhs.action, rhs.action);\n      swap(lhs.actionCost, rhs.actionCost);\n    }\n};\n\ntemplate <typename Domain>\nclass InterventionBundle {\n public:\n  typedef typename Domain::Intervention Intervention;\n  typedef typename Domain::Cost Cost;\n\n  InterventionBundle(const Intervention intervention, Cost interventionCost)\n    : intervention(intervention), interventionCost(interventionCost) {}\n\n  const Intervention intervention;\n  const Cost interventionCost;\n\n  friend std::ostream& operator<<(std::ostream& os, const InterventionBundle& bundle) {\n    os << \"InterventionBundle - intervention: \" << bundle.intervention\n      << \", cost: \" << bundle.interventionCost;\n    return os;\n  }\n};\n\n}  // namespace metronome\n",
  "package zio.cassandra.session.cql\n\nimport com.datastax.oss.driver.api.core.cql.Row\nimport shapeless.HNil\nimport zio.cassandra.session.cql.query.{ ParameterizedQuery, QueryTemplate }\n\n/** Provides a way to lift arbitrary strings into CQL so you can parameterize on values that are not valid CQL\n  * parameters Please note that this is not escaped so do not use this with user-supplied input for your application\n  * (only use cqlConst for input that you as the application author control)\n  */\nclass CqlConstInterpolator(ctx: StringContext) {\n  def apply(args: Any*): ParameterizedQuery[HNil, Row] =\n    ParameterizedQuery(QueryTemplate(ctx.s(args: _*), identity), HNil)\n}\n",
  "{% extends 'public/base.html' %}\n\n{% block body %}\n<div class=\"row\">\n    <div class=\"col-sm-12\">\n        <form class=\"form-horizontal m-t\" id=\"addUserForm\" {% if isAdd %} action=\"addUser\" {% else %} action=\"editUser\" {% endif %}>\n            <input type=\"hidden\" id=\"uid\" name=\"uid\" value=\"{{ userInfo.id }}\">\n            <div class=\"form-group\">\n                <label class=\"col-sm-3 control-label\">\u6240\u5c5e\u7528\u6237\u7ec4\uff1a</label>\n                <div class=\"col-sm-8\" id=\"group_checkbox_list\">\n                    <input name=\"group_check\" type=\"hidden\" id=\"group_check\">\n                    {% for group in groupList %}\n                    <div class=\"checkbox checkbox-success checkbox-inline\">\n                        <input type=\"checkbox\" id=\"checkbox_{{group.id}}\" name=\"group[]\" value=\"{{ group.id }}\" {% if group.id in checkedGroupList %}checked{% endif %}>\n                        <label for=\"checkbox_{{group.id}}\"> {{ group.name }} </label>\n                    </div>\n                    {% endfor %}\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"col-sm-3 control-label\">\u7528\u6237\u540d\uff1a</label>\n                <div class=\"col-sm-8\">\n                    <input id=\"username\" name=\"username\" class=\"form-control\" placeholder=\"\u8f93\u5165\u7528\u6237\u540d\" type=\"text\" value=\"{{ userInfo.name }}\">\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"col-sm-3 control-label\">\u663e\u793a\u540d\uff1a</label>\n                <div class=\"col-sm-8\">\n                    <input id=\"display_name\" name=\"display_name\" class=\"form-control\" placeholder=\"\u8f93\u5165\u663e\u793a\u540d\" type=\"text\" value=\"{{ userInfo.display_name }}\">\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"col-sm-3 control-label\">\u5907\u6ce8\uff1a</label>\n                <div class=\"col-sm-8\">\n                    <textarea name=\"remarks\" class=\"form-control\">{{ userInfo.remarks }}</textarea>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"col-sm-3 control-label\">\u5bc6\u7801\uff1a</label>\n                <div class=\"col-sm-8\">\n                    <input id=\"password\" name=\"password\" class=\"form-control\" type=\"password\" {% if isAdd %} placeholder=\"\u8f93\u5165\u5bc6\u7801\" {% else %} placeholder=\"\u7559\u7a7a\u5219\u4e0d\u4fee\u6539\" {% endif %}>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"col-sm-3 control-label\">\u786e\u8ba4\u5bc6\u7801\uff1a</label>\n                <div class=\"col-sm-8\">\n                    <input id=\"confirm_password\" name=\"confirm_password\" class=\"form-control\" type=\"password\" {% if isAdd %} placeholder=\"\u786e\u8ba4\u5bc6\u7801\" {% else %} placeholder=\"\u7559\u7a7a\u5219\u4e0d\u4fee\u6539\" {% endif %}>\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <label class=\"col-sm-3 control-label\">\u72b6\u6001\uff1a</label>\n                <div class=\"col-sm-8\">\n                    <div class=\"switch\">\n                        <div class=\"radio radio-info radio-inline\">\n                            <input type=\"radio\" id=\"status_on\" value=\"1\" name=\"status\" {% if isAdd %} checked {% endif %} {% if userInfo.status=='1' %} checked {% endif %}>\n                            <label for=\"status_on\">\u542f\u7528</label>\n                        </div>\n                        <div class=\"radio radio-danger radio-inline\">\n                            <input type=\"radio\" id=\"status_off\" value=\"0\" name=\"status\" {% if userInfo.status=='0' %} checked {% endif %}>\n                            <label for=\"status_off\">\u7981\u7528</label>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n        <div class=\"space-20\"></div>\n\n        <div class=\"text-center\">\n            <button class=\"btn btn-outline btn-info saveBtn\" type=\"button\" id=\"saveUserBtn\">\n                <i class=\"fa fa-check\"></i>\u63d0\u4ea4\n            </button>\n            <button class=\"btn btn-outline btn-default closeBtn\">\n                <i class=\"fa fa-times\"></i>\u5173\u95ed\n            </button>\n        </div>\n    </div>\n</div>\n{% endblock %}\n\n{% block scripts %}\n<script src=\"__static__/hplus/js/plugins/validate/jquery.validate.min.js\"></script>\n<script src=\"__static__/hplus/js/plugins/validate/messages_zh.min.js\"></script>\n<script src=\"__static__/hplus/js/demo/form-validate-demo.min.js\"></script>\n<script>\n$(function() {\n    //\u7528\u6237\u7ec4\u662f\u5426\u9009\u62e9\u9a8c\u8bc1\uff08\u901a\u8fc7checkbox\u9009\u62e9\u7684\u4e2a\u6570\u5224\u65ad\u662f\u5426\u9009\u62e9\uff09\n$('#group_check').val($(\"#group_checkbox_list input[type='checkbox']:checked\").length);//\u521d\u59cb\u5316checkbox\u9009\u62e9\u4e2a\u6570\n$(\"#group_checkbox_list input[type='checkbox']\").change(function() {\n    var check_num = $('#group_check').val();\n    if ($(this).prop('checked')) { //\u5982\u679c\u9009\u4e2d\uff0c\u4e2a\u6570\u52a01\n        check_num++;\n        $('#group_check').val(check_num);\n    }else{//\u53d6\u6d88\u9009\u4e2d\u65f6\u4e2a\u6570\u51cf\u4e00\n        check_num--;\n        $('#group_check').val(check_num);\n    }\n});\n//\u8868\u5355\u9a8c\u8bc1\n$(\"#addUserForm\").validate({\n    ignore: '',\n    rules: {\n        group_check: {\n            required: true,\n            min: 1\n        },\n        username: {\n            required: true,\n            //\u5f02\u6b65\u9a8c\u8bc1 \u5f00\u59cb\n            remote: {\n                url: \"/admin/user/checkUser\",//\u53d1\u9001\u8bf7\u6c42\u7684url\u5730\u5740\n                    type: \"post\", //\u8bf7\u6c42\u65b9\u5f0f\n                    dataType: \"json\",//\u63a5\u6536\u7684\u6570\u636e\u7c7b\u578b\n                    data: {\n                        username: function () {\n                            return $(\"#username\").val();\n                        },\n                        uid : function () {\n                            return $('#uid').val();\n                        }\n                    },\n                dataFilter: function (json) { //\u8fc7\u6ee4\u8fd4\u56de\u7ed3\u679c\n                    if (json == 'true') return false;  //false\u4ee3\u8868\u7528\u6237\u540d\u5df2\u7ecf\u5b58\u5728\n                    else return true; //true\u4ee3\u8868\u7528\u6237\u540d\u8fd8\u672a\u5b58\u5728\n                }\n            }\n            //\u5f02\u6b65\u9a8c\u8bc1 \u7ed3\u675f\n        },\n        password: {\n            {% if isAdd %}required:true,{% endif %}\n            minlength: 5\n        },\n        confirm_password: {\n            {% if isAdd %}required:true,{% endif %}\n            minlength: 5,\n            equalTo:\"#password\"\n        }\n    },\n    messages: {\n        username: {\n            required: \"\u8bf7\u8f93\u5165\u7528\u6237\u540d\",\n                remote:\"\u8f93\u5165\u7684\u7528\u6237\u540d\u5df2\u7ecf\u5b58\u5728\"\n        },\n        password: {\n            required: \"\u8bf7\u8f93\u5165\u5bc6\u7801\",\n                minlength: \"\u5bc6\u7801\u957f\u5ea6\u4e0d\u80fd\u5c0f\u4e8e 5 \u4e2a\u5b57\u6bcd\"\n        },\n        confirm_password: {\n            required: \"\u8bf7\u8f93\u5165\u5bc6\u7801\",\n                minlength: \"\u5bc6\u7801\u957f\u5ea6\u4e0d\u80fd\u5c0f\u4e8e 5 \u4e2a\u5b57\u6bcd\",\n                equalTo:\"\u4e24\u6b21\u8f93\u5165\u5bc6\u7801\u4e0d\u4e00\u81f4\"\n        },\n        group_check: {\n            required:\"\u8bf7\u81f3\u5c11\u9009\u62e9\u4e00\u9879\u7528\u6237\u7ec4\",\n                min: \"\u8bf7\u81f3\u5c11\u9009\u62e9\u4e00\u9879\u7528\u6237\u7ec4\"\n        }\n    }\n});\n});\n</script>\n{% endblock %}\n",
  "// Copyright (C) 2021 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\npackage com.googlesource.gerrit.plugins.pubsub;\n\nimport static com.google.common.truth.Truth.assertThat;\nimport static com.google.gerrit.testing.GerritJUnit.assertThrows;\nimport static org.mockito.Mockito.when;\n\nimport com.google.gerrit.server.config.PluginConfig;\nimport com.google.gerrit.server.config.PluginConfigFactory;\nimport org.eclipse.jgit.lib.Config;\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.Mock;\nimport org.mockito.junit.MockitoJUnitRunner;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class PubSubConfigurationTest {\n  private static final String PLUGIN_NAME = \"gcloud-pubsub-events\";\n  private static final String subscriptionId = \"some-subscription-id\";\n  private static final String gerritInstanceId = \"some-gerrit-id\";\n  private static final String gCloudProject = \"gcloud-test-project\";\n  private static final String privateKeyLocation = \"/some/path\";\n\n  private PluginConfig.Update pluginConfig;\n  @Mock private PluginConfigFactory pluginConfigFactoryMock;\n\n  @Before\n  public void setup() {\n    pluginConfig = PluginConfig.Update.forTest(PLUGIN_NAME, new Config());\n    pluginConfig.setString(\"subscriptionId\", subscriptionId);\n    pluginConfig.setString(\"gcloudProject\", gCloudProject);\n    pluginConfig.setString(\"privateKeyLocation\", privateKeyLocation);\n  }\n\n  @Test\n  public void shouldUseSubscriptionIdWhenConfiguredEvenIfGerritInstanceIdIsNull() {\n    when(pluginConfigFactoryMock.getFromGerritConfig(PLUGIN_NAME))\n       .thenReturn(pluginConfig.asPluginConfig());\n\n    PubSubConfiguration configuration =\n        new PubSubConfiguration(pluginConfigFactoryMock, PLUGIN_NAME, null);\n\n    assertThat(configuration.getSubscriptionId()).isEqualTo(subscriptionId);\n  }\n\n  @Test\n  public void shouldUseSubscriptionIdWhenConfiguredEvenIfGerritInstanceIdIsDefined() {\n    when(pluginConfigFactoryMock.getFromGerritConfig(PLUGIN_NAME))\n       .thenReturn(pluginConfig.asPluginConfig());\n\n    PubSubConfiguration configuration =\n        new PubSubConfiguration(pluginConfigFactoryMock, PLUGIN_NAME, gerritInstanceId);\n\n    assertThat(configuration.getSubscriptionId()).isEqualTo(subscriptionId);\n  }\n\n  @Test\n  public void shouldUseGerritInstanceIdWhenSubscriptionIdIsEmpty() {\n    pluginConfig.setString(\"subscriptionId\", \"\");\n    when(pluginConfigFactoryMock.getFromGerritConfig(PLUGIN_NAME))\n       .thenReturn(pluginConfig.asPluginConfig());\n\n    PubSubConfiguration configuration =\n        new PubSubConfiguration(pluginConfigFactoryMock, PLUGIN_NAME, gerritInstanceId);\n\n    assertThat(configuration.getSubscriptionId()).isEqualTo(gerritInstanceId);\n  }\n\n  @Test\n  public void shouldThrowExceptionWhenSubscriptionIdIsNotDefinedAndGerritInstanceIdIsNull() {\n    pluginConfig.setString(\"subscriptionId\", \"\");\n    when(pluginConfigFactoryMock.getFromGerritConfig(PLUGIN_NAME))\n       .thenReturn(pluginConfig.asPluginConfig());\n\n    IllegalStateException thrown =\n        assertThrows(\n            IllegalStateException.class,\n            () -> new PubSubConfiguration(pluginConfigFactoryMock, PLUGIN_NAME, null));\n\n    assertThat(thrown).hasMessageThat().contains(\"parameter'subscriptionId' is mandatory\");\n  }\n\n  @Test\n  public void shouldReadGCloudProjectWhenConfigured() {\n    when(pluginConfigFactoryMock.getFromGerritConfig(PLUGIN_NAME))\n       .thenReturn(pluginConfig.asPluginConfig());\n\n    PubSubConfiguration configuration =\n        new PubSubConfiguration(pluginConfigFactoryMock, PLUGIN_NAME, gerritInstanceId);\n\n    assertThat(configuration.getGCloudProject()).isEqualTo(gCloudProject);\n  }\n\n  @Test\n  public void shouldThrowExceptionWhenGCloudProjectIsNotDefined() {\n    pluginConfig.setString(\"gcloudProject\", \"\");\n    when(pluginConfigFactoryMock.getFromGerritConfig(PLUGIN_NAME))\n       .thenReturn(pluginConfig.asPluginConfig());\n\n    IllegalStateException thrown =\n        assertThrows(\n            IllegalStateException.class,\n            () -> new PubSubConfiguration(pluginConfigFactoryMock, PLUGIN_NAME, gerritInstanceId));\n\n    assertThat(thrown).hasMessageThat().contains(\"parameter 'gcloudProject' is mandatory\");\n  }\n\n  @Test\n  public void shouldReadPrivateKeyLocationWhenConfigured() {\n    when(pluginConfigFactoryMock.getFromGerritConfig(PLUGIN_NAME))\n       .thenReturn(pluginConfig.asPluginConfig());\n\n    PubSubConfiguration configuration =\n        new PubSubConfiguration(pluginConfigFactoryMock, PLUGIN_NAME, gerritInstanceId);\n\n    assertThat(configuration.getPrivateKeyLocation()).isEqualTo(privateKeyLocation);\n  }\n\n  @Test\n  public void shouldThrowExceptionWhenPrivateKeyLocationIsNotDefined() {\n    pluginConfig.setString(\"privateKeyLocation\", \"\");\n    when(pluginConfigFactoryMock.getFromGerritConfig(PLUGIN_NAME))\n       .thenReturn(pluginConfig.asPluginConfig());\n\n    IllegalStateException thrown =\n        assertThrows(\n            IllegalStateException.class,\n            () -> new PubSubConfiguration(pluginConfigFactoryMock, PLUGIN_NAME, gerritInstanceId));\n\n    assertThat(thrown).hasMessageThat().contains(\"parameter 'privateKeyLocation' is mandatory\");\n  }\n}\n",
  "\ufeffusing System;\r\nusing System.Collections.Generic;\r\nusing System.Diagnostics;\r\nusing System.Linq;\r\nusing System.Media;\r\nusing System.IO;\r\nusing System.Text;\r\nusing System.Text.RegularExpressions;\r\nusing System.Threading;\r\nusing System.Windows;\r\nusing System.Windows.Forms;\r\nusing System.Windows.Threading;\r\n\r\nusing NicoLibrary.NicoLiveData;\r\nusing Plugin;\r\n\r\nnamespace UserVoice\r\n{\r\n    using UserVoice.Voice;\r\n\r\n    public class NcvUserVoice : DispatcherObject, IPlugin\r\n    {\r\n        private UserVoiceCore core = new UserVoiceCore();\r\n        private IPluginHost host;\r\n        private DateTime startTime;\r\n        private DateTime lastCommentTime = DateTime.Now;\r\n\r\n        /// <summary>\r\n        /// \u30d7\u30e9\u30b0\u30a4\u30f3\u306b\u4e0e\u3048\u3089\u308c\u308b\u30db\u30b9\u30c8\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\r\n        /// </summary>\r\n        public IPluginHost Host\r\n        {\r\n            get { return this.host; }\r\n            set { this.host = value; }\r\n        }\r\n\r\n        /// <summary>\r\n        /// \u30d7\u30e9\u30b0\u30a4\u30f3\u540d\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\r\n        /// </summary>\r\n        public string Name\r\n        {\r\n            get { return \"\u30e6\u30fc\u30b6\u30fc\u30dc\u30a4\u30b9\"; }\r\n        }\r\n\r\n        /// <summary>\r\n        /// \u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u8aac\u660e\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\r\n        /// </summary>\r\n        public string Description\r\n        {\r\n            get { return \"\u30e6\u30fc\u30b6\u30fc\u3054\u3068\u306b\u58f0\u8a2d\u5b9a\u3092\u884c\u3046\u305f\u3081\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3067\u3059\u3002\"; }\r\n        }\r\n\r\n        /// <summary>\r\n        /// \u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\r\n        /// </summary>\r\n        public string Version\r\n        {\r\n            get { return \"1.2.0\"; }\r\n        }\r\n\r\n        /// <summary>\r\n        /// \u6700\u521d\u306b\u81ea\u52d5\u8d77\u52d5\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\r\n        /// </summary>\r\n        public bool IsAutoRun\r\n        {\r\n            get { return true; }\r\n        }\r\n\r\n        /// <summary>\r\n        /// \u81ea\u52d5\u8d77\u52d5\u6642\u306b\u547c\u3070\u308c\u307e\u3059\u3002\r\n        /// </summary>\r\n        public void AutoRun()\r\n        {\r\n            try\r\n            {\r\n                var logpath = Path.Combine(\r\n                    this.host.DirectoryPathSettingFile,\r\n                    \"UserVoiceLog.txt\");\r\n                Trace.Listeners.Add(new TextWriterTraceListener(logpath));\r\n\r\n                this.startTime = DateTime.Now;\r\n\r\n                this.host.BroadcastConnected += host_BroadcastConnected;\r\n                this.host.BroadcastDisConnected += host_BroadcastDisConnected;\r\n                this.host.ReceivedComment += host_ReceivedComment;\r\n                this.host.MainForm.FormClosed += MainForm_FormClosed;\r\n\r\n                //MessageBox.Show(this.host.DirectoryPathSettingFile);\r\n                //MessageBox.Show(this.host.DirectoryPathAppSetting);\r\n\r\n                var path = Path.Combine(this.host.DirectoryPathSettingFile, \"UserVoice.xml\");\r\n                AppSettings.DataFilePath = path;\r\n\r\n                AppSettings.Load();\r\n            }\r\n            catch (Exception)\r\n            {\r\n                //MessageBox.Show(e.Message + e.StackTrace);\r\n            }\r\n        }\r\n\r\n        /// <summary>\r\n        /// \u30e1\u30cb\u30e5\u30fc\u304b\u3089\u306e\u9078\u629e\u6642\u306b\u547c\u3070\u308c\u307e\u3059\u3002\r\n        /// </summary>\r\n        public void Run()\r\n        {\r\n            var mainForm = Global.MainForm;\r\n\r\n            if (mainForm == null)\r\n            {\r\n                mainForm = new Views.MainForm();\r\n            }\r\n\r\n            mainForm.Show();\r\n            mainForm.Activate();\r\n        }\r\n\r\n        void host_BroadcastConnected(object sender, EventArgs e)\r\n        {\r\n            this.startTime = DateTime.Now;\r\n\r\n            // \u518d\u63a5\u7d9a\u306e\u53ef\u80fd\u6027\u304c\u3042\u308b\u306e\u3067\u3001\r\n            // \u4e00\u5ea6\u68d2\u8aad\u307f\u3061\u3083\u3093\u306e\u30c7\u30fc\u30bf\u3092\u5168\u90e8\u6d88\u53bb\u3057\u307e\u3059\u3002\r\n            BouyomiChan.ClearTalkTask();\r\n        }\r\n\r\n        void host_BroadcastDisConnected(object sender, EventArgs e)\r\n        {\r\n            BouyomiChan.ClearTalkTask();\r\n        }\r\n\r\n        /// <summary>\r\n        /// \u30b3\u30e1\u30f3\u30c8\u3092\u51e6\u7406\u3057\u307e\u3059\u3002\r\n        /// </summary>\r\n        private void HandleComment(List<LiveCommentData> commentDataList)\r\n        {\r\n            Util.TraceLog(\"HandleComment\u958b\u59cb\");\r\n\r\n            foreach (var comment in commentDataList)\r\n            {\r\n                Util.TraceLog(\"\u30b3\u30e1\u30f3\u30c8: {0}({1})\",\r\n                    comment.Comment, comment.IndexOfUserSetting);\r\n\r\n                try\r\n                {\r\n                    // \uff2e\uff27\u30b3\u30e1\u30f3\u30c8\u306e\u5834\u5408\u3001\u6642\u523b\u304c\u306a\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\r\n                    if (string.IsNullOrEmpty(comment.Date))\r\n                    {\r\n                        continue;\r\n                    }\r\n\r\n                    // \u30b3\u30e1\u30f3\u30c8\u6295\u7a3f\u6642\u523b\u304c\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u958b\u59cb\u6642\u523b\u3088\u308a\u3082\u524d\u306e\u5834\u5408\u306f\u3001\r\n                    // \u305d\u306e\u30b3\u30e1\u30f3\u30c8\u306f\u89e3\u6790\u3057\u307e\u305b\u3093\u3002\r\n                    var date = Util.UnixTimeToDateTime(comment.Date);\r\n                    if (date < this.startTime)\r\n                    {\r\n                        continue;\r\n                    }\r\n\r\n                    // \u30aa\u30fc\u30ca\u30fc\u30b3\u30e1\u30f3\u30c8\u306a\u3089\r\n                    /*if (comment.Premium >= 2 && comment.)\r\n                    {\r\n                    }*/\r\n\r\n                    if (this.core.ParseComment(comment.Comment, comment.UserId))\r\n                    {\r\n                        this.core.ReadOut(\"\u58f0\u3092\u767b\u9332\u3057\u305f\u3088\uff5e\", comment.UserId);\r\n                    }\r\n                    else if (Global.ModelObject.IsReadComment(\r\n                        comment.Comment, comment.Mail, comment.IsBSP, comment.Premium))\r\n                    {\r\n                        this.core.ReadOut(comment.Comment, comment.UserId);\r\n                    }\r\n                    else if (!comment.Comment.StartsWith(\"/keepalive\"))\r\n                    {\r\n                        this.core.ReadInfo(comment.Comment, comment.Premium);\r\n                    }\r\n                }\r\n                catch (Exception e)\r\n                {\r\n                    MessageUtil.ErrorMessage(comment.Date + e.Message + e.StackTrace);\r\n                }\r\n\r\n                // \u30b3\u30e1\u30f3\u30c8\u53d7\u4fe1\u6642\u523b\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002\r\n                this.lastCommentTime = DateTime.Now;\r\n            }\r\n        }\r\n\r\n        void host_ReceivedComment(object sender, ReceivedCommentEventArgs e)\r\n        {\r\n            Util.TraceLog(\"\u30b3\u30e1\u30f3\u30c8\u3092\u53d7\u4fe1\u3057\u307e\u3057\u305f\u3002\");\r\n\r\n            // \u30b3\u30e1\u30f3\u30c8\u30ea\u30b9\u30c8\u306fNCV\u5185\u90e8\u3067\u518d\u5229\u7528\u3055\u308c\u308b\u3053\u3068\u304c\u3042\u308b\u3088\u3046\u3067\u3001\r\n            // \u4e00\u5ea6\u30b3\u30d4\u30fc\u3057\u306a\u3044\u3068\u4e2d\u8eab\u304c\u5909\u308f\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\r\n            var commentList = new List<LiveCommentData>(e.CommentDataList);\r\n            \r\n            if (this.Dispatcher.CheckAccess())\r\n            {\r\n                HandleComment(commentList);\r\n            }\r\n            else\r\n            {\r\n                Dispatcher.BeginInvoke(\r\n                    (Action<List<LiveCommentData>>)HandleComment,\r\n                    commentList);\r\n            }\r\n        }\r\n\r\n        void MainForm_FormClosed(object sender, FormClosedEventArgs e)\r\n        {\r\n            if (Global.MainForm!= null)\r\n            {\r\n                Global.MainForm.Close();\r\n            }\r\n\r\n            AppSettings.Save();\r\n        }\r\n    }\r\n}\r\n",
  "package pr\n\nimport (\n\t\"context\"\n\t\"strings\"\n\n\t\"github.com/microsoft/azure-devops-go-api/azuredevops/v6\"\n\t\"github.com/microsoft/azure-devops-go-api/azuredevops/v6/git\"\n)\n\nvar _ Provider = (*AzureDevops)(nil)\n\ntype AzureDevops struct {\n\tconn *azuredevops.Connection\n}\n\ntype AzureDevopsConfig struct {\n\tOrganizationURL string\n\tPAT             string\n}\n\nfunc NewAzureDevopsProvider(cfg *AzureDevopsConfig) (*AzureDevops, error) {\n\t// TODO: implement cfg validation\n\n\t// Create a connection to your organization\n\tconnection := azuredevops.NewPatConnection(cfg.OrganizationURL, cfg.PAT)\n\n\treturn &AzureDevops{conn: connection}, nil\n}\n\nfunc (ad AzureDevops) ListRepositoriesForProject(ctx context.Context, project string) ([]string, error) {\n\tgitClient, err := git.NewClient(ctx, ad.conn)\n\tif err!= nil {\n\t\treturn nil, err\n\t}\n\n\trepos, err := gitClient.GetRepositories(ctx, git.GetRepositoriesArgs{Project: &project})\n\tif err!= nil {\n\t\treturn nil, err\n\t}\n\n\trepoNames := make([]string, 0, len(*repos))\n\tfor _, repo := range *repos {\n\t\trepoNames = append(repoNames, *repo.Name)\n\t}\n\n\treturn repoNames, nil\n}\n\nfunc (ad AzureDevops) ListPullRequestsForRepository(ctx context.Context, project, repo string) ([]PR, error) {\n\tgitClient, err := git.NewClient(ctx, ad.conn)\n\tif err!= nil {\n\t\treturn nil, err\n\t}\n\n\tpullrequests, err := gitClient.GetPullRequests(ctx, git.GetPullRequestsArgs{\n\t\tRepositoryId:   &repo,\n\t\tProject:        &project,\n\t\tSearchCriteria: &git.GitPullRequestSearchCriteria{},\n\t})\n\tif err!= nil {\n\t\treturn nil, err\n\t}\n\n\trefPrefix := \"refs/heads/\"\n\n\tprs := make([]PR, 0, len(*pullrequests))\n\tfor _, pullrequest := range *pullrequests {\n\t\tprs = append(prs, PR{\n\t\t\tTitle:        *pullrequest.Title,\n\t\t\tURL:          webURLFromPR(pullrequest),\n\t\t\tUser:         *pullrequest.CreatedBy.DisplayName,\n\t\t\tSourceBranch: strings.TrimPrefix(*pullrequest.SourceRefName, refPrefix),\n\t\t\tTargetBranch: strings.TrimPrefix(*pullrequest.TargetRefName, refPrefix),\n\t\t\tCreatedAt:    pullrequest.CreationDate.Time,\n\t\t\tStatus:       ad.statusForPR(pullrequest),\n\t\t})\n\t}\n\n\treturn prs, nil\n}\n\nfunc (ad AzureDevops) GetRepositoryURL(ctx context.Context, project, repoName string) (string, error) {\n\tgitClient, err := git.NewClient(ctx, ad.conn)\n\tif err!= nil {\n\t\treturn \"\", err\n\t}\n\n\trepo, err := gitClient.GetRepository(ctx, git.GetRepositoryArgs{\n\t\tRepositoryId: &repoName,\n\t\tProject:      &project,\n\t})\n\tif err!= nil {\n\t\treturn \"\", err\n\t}\n\n\treturn *repo.WebUrl, nil\n}\n\nfunc (ad AzureDevops) statusForPR(pr git.GitPullRequest) Status {\n\tif pr.IsDraft!= nil && *pr.IsDraft {\n\t\treturn StatusDraft\n\t}\n\n\tif pr.Status == nil {\n\t\treturn StatusUnspecified\n\t}\n\n\tswitch *pr.Status {\n\tcase \"active\":\n\t\treturn StatusActive\n\tcase \"completed\":\n\t\treturn StatusClosed\n\tdefault:\n\t\treturn StatusUnspecified\n\t}\n}\n\nfunc webURLFromPR(pullrequest git.GitPullRequest) string {\n\tif pullrequest.Url == nil {\n\t\treturn \"\"\n\t}\n\n\treplacer := strings.NewReplacer(\n\t\t\"_apis/git/repositories\", \"_git\",\n\t\t\"/pullRequests\", \"/pullrequest\",\n\t)\n\treturn replacer.Replace(*pullrequest.Url)\n}\n",
  "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<!-- NewPage -->\n<html lang=\"en\">\n<head>\n<!-- Generated by javadoc (version 1.7.0_80) on Wed Apr 13 03:38:45 UTC 2016 -->\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n<title>Uses of Package org.mockito.internal.reporting (Mockito 2.0.45-beta API)</title>\n<meta name=\"date\" content=\"2016-04-13\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"../../../../stylesheet.css\" title=\"Style\">\n</head>\n<body>\n<script type=\"text/javascript\"><!--\n    if (location.href.indexOf('is-external=true') == -1) {\n        parent.document.title=\"Uses of Package org.mockito.internal.reporting (Mockito 2.0.45-beta API)\";\n    }\n//-->\n</script>\n<noscript>\n<div>JavaScript is disabled on your browser.</div>\n</noscript>\n<!-- ========= START OF TOP NAVBAR ======= -->\n<div class=\"topNav\"><a name=\"navbar_top\">\n<!--   -->\n</a><a href=\"#skip-navbar_top\" title=\"Skip navigation links\"></a><a name=\"navbar_top_firstrow\">\n<!--   -->\n</a>\n<ul class=\"navList\" title=\"Navigation\">\n<li><a href=\"../../../../overview-summary.html\">Overview</a></li>\n<li><a href=\"package-summary.html\">Package</a></li>\n<li>Class</li>\n<li class=\"navBarCell1Rev\">Use</li>\n<li><a href=\"package-tree.html\">Tree</a></li>\n<li><a href=\"../../../../deprecated-list.html\">Deprecated</a></li>\n<li><a href=\"../../../../index-files/index-1.html\">Index</a></li>\n<li><a href=\"../../../../help-doc.html\">Help</a></li>\n</ul>\n<div class=\"aboutLanguage\"><em><em id=\"mockito-version-header-javadoc7-header\"><strong>Mockito 2.0.45-beta API</strong></em></em></div>\n</div>\n<div class=\"subNav\">\n<ul class=\"navList\">\n<li>Prev</li>\n<li>Next</li>\n</ul>\n<ul class=\"navList\">\n<li><a href=\"../../../../index.html?org/mockito/internal/reporting/package-use.html\" target=\"_top\">Frames</a></li>\n<li><a href=\"package-use.html\" target=\"_top\">No Frames</a></li>\n</ul>\n<ul class=\"navList\" id=\"allclasses_navbar_top\">\n<li><a href=\"../../../../allclasses-noframe.html\">All Classes</a></li>\n</ul>\n<div>\n<script type=\"text/javascript\"><!--\n  allClassesLink = document.getElementById(\"allclasses_navbar_top\");\n  if(window==top) {\n    allClassesLink.style.display = \"block\";\n  }\n  else {\n    allClassesLink.style.display = \"none\";\n  }\n  //-->\n</script>\n</div>\n<a name=\"skip-navbar_top\">\n<!--   -->\n</a></div>\n<!-- ========= END OF TOP NAVBAR ========= -->\n<div class=\"header\">\n<h1 title=\"Uses of Package org.mockito.internal.reporting\" class=\"title\">Uses of Package<br>org.mockito.internal.reporting</h1>\n</div>\n<div class=\"contentContainer\">\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<table border=\"0\" cellpadding=\"3\" cellspacing=\"0\" summary=\"Use table, listing packages, and an explanation\">\n<caption><span>Packages that use <a href=\"../../../../org/mockito/internal/reporting/package-summary.html\">org.mockito.internal.reporting</a></span><span class=\"tabEnd\">&nbsp;</span></caption>\n<tr>\n<th class=\"colFirst\" scope=\"col\">Package</th>\n<th class=\"colLast\" scope=\"col\">Description</th>\n</tr>\n<tbody>\n<tr class=\"altColor\">\n<td class=\"colFirst\"><a href=\"#org.mockito.exceptions\">org.mockito.exceptions</a></td>\n<td class=\"colLast\">\n<div class=\"block\">Exception messages, exception hierarchies.</div>\n</td>\n</tr>\n<tr class=\"rowColor\">\n<td class=\"colFirst\"><a href=\"#org.mockito.internal.matchers.text\">org.mockito.internal.matchers.text</a></td>\n<td class=\"colLast\">&nbsp;</td>\n</tr>\n<tr class=\"altColor\">\n<td class=\"colFirst\"><a href=\"#org.mockito.internal.reporting\">org.mockito.internal.reporting</a></td>\n<td class=\"colLast\">\n<div class=\"block\">Deals with nicely printing verification errors</div>\n</td>\n</tr>\n<tr class=\"rowColor\">\n<td class=\"colFirst\"><a href=\"#org.mockito.internal.verification.checkers\">org.mockito.internal.verification.checkers</a></td>\n<td class=\"colLast\">\n<div class=\"block\">verification checkers</div>\n</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li class=\"blockList\"><a name=\"org.mockito.exceptions\">\n<!--   -->\n</a>\n<table border=\"0\" cellpadding=\"3\" cellspacing=\"0\" summary=\"Use table, listing classes, and an explanation\">\n<caption><span>Classes in <a href=\"../../../../org/mockito/internal/reporting/package-summary.html\">org.mockito.internal.reporting</a> used by <a href=\"../../../../org/mockito/exceptions/package-summary.html\">org.mockito.exceptions</a></span><span class=\"tabEnd\">&nbsp;</span></caption>\n<tr>\n<th class=\"colOne\" scope=\"col\">Class and Description</th>\n</tr>\n<tbody>\n<tr class=\"altColor\">\n<td class=\"colOne\"><a href=\"../../../../org/mockito/internal/reporting/class-use/Discrepancy.html#org.mockito.exceptions\">Discrepancy</a>&nbsp;</td>\n</tr>\n<tr class=\"rowColor\">\n<td class=\"colOne\"><a href=\"../../../../org/mockito/internal/reporting/class-use/Pluralizer.html#org.mockito.exceptions\">Pluralizer</a>&nbsp;</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li class=\"blockList\"><a name=\"org.mockito.internal.matchers.text\">\n<!--   -->\n</a>\n<table border=\"0\" cellpadding=\"3\" cellspacing=\"0\" summary=\"Use table, listing classes, and an explanation\">\n<caption><span>Classes in <a href=\"../../../../org/mockito/internal/reporting/package-summary.html\">org.mockito.internal.reporting</a> used by <a href=\"../../../../org/mockito/internal/matchers/text/package-summary.html\">org.mockito.internal.matchers.text</a></span><span class=\"tabEnd\">&nbsp;</span></caption>\n<tr>\n<th class=\"colOne\" scope=\"col\">Class and Description</th>\n</tr>\n<tbody>\n<tr class=\"altColor\">\n<td class=\"colOne\"><a href=\"../../../../org/mockito/internal/reporting/class-use/PrintSettings.html#org.mockito.internal.matchers.text\">PrintSettings</a>&nbsp;</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li class=\"blockList\"><a name=\"org.mockito.internal.reporting\">\n<!--   -->\n</a>\n<table border=\"0\" cellpadding=\"3\" cellspacing=\"0\" summary=\"Use table, listing classes, and an explanation\">\n<caption><span>Classes in <a href=\"../../../../org/mockito/internal/reporting/package-summary.html\">org.mockito.internal.reporting</a> used by <a href=\"../../../../org/mockito/internal/reporting/package-summary.html\">org.mockito.internal.reporting</a></span><span class=\"tabEnd\">&nbsp;</span></caption>\n<tr>\n<th class=\"colOne\" scope=\"col\">Class and Description</th>\n",
  "import pickle\nfrom colabfold.batch import get_msa_and_templates, msa_to_str, generate_input_feature, predict_structure_get_embeddings, load_models_and_params\nfrom pathlib import Path\nimport pandas as pd\nimport os\nimport time\n# queries is a list which is passed into the outer function above this which is run_get_embeddings()\n# [('test_7dfa6', 'PIAQIHILEGRSDEQKETLIREVSEAISRSLDAPLTSVRVIITEMAKGHFGIGGELASK', None)]\n\ndef pickler(jobname, unpaired_msa, paired_msa, query_seqs_unique, query_seqs_cardinality, template_features, directory_out ='saved_msa/'):\n    msa_dict = {\n        'unpaired_msa': unpaired_msa,\n        'paired_msa': paired_msa,\n        'query_seqs_unique': query_seqs_unique,\n        'query_seqs_cardinality': query_seqs_cardinality,\n        'template_features': template_features,\n\n    }\n    filename = directory_out + jobname + '.pickle'\n    with open(filename, 'wb') as handle:\n        pickle.dump(msa_dict, handle, protocol=pickle.HIGHEST_PROTOCOL)\n\n# Set up configuration and settings\nmsa_mode = \"MMseqs2 (UniRef+Environmental)\" #  \"MMseqs2 (UniRef only)\"\nresult_dir = Path('')\nuse_templates = False\npair_mode = \"unpaired+paired\"\nhost_url = 'https://a3m.mmseqs.com'\ndirectory_out ='saved_msa/'\n\n# load the dataframe which contains the sequences\nfilepath = '/Users/judewells/Documents/dataScienceProgramming/cath-funsite-predictor/experiments/PPI_training_dataset_with_sequences.csv'\ndf = pd.read_csv(filepath)\ndf['domain_id'] = (df.PDBID + df.CHAIN).str.upper()\n\n# generate the MSAs for each chain\nfor i, row in df.iterrows():\n    query_sequence = row.sequence\n    if query_sequence is None:\n        continue\n    jobname = row.domain_id\n    filepath = directory_out + jobname + '.pickle'\n    if os.path.exists(filepath):\n        continue\n\n    msa_results = get_msa_and_templates(jobname, query_sequence, result_dir,\n                    msa_mode, use_templates, pair_mode, host_url)\n\n    # split the msa_results tuple into its constitutent parts\n    unpaired_msa,paired_msa,query_seqs_unique,query_seqs_cardinality,template_features  = msa_results\n    pickler(jobname, unpaired_msa, paired_msa, query_seqs_unique, query_seqs_cardinality,\n            template_features, directory_out ='saved_msa/')\n    if i % 50 == 0:\n        print(f'completed {i}')\n    time.sleep(30)\n\n\n\n\n\n\n\n\n\n\n###### The rest of the code is not essential for the allignent\n###### but shows which aspects of it are required\n\nmsa = msa_to_str(\n    unpaired_msa, paired_msa, query_seqs_unique, query_seqs_cardinality\n)\n\nis_complex = False\nuse_amber = False\nmodel_type = 'AlphaFold2-ptm'\ncrop_len = 0\nrank_by = 'plddt'\nstop_at_score = 100\nprediction_callback = None\nnum_models = 1\nnum_recycles = 1\nmodel_order = [2]\nmodel_extension = '_ptm'\ndata_dir = Path('')\nrecompile_all_models = False\n\n\n\n\n\nquery_sequence_len_array = [\n    len(query_seqs_unique[i])\n    for i, cardinality in enumerate(query_seqs_cardinality)\n    for _ in range(0, cardinality)\n]\n\nmodel_runner_and_params = load_models_and_params(\n    num_models,\n    use_templates,\n    num_recycles,\n    model_order,\n    model_extension,\n    data_dir,\n    recompile_all_models,\n    stop_at_score=stop_at_score,\n    rank_by=rank_by,\n)\n\n\ninput_features = generate_input_feature(\n    query_seqs_unique,\n    query_seqs_cardinality,\n    unpaired_msa,\n    paired_msa,\n    template_features,\n    is_complex,\n    model_type,\n)\n\npredictions_list = predict_structure_get_embeddings(\n    jobname,\n    result_dir,\n    input_features,\n    is_complex,\n    use_templates,\n    sequences_lengths=query_sequence_len_array,\n    crop_len=crop_len,\n    model_type=model_type,\n    model_runner_and_params=model_runner_and_params,\n    do_relax=use_amber,\n    rank_by=rank_by,\n    stop_at_score=stop_at_score,\n    prediction_callback=prediction_callback,\n)\n\n",
  "require './droplet_deploy.rb'\nrequire 'droplet_kit'\nrequire './ip_info.rb'\nrequire './userdata_openvpn.rb'\nrequire 'pry'\nrequire 'yaml'\n\n# Initialize configuration variables\ncnf = YAML::load_file(File.join(__dir__, 'config.yml'))\n@token=cnf[\"do_token\"][\"admin\"]\nsystemInfo = {\"name\" => \"openVPN\"+rand(1000).to_s, \"region\" => \"nyc3\", \"size\" => \"1gb\", \"image\" => \"ubuntu-14-04-x64\", \"user_data\" => userdata_openvpn(), \"ssh_keys\" => ['982252']}\nip_public = deploy_droplet(systemInfo)\nputs \"time to sleep so everything can be generted properly\"\nsleep(60)\n\n#{}`ssh -o StrictHostKeyChecking=no root@#{ip_public[0]}`\n`scp -o StrictHostKeyChecking=no root@#{ip_public[0]}:/etc/openvpn/easy-rsa/keys/user1.crt /home/joshua/openvpn/`\n`scp -o StrictHostKeyChecking=no root@#{ip_public[0]}:/etc/openvpn/easy-rsa/keys/user1.key /home/joshua/openvpn/`\n`scp -o StrictHostKeyChecking=no root@#{ip_public[0]}:/etc/openvpn/easy-rsa/keys/ca.crt /home/joshua/openvpn/`\n`tempbro=$(cat /home/joshua/openvpn/client.conf) && echo $tempbro | grep -v 1194 >/home/joshua/openvpn/client.conf`\n`echo \"remote #{ip_public[0]} 1194\" > client.conf`\nbinding.pry\n`sudo openvpn /home/joshua/openvpn/client.conf`\n",
  "import { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from './../material.module';\nimport { async, ComponentFixture, TestBed } from '@angular/core/testing';\nimport { ContactUsComponent } from './contact-us.component';\n\ndescribe('ContactUsComponent', () => {\n  let component: ContactUsComponent;\n  let fixture: ComponentFixture<ContactUsComponent>;\n\n  beforeEach(async(() => {\n    TestBed.configureTestingModule({\n      declarations: [ ContactUsComponent ],\n      imports: [\n        MaterialModule,\n        ReactiveFormsModule,\n        HttpClientModule\n      ]\n    })\n   .compileComponents();\n  }));\n\n  beforeEach(() => {\n    fixture = TestBed.createComponent(ContactUsComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n\n  it('the form should be invalid when empty', () => {\n    expect(component.myGroup.valid).toBeFalsy();\n  });\n\n  it('all fields should be invalid when empty', () => {\n    const name = component.myGroup.controls['name'];\n    const email = component.myGroup.controls['email'];\n    const message = component.myGroup.controls['message'];\n    expect(name.valid).toBeFalsy();\n    expect(email.valid).toBeFalsy();\n    expect(message.valid).toBeFalsy();\n  });\n\n  it('required fields should not be empty', () => {\n    let errors = {};\n    const email = component.myGroup.controls['email'];\n    errors = email.errors || {};\n    expect(errors['required']).toBeTruthy();\n  });\n\n  it('email values need to be valid', () => {\n    let errors = {};\n    const email = component.myGroup.controls['email'];\n    email.setValue('test');\n    errors = email.errors || {};\n    expect(errors['email']).toBeTruthy();\n  });\n\n  it('valid email values should not have any errors', () => {\n    let errors = {};\n    const email = component.myGroup.controls['email'];\n    email.setValue('test@2');\n    errors = email.errors || {};\n    expect(errors['email']).toBeFalsy();\n  });\n\n  it('valid email submission should result in a success message being displayed', () => {\n    component.myGroup.controls['name'].setValue('JasmineTest');\n    component.myGroup.controls['email'].setValue('jasmine@test.com');\n    component.myGroup.controls['message'].setValue('JasmineTest is happening hello');\n    component.onSubmit();\n    expect(component.showSpinner).toBeTruthy();\n  });\n\n  it('adding a quote to the message should create a quote message to append', () => {\n    component.addQuoteToMessage();\n    expect(component.quoteMessage.length).toBeGreaterThan(1);\n  });\n});\n",
  "'use strict'\n\nconst Test = require('tape')\nconst Base = require('../../base')\nconst Fixtures = require('../../../fixtures')\nconst TransferState = require('../../../../src/domain/transfer/state')\nconst fulfillment = 'oAKAAA'\n\nconst amount = '25.00'\n\nTest('PUT /transfer/:id/fulfillment', putTest => {\n  putTest.test('should fulfill a transfer', test => {\n    const transferId = Fixtures.generateTransferId()\n    const transfer = Fixtures.buildTransfer(transferId, Fixtures.buildDebitOrCredit(Base.account1Name, amount), Fixtures.buildDebitOrCredit(Base.account2Name, amount))\n\n    Base.prepareTransfer(transferId, transfer)\n     .then(() => {\n        Base.fulfillTransfer(transferId, fulfillment)\n         .expect(200)\n         .expect('Content-Type', /json/)\n         .then(res => {\n            test.equal(res.body.id, transfer.id)\n            test.equal(res.body.ledger, transfer.ledger)\n            test.equal(res.body.debits[0].account, transfer.debits[0].account)\n            test.equal(res.body.debits[0].amount, amount)\n            test.equal(res.body.credits[0].account, transfer.credits[0].account)\n            test.equal(res.body.credits[0].amount, amount)\n            test.equal(res.body.execution_condition, transfer.execution_condition)\n            test.equal(res.body.expires_at, transfer.expires_at)\n            test.equal(res.body.state, TransferState.EXECUTED)\n            test.ok(res.body.timeline.prepared_at)\n            test.ok(res.body.timeline.executed_at)\n            test.equal(res.body.timeline.hasOwnProperty('rejected_at'), false)\n            test.end()\n          })\n      })\n  })\n\n  putTest.test('should return error when fulfilling non-existing transfer', test => {\n    const transferId = Fixtures.generateTransferId()\n\n    Base.fulfillTransfer(transferId, fulfillment)\n     .expect(404)\n     .then(res => {\n        test.equal(res.body.id, 'NotFoundError')\n        test.equal(res.body.message, 'The requested resource could not be found.')\n        test.end()\n      })\n  })\n\n  putTest.test('should return fulfillment when fulfilling already fulfilled transfer', test => {\n    const transferId = Fixtures.generateTransferId()\n    const transfer = Fixtures.buildTransfer(transferId, Fixtures.buildDebitOrCredit(Base.account1Name, amount), Fixtures.buildDebitOrCredit(Base.account2Name, amount))\n\n    Base.prepareTransfer(transferId, transfer)\n     .then(() => Base.fulfillTransfer(transferId, fulfillment))\n     .then(() => {\n        Base.fulfillTransfer(transferId, fulfillment)\n         .expect(200)\n         .expect('Content-Type', /json/)\n         .then(res => {\n            test.equal(res.body.id, transfer.id)\n            test.equal(res.body.ledger, transfer.ledger)\n            test.equal(res.body.debits[0].account, transfer.debits[0].account)\n            test.equal(res.body.debits[0].amount, amount)\n            test.equal(res.body.credits[0].account, transfer.credits[0].account)\n            test.equal(res.body.credits[0].amount, amount)\n            test.equal(res.body.execution_condition, transfer.execution_condition)\n            test.equal(res.body.expires_at, transfer.expires_at)\n            test.equal(res.body.state, TransferState.EXECUTED)\n            test.ok(res.body.timeline.prepared_at)\n            test.ok(res.body.timeline.executed_at)\n            test.equal(res.body.timeline.hasOwnProperty('rejected_at'), false)\n            test.end()\n          })\n      })\n  })\n\n  putTest.test('should return error when fulfilling expired transfer', test => {\n    const transferId = Fixtures.generateTransferId()\n    const transfer = Fixtures.buildTransfer(transferId, Fixtures.buildDebitOrCredit(Base.account1Name, amount), Fixtures.buildDebitOrCredit(Base.account2Name, amount), Fixtures.getMomentToExpire())\n\n    Base.prepareTransfer(transferId, transfer)\n     .delay(1000)\n     .then(() => {\n        Base.fulfillTransfer(transferId, fulfillment)\n         .expect(422)\n         .expect('Content-Type', 'application/json; charset=utf-8')\n         .then(res => {\n            test.equal(res.body.id, 'UnpreparedTransferError')\n            test.equal(res.body.message, 'The provided entity is syntactically correct, but there is a generic semantic problem with it.')\n            test.end()\n          })\n      })\n  })\n\n  putTest.test('should return error when fulfilling unconditional transfer', test => {\n    const transferId = Fixtures.generateTransferId()\n    const transfer = Fixtures.buildUnconditionalTransfer(transferId, Fixtures.buildDebitOrCredit(Base.account1Name, amount), Fixtures.buildDebitOrCredit(Base.account2Name, amount))\n\n    Base.prepareTransfer(transferId, transfer)\n     .then(() => {\n        Base.fulfillTransfer(transferId, fulfillment)\n         .expect(422)\n         .expect('Content-Type', 'application/json; charset=utf-8')\n         .then(res => {\n            test.equal(res.body.id, 'TransferNotConditionalError')\n            test.equal(res.body.message, 'Transfer is not conditional')\n            test.end()\n          })\n      })\n  })\n\n  putTest.test('should return error when fulfilling rejected transfer', test => {\n    const transferId = Fixtures.generateTransferId()\n    const transfer = Fixtures.buildTransfer(transferId, Fixtures.buildDebitOrCredit(Base.account1Name, amount), Fixtures.buildDebitOrCredit(Base.account2Name, amount), Fixtures.getMomentToExpire())\n\n    Base.prepareTransfer(transferId, transfer)\n     .then(() => Base.rejectTransfer(transferId, Fixtures.rejectionMessage(), { name: Base.account2Password, password: Base.account2Password }))\n     .then(() => {\n        Base.fulfillTransfer(transferId, fulfillment)\n         .expect(400)\n         .expect('Content-Type', 'application/json; charset=utf-8')\n         .then(res => {\n            test.equal(res.body.id, 'InvalidModificationError')\n            test.equal(res.body.message, 'Transfers in state rejected may not be executed')\n            test.end()\n          })\n      })\n  })\n\n  putTest.test('should return error when fulfillment is invalid', test => {\n    const transferId = Fixtures.generateTransferId()\n    const transfer = Fixtures.buildTransfer(transferId, Fixtures.buildDebitOrCredit(Base.account1Name, amount), Fixtures.buildDebitOrCredit(Base.account2Name, amount))\n\n    Base.prepareTransfer(transferId, transfer)\n     .then(() => {\n        Base.fulfillTransfer(transferId, 'garbage')\n         .expect(400)\n         .expect('Content-Type', 'application/json; charset=utf-8')\n         .then(res => {\n            test.equal(res.body.id, 'InvalidBodyError')\n            test.end()\n          })\n      })\n  })\n\n  putTest.test('should return error when fulfullment is incorrect', test => {\n    const transferId = Fixtures.generateTransferId()\n    const transfer = Fixtures.buildTransfer(transferId, Fixtures.buildDebitOrCredit(Base.account1Name, amount), Fixtures.buildDebitOrCredit(Base.account2Name, amount))\n\n    Base.prepareTransfer(transferId, transfer)\n     .then(() => {\n        Base.fulfillTransfer(transferId, 'oCKAIOwXK5OtXlY79JMscOEkUDTDVGfvLv1NZOv4GWg0Z-K_')\n         .expect(422)\n         .expect('Content-Type', 'application/json; charset=utf-8')\n          ",
  "<form action=\"{{  url('/operador/'.$operador->id) }}\" method=\"post\">\n\n    @csrf\n    {{ method_field('PATCH') }}\n    @include('operador.form',['modo'=>'Editar']);\n\n</form>",
  "import tabsComponent from './tab.component';\nimport deprecated from '../tool/deprecated';\n\nlet app = angular.module('bp.tabs', [\n  ])\n .component('fTabs', tabsComponent)\n .component('bpTabs',\n    deprecated(tabsComponent, 'bp-tabs', 'f-tabs'));\n\nexport default app;\n",
  "interface PrefixMap {\n  [index: string]: string;\n}\n\nexport default PrefixMap;",
  "\ufeffusing AlbanianXrm.CustomizationManager.Interfaces;\nusing McTools.Xrm.Connection;\nusing Microsoft.Xrm.Sdk;\nusing System;\nusing XrmToolBox.Extensibility;\nusing XrmToolBox.Extensibility.Interfaces;\n\nnamespace AlbanianXrm.CustomizationManager\n{\n    internal partial class CustomizationManagerBridge : PluginControlBase, IGitHubPlugin, IWorkerHostWrapper\n    {\n        private readonly ToolViewModel toolViewModel;\n\n        /// <summary>\n        /// GitHub repository \n        /// </summary>\n        public string RepositoryName => \"Customization-Manager\";\n\n        /// <summary>\n        /// GitHub UserName\n        /// </summary>\n        public string UserName => \"albanian-xrm\";\n\n        /// <summary>\n        /// Constructor\n        /// </summary>\n        public CustomizationManagerBridge()\n        {\n\n            toolViewModel = new ToolViewModel\n            {\n                MessageBroker = new MessageBoxBroker(),\n                OrganizationService = Service\n            };\n            toolViewModel.AsyncWorkQueue = new AsyncWorkQueue(this, toolViewModel);\n            InitializeComponent();\n            customizationManagerControl.InitializeBindings(toolViewModel);\n        }\n\n        public override void UpdateConnection(IOrganizationService newService, ConnectionDetail detail, string actionName, object parameter)\n        {\n            base.UpdateConnection(newService, detail, actionName, parameter);\n            toolViewModel.OrganizationService = newService;\n        }\n\n        public void WorkAsync(IWorkAsyncWrapper info)\n        {\n            if (info == null) throw new ArgumentNullException(nameof(info));\n            var workAsyncInfo = new WorkAsyncInfo();\n            if (info.AsyncArgument!= null)\n            {\n                workAsyncInfo.AsyncArgument = info.AsyncArgument;\n            }\n            if (info.Host!= null)\n            {\n                workAsyncInfo.Host = info.Host;\n            }\n            if (info.IsCancelable)\n            {\n                workAsyncInfo.IsCancelable = info.IsCancelable;\n            }\n            if (info.Message!= null)\n            {\n                workAsyncInfo.Message = info.Message;\n            }          \n            if (info.MessageHeight > 0)\n            {\n                workAsyncInfo.MessageHeight = info.MessageHeight;\n            }\n            if (info.MessageWidth > 0)\n            {\n                workAsyncInfo.MessageWidth = info.MessageWidth;\n            }\n            if (info.PostWorkCallBack!= null)\n            {\n                workAsyncInfo.PostWorkCallBack = info.PostWorkCallBack;\n            }\n            if (info.ProgressChanged!= null)\n            {\n                workAsyncInfo.ProgressChanged = info.ProgressChanged;\n            }\n            if (info.Work!= null)\n            {\n                workAsyncInfo.Work = info.Work;\n            }\n            WorkAsync(workAsyncInfo);\n        }\n    }\n}\n",
  "/*\n * Copyright 2010-2014 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n * \n *  http://aws.amazon.com/apache2.0\n * \n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */\n\n/*\n * Do not modify this file. This file is generated from the detective-2018-10-26.normal.json service model.\n */\n\n\nusing System;\nusing System.Globalization;\nusing System.IO;\nusing System.Text;\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\n\nusing Amazon.Detective;\nusing Amazon.Detective.Model;\nusing Amazon.Detective.Model.Internal.MarshallTransformations;\nusing Amazon.Runtime.Internal.Transform;\nusing Amazon.Util;\nusing ServiceClientGenerator;\n\nusing AWSSDK_DotNet35.UnitTests.TestTools;\n\nnamespace AWSSDK_DotNet35.UnitTests.Marshalling\n{\n    [TestClass]\n    public partial class DetectiveMarshallingTests\n    {\n        static readonly ServiceModel service_model = Utils.LoadServiceModel(\"detective\");\n        \n        [TestMethod]\n        [TestCategory(\"UnitTest\")]\n        [TestCategory(\"Rest_Json\")]\n        [TestCategory(\"Detective\")]\n        public void AcceptInvitationMarshallTest()\n        {\n            var operation = service_model.FindOperation(\"AcceptInvitation\");\n\n            var request = InstantiateClassGenerator.Execute<AcceptInvitationRequest>();\n            var marshaller = new AcceptInvitationRequestMarshaller();\n\n            var internalRequest = marshaller.Marshall(request);\n            TestTools.RequestValidator.Validate(\"AcceptInvitation\", request, internalRequest, service_model);            \n\n        }\n\n        \n        [TestMethod]\n        [TestCategory(\"UnitTest\")]\n        [TestCategory(\"Rest_Json\")]\n        [TestCategory(\"Detective\")]\n        public void CreateGraphMarshallTest()\n        {\n            var operation = service_model.FindOperation(\"CreateGraph\");\n\n            var request = InstantiateClassGenerator.Execute<CreateGraphRequest>();\n            var marshaller = new CreateGraphRequestMarshaller();\n\n            var internalRequest = marshaller.Marshall(request);\n            TestTools.RequestValidator.Validate(\"CreateGraph\", request, internalRequest, service_model);            \n\n            var webResponse = new WebResponseData\n            {\n                Headers = {\n                    {\"x-amzn-RequestId\", Guid.NewGuid().ToString()},\n                    {\"x-amz-crc32\",\"0\"}\n                }\n            };\n            \n            var payloadResponse = new JsonSampleGenerator(service_model, operation.ResponseStructure).Execute();\n            webResponse.Headers[\"Content-Length\"] = UTF8Encoding.UTF8.GetBytes(payloadResponse).Length.ToString();\n            var context = new JsonUnmarshallerContext(Utils.CreateStreamFromString(payloadResponse), false, webResponse);\n            ResponseUnmarshaller unmarshaller = CreateGraphResponseUnmarshaller.Instance;\n            var response = unmarshaller.Unmarshall(context)\n                as CreateGraphResponse;   \n            InstantiateClassGenerator.ValidateObjectFullyInstantiated(response);               \n        }\n\n        \n        [TestMethod]\n        [TestCategory(\"UnitTest\")]\n        [TestCategory(\"Rest_Json\")]\n        [TestCategory(\"Detective\")]\n        public void CreateMembersMarshallTest()\n        {\n            var operation = service_model.FindOperation(\"CreateMembers\");\n\n            var request = InstantiateClassGenerator.Execute<CreateMembersRequest>();\n            var marshaller = new CreateMembersRequestMarshaller();\n\n            var internalRequest = marshaller.Marshall(request);\n            TestTools.RequestValidator.Validate(\"CreateMembers\", request, internalRequest, service_model);            \n\n            var webResponse = new WebResponseData\n            {\n                Headers = {\n                    {\"x-amzn-RequestId\", Guid.NewGuid().ToString()},\n                    {\"x-amz-crc32\",\"0\"}\n                }\n            };\n            \n            var payloadResponse = new JsonSampleGenerator(service_model, operation.ResponseStructure).Execute();\n            webResponse.Headers[\"Content-Length\"] = UTF8Encoding.UTF8.GetBytes(payloadResponse).Length.ToString();\n            var context = new JsonUnmarshallerContext(Utils.CreateStreamFromString(payloadResponse), false, webResponse);\n            ResponseUnmarshaller unmarshaller = CreateMembersResponseUnmarshaller.Instance;\n            var response = unmarshaller.Unmarshall(context)\n                as CreateMembersResponse;   \n            InstantiateClassGenerator.ValidateObjectFullyInstantiated(response);               \n        }\n\n        \n        [TestMethod]\n        [TestCategory(\"UnitTest\")]\n        [TestCategory(\"Rest_Json\")]\n        [TestCategory(\"Detective\")]\n        public void DeleteGraphMarshallTest()\n        {\n            var operation = service_model.FindOperation(\"DeleteGraph\");\n\n            var request = InstantiateClassGenerator.Execute<DeleteGraphRequest>();\n            var marshaller = new DeleteGraphRequestMarshaller();\n\n            var internalRequest = marshaller.Marshall(request);\n            TestTools.RequestValidator.Validate(\"DeleteGraph\", request, internalRequest, service_model);            \n\n        }\n\n        \n        [TestMethod]\n        [TestCategory(\"UnitTest\")]\n        [TestCategory(\"Rest_Json\")]\n        [TestCategory(\"Detective\")]\n        public void DeleteMembersMarshallTest()\n        {\n            var operation = service_model.FindOperation(\"DeleteMembers\");\n\n            var request = InstantiateClassGenerator.Execute<DeleteMembersRequest>();\n            var marshaller = new DeleteMembersRequestMarshaller();\n\n            var internalRequest = marshaller.Marshall(request);\n            TestTools.RequestValidator.Validate(\"DeleteMembers\", request, internalRequest, service_model);            \n\n            var webResponse = new WebResponseData\n            {\n                Headers = {\n                    {\"x-amzn-RequestId\", Guid.NewGuid().ToString()},\n                    {\"x-amz-crc32\",\"0\"}\n                }\n            };\n            \n            var payloadResponse = new JsonSampleGenerator(service_model, operation.ResponseStructure).Execute();\n            webResponse.Headers[\"Content-Length\"] = UTF8Encoding.UTF8.GetBytes(payloadResponse).Length.ToString();\n            var context = new JsonUnmarshallerContext(Utils.CreateStreamFromString(payloadResponse), false, webResponse);\n            ResponseUnmarshaller unmarshaller = DeleteMembersResponseUnmarshaller.Instance;\n            var response = unmarshaller.Unmarshall(context)\n                as DeleteMembersResponse;   \n            InstantiateClassGenerator.ValidateObjectFullyInstantiated(response);               \n        }\n\n        \n        [TestMethod]\n        [TestCategory(\"UnitTest\")]\n        [TestCategory(\"Rest_Json\")]\n        [TestCategory(\"Detective\")]\n        public void DisassociateMembershipMarshallTest()\n        {\n            var operation = service_model.FindOperation(\"DisassociateMembership\");\n\n            var request = InstantiateClassGenerator.Execute<DisassociateMembershipRequest>();\n            var marshaller = new DisassociateMembershipRequestMarshaller();\n\n            var internalRequest = marshaller.Marshall(request);\n            TestTools.RequestValidator.Validate(\"DisassociateMembership\", request, internalRequest, service_model);            \n\n        }\n\n        \n        [TestMethod]\n        [TestCategory(\"UnitTest\")]\n        [TestCategory(\"Rest_Json\")]\n        [TestCategory(\"Detective\")]\n        public void GetMembersMarshallTest()\n        {\n            var operation = service_model.FindOperation(\"GetMembers\");\n\n            var request = InstantiateClassGenerator.Execute<GetMembersRequest>();\n            var marshaller = new GetMembersRequestMarshaller();\n\n            var internalRequest = marshaller.Marshall(request);\n            TestTools.RequestValidator.Validate(\"GetMembers\", request, internalRequest, service_model);            \n\n            var webResponse = new WebResponseData\n            {\n                Headers = {\n                    {\"x-amzn-RequestId\", Guid.NewGuid().ToString()},\n                    {\"x-amz-crc32\",\"0\"}\n                }\n            };\n            \n            var payloadResponse = new JsonSampleGenerator(service_model, operation.ResponseStructure).Execute();\n            webResponse.Headers[\"Content-Length\"] = UTF8Encoding.UTF8.GetBytes(payloadResponse).Length.ToString();\n            var context = new JsonUnmarshallerContext(Utils",
  "{% extends \"pretixpresale/event/base.html\" %}\n{% load i18n %}\n{% load money %}\n{% load eventurl %}\n{% block title %}{% trans \"Cancel order\" %}{% endblock %}\n{% block content %}\n    <h2>\n        {% blocktrans trimmed with code=order.code %}\n            Cancel order: {{ code }}\n        {% endblocktrans %}\n    </h2>\n    <p>\n        {% blocktrans trimmed %}\n            Do you really want to cancel this order? You cannot revert this action.\n        {% endblocktrans %}\n        {% trans \"This will invalidate all of your tickets.\" %}\n    </p>\n    {% if refund_amount %}\n        {% if can_auto_refund %}\n            <p>\n                <strong>\n                    {% blocktrans trimmed with amount=refund_amount|money:request.event.currency %}\n                        The refund amount of {{ amount }} will automatically be sent back to your original payment method. Depending on the payment method,\n                        please allow for up to two weeks before this appears on your statement.\n                    {% endblocktrans %}\n                </strong>\n            </p>\n        {% else %}\n            <div class=\"alert alert-warning\">\n                {% blocktrans trimmed with amount=refund_amount|money:request.event.currency %}\n                    With to the payment method you used, the refund amount of {{ amount }} <strong>can not be sent back to you automatically</strong>. Instead, the\n                    event organizer will need to initiate the transfer manually. Please be patient as this might take a bit longer.\n                {% endblocktrans %}\n            </div>\n        {% endif %}\n    {% endif %}\n\n    <form method=\"post\" action=\"{% eventurl request.event \"presale:event.order.cancel.do\" secret=order.secret order=order.code %}\" data-asynctask>\n        {% csrf_token %}\n        <div class=\"row checkout-button-row\">\n            <div class=\"col-md-4\">\n                <a class=\"btn btn-block btn-default btn-lg\"\n                   href=\"{% eventurl request.event \"presale:event.order\" secret=order.secret order=order.code %}\">\n                    {% trans \"No, take me back\" %}\n                </a>\n            </div>\n            <div class=\"col-md-4 col-md-offset-4\">\n                <button class=\"btn btn-block btn-danger btn-lg\" type=\"submit\">\n                    {% trans \"Yes, cancel order\" %}\n                </button>\n            </div>\n            <div class=\"clearfix\"></div>\n        </div>\n    </form>\n\n{% endblock %}\n",
  "---\nlayout: calendar\n---\n",
  "#!/usr/bin/env bash\n\n# This library holds utility functions for determining\n# product versions from Git repository state.\n\n# os::build::version::get_vars loads the standard version variables as\n# ENV vars\nfunction os::build::version::get_vars() {\n\tif [[ -n \"${OS_VERSION_FILE-}\" ]]; then\n\t\tif [[ -f \"${OS_VERSION_FILE}\" ]]; then\n\t\t\tsource \"${OS_VERSION_FILE}\"\n\t\t\treturn\n\t\tfi\n\t\tif [[! -d \"${OS_ROOT}/.git\" ]]; then\n\t\t\tos::log::fatal \"No version file at ${OS_VERSION_FILE}\"\n\t\tfi\n\t\tos::log::warning \"No version file at ${OS_VERSION_FILE}, falling back to git versions\"\n\tfi\n\tos::build::version::git_vars\n}\nreadonly -f os::build::version::get_vars\n\n# os::build::version::git_vars looks up the current Git vars if they have not been calculated.\nfunction os::build::version::git_vars() {\n\tif [[ -n \"${OS_GIT_VERSION-}\" ]]; then\n\t\treturn 0\n \tfi\n\n\tlocal git=(git --work-tree \"${OS_ROOT}\")\n\n\tif [[ -n ${OS_GIT_COMMIT-} ]] || OS_GIT_COMMIT=$(\"${git[@]}\" rev-parse --short \"HEAD^{commit}\" 2>/dev/null); then\n\t\tif [[ -z ${OS_GIT_TREE_STATE-} ]]; then\n\t\t\t# Check if the tree is dirty.  default to dirty\n\t\t\tif git_status=$(\"${git[@]}\" status --porcelain 2>/dev/null) && [[ -z ${git_status} ]]; then\n\t\t\t\tOS_GIT_TREE_STATE=\"clean\"\n\t\t\telse\n\t\t\t\tOS_GIT_TREE_STATE=\"dirty\"\n\t\t\tfi\n\t\tfi\n\t\t# Use git describe to find the version based on annotated tags.\n\t\tif [[ -n ${OS_GIT_VERSION-} ]] || OS_GIT_VERSION=$(\"${git[@]}\" describe --long --tags --abbrev=7 --match 'v[0-9]*' \"${OS_GIT_COMMIT}^{commit}\" 2>/dev/null); then\n\t\t\t# Try to match the \"git describe\" output to a regex to try to extract\n\t\t\t# the \"major\" and \"minor\" versions and whether this is the exact tagged\n\t\t\t# version or whether the tree is between two tagged versions.\n\t\t\tif [[ \"${OS_GIT_VERSION}\" =~ ^v([0-9]+)\\.([0-9]+)\\.([0-9]+)(\\.[0-9]+)*([-].*)?$ ]]; then\n\t\t\t\tOS_GIT_MAJOR=${BASH_REMATCH[1]}\n\t\t\t\tOS_GIT_MINOR=${BASH_REMATCH[2]}\n\t\t\t\tOS_GIT_PATCH=${BASH_REMATCH[3]}\n\t\t\t\tif [[ -n \"${BASH_REMATCH[5]}\" ]]; then\n\t\t\t\t\tOS_GIT_MINOR+=\"+\"\n\t\t\t\tfi\n\t\t\tfi\n\n\t\t\t# This translates the \"git describe\" to an actual semver.org\n\t\t\t# compatible semantic version that looks something like this:\n\t\t\t#   v1.1.0-alpha.0.6+84c76d1-345\n            # shellcheck disable=SC2001\n\t\t\tOS_GIT_VERSION=$(echo \"${OS_GIT_VERSION}\" | sed \"s/-\\([0-9]\\{1,\\}\\)-g\\([0-9a-f]\\{7,40\\}\\)$/\\+\\2-\\1/\")\n\t\t\t# If this is an exact tag, remove the last segment.\n\t\t\tOS_GIT_VERSION=\"${OS_GIT_VERSION//-0$/}\"\n\t\t\tif [[ \"${OS_GIT_TREE_STATE}\" == \"dirty\" ]]; then\n\t\t\t\t# git describe --dirty only considers changes to existing files, but\n\t\t\t\t# that is problematic since new untracked.go files affect the build,\n\t\t\t\t# so use our idea of \"dirty\" from git status instead.\n\t\t\t\tOS_GIT_VERSION+=\"-dirty\"\n\t\t\tfi\n\t\tfi\n\tfi\n\n}\nreadonly -f os::build::version::git_vars\n\nfunction os::build::version::etcd_vars() {\n\tETCD_GIT_VERSION=$(go run \"${OS_ROOT}/tools/godepversion/godepversion.go\" \"${OS_ROOT}/Godeps/Godeps.json\" \"github.com/coreos/etcd/etcdserver\" \"comment\")\n\tETCD_GIT_COMMIT=$(go run \"${OS_ROOT}/tools/godepversion/godepversion.go\" \"${OS_ROOT}/Godeps/Godeps.json\" \"github.com/coreos/etcd/etcdserver\")\n}\nreadonly -f os::build::version::etcd_vars\n\n# os::build::version::kubernetes_vars returns the version of Kubernetes we have\n# vendored.\nfunction os::build::version::kubernetes_vars() {\n\tKUBE_GIT_VERSION=$(go run \"${OS_ROOT}/tools/godepversion/godepversion.go\" \"${OS_ROOT}/Godeps/Godeps.json\" \"k8s.io/kubernetes/pkg/api\" \"comment\")\n\tKUBE_GIT_COMMIT=$(go run \"${OS_ROOT}/tools/godepversion/godepversion.go\" \"${OS_ROOT}/Godeps/Godeps.json\" \"k8s.io/kubernetes/pkg/api\")\n\n\t# This translates the \"git describe\" to an actual semver.org\n\t# compatible semantic version that looks something like this:\n\t#   v1.1.0-alpha.0.6+84c76d1142ea4d\n\t#\n\t# TODO: We continue calling this \"git version\" because so many\n\t# downstream consumers are expecting it there.\n    # shellcheck disable=SC2001\n\tKUBE_GIT_VERSION=$(echo \"${KUBE_GIT_VERSION}\" | sed \"s/-\\([0-9]\\{1,\\}\\)-g\\([0-9a-f]\\{7,40\\}\\)$/\\+${OS_GIT_COMMIT:-\\2}/\")\n\n\t# Try to match the \"git describe\" output to a regex to try to extract\n\t# the \"major\" and \"minor\" versions and whether this is the exact tagged\n\t# version or whether the tree is between two tagged versions.\n\tif [[ \"${KUBE_GIT_VERSION}\" =~ ^v([0-9]+)\\.([0-9]+)\\. ]]; then\n\t\tKUBE_GIT_MAJOR=${BASH_REMATCH[1]}\n\t\tKUBE_GIT_MINOR=\"${BASH_REMATCH[2]}+\"\n\tfi\n}\nreadonly -f os::build::version::kubernetes_vars\n\n# Saves the environment flags to $1\nfunction os::build::version::save_vars() {\n\tcat <<EOF\nOS_GIT_COMMIT='${OS_GIT_COMMIT-}'\nOS_GIT_TREE_STATE='${OS_GIT_TREE_STATE-}'\nOS_GIT_VERSION='${OS_GIT_VERSION-}'\nOS_GIT_MAJOR='${OS_GIT_MAJOR-}'\nOS_GIT_MINOR='${OS_GIT_MINOR-}'\nOS_GIT_PATCH='${OS_GIT_PATCH-}'\nKUBE_GIT_MAJOR='${KUBE_GIT_MAJOR-}'\nKUBE_GIT_MINOR='${KUBE_GIT_MINOR-}'\nKUBE_GIT_COMMIT='${KUBE_GIT_COMMIT-}'\nKUBE_GIT_VERSION='${KUBE_GIT_VERSION-}'\nETCD_GIT_VERSION='${ETCD_GIT_VERSION-}'\nETCD_GIT_COMMIT='${ETCD_GIT_COMMIT-}'\nEOF\n}\nreadonly -f os::build::version::save_vars\n",
  "<!DOCTYPE html>\n<html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org/\">\n<head th:fragment=\"head\">\n    <title th:text=\"${title}\">Title</title>\n\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Source+Sans+Pro:300\" />\n    <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.4.1/css/all.css\" integrity=\"sha384-5sAR7xN1Nv6T6+dT2mhtzEpVJvfS3NScPQTrOxhwjIuvcA67KV2R5Jz6kr4abQsz\" crossorigin=\"anonymous\" />\n\n    <script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\" integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\" crossorigin=\"anonymous\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\" integrity=\"sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1\" crossorigin=\"anonymous\"></script>\n    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\" integrity=\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\" crossorigin=\"anonymous\"></script>\n\n    <link href=\"https://stackpath.bootstrapcdn.com/bootswatch/4.3.1/darkly/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-w+8Gqjk9Cuo6XH9HKHG5t5I1VR4YBNdPt/29vwgfZR485eoEJZ8rJRbm3TR32P6k\" crossorigin=\"anonymous\" />\n    <script type=\"text/javascript\" src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n\n    <style>.error {\n            color: red;\n            }\n\n           .table-head {\n            text-align: center;\n            }\n\n           .footer-nav {\n            margin: 2em 0;\n            }\n\n           .title {\n            text-align: center;\n            margin-top: 1em;\n            margin-bottom: 1em;\n            margin-left: auto;\n            margin-right: auto;\n            }\n\n           .bottom-element {\n            margin-bottom: 3em;\n            }\n\n           .no-data {\n            font-style: italic;\n            font-family: \"Palatino Linotype\", \"Book Antiqua\", Palatino, serif;\n            margin: 3em 0 3em 0;\n            }\n\n           .index-button {\n            margin: 1em 1em;\n            }\n\n           .profile-list-item-buttons {\n            margin: 0 0 2em 2em;\n            }\n\n           .add-item {\n            margin: 1em 0 1em 0;\n            }\n\n           .instrument-name {\n            font-size: 1.5em;\n            font-weight: bold;\n            }\n\n           .stopwatch {\n            display: inline-block;\n            background-color: white;\n            border: 1px solid #eee;\n            padding: 5px;\n            margin: 5px;\n            }\n\n           .stopwatch span {\n            font-weight: bold;\n            display: block;\n            }\n\n           .stopwatch a {\n              padding-right: 5px;\n              text-decoration: none;\n            }\n\n            #account-form {\n            max-width:600px;\n            margin-top: 1em;\n            margin-bottom:1em;\n            }\n\n            #login-form {\n            margin-top: 1em;\n            margin-bottom:1em;\n            }\n\n            #timerContainer {\n              font-family: 'Source Sans Pro', sans-serif;\n              font-weight: 300;\n              width:700px;\n              margin:20px auto;\n              min-height: 60px;\n              border-top:0px;\n            }\n           .timer,.reset {\n              float:left;\n              width: 54%;\n              padding: 20px 0;\n              font-size: 24px;\n              text-align:center;\n              color: #fff;\n              background: #A90000;\n              cursor: pointer\n            }\n           .reset {\n              background: #550000;\n              color: white;\n              width:14.9%;\n              border-left: 1px solid #990000;\n            }\n           .reset:hover {\n              background: #CC0000;\n            }\n           .lighter {\n              background: #CC0000\n            }\n\n    </style>\n\n</head>\n\n<body>\n<nav th:fragment=\"profileNav\" class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarText\">\n        <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item-active\">\n                <a class=\"nav-link\" th:href=\"@{/profile/}\">Profile <span class=\"sr-only\">(current)</span></a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" th:href=\"@{/instrument/}\">Add an Instrument <span class=\"sr-only\">(current)</span></a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" th:href=\"@{/profile/logout}\">Log Out</a>\n            </li>\n        </ul>\n    </div>\n</nav>\n\n<nav th:fragment=\"generalNav\" class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarText\">\n        <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" th:href=\"@{/profile/}\">Profile</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" th:href=\"@{/profile/logout}\">Log Out</a>\n            </li>\n        </ul>\n    </div>\n</nav>\n\n<nav th:fragment=\"loginNav\" class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarText\">\n        <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" th:href=\"@{/welcome/login}\">Log in</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" th:href=\"@{/welcome/newAccount}\">Create Account</a>\n            </li",
  "# -*- coding: utf-8 -*-\nfrom __future__ import unicode_literals\n\nfrom django.db import migrations, models\n\n\nclass Migration(migrations.Migration):\n\n    dependencies = [\n        ('people', '0004_auto_20150706_1547'),\n    ]\n\n    operations = [\n        migrations.AddField(\n            model_name='contributorlistpage',\n            name='people_per_page',\n            field=models.IntegerField(default=20),\n        ),\n    ]\n",
  "import { Structure as _Structure_ } from \"@aws-sdk/types\";\n\nexport const _SigningCertificate: _Structure_ = {\n  type: \"structure\",\n  required: [\"UserName\", \"CertificateId\", \"CertificateBody\", \"Status\"],\n  members: {\n    UserName: {\n      shape: {\n        type: \"string\",\n        min: 1\n      }\n    },\n    CertificateId: {\n      shape: {\n        type: \"string\",\n        min: 24\n      }\n    },\n    CertificateBody: {\n      shape: {\n        type: \"string\",\n        min: 1\n      }\n    },\n    Status: {\n      shape: {\n        type: \"string\"\n      }\n    },\n    UploadDate: {\n      shape: {\n        type: \"timestamp\"\n      }\n    }\n  }\n};\n",
  "from geopandas import GeoDataFrame\r\nfrom IPython.display import display\r\nfrom ipywidgets import IntProgress\r\nfrom iclientpy.jupyter import PortalThumbnail\r\nfrom iclientpy.portal import Portal\r\n\r\n\r\ndef from_geodataframe_to_map(portal: Portal, gdf: GeoDataFrame, data_name: str, map_title: str, layer_name: str):\r\n    progress = IntProgress()\r\n    progress.max = 100\r\n    progress.value = 0\r\n    progress.description = '\u4e0a\u4f20\u6587\u4ef6\uff1a'\r\n    display(progress)\r\n\r\n    def refresh_progress(read, total):\r\n        progress.value = read\r\n\r\n    data_id = portal.upload_dataframe_as_json(data_name, gdf, callback=refresh_progress)\r\n    layer = portal.prepare_geojson_layer(data_id, layer_name)\r\n    map_id = portal.create_map([layer], 3857, map_title)\r\n    mr = portal.get_map(map_id)\r\n    pm = PortalThumbnail(mr)\r\n    display(pm)\r\n    return map_id\r\n",
  "{{define \"post/edit.html\"}}\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <meta name=\"description\" content=\"\">\n        <meta name=\"author\" content=\"\">\n        <title>Post - New</title>\n        {{template \"layouts/header.html\".}}\n        {{template \"layouts/text_rich.html\".}}\n    </head>\n    <body class=\"hold-transition skin-blue sidebar-mini\">\n    <div class=\"wrapper\">\n        {{template \"layouts/navbar.html\".}}\n        {{template \"layouts/sidebar.html\".}}\n        <div class=\"content-wrapper\">\n            <section class=\"content-header\">\n                <h1>\n                    <small>\u535a\u6587\u7ba1\u7406\n                        <a style=\"border: none\" id=\"addTag\" class=\"btn btn-primary\">\n                            <span class=\"glyphicon glyphicon-edit\"></span>\n                            Add Tag\n                        </a>\n                        <a id=\"select_tag\" class=\"btn btn-primary\" data-title=\"select tag\">\n                            <span class=\"glyphicon glyphicon-search\"></span>\n                            Select Tag\n                        </a>\n                        <a class=\"btn btn-primary pageSave\" id=\"pageSave\" href=\"javascript:void(0);\"\n                           style=\"\">\n                            <span class=\"glyphicon glyphicon-saved\"></span>\n                            Save Page\n                        </a>\n                    </small>\n                </h1>\n                <ol class=\"breadcrumb\">\n                    <li><a href=\"/admin/index\"><i class=\"fa fa-dashboard\"></i> Home</a></li>\n                    <li class=\"active\"><a href=\"/admin/post\">\u535a\u6587\u7ba1\u7406</a></li>\n                </ol>\n            </section>\n            <section class=\"content\">\n                <div class=\"row\" id=\"tag_content\" style=\"margin-bottom: 10px;padding-left: 14px;\">\n                    {{range $tagkey,$tagvalue :=.post.Tags}}\n                        <button class=\"btn btn-default btn-sm tagButton\">\n                            <a href=\"/tag/{{$tagvalue.ID}}\">{{$tagvalue.Name}}</a>\n                            <a class=\"removeArticleTag\" href=\"#\" onclick=\"deleteTag(this);\">\n                                <span class=\"glyphicon glyphicon glyphicon-trash\"></span>\n                            </a>\n                            <span class=\"tagId\" hidden=\"hidden\">{{$tagvalue.ID}}</span>\n                        </button>&nbsp;\n                    {{end}}\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-xs-12\">\n                        <!-- add a new tag -->\n                        <!-- create or update a article -->\n                        <form action=\"{{.submit}}\" method=\"post\" id=\"postForm\" class=\"form-group\">\n                            <input name=\"_csrf\" value=\"{{.token}}\" type=\"hidden\">\n                            <input id=\"tags\" name=\"tags\" type=\"hidden\">\n                            <input name=\"id\" value=\"{{.post.ID}}\" type=\"hidden\">\n                            <input name=\"title\" type=\"text\" class=\"form-control\" placeholder=\"Title\" value=\"{{.post.Title}}\"/><br/>\n                            <textarea name=\"keyword\" class=\"form-control\" rows=\"2\" placeholder=\"Keyword\" >{{.post.Keyword}}</textarea><br/>\n                            <textarea id=\"demo\" name=\"body\">{{.post.Body}}</textarea><br/>\n                            <div class=\"bootstrap-switch-small\">\n                                <input id=\"switchbtn\" name=\"isPublished\" type=\"checkbox\"/>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </section>\n        </div>\n    </div>\n    {{template \"layouts/footer.html\".}}\n    {{template \"layouts/text_rich_footer.html\".}}\n    <script src=\"/static/libs/page_assets/post/new.js\"></script>\n    </body>\n\n    </html>\n{{end}}",
  "import {\n    LOAD_TWEETS,\n    REMOVE_TWEET,\n    NEW_TWEET,\n    LIKE_TWEET,\n    UNLIKE_TWEET,\n} from \"../actionTypes\";\n\nconst tweets = (state = [], action) => {\n    switch (action.type) {\n        case LOAD_TWEETS:\n            return [...state,...action.tweets.results];\n        case NEW_TWEET:\n            return [action.tweet,...state];\n        case REMOVE_TWEET:\n            return state.filter((tweet) => tweet._id!== action.id);\n        case LIKE_TWEET:\n            return state.map((tweet) => {\n                if (tweet._id === action.id) {\n                    tweet.likesNumber += 1;\n                }\n                return tweet;\n            });\n        case UNLIKE_TWEET:\n            return state.map((tweet) => {\n                if (tweet._id === action.id) {\n                    tweet.likesNumber -= 1;\n                }\n                return tweet;\n            });\n        default:\n            return state;\n    }\n};\n\nexport default tweets;\n",
  "<!DOCTYPE html>\n<html lang=\"en-US\" prefix=\"dc: http://purl.org/dc/elements/1.1/ dcterms: http://purl.org/dc/terms/\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"author\" content=\"James Benner\">\n    <meta name=\"description\" content=\"Developer, Researcher, and Geek\">\n    <meta property=\"dcterms:available\" content=\"2016-04-03T20:21:40Z\">\n    <meta property=\"dcterms:modified\" content=\"2021-12-01T23:49:40Z\">\n    <title>James Benner</title>\n    <link rel=\"canonical\" href=\"http://www.jamesbenner.com/\">\n    <link rel=\"stylesheet\" href=\"index.css\">\n    <script type=\"application/ld+json\" id=\"james-benner-vcard\">\n        {\n            \"@context\": \"http://www.w3.org/2006/vcard/ns#\",\n            \"@type\": \"Individual\",\n            \"fn\": \"James Benner\",\n            \"hasEmail\": \"mailto:james.benner+vcard@gmail.com\",\n            \"hasPhoto\": \"http://www.gravatar.com/avatar/6270f8c1e26c855c301e44172c36a2c8\",\n            \"hasURL\": \"http://www.jamesbenner.com/\"\n        }\n    </script>\n</head>\n<body>\n    <main class=\"h-card\">\n        <hgroup>\n            <a class=\"u-url\" rel=\"me\" href=\"http://www.jamesbenner.com/\">\n            <h1 id=\"name\" class=\"p-name\">James Benner</h1></a>\n            <h2 class=\"p-note\">Developer, Researcher, and Geek</h2>\n        </hgroup>\n        <ul class=\"links\">\n            <li>\n                <a class=\"u-url\" rel=\"me\" href=\"http://github.com/jbenner-radham/\"><span aria-label=\"Laptop\" role=\n                \"presentation\">\ud83d\udcbb</span> Code</a>\n            </li>\n            <li>\n                <a class=\"u-email\" href=\"mailto:james.benner+website@gmail.com\"><span aria-label=\"Envelope\" role=\n                \"presentation\">\u2709\ufe0f</span> Email</a>\n            </li>\n            <li>\n                <a class=\"u-url\" rel=\"me\" href=\"https://medium.com/@james.benner\"><span aria-label=\"Memo\" role=\n                \"presentation\">\ud83d\udcdd</span> Writing</a>\n            </li>\n        </ul>\n    </main>\n    <footer>\n        <small>Except where otherwise noted, content on this site is licensed under a <a rel=\"license\" href=\n        \"http://creativecommons.org/licenses/by/4.0/\">CC BY 4.0 License</a> and source code is licensed under the\n        <a rel=\"license\" href=\"http://opensource.org/licenses/MIT\">MIT License (Expat)</a>.</small>\n    </footer>\n    <script>\n        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n        })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n        \n        ga('create', 'UA-101870760-1', 'auto');\n        ga('send', 'pageview');\n    </script>\n</body>\n</html>\n",
  "'use strict';\n\nconst GCM = require('node-gcm-ccs');\n\nconst NEXT_TRACK = 'EXTRA_NEXT_TRACK';\nconst PREVIOUS_TRACK = 'EXTRA_PREVIOUS_TRACK';\nconst NOW_PLAYING = 'EXTRA_NOW_PLAYING';\nconst EXTRA_PLAY_PAUSE = 'EXTRA_PLAY_PAUSE';\n\nmodule.exports = function({ appId, appSecret, deviceId }, rpc) {\n  const gcm = GCM(appId, appSecret);\n  const cmd = (id, execute) => ({ id, execute });\n\n  gcm.on('message', function(messageId, from, category, data) {\n    const { id, message } = data;\n    rpc.execute(id, ['x', message]);\n  });\n\n  const sendCommand = ({ command, waitForMessage }, obj, id, fn) => {\n    gcm.send(deviceId, { id, command }, { delivery_receipt_requested: true }, function(err) {\n      if (err) {\n        fn(obj.id, err);\n      } else if (waitForMessage) {\n        rpc.register(id, fn);\n      } else {\n        fn(obj.id, 'ok');\n      }\n    });\n  };\n\n  return {\n    getCommands() {\n      return [\n        cmd('android/next-track', sendCommand.bind(null, { command: NEXT_TRACK, waitForMessage: false })),\n        cmd('android/prev-track', sendCommand.bind(null, { command: PREVIOUS_TRACK, waitForMessage: false })),\n        cmd('android/play-pause', sendCommand.bind(null, { command: EXTRA_PLAY_PAUSE, waitForMessage: false })),\n        cmd('android/now-playing', sendCommand.bind(null, { command: NOW_PLAYING, waitForMessage: true }))\n      ];\n    }\n  };\n};\n",
  "package me.codpoe.gankio.main.gank.meizhi.adapter;\n\nimport android.content.Context;\nimport android.graphics.Bitmap;\nimport android.support.v7.widget.RecyclerView;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.ImageView;\n\nimport com.bumptech.glide.Glide;\nimport com.bumptech.glide.request.animation.GlideAnimation;\nimport com.bumptech.glide.request.target.SimpleTarget;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport butterknife.BindView;\nimport butterknife.ButterKnife;\nimport me.codpoe.gankio.R;\nimport me.codpoe.gankio.app.GankIoApplication;\nimport me.codpoe.gankio.data.bean.AllBean;\nimport me.codpoe.gankio.util.DpPxUtil;\n\n/**\n * Created by Codpoe on 2016/10/24.\n */\n\npublic class MeizhiRvAdapter extends RecyclerView.Adapter<MeizhiRvAdapter.ViewHolder> {\n\n    private Context mContext;\n    private List<AllBean.ResultsBean> mMeizhiList = new ArrayList<>();\n    private int mImgMargin;\n\n    private OnItemClickListener mListener;\n\n    public MeizhiRvAdapter(Context context, List<AllBean.ResultsBean> meizhiList) {\n        mContext = context;\n        mMeizhiList = meizhiList;\n        mImgMargin = DpPxUtil.dp2px(mContext, 4);\n    }\n\n    @Override\n    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        return new ViewHolder(LayoutInflater.from(parent.getContext()).inflate(R.layout.item_meizhi, parent, false));\n    }\n\n    @Override\n    public void onBindViewHolder(final ViewHolder holder, final int position) {\n\n        /**\n         * \u5927\u6982\u3001\u53ef\u80fd\u3001\u6216\u8bb8\u89e3\u51b3\u4e86 StaggeredGridLayout \u56e0\u300c\u5feb\u901f\u6eda\u52a8\u300d\u800c\u51fa\u73b0\u7684\u56fe\u7247\u9519\u4e71\u95ee\u9898\uff0c\u4ee5\u53ca\u56e0\u300c\u5feb\u901f\u8fd4\u56de\u300d\u800c\u51fa\u73b0\u7684\u56fe\u7247\u9519\u4f4d\u95ee\u9898\n         */\n        if (mMeizhiList.get(holder.getAdapterPosition()).getHeight() > 0) {\n            holder.mMeizhiImg.getLayoutParams().height = mMeizhiList.get(holder.getAdapterPosition()).getHeight();\n        }\n\n        holder.mMeizhiImg.setImageResource(R.color.card_bg);\n        holder.mMeizhiImg.setTag(mMeizhiList.get(position).getId());\n        Glide.with(mContext)\n               .load(mMeizhiList.get(position).getUrl())\n               .asBitmap()\n               .into(new SimpleTarget<Bitmap>(GankIoApplication.SCREEN_WIDTH / 2, GankIoApplication.SCREEN_HEIGHT / 2) {\n                    @Override\n                    public void onResourceReady(Bitmap resource, GlideAnimation<? super Bitmap> glideAnimation) {\n                        if (holder.getAdapterPosition()!= RecyclerView.NO_POSITION && holder.mMeizhiImg.getTag().equals(mMeizhiList.get(position).getId())) {\n                            if (mMeizhiList.get(position).getHeight() == 0) {\n                                int width = resource.getWidth();\n                                int height = resource.getHeight();\n                                int realWidth = GankIoApplication.SCREEN_WIDTH / 2 - mImgMargin;\n                                int realHeight = (int) (realWidth * ((float) height / width));\n                                mMeizhiList.get(position).setHeight(realHeight);\n                                holder.mMeizhiImg.getLayoutParams().width = realWidth;\n                                holder.mMeizhiImg.getLayoutParams().height = realHeight;\n                            }\n                            holder.mMeizhiImg.setImageBitmap(resource);\n                        }\n                    }\n                });\n        if (mListener!= null) {\n            holder.itemView.setOnClickListener(new View.OnClickListener() {\n                @Override\n                public void onClick(View v) {\n                    mListener.onItemClick(holder.itemView, holder.getLayoutPosition());\n                }\n            });\n        }\n    }\n\n\n\n    @Override\n    public int getItemCount() {\n        return mMeizhiList.size();\n    }\n\n    public void setOnItemClickListener(OnItemClickListener listener) {\n        mListener = listener;\n    }\n\n    // click interface\n    public interface OnItemClickListener {\n        void onItemClick(View view, int position);\n    }\n\n    // view holder\n    class ViewHolder extends RecyclerView.ViewHolder {\n\n        @BindView(R.id.meizhi_img)\n        ImageView mMeizhiImg;\n\n        public ViewHolder(View itemView) {\n            super(itemView);\n            ButterKnife.bind(this, itemView);\n        }\n    }\n\n}\n",
  "module Matchy\n  module VERSION #:nodoc:\n    MAJOR = 0\n    MINOR = 1\n    TINY  = 0\n\n    STRING = [MAJOR, MINOR, TINY].join('.')\n  end\nend\n",
  "---\ntitle: Podcast episode 7\nslug: podcast-episode-7\nsummary: 'Finn verseny-, -amat\u0151r, \u00e9s t\u00f6megsportok vil\u00e1ga.'\nid: szauna-szenatus-7\nnumber: 7\nimage: './teemupukki.jpg'\n---\n\nMost kiv\u00e9telesen besz\u00e9l\u00fcnk a focir\u00f3l (is) mert egy\u00e9bbk\u00e9nt err\u0151l besz\u00e9lni a vil\u00e1g egyik legf\u00f6l\u00f6slegesebb dolga. A focit j\u00e1tszani kell, akkor j\u00f3. Szapor\u00edtani a sz\u00f3t, a taktik\u00e1r\u00f3l, az \u00e1tigazol\u00e1sokr\u00f3l, ki mit nyilatkozott, melyik csapat milyen v\u00e9geredm\u00e9nyt jatszott... R\u00e1ad\u00e1sul n\u00e9zni a szabadid\u0151dben a v\u00e9gtelen mennyis\u00e9g\u0171 meccset tv-n, vagy lej\u00e1tszani sz\u00e1m\u00edt\u00f3g\u00e9pen, hogy ott v\u00e9gre TE nyerhetsz, az \"\u00e1tkozott\" csapatoddal, ami soha nem jut olyan messze a val\u00f3s\u00e1gban.\n\n> MERT EZ PSZICHOL\u00d3GIA K\u00c9REM SZ\u00c9PEN!\n\n\"Meccsre j\u00e1rni olyan, mint McDonald\u2019sban enni \u2013 kicsit ciki, \u00e9s az ember nem sz\u00edvesen vallja be.\u201d \u2013 Hars\u00e1nyi Szabolcs Gerg\u0151t sportpszihol\u00f3gust id\u00e9zve (aki versenysportol\u00f3kat k\u00e9sz\u00edt fel). A foci t\u00f6bb mint sport! Konkr\u00e9tan felm\u00e9r\u00e9sek szerint a vil\u00e1g legn\u00e9pszer\u0171bb sportja. Megunhatatlan, \u00f6r\u00f6kz\u00f6ld \u2013 m\u00e9gha sokan utalj\u00e1k, akkor is ez van.\n\n- Benne van a vad\u00e1szat \u2013 gy\u00fcjt\u00f6get\u00e9s \u0151sk\u00f6z\u00f6ss\u00e9gig visszamen\u0151 \u00f6szt\u00f6ne. Igen, ez ugyanaz a t\u0151r\u00f6l ered! EB sikerekkor kit\u00f6rt a focil\u00e1z otthon. \u201eBizonytalan szavaz\u00f3khoz hasonl\u00f3\u201d jelens\u00e9g. Elkapja \u0151ket a csordaszellem vagy hordaszellem.\n- Bizonytalans\u00e1gi faktor. B\u00e1rki gy\u00f6zhet (ez nem lefutott verseny, mint amikor Usain Bolt, vagy Hossz\u00fa Katinka ki\u00e1ll).... R\u00e1adasul 1 \u00e1rva les vagy tizenegyesg\u00f3l is d\u00f6nthet. Nem megunhat\u00f3, mint a \"sokg\u00f3los\" sportok.\n- V\u00e9res h\u00e1bor\u00fakat behelyettes\u00edt\u0151 v\u00e9rtelen csata.\n\u2013 Hozz\u00e1f\u00e9rhet\u0151s\u00e9g. A legt\u00f6bb ember sz\u00e1m\u00e1ra hozz\u00e1f\u00e9rhet\u0151 sportr\u00f3l besz\u00e9l\u00fcnk, b\u00e1rhol b\u00e1rmikor j\u00e1tszhat\u00f3. Nem sz\u00fcks\u00e9ges hozz\u00e1 sok eszk\u00f6z, r\u00e1ad\u00e1sul a legt\u00f6bb esetben anyagilag sem megterhel\u0151. Sem a sport \u0171z\u00e9se, sem egy meccs megtekint\u00e9se.\n\u2013 Olimpiai sport\u00e1g lesz-e az E-sport? Lassan m\u00e1r az.\n\u2013 Lehet, hogy az 56-os forradalom kit\u00f6r\u00e9se is egy focimeccsen m\u00falt? R\u00e9szben.\n\nFINNFOCI\nVal\u00f3ban csoda?- Markku Kanerva (A finnek Rossija- direkt nem Guardiol\u00e1hoz hasonl\u00edtva. \u0150 a kulcs, hab\u00e1r lekicsiny\u00edtik sokan az \u00e9rdemeit) na \u00e9s a mikul\u00e1ssal Joulupukkival lassan egy n\u00e9pszer\u0171s\u00e9gre szert tev\u0151 Teemu Pukki (Az egyetlen ma \"m\u00e9rhet\u00f6\" finn fociszt\u00e1r nemzetk\u00f6zi szinten. A Norwich g\u00f3lzs\u00e1kja a Premiere Leagueb\u0151l.)\n\nKanerva taktikai hozz\u00e1\u00e9rt\u00e9se, m\u00e1r az 5 meccses \"pr\u00f3baid\u0151s\" mel\u00f3ja alatt nyilv\u00e1nval\u00f3v\u00e1 v\u00e1lt. Messze jobb eredm\u00e9nyeket mutatott, mint a sk\u00f3t Baxter. A \"feny\u0151fa form\u00e1ci\u00f3 Mikka-Matti Paatalainen vagy a \u00f6reg sv\u00e9d nagyobb n\u00e9v Hans Backe edz\u0151.\n\nA Pukki f\u00e9le csapat menetel\u00e9se: Mindig 1 g\u00f3llall nyertek, egy Pukki g\u00f3llal. Sok bev\u00e1ndorl\u00f3, fociz\u00f3 fiatalgener\u00e1ci\u00f3s t\u00f6megek adj\u00e1k az \u00faj foci felemelked\u00e9s\u00e9t.\n\n## MAGYARVONATKOZ\u00c1SOK\n### \u0150SEPOSZ\nAz Aranycsapat els\u0151 komoly tornagy\u0151zelm\u00e9t itt aratta. Az egyik legszebben csillog\u00f3 med\u00e1l a m\u00e1sik 16 olimpiai arany mellett.\n*Egyik szerz\u0151 (Marci): Nagyap\u00e1mnak Dr. Kismartoni K\u00e1rolynak is volt tan\u00edtv\u00e1nya ezen a helsinki olimpi\u00e1n. \u0150 kb 5-6 olimpi\u00e1n volt kint, mint a magyar atl\u00e9tikai v\u00e1logatott edz\u0151je. Fent van az 50 magyar mesteredz\u0151 list\u00e1n.\n\nSzauna Szen\u00e1tusunkb\u00f3l kett\u0151nknek a magyar \u00e9s a finn v\u00e1logatott \u00fctk\u00f6zet\u00e9t is volt szerencs\u00e9nk el\u0151ben l\u00e1tni. Meccs el\u0151tt term\u00e9szetes SZAUN\u00c1ZVA hangoltunk a tamperei ar\u00e9na melletti campingben.\n\nAz eg\u00e9sz EB lehet elmarad a koronavirus miatt, \u00e9s akkor mindenki sz\u00edvhatja a fog\u00e1t... mert mi hi\u00e1ba nem jutunk ki, a t\u00f6bbiek se fognak \ud83d\ude02. Van aki persze, m\u00e1r el\u0151re retteg, ha kijutn\u00e1nk az is rossz... Igazi hal\u00e1lcsoportba ker\u00fcln\u00e9nk a Ronald\u00f3s Portug\u00e1lia, \u00e9s k\u00e9t legut\u00f3bbi vil\u00e1gbajnok Franciaorsz\u00e1g \u00e9s N\u00e9metorsz\u00e1g verne minket bucira saj\u00e1t k\u00f6z\u00f6ns\u00e9g\u00fcnk el\u00f6tt Budapesten. Enn\u00e9l nagyobb \u00e9g\u00e9s nincs, kiv\u00e9ve ha Rom\u00e1nia kasz\u00e1l el minket m\u00e1r a play off-on. De fel a fejjel, hinni kell magunkban jobban. B\u00fcszke p\u00f6d\u00f6rt bajusszal odap\u00f6rk\u00fcnk b\u00e1rkinek!!\n\nKicsit elemezz\u00fck m\u00e1r a magyar Rossi csapatot. Van ott kraft, csak ne jelentsen senki ser\u00fclet \u00e9s legyenek j\u00e1t\u00e9kban kispad helyett: Sallai, Szalai, Szoboszlai, Nagy Ad\u00e1m, Gul\u00e1csi, Orban. Akadnak j\u00f3k, de az edz\u0151 a legjobb. A kopasz olasz: MARCO ROSSI.\n\nPlussz: A finnek ma napig \u00f6sszerzennek Magyarorsz\u00e1g mint futball ellenf\u00e9l hallat\u00e1n. Nem kit\u00f6r\u00f6lhet\u0151 az az 5 finn j\u00e1t\u00e9kos l\u00e1b\u00e1t \u00e9rint\u0151 kies\u00e9st jelent\u0151 \u00f6ng\u00f3l 1998-ban. Nem tudj\u00e1k, ez nek\u00fcnk a jug\u00f3kt\u00f3l 1-12-es t\u00f6rt\u00e9nelmi zak\u00f3val folytat\u00f3dott...Saj\u00e1t \u00e9lm\u00e9ny l\u00e1nyommal (*szerz\u0151): \"Apu, \u00e9n finn is vagyok\"\u2013 itt s\u00edr\u00e1s volt... KI A JOBB? MAGYAROK! \u00f3b\u00e9gat\u00e1skor otthon. Az\u00f3ta finnek ellen nem hangolok, illetve csak halkan \u00fcnneplem a g\u00f3lt.\n\nRicsi mes\u00e9l, belesz\u00f6vi a magyar megyei bajnokik hangulatat, mint ex player.\n\nFontos megjegyz\u00e9s: Otthon, az alkoholad\u00f3b\u00f3l ami befolyik az \u00e1llamnak,",
  "import os, sys\nsys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\nimport unittest\nimport mock\nfrom datetime import datetime, timedelta, timezone\nfrom rules import ecc_reboot_node_rule\nfrom utils import rule_alert_handler, test_util\n\ndef _mock_prometheus_node_boot_time_response(node_boot_times):\n    mock_response = {\n        \"status\": \"success\",\n        \"data\": {\n            \"resultType\": \"vector\",\n            \"result\": []\n        }\n    }\n\n    for node_ip in node_boot_times:\n        metric = {\n            \"metric\": {\n                \"__name__\": \"node_boot_time_seconds\",\n                            \"exporter_name\": \"node-exporter\",\n                            \"instance\": f\"{node_ip}:9090\",\n                            \"job\": \"serivce_exporter\",\n                            \"scraped_from\": \"node-exporter\"\n            },\n            \"value\": [1580517453.696, node_boot_times[node_ip]]\n        }\n        mock_response[\"data\"][\"result\"].append(metric)\n\n    return mock_response\n\nclass TestEccRebootNodeRule(unittest.TestCase):\n\n    def test_extract_node_boot_time_info(self):\n        mock_datetime_one = datetime.utcnow()\n        mock_timestamp_one = mock_datetime_one.replace(tzinfo=timezone.utc).timestamp()\n\n        mock_datetime_two = datetime.utcnow() + timedelta(days=1)\n        mock_timestamp_two = str(mock_datetime_two.replace(tzinfo=timezone.utc).timestamp())\n\n        node_boot_times = {\n            \"192.168.0.1\": str(mock_timestamp_one),\n            \"192.168.0.2\": str(mock_timestamp_two)\n        }\n        prometheus_resp = _mock_prometheus_node_boot_time_response(node_boot_times)\n\n        result_boot_times = ecc_reboot_node_rule._extract_node_boot_time_info(prometheus_resp)\n\n        self.assertTrue(\"192.168.0.1\" in result_boot_times)\n        self.assertEqual(mock_datetime_one, result_boot_times[\"192.168.0.1\"])\n\n        self.assertTrue(\"192.168.0.2\" in result_boot_times)\n        self.assertEqual(mock_datetime_two, result_boot_times[\"192.168.0.2\"])\n\n\n    @mock.patch('utils.k8s_util.list_namespaced_pod')\n    @mock.patch('requests.get')\n    @mock.patch('rules.ecc_reboot_node_rule.EccRebootNodeRule.load_etcd_config')\n    @mock.patch('rules.ecc_reboot_node_rule.EccRebootNodeRule.load_ecc_config')\n    @mock.patch('utils.email_util.EmailHandler')\n    @mock.patch('utils.rule_alert_handler.RuleAlertHandler.load_config')\n    def test_check_status_node_due_for_reboot(self,\n            mock_load_rule_config,\n            mock_email_handler,\n            mock_load_ecc_config,\n            mock_load_etcd_config,\n            mock_request_get,\n            mock_pod_list):\n\n        rule_config = test_util.mock_rule_config()\n        mock_load_rule_config.return_value = rule_config\n\n        etcd_config = test_util.mock_etcd_config()\n        mock_load_etcd_config.return_value = etcd_config\n\n        mock_load_ecc_config.return_value = test_util.mock_ecc_config()\n        mock_load_ecc_config.return_value[\"days_until_node_reboot\"] = 5\n\n        time_six_days_ago = datetime.utcnow() - timedelta(days=6)\n        time_five_days_ago = datetime.utcnow() - timedelta(days=5, minutes=1)\n\n        #  ecc error detection occured in previous iteration\n        rule_alert_handler_instance = rule_alert_handler.RuleAlertHandler()\n        rule_alert_handler_instance.rule_cache[\"ecc_rule\"] = {\n            \"node1\": {\n                \"time_found\": time_five_days_ago.strftime(rule_config['date_time_format']),\n                \"instance\": \"192.168.0.1\"\n            }\n        }\n\n        # reboot is due to be rebooted (exceeded configured deadline), should trigger take action\n        node_boot_times = {\n            \"192.168.0.1\": str(time_six_days_ago.replace(tzinfo=timezone.utc).timestamp())\n        }\n        mock_request_get.return_value.json.return_value = _mock_prometheus_node_boot_time_response(node_boot_times)\n        \n        # at least one job running on the node\n        mock_pod_list.return_value = test_util.mock_v1_pod_list([\n            {\n                \"job_name\": \"87654321-wxyz\",\n                \"user_name\": \"user1\",\n                \"vc_name\": \"vc1\",\n                \"node_name\": \"node1\"\n            }\n        ])\n\n        ecc_reboot_node_rule_instance = ecc_reboot_node_rule.EccRebootNodeRule(rule_alert_handler_instance, rule_config)\n        response = ecc_reboot_node_rule_instance.check_status()\n\n        self.assertTrue(response)\n        self.assertEqual(1, len(ecc_reboot_node_rule_instance.nodes_ready_for_action))\n        self.assertTrue(\"node1\" in ecc_reboot_node_rule_instance.nodes_ready_for_action)\n        self.assertEqual(1, len(ecc_reboot_node_rule_instance.jobs_ready_for_migration))\n        self.assertTrue(\"87654321-wxyz\" in ecc_reboot_node_rule_instance.jobs_ready_for_migration)\n\n    \n    @mock.patch('utils.k8s_util.list_namespaced_pod')\n    @mock.patch('requests.get')\n    @mock.patch('rules.ecc_reboot_node_rule.EccRebootNodeRule.load_etcd_config')\n    @mock.patch('rules.ecc_reboot_node_rule.EccRebootNodeRule.load_ecc_config')\n    @mock.patch('utils.email_util.EmailHandler')\n    @mock.patch('utils.rule_alert_handler.RuleAlertHandler.load_config')\n    def test_check_status_no_jobs_running(self,\n            mock_load_rule_config,\n            mock_email_handler,\n            mock_load_ecc_config,\n            mock_load_etcd_config,\n            mock_request_get,\n            mock_pod_list):\n\n        rule_config = test_util.mock_rule_config()\n        mock_load_rule_config.return_value = rule_config\n\n        etcd_config = test_util.mock_etcd_config()\n        mock_load_etcd_config.return_value = etcd_config\n\n        mock_load_ecc_config.return_value = test_util.mock_ecc_config()\n        mock_load_ecc_config.return_value[\"days_until_node_reboot\"] = 5\n\n        time_two_days_ago = datetime.utcnow() - timedelta(days=2)\n\n        rule_alert_handler_instance = rule_alert_handler.RuleAlertHandler()\n        rule_alert_handler_instance.rule_cache[\"ecc_rule\"] = {\n            \"node1\": {\n                \"time_found\": time_two_days_ago.strftime(rule_config['date_time_format']),\n                \"instance\": \"192.168.0.1\"\n            }\n        }\n\n        # node not due to be rebooted\n        node_boot_times = {\n            \"192.168.0.1\": str(time_two_days_ago.replace(tzinfo=timezone.utc).timestamp())\n        }\n        mock_request_get.return_value.json.return_value",
  "\ufeffusing UnityEngine;\nusing UnityEngine.Networking;\n\n#pragma warning disable 0618\n\nnamespace SyncUtil\n{\n    public interface IInstanceRandom\n    {\n        CustomRandom rand { get; }\n    }\n\n\n    public class InstanceRandom : NetworkBehaviour, IInstanceRandom\n    {\n        [SyncVar]\n        protected int seed;\n\n        public void Awake()\n        {\n            seed = Random.Range(int.MinValue, int.MaxValue);\n        }\n\n        CustomRandom _rand;\n        public CustomRandom rand { get { return (_rand?? (_rand = new CustomRandom(seed))); } }\n    }\n}\n",
  "/*\n *  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied.  See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n *\n */\npackage org.wso2.carbon.registry.eventing.template;\n\nimport org.apache.commons.logging.Log;\nimport org.apache.commons.logging.LogFactory;\nimport org.wso2.carbon.registry.core.Registry;\nimport org.wso2.carbon.registry.core.Resource;\nimport org.wso2.carbon.registry.core.exceptions.RegistryException;\n\n\npublic class RegistryNotification implements NotificationTemplate {\n\n    private static final String TEMPLATE_PATH = \"/repository/components/org.wso2.carbon.governance/templates\";\n    private static final String DEFAULT_TEMPLATE_NAME = \"default\";\n    private static final String TEMPLATE_EXT = \".html\";\n    private static final String DEFAULT_TEMPLATE = TEMPLATE_PATH + \"/\"+DEFAULT_TEMPLATE_NAME+TEMPLATE_EXT;\n\n\n    private static final Log log = LogFactory.getLog(RegistryNotification.class);\n\n    /**\n     * This method used to populate email message body. As default behavior this will replace the $$message$$ content\n     * of the template using input message.\n     *\n     * @param configRegistry  Configuration Registry\n     * @param resourcePath   Registry Resource Path\n     * @param message   Current\n     * @param eventType  Eventing type\n     * @return Populated email message body\n     */\n    public String populateEmailMessage(Registry configRegistry,String resourcePath,String message, String eventType) {\n        String templateLocation = TEMPLATE_PATH +\"/\"+eventType.toLowerCase() +TEMPLATE_EXT;\n        Resource template = null;\n        try {\n            if (configRegistry.resourceExists(templateLocation)){\n               template = configRegistry.get(templateLocation);\n            } else if (configRegistry.resourceExists(DEFAULT_TEMPLATE)){\n                template = configRegistry.get(DEFAULT_TEMPLATE);\n            }\n            if (template!= null) {\n                Object object = template.getContent();\n                if (object!= null) {\n                    String content;\n                    if (object instanceof String){\n                        content = (String)object;\n                    }else {\n                        content = new String((byte[])object);\n                    }\n                    return content.replace(\"$$message$$\", message);\n                }\n            }\n        } catch (RegistryException e) {\n            log.warn(\"An error occurred while accessing email template from the registry\");\n        }\n\n        return  null;\n    }\n}\n",
  "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>ClipPath jQuery Example</title>\n</head>\n<body>\n  <img class=\"image\" src=\"https://unsplash.it/500/300/?random\" alt=\"Check out unsplash.it\">\n  <img class=\"image-2\" src=\"https://unsplash.it/500/300/?random\" alt=\"Check out unsplash.it\" data-clip=\"5% 5%, 100% 0%, 100% 75%, 75% 75%, 75% 100%, 50% 75%, 0% 75%\">\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n  <script src=\"./../dist/clippath.min.js\"></script>\n  <script type=\"text/javascript\">\n  \n  $(function(){\n    console.log('Applying clip-path with jQuery');\n    $('.image').ClipPath('5% 5%, 100% 0%, 100% 75%, 75% 75%, 75% 100%, 50% 75%, 0% 75%');\n    $('.image-2').ClipPath();\n  });\n\n  setTimeout(function() {\n    $('.image').ClipPath('5% 5%, 100% 0%, 100% 75%, 75% 75%, 75% 100%');\n    console.log('Changed after some time...');\n  }, 4000);\n  </script>\n\n</body>\n</html>",
  "\ufeffusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Data;\nusing System.Data.Common;\nusing System.Drawing;\nusing System.Linq;\nusing System.Text;\nusing System.Windows.Forms;\n\n\n\n/* Windows Forms binding mechanism: binding contexts and binding managers */\nnamespace Lessons\n{\n    public partial class MainForm : Form\n    {\n        public MainForm()\n        {\n            InitializeComponent();\n            Initialize();\n        }\n\n        DataTable table = new DataTable(\"temp\");\n\n        void Initialize()\n        {\n            /* create and fill a table */\n            table.Columns.Add(\"ID\", typeof(System.Int32));\n            table.Columns.Add(\"Name\", typeof(System.String));\n\n            for (int i = 1; i < 100; i++)\n                table.Rows.Add(new object[] { i, \"Name_\" + i.ToString() });\n\n\n            /* bind the two ListBox controls to the very same table */\n            listBox1.DataSource = table;\n            listBox1.DisplayMember = \"Name\";\n\n            listBox2.DataSource = table;\n            listBox2.DisplayMember = \"Name\";\n\n\n            /* if the next line is commented, then both the above ListBox controls \n               will use the same CurrencyManager, the one provided by the Form's BindingContext.\n               If the next line is left un-commented then the second ListBox will have a separate\n               BindingContext and thus a separate CurrencyManager, although it continues to be bound\n               to the same datasource */\n            listBox2.BindingContext = new BindingContext(); \n        }\n\n        private void btnPrevious_Click(object sender, EventArgs e)\n        {\n            BindingManagerBase Manager = listBox1.BindingContext[table];\n            Manager.Position--;\n        }\n \n\n        private void btnNext_Click(object sender, EventArgs e)\n        {\n            BindingManagerBase Manager = listBox1.BindingContext[table];\n            Manager.Position++;\n        }        \n    }\n}\n",
  "// Copyright (c) 2021 CINN Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n#include \"cinn/frontend/cinn_builder.h\"\n\n#include <glog/logging.h>\n\n#include <string>\n#include <utility>\n#include <vector>\n\n#include \"cinn/frontend/syntax.h\"\n\nnamespace cinn {\nnamespace frontend {\n\n#define UNARY_OP_DEF(func_name__, op_type__) \\\n  Variable CinnBuilder::func_name__(const Variable& operand) { return UnaryOp(#op_type__, operand); }\nUNARY_OP_DEF(Exp, exp)\nUNARY_OP_DEF(Erf, erf)\nUNARY_OP_DEF(Sqrt, sqrt)\nUNARY_OP_DEF(Rsqrt, rsqrt)\nUNARY_OP_DEF(Log, log)\nUNARY_OP_DEF(Log2, log2)\nUNARY_OP_DEF(Log10, log10)\nUNARY_OP_DEF(Floor, floor)\nUNARY_OP_DEF(Ceil, ceil)\nUNARY_OP_DEF(Round, round)\nUNARY_OP_DEF(Trunc, trunc)\nUNARY_OP_DEF(Sin, sin)\nUNARY_OP_DEF(Cos, cos)\nUNARY_OP_DEF(Tan, tan)\nUNARY_OP_DEF(Sinh, sinh)\nUNARY_OP_DEF(Cosh, cosh)\nUNARY_OP_DEF(Tanh, tanh)\nUNARY_OP_DEF(Asin, asin)\nUNARY_OP_DEF(Acos, acos)\nUNARY_OP_DEF(Atan, atan)\nUNARY_OP_DEF(Asinh, asinh)\nUNARY_OP_DEF(Acosh, acosh)\nUNARY_OP_DEF(Atanh, atanh)\nUNARY_OP_DEF(IsNan, isnan)\nUNARY_OP_DEF(IsFinite, isfinite)\nUNARY_OP_DEF(IsInf, isinf)\nUNARY_OP_DEF(LogicalNot, logical_not)\nUNARY_OP_DEF(BitwiseNot, bitwise_not)\nUNARY_OP_DEF(Negative, negative)\nUNARY_OP_DEF(Sign, sign)\nUNARY_OP_DEF(Abs, abs)\nUNARY_OP_DEF(Identity, identity)\n#undef UNARY_OP_DEF\n\n#define BINARY_OP_DEF(func_name__, op_type__) \\\n  Variable CinnBuilder::func_name__(const Variable& lhs, const Variable& rhs) { return BinaryOp(#op_type__, lhs, rhs); }\nBINARY_OP_DEF(Dot, matmul)\nBINARY_OP_DEF(Add, elementwise_add)\nBINARY_OP_DEF(Sub, substract)\nBINARY_OP_DEF(Mul, elementwise_mul)\nBINARY_OP_DEF(Div, divide)\nBINARY_OP_DEF(FloorDiv, floor_divide)\nBINARY_OP_DEF(Mod, mod)\nBINARY_OP_DEF(FloorMod, floor_mod)\nBINARY_OP_DEF(Max, max)\nBINARY_OP_DEF(Min, min)\nBINARY_OP_DEF(Power, power)\nBINARY_OP_DEF(LogicalAnd, logical_and)\nBINARY_OP_DEF(LogicalOr, logical_or)\nBINARY_OP_DEF(LogicalXor, logical_xor)\nBINARY_OP_DEF(BitwiseAnd, bitwise_and)\nBINARY_OP_DEF(BitwiseOr, bitwise_or)\nBINARY_OP_DEF(BitwiseXor, bitwise_xor)\nBINARY_OP_DEF(LeftShift, left_shift)\nBINARY_OP_DEF(RightShift, right_shift)\n#undef BINARY_OP_DEF\n\nVariable CinnBuilder::Concat(const Variable& lhs, const Variable& rhs, int axis) {\n  Instruction instr(\"concat\", {lhs, rhs});\n  instr.SetAttr(\"axis\", axis);\n  InferShape(instr);\n  AppendInstruction(instr);\n  return instr.GetOutput(0);\n}\n\nVariable CinnBuilder::Conv(const Variable& lhs,\n                           const Variable& rhs,\n                           const std::vector<int>& strides,\n                           const std::vector<int>& paddings,\n                           const std::vector<int>& dilations,\n                           int groups,\n                           const std::string& data_format,\n                           const std::string& padding_algorithm) {\n  Instruction instr(\"conv2d\");\n  instr.SetInputs({lhs, rhs});\n  instr.SetAttr(\"stride\", strides);\n  instr.SetAttr(\"padding\", paddings);\n  instr.SetAttr(\"dilation\", dilations);\n  instr.SetAttr(\"groups\", groups);\n  instr.SetAttr(\"data_format\", data_format);\n  instr.SetAttr(\"padding_algorithm\", padding_algorithm);\n  InferShape(instr);\n  AppendInstruction(instr);\n  return instr.GetOutput(0);\n}\n\nVariable CinnBuilder::Compare(const Variable& lhs, const Variable& rhs, ComparisonKind kind) {\n  switch (kind) {\n    case ComparisonKind::kEq:\n      return BinaryOp(\"equal\", lhs, rhs);\n    case ComparisonKind::kNe:\n      return BinaryOp(\"not_equal\", lhs, rhs);\n    case ComparisonKind::kGe:\n      return BinaryOp(\"greater_equal\", lhs, rhs);\n    case ComparisonKind::kGt:\n      return BinaryOp(\"greater\", lhs, rhs);\n    case ComparisonKind::kLe:\n      return BinaryOp(\"less_equal\", lhs, rhs);\n    case ComparisonKind::kLt:\n      return BinaryOp(\"less\", lhs, rhs);\n    default:\n      LOG(FATAL) << \"unknown comparison kind\";\n  }\n}\n\nVariable CinnBuilder::Reduce(const Variable& operand, ReduceKind kind, const std::vector<int>& dim, bool keep_dim) {\n  auto reduce_func = [&](const std::string& op_type) {\n    Instruction instr(op_type, {operand});\n    instr.SetAttr(\"dim\", dim);\n    instr.SetAttr(\"keep_dim\", keep_dim);\n    InferShape(instr);\n    AppendInstruction(instr);\n    return instr.GetOutput(0);\n  };\n\n  switch (kind) {\n    case ReduceKind::kSum:\n      return reduce_func(\"reduce_sum\");\n    case ReduceKind::kProd:\n      return reduce_func(\"reduce_prod\");\n    case ReduceKind::kMax:\n      return reduce_func(\"reduce_max\");\n    case ReduceKind::kMin:\n      return reduce_func(\"reduce_min\");\n    default:\n      LOG(FATAL) << \"unknown reduction kind\";\n  }\n}\n\nVariable CinnBuilder::BroadcastTo(const Variable& operand,\n                                  const std::vector<int>& out_shape,\n                                  const std::vector<int>& broadcast_axes) {\n  Instruction instr(\"broadcast_to\", {operand});\n  instr.SetAttr(\"out_shape\", out_shape);\n  instr.SetAttr(\"broadcast_axes\", broadcast_axes);\n  InferShape(instr);\n  AppendInstruction(instr);\n  return instr.GetOutput(0);\n}\n\nVariable CinnBuilder::Reshape(const Variable& operand, const std::vector<int>& shape) {\n  Instruction instr(\"reshape\", {operand});\n  instr.SetAttr(\"shape\", shape);\n  InferShape(instr);\n  AppendInstruction(instr);\n  return instr.GetOutput(0);\n}\n\nVariable CinnBuilder::Transpose(const Variable& operand, const std::vector<int>& axis) {\n  Instruction instr(\"transpose\", {operand});\n  instr.SetAttr(\"axis\", axis);\n",
  "package weatherpony.pml.launch;\n\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.lang.reflect.Method;\nimport java.net.MalformedURLException;\nimport java.net.URL;\nimport java.net.URLClassLoader;\nimport java.nio.file.Files;\nimport java.nio.file.StandardCopyOption;\nimport java.security.ProtectionDomain;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.concurrent.Callable;\n\nimport weatherpony.pml.implementorapi.PMLSetup;\n\npublic final class PMLRoot{\n\tpublic static final String selfLoadPrefix;\n\tstatic{\n\t\tFile prefixFile = new File(new File(\"PML\"),\"dev.load.directory.ini\");\n\t\tif(prefixFile.exists()){\n\t\t\tString prefix = null;\n\t\t\ttry(BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(prefixFile)))){\n\t\t\t\tprefix = reader.readLine();\n\t\t\t}catch(Exception e){\n\t\t\t}\n\t\t\tif(prefix.isEmpty())\n\t\t\t\tselfLoadPrefix = null;\n\t\t\telse\n\t\t\t\tselfLoadPrefix = prefix;\n\t\t\t\n\t\t}else{\n\t\t\tselfLoadPrefix = null;\n\t\t}\n\t}\n\tpublic static void premainload(){\n\t\tPMLLoadFocuser.init();\n\t\t\n\t\tPMLInitialization.preloadClasses();\n\t}\n\tpublic static void premainload2(){\n\t\t\n\t}\n\tpublic static void preload(String[] givenargs){\n\t\tPMLInitialization.preloadSequence();\n\t\tFile pmlMain = new File(selfLoadPrefix,\"PML\");\n\t\tif(!pmlMain.exists()){\n\t\t\tinstallError = new ReportedError(InstallErrors.PMLFolderDoesntExist, null);\n\t\t\treturn;\n\t\t}\n\t\tFile pmlLoader = new File(pmlMain, \"PML-loader.jar\");\n\t\tif(!pmlLoader.exists()){\n\t\t\tinstallError = new ReportedError(InstallErrors.PMLLoaderJarNotFound, null);\n\t\t\treturn;\n\t\t}\n\t\t\ttry {\n\t\t\t\tThrowable e = addURL((URLClassLoader) Thread.currentThread().getContextClassLoader(), pmlLoader.toURI().toURL());\n\t\t\t\tif(e!= null){\n\t\t\t\t\tinstallError = new ReportedError(InstallErrors.AddURLReflectionError, e);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} catch (MalformedURLException e1) {\n\t\t\t\tinstallError = new ReportedError(InstallErrors.AddURLReflectionError, e1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\ttry{\n\t\t\tfirst = (Callable) Thread.currentThread().getContextClassLoader().loadClass(\"weatherpony.pml_loader.PMLLoader\").newInstance();\n\t\t}catch(ClassNotFoundException e){\n\t\t\tinstallError = new ReportedError(InstallErrors.PMLLoaderNotFound, e);\n\t\t\treturn;\n\t\t}catch(Throwable e){\n\t\t\tinstallError = new ReportedError(InstallErrors.PMLLoaderInitializationFailed, e);\n\t\t\treturn;\n\t\t}\n\t\tload();//seperated due to legacy code. Will be fused later.\n\t}\n\tprivate static Callable<Callable<Callable<Void>>> first;\n\tpublic static void load(){\n\t\tif(installError!= null){\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tCallable<Callable<Void>> second;\n\t\tCallable<Void> third;\n\t\ttry{\n\t\t\tsecond = first.call();\n\t\t}catch(Throwable e){\n\t\t\tinstallError = new ReportedError(InstallErrors.PMLLoaderFailed, e);\n\t\t\treturn;\n\t\t}\n\t\ttry{\n\t\t\tthird = second.call();\n\t\t}catch(Throwable e){\n\t\t\tinstallError = new ReportedError(InstallErrors.SecondaryPMLCallFailed, e);\n\t\t\treturn;\n\t\t}\n\t\ttry{\n\t\t\tthird.call();\n\t\t}catch(Throwable e){\n\t\t\tinstallError = new ReportedError(InstallErrors.PMLCoreError, e);\n\t\t}\n\t\tPMLSetup.getSetup().notifyOfEndCoreLoad();\n\t}\n\tpublic static Throwable addURL(URLClassLoader loader, URL url){\n\t\tif(addURL == null){\n\t\t\ttry{\n\t\t\t\taddURL = URLClassLoader.class.getDeclaredMethod(\"addURL\", URL.class);\n\t\t\t\taddURL.setAccessible(true);\n\t\t\t}catch(Throwable e){\n\t\t\t}\n\t\t}\n\t\t{\n\t\t\ttry{\n\t\t\t\taddURL.invoke(loader, url);\n\t\t\t\treturn null;\n\t\t\t}catch(Throwable e){\n\t\t\t\treturn e;\n\t\t\t}\n\t\t}\n\t}\n\tprivate static Method addURL;\n\t\n\tprivate static ReportedError installError;\n\tpublic static class ReportedError{\n\t\tpublic ReportedError(InstallErrors errorType, Throwable e){\n\t\t\tthis.errorType = errorType;\n\t\t\tthis.e = e;\n\t\t\tFile pmlfolder = new File(\"PML\");\n\t\t\tFile pmlselferror = new File(pmlfolder, \"PML-selfErrorReport.txt\");\n\t\t\ttry{\n\t\t\t\tBufferedWriter out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(pmlselferror)));\n\t\t\t\tPrintWriter printout = new PrintWriter(out);\n\t\t\t\tout.append(\"PML errored on last run.\");\n\t\t\t\tout.newLine();\n\t\t\t\tout.append(\"error type/placement = \"+errorType);\n\t\t\t\tout.newLine();\n\t\t\t\tif(e == null){\n\t\t\t\t\tout.append(\"  <Throwable not supplied>\");\n\t\t\t\t}else{\n\t\t\t\t\te.printStackTrace(printout);\n\t\t\t\t}\n\t\t\t\tprintout.flush();\n\t\t\t\tprintout.close();\n\t\t\t}catch(Exception e1){\n\t\t\t\te1.printStackTrace();\n\t\t\t}\n\t\t\tSystem.err.println(\"PML errored - type \"+errorType);\n\t\t\te.printStackTrace(System.err);\n\t\t}\n\t\tpublic final InstallErrors errorType;\n\t\tpublic final Throwable e;\n\t}\n\tpublic static enum InstallErrors{\n\t\tAutoPreLoadNotUsingURLClassLoader,\n\t\tPMLFolderDoesntExist,\n\t\tPMLLoaderJarNotFound,\n\t\tAddURLReflectionError,\n\t\tPMLLoaderNotFound,\n\t\tPMLLoaderInitializationFailed,\n\t\tPMLLoaderFailed,\n\t\tSecondaryPMLCallFailed,\n\t\t\n\t\tPMLCoreError\n\t}\n\tpublic static ReportedError installError(){\n\t\treturn installError;\n\t}\n\tprivate static void extractPreAgent() throws Exception {\n\t\tFile preagent = File.createTempFile(\"PMLPreAgent\", \".jar\");\n\t\tpreagent.deleteOnExit();\n\t\tFiles.copy(Thread.currentThread().getContextClassLoader().getResourceAsStream(\"PMLPreAgent.jar\"), preagent.toPath(), StandardCopyOption.REPLACE_EXISTING);\n\t\tURL add = preagent.toURI().toURL();\n\t\tThrowable e = addURL((URLClassLoader) Thread.currentThread().getContextClassLoader(), add);\n\t\tif(e!= null){\n\t\t\tif(e instanceof Exception)\n\t\t\t\tthrow (Exception)e;\n\t\t\tthrow new Exception(e);\n\t\t}\n\t}\n\tprivate static void startPreAgent() throws Exception {\n\t\tClass.forName(\"weatherpony.pmlpreinstrumentation.AgentStart\").newInstance();\n\t}\n\tprivate static final List<String> transformationExceptions = new ArrayList();\n\tprivate static final List<String> transformationExceptions2 = new ArrayList();\n\tpublic static void addTransformationException(String prefix){\n\t\ttransformationExceptions.add(prefix);\n\t}\n\tpublic static void addTransformationDoubleException(String name){\n\t\ttransformationExceptions2.add(name);\n\t}\n\tprivate static boolean transform(String name){\n\t\tboolean du = true;\n\t\tfor(String each : transformationExceptions){\n\t\t\tif(name.startsWith(each)){\n\t\t\t\tdu = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!du){\n\t\t\tif(transformationExceptions2.contains(name)){\n\t\t\t\ttransformationExceptions2.remove(name);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn du;\n\t}\n\tprivate static final List<String> secondTransformationExceptions = new ArrayList();\n\tprivate static final List<String> secondTransformationExceptions2 = new ArrayList();\n\tpublic static void addSecondTransformationException(String prefix){\n\t\tsecondTransformationEx",
  "package controllers;\n\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.io.IOException;\n\nimport javax.swing.JOptionPane;\n\nimport models.Manager;\nimport persistence.FileManager;\nimport views.MainWindow;\n\npublic class Controller implements ActionListener{\n\n\tprivate FileManager fileManager;\n\tprivate Manager manager;\n\t@SuppressWarnings(\"unused\")\n\tprivate MainWindow mainWindow;\n\n\tpublic Controller() {\n\t\tString image = JOptionPane.showInputDialog(null, \"Search\", \"WallpapersDownload v1.0\", JOptionPane.DEFAULT_OPTION);\n\t\tfileManager = new FileManager();\n\t\ttry {\n\t\t\tfileManager.downloadFile(image);\n//\t\t\tfileManager.downloadFileTwo(image);\n\t\t\tmanager = new Manager(fileManager.readPlayer());\n\t\t\tfileManager.addImageFilter();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tmainWindow = new MainWindow(this, manager.getImageList());\n\t}\n\n\t@Override\n\tpublic void actionPerformed(ActionEvent e) {\n\t\tswitch (Events.valueOf(e.getActionCommand())) {\n\t\tcase FILTER:\n\t\t\tSystem.out.println(\"Filter\");\n\t\t\ttry {\n\t\t\t\tmainWindow.deleteImages(fileManager.addlistilter());\n\t\t\t} catch (IOException e1) {\n\t\t\t\te1.printStackTrace();\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t}\n}",
  "// import \"./js/lesson-1/task1.js\"\n// import \"./js/lesson-1/task2.js\"\n// import \"./js/lesson-1/task3.js\"\n// import \"./js/lesson-2/task-1.js\"\n// import \"./js/lesson-2/task-1.js\"\n// import \"./js/lesson-4/task.js\"\n// import \"./js/lesson-4/blended-21-11-21.js\"\n// import \"./js/lesson-4/24-11-20-group-Exersices.js\"\nimport \"./js/lesson-4/task-OOP.js\"\n",
  "# web-java-spring-boot\n\n# Developer Workspace\n\n[![Contribute](http://beta.codenvy.com/factory/resources/codenvy-contribute.svg)](http://beta.codenvy.com/f?id=sz7uzyofb8olekkn)\n\n# Recipe\n\nFROM [codenvy/ubuntu_jdk8](https://hub.docker.com/r/codenvy/ubuntu_jdk8/)\n\n# Commands\n\n| #       | Command           | \n| :------------- |:------------- |\n| 1      | `cd ${current.project.path} && mvn spring-boot:run` |\n\n# Preview URL\n\nThe app runs on port 8080 in the container\n=======\n# sboot\n",
  "#ifndef _LIB_JK_H_\n#define _LIB_JK_H_\n\n#if defined(WIN32) && defined(JK_Core_DLL)\n/* We are building jk_cpp as a Win32 DLL */\n#define JK_API __declspec(dllexport)\n#elif defined(__GNUC__) && defined(_JK_BUILD_DLL)\n/* We are building jk_cpp as a shared / dynamic library */\n#define JK_API __attribute__((visibility(\"default\")))\n#else\n/* We are building or calling GLFW as a static library */\n#define JK_API\n#endif\n\n\n\n\n\n#endif //_LIB_JK_H_\n",
  "package org.tc.provider.mapper;\n\nimport org.tc.core.mybatis.MyMapper;\nimport org.tc.provider.model.domain.CompanyInfo;\nimport org.apache.ibatis.annotations.Mapper;\nimport org.springframework.stereotype.Component;\n\n@Component\n@Mapper\npublic interface CompanyInfoMapper extends MyMapper<CompanyInfo> {\n\n\n}\n",
  "package cmd\n\nimport (\n\t\"encoding/hex\"\n\t\"fmt\"\n\t\"os\"\n\t\"strings\"\n\n\t\"github.com/drausin/libri/libri/common/ecid\"\n\t\"github.com/drausin/libri/libri/common/errors\"\n\tclogging \"github.com/drausin/libri/libri/common/logging\"\n\t\"github.com/drausin/libri/libri/common/parse\"\n\t\"github.com/drausin/libri/libri/common/subscribe\"\n\t\"github.com/drausin/libri/libri/librarian/server\"\n\t\"github.com/drausin/libri/libri/librarian/server/replicate\"\n\t\"github.com/drausin/libri/libri/librarian/server/routing\"\n\t\"github.com/ethereum/go-ethereum/crypto\"\n\t\"github.com/spf13/cobra\"\n\t\"github.com/spf13/viper\"\n\t\"go.uber.org/zap\"\n)\n\nconst (\n\tbootstrapsFlag        = \"bootstraps\"\n\tlocalPortFlag         = \"localPort\"\n\tlocalMetricsPortFlag  = \"localMetricsPort\"\n\tlocalProfilerPortFlag = \"localProfilerPort\"\n\tpublicHostFlag        = \"publicHost\"\n\tpublicNameFlag        = \"publicName\"\n\tpublicPortFlag        = \"publicPort\"\n\tnSubscriptionsFlag    = \"nSubscriptions\"\n\tfpRateFlag            = \"fpRate\"\n\tprofileFlag           = \"profile\"\n\tmaxBucketPeersFlag    = \"maxRoutingBucketPeers\"\n\tverifyIntervalFlag    = \"verifyInterval\"\n\torganizationIDFlag    = \"organizationID\"\n\n\tlogLocalPort        = \"localPort\"\n\tlogLocalMetricsPort = \"localMetricsPort\"\n\tlogPublicAddr       = \"publicAddr\"\n)\n\n// startLibrarianCmd represents the librarian start command\nvar startLibrarianCmd = &cobra.Command{\n\tUse:   \"start\",\n\tShort: \"start a librarian server\",\n\tRunE: func(cmd *cobra.Command, args []string) error {\n\t\tconfig, logger, err := getLibrarianConfig()\n\t\tif err!= nil {\n\t\t\treturn err\n\t\t}\n\t\tup := make(chan *server.Librarian, 1)\n\t\treturn server.Start(logger, config, up)\n\t},\n}\n\nfunc init() {\n\tlibrarianCmd.AddCommand(startLibrarianCmd)\n\n\tstartLibrarianCmd.Flags().Int(localPortFlag, server.DefaultPort,\n\t\t\"local port\")\n\tstartLibrarianCmd.Flags().Int(localMetricsPortFlag, server.DefaultMetricsPort,\n\t\t\"local metrics port\")\n\tstartLibrarianCmd.Flags().Int(localProfilerPortFlag, server.DefaultProfilerPort,\n\t\t\"local profiler port (when --profile is set)\")\n\tstartLibrarianCmd.Flags().StringP(publicHostFlag, \"i\", server.DefaultIP,\n\t\t\"public host (IPv4 or URL)\")\n\tstartLibrarianCmd.Flags().IntP(publicPortFlag, \"p\", server.DefaultPort,\n\t\t\"public port\")\n\tstartLibrarianCmd.Flags().StringSliceP(bootstrapsFlag, \"b\", nil,\n\t\t\"comma-separated addresses (IPv4:Port) of bootstrap peers\")\n\tstartLibrarianCmd.Flags().StringP(publicNameFlag, \"n\", \"\",\n\t\t\"public peer name\")\n\tstartLibrarianCmd.Flags().IntP(nSubscriptionsFlag, \"s\", subscribe.DefaultNSubscriptionsTo,\n\t\t\"number of active subscriptions to other peers to maintain\")\n\tstartLibrarianCmd.Flags().Float32P(fpRateFlag, \"f\", subscribe.DefaultFPRate,\n\t\t\"false positive rate for subscriptions to other peers\")\n\tstartLibrarianCmd.Flags().Bool(profileFlag, false,\n\t\t\"enable /debug/pprof profiler endpoint\")\n\tstartLibrarianCmd.Flags().Uint(maxBucketPeersFlag, routing.DefaultMaxActivePeers,\n\t\t\"max number of peers allowed in a routing table bucket\")\n\tstartLibrarianCmd.Flags().Duration(verifyIntervalFlag, replicate.DefaultVerifyInterval,\n\t\t\"verify interval duration\")\n\tstartLibrarianCmd.Flags().String(organizationIDFlag, \"\",\n\t\t\"[sensitive] hex value of organization ID private key\")\n\n\t// bind viper flags\n\tviper.SetEnvPrefix(\"LIBRI\") // look for env vars with \"LIBRI_\" prefix\n\tviper.AutomaticEnv()        // read in environment variables that match\n\terrors.MaybePanic(viper.BindPFlags(startLibrarianCmd.Flags()))\n}\n\nfunc getLibrarianConfig() (*server.Config, *zap.Logger, error) {\n\tlogLevel := getLogLevel()\n\tlogger := clogging.NewDevLogger(logLevel)\n\n\tlocalPort := viper.GetInt(localPortFlag)\n\tlocalMetricsPort := viper.GetInt(localMetricsPortFlag)\n\tlocalProfilerPort := viper.GetInt(localProfilerPortFlag)\n\tprofile := viper.GetBool(profileFlag)\n\tpublicAddr, err := parse.Addr(\n\t\tviper.GetString(publicHostFlag),\n\t\tviper.GetInt(publicPortFlag),\n\t)\n\tif err!= nil {\n\t\tlogger.Error(\"fatal error parsing public address\", zap.Error(err))\n\t\treturn nil, nil, err\n\t}\n\treplicateParams := replicate.NewDefaultParameters()\n\treplicateParams.VerifyInterval = viper.GetDuration(verifyIntervalFlag)\n\torgID, err := getOrgID(logger)\n\tif err!= nil {\n\t\treturn nil, nil, err\n\t}\n\n\tconfig := server.NewDefaultConfig().\n\t\tWithLocalPort(localPort).\n\t\tWithLocalMetricsPort(localMetricsPort).\n\t\tWithLocalProfilerPort(localProfilerPort).\n\t\tWithProfile(profile).\n\t\tWithPublicAddr(publicAddr).\n\t\tWithPublicName(viper.GetString(publicNameFlag)).\n\t\tWithOrgID(orgID).\n\t\tWithReplicate(replicateParams).\n\t\tWithDataDir(viper.GetString(dataDirFlag)).\n\t\tWithDefaultDBDir(). // depends on DataDir\n\t\tWithLogLevel(logLevel)\n\tconfig.SubscribeTo.NSubscriptions = uint32(viper.GetInt(nSubscriptionsFlag))\n\tconfig.SubscribeTo.FPRate = float32(viper.GetFloat64(fpRateFlag))\n\tconfig.Routing.MaxBucketPeers = uint(viper.GetInt(maxBucketPeersFlag))\n\n\tbootstrapNetAddrs, err := parse.Addrs(viper.GetStringSlice(bootstrapsFlag))\n\tif err!= nil {\n\t\tlogger.Error(\"unable to parse bootstrap peer address\", zap.Error(err))\n\t\treturn nil, nil, err\n\n\t}\n\tconfig.WithBootstrapAddrs(bootstrapNetAddrs)\n\n\tWriteLibrarianBanner(os.Stdout)\n\tlogger.Info(\"librarian configuration\",\n\t\tzap.Int(logLocalPort, config.LocalPort),\n\t\tzap.Int(logLocalMetricsPort, config.LocalMetricsPort),\n\t\tzap.Stringer(logPublicAddr, config.PublicAddr),\n\t\tzap.String(bootstrapsFlag, fmt.Sprintf(\"%v\", config.BootstrapAddrs)),\n\t\tzap.String(publicNameFlag, config.PublicName),\n\t\tzap.String(dataDirFlag, config.DataDir),\n\t\tzap.Stringer(logLevelFlag, config.LogLevel),\n\t\tzap.Uint32(nSubscriptionsFlag, config.SubscribeTo.NSubscriptions),\n\t\tzap.Float32(fpRateFlag, config.SubscribeTo.FPRate),\n\t\tzap.Uint(maxBucketPeersFlag, config.Routing.MaxBucketPeers),\n\t)\n\treturn config, logger, nil\n}\n\nfunc getOrgID(logger *zap.Logger) (ecid.ID, error) {\n\torgIDPrivHex := viper.GetString(organizationIDFlag)\n\tif len(orgIDPrivHex) == 0 {\n\t\t// ok if org ID isn't set\n\t\treturn nil, nil\n\t}\n\torgIDPrivBytes, err := hex.DecodeString(strings.TrimSpace(orgIDPrivHex))\n\tif err!= nil {\n\t\tlogger.Error(\"fatal error parsing organization ID private key hex\")\n\t\treturn nil, err\n\t}\n",
  "\ufeff//Write a program that safely compares floating-point numbers (double) with precision eps = 0.000001.\n\nusing System;\n\nnamespace ComparingFloats\n{\n    class ComparingFloats\n    {\n        static void Main()\n        {\n            double eps = 0.000001;\n\n            Console.WriteLine(\"Input first number:\");\n            double inputFirstNumber = Convert.ToDouble(Console.ReadLine());\n            Console.WriteLine(\"Input second number:\");\n            double inputSecondNumber = Convert.ToDouble(Console.ReadLine());\n            double comparison = Math.Abs(inputFirstNumber - inputSecondNumber);\n            if (comparison < eps) Console.WriteLine(\"Numbers are equal!\");\n            else Console.WriteLine(\"Numbers aren't equal!\");\n\n\n        }\n    }\n}\n\n",
  "<!DOCTYPE html>\n<html lang=\"<?php echo lang('language_datetime');?>\">\n\n<head>\n\t<meta charset=\"utf-8\">\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\">\n\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n\t<meta name=\"description\" content=\"\">\n\t<meta name=\"author\" content=\"\">\n\t<link rel=\"shortcut icon\" href=\"<?php echo base_url();?>assets/img/logo-fav.png\">\n\t<title>\n\t\t<?php echo $title;?>\n\t</title>\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"<?php echo base_url();?>assets/lib/perfect-scrollbar/css/perfect-scrollbar.min.css\"/>\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"<?php echo base_url();?>assets/lib/material-design-icons/css/material-design-iconic-font.min.css\"/>\n\t<!--[if lt IE 9]>\n    <script src=\"https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js\"></script>\n    <script src=\"https://oss.maxcdn.com/respond/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"<?php echo base_url();?>assets/lib/datetimepicker/css/bootstrap-datetimepicker.min.css\"/>\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"<?php echo base_url();?>assets/lib/jquery.gritter/css/jquery.gritter.css\"/>\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"<?php echo base_url();?>assets/lib/select2/css/select2.min.css\"/>\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"<?php echo base_url();?>assets/css/ciuis.css\" type=\"text/css\"/>\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"<?php echo base_url();?>assets/css/animate.css\" type=\"text/css\"/>\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"<?php echo base_url();?>assets/lib/ionicons/css/ionicons.min.css\" rel=\"stylesheet\">\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"<?php echo base_url();?>assets/lib/bootstrap-slider/css/bootstrap-slider.css\"/>\n</head>\n<body>\n<?php $newnotification = $this->Customer_Model->newnotification();?>\n<?php $readnotification = $this->Customer_Model->readnotification();?>\n<?php $notifications = $this->Customer_Model->get_all_notifications();?>\n<?php $settings = $this->Settings_Model->get_settings_ciuis();?>\n\t<!-- <div id=\"ciuisloader\"></div> -->\n\t<div class=\"ciuis-body-wrapper ciuis-body-fixed-sidebar\">\n\t\t<nav class=\"navbar navbar-default navbar-fixed-top ciuis-body-top-header\">\n\t\t\t<div class=\"container-fluid\">\n\t\t\t\t<div id=\"logociuis\" class=\"navbar-header\"><a id=\"ciuis-logo-donder\" href=\"<?php echo base_url();?>panel\" class=\"navbar-brand\" style=\"background-image:url(<?php echo base_url('uploads/ciuis_settings/'. $settings['logo']. '')?>)\"></a></div>\n\n\t\t\t\t<div class=\"ciuis-body-right-navbar\">\n\t\t\t\t\t<ul class=\"nav navbar-nav navbar-right ciuis-body-user-nav\">\n\t\t\t\t\t\t<li class=\"dropdown\"><a href=\"#\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\" class=\"dropdown-toggle\"> <img src=\"<?php echo base_url('assets/img/customer_avatar.png');?>\"><span class=\"user-name\"><?php echo $_SESSION['name']?> <?php echo $_SESSION['surname']?></span></a>\n\t\t\t\t\t\t\t<ul role=\"menu\" class=\"dropdown-menu animated fadeIn\">\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<div class=\"user-info\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"user-name\">\n\t\t\t\t\t\t\t\t\t\t\t<?php echo $_SESSION['name']?>\n\t\t\t\t\t\t\t\t\t\t\t<?php echo $_SESSION['surname']?>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li><a href=\"<?php echo base_url('customer/logout');?>\"><span class=\"icon mdi mdi-power\"></span><?php echo lang('logout')?></a>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<div class=\"crm-name\">\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<?php echo $settings['crm_name']?>\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t</div>\n\t\t\t\t\t<?php include_once APPPATH. 'views/customer/inc/navbar.php';?>\n\t\t\t\t\t<ul class=\"nav navbar-nav navbar-right ciuis-body-icons-nav\">\n\t\t\t\t\t\t<li class=\"dropdown\"><a href=\"#\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\" class=\"dropdown-toggle\"><span class=\"ion-ios-bell-outline\"></span><span class=\"<?php echo $newnotification;?>\"></span></a>\n\t\t\t\t\t\t\t<ul class=\"dropdown-menu ciuis-body-notifications animated fadeIn\">\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<div class=\"title\">\n\t\t\t\t\t\t\t\t\t\t<?php echo lang('notifications')?><span class=\"badge\"></span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"list\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"ciuis-body-scroller\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"content\">\n\t\t\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<?php foreach ($notifications as $bil) {\n\tif ($bil['customerread'] == 0) {\n\t\t$biloku = '-unread';\n\t} else {\n\t\t$biloku = '';\n\t}\n\t?>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li class=\"notification notification<?php echo $biloku;?>\" data-id=\"<?php echo $bil['contactid']?>\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"<?php echo $bil['target']?>\" class=\"cusmark\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"image\"><img src=\"<?php echo base_url();?>uploads/staffavatars/<?php echo $bil['perres'];?>\" alt=\"\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"notification-info\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<?php echo $bil['detail'];?>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"date\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<?php echo tes_ciuis($bil['date']);?>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<?php }?>\n\t\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"footer\">\n\t\t\t\t\t\t\t\t\t\t<a href=\"#\">\n\t\t\t\t\t\t\t\t\t\t\t<?php echo lang('all')?>\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</nav>\n\t\t<div class=\"ciuis-body-left-sidebar\">\n\t\t\t<div class=\"left-sidebar-wrapper\">\n\t\t\t\t<a href=\"#\" class=\"left-sidebar-toggle\">\n\t\t\t\t\t<?php echo lang('menu')?>\n\t\t\t\t</a>\n\t\t\t\t<div class=\"left-sidebar-spacer\">\n\t\t\t\t\t<div class=\"left-sidebar-scroll\">\n\t\t\t\t\t\t<div class=\"left-sidebar-content\">\n\t\t\t\t\t\t\t<ul class=\"sidebar-elements\">\n\t\t\t\t\t\t\t\t<li data-toggle=\"tooltip\" data-placement=\"right\" data-container=\"body\" title=\"<?php echo lang('dashboard')?>\"><a class=\"huppur\" href=\"<?php echo base_url('customer');?>\"><span class=\"ion-ios-analytics-outline\"></span></a>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li data-toggle=\"tooltip\" data-placement=\"right\" data-container=\"body\" title=\"<?php echo lang('invoices')?>\"><a class=\"huppur\" href=\"<?php echo base_url('customer/invoices');?>\"><span class=\"ico-ciuis-invoices\"></span></a>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li data-toggle=\"tooltip\" data-placement=\"right\" data-container=\"body\" title=\"<?php echo lang('proposals')?>\"><a class=\"huppur\" href=\"<?php echo base_url('customer/propos",
  "\n<!DOCTYPE html><html lang='en' class=''>\n<head><script src='//static.codepen.io/assets/editor/live/console_runner-ce3034e6bde3912cc25f83cccb7caa2b0f976196f2f2d52303a462c826d54a73.js'></script><script src='//static.codepen.io/assets/editor/live/css_live_reload_init-890dc39bb89183d4642d58b1ae5376a0193342f9aed88ea04330dc14c8d52f55.js'></script><meta charset='UTF-8'><meta name=\"robots\" content=\"noindex\"><link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"//static.codepen.io/assets/favicon/favicon-8ea04875e70c4b0bb41da869e81236e54394d63638a1ef12fa558a4a835f1164.ico\" /><link rel=\"mask-icon\" type=\"\" href=\"//static.codepen.io/assets/favicon/logo-pin-f2d2b6d2c61838f7e76325261b7195c27224080bc099486ddd6dccb469b8e8e6.svg\" color=\"#111\" /><link rel=\"canonical\" href=\"https://codepen.io/DannyJoris/pen/BrMgza\" />\n\n<link rel='stylesheet prefetch' href='https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css'>\n<style class=\"cp-pen-styles\">@import url(https://fonts.googleapis.com/css?family=Six+Caps);\nhtml * {\n  box-sizing: border-box;\n}\n\nbody {\n  font-size: 16px;\n  padding: 10px;\n  background: #333333;\n  color: #ffffff;\n  text-align: center;\n  height: 100vh;\n  margin: 0;\n  display: flex;\n  align-items: center;\n  height: 100vh;\n}\n\n.container {\n  width: 100%;\n}\n\n.border-animation {\n  --border-width: 0.1em;\n  --animation-speed: 0.5s;\n  --color: #ffffff;\n  color: var(--color);\n  position: relative;\n  display: inline-block;\n  font-size: 4em;\n  line-height: 1em;\n  -webkit-transform: scale(1, 0.8);\n          transform: scale(1, 0.8);\n  border: var(--border-width) solid transparent;\n}\n.border-animation.border-animation__inner {\n  position: relative;\n  display: inline-block;\n  width: 100%;\n  font-family: 'Six Caps', sans-serif;\n  font-weight: 300;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  cursor: pointer;\n  padding: 0.2em;\n  background: #333;\n  z-index: 1;\n  border: solid var(--border-width) transparent;\n}\n.border-animation:before,.border-animation:after {\n  content: '';\n  position: absolute;\n  background: var(--color);\n}\n.border-animation:focus:before,.border-animation:hover:before {\n  -webkit-animation: beforeBorders var(--animation-speed) forwards ease-in-out;\n          animation: beforeBorders var(--animation-speed) forwards ease-in-out;\n}\n.border-animation:focus:after,.border-animation:hover:after {\n  -webkit-animation: afterBorders var(--animation-speed) forwards ease-in-out;\n          animation: afterBorders var(--animation-speed) forwards ease-in-out;\n}\n.border-animation:focus,.border-animation:hover {\n  -webkit-animation: borderColors var(--animation-speed) steps(1) forwards;\n          animation: borderColors var(--animation-speed) steps(1) forwards;\n  outline: none;\n}\n.border-animation:focus.border-animation__inner,.border-animation:hover.border-animation__inner {\n  -webkit-animation: background calc(var(--animation-speed) / 5 * 3) forwards ease-in-out;\n          animation: background calc(var(--animation-speed) / 5 * 3) forwards ease-in-out;\n  -webkit-animation-delay: calc(var(--animation-speed) / 5 * 2);\n          animation-delay: calc(var(--animation-speed) / 5 * 2);\n}\n\n@-webkit-keyframes beforeBorders {\n  0% {\n    top: calc(var(--border-width) * -1);\n    left: 50%;\n    bottom: auto;\n    right: auto;\n    width: 0;\n    height: var(--border-width);\n  }\n  33% {\n    top: calc(var(--border-width) * -1);\n    left: calc(var(--border-width) * -1);\n    bottom: auto;\n    right: auto;\n    width: calc(var(--border-width) + 50%);\n    height: var(--border-width);\n  }\n  66% {\n    top: calc(var(--border-width) * -1);\n    left: calc(var(--border-width) * -1);\n    bottom: auto;\n    right: auto;\n    width: var(--border-width);\n    height: calc((var(--border-width) * 2) + 100%);\n  }\n  100% {\n    top: auto;\n    left: calc(var(--border-width) * -1);\n    bottom: calc(var(--border-width) * -1);\n    right: auto;\n    width: calc(var(--border-width) + 50%);\n    height: calc((var(--border-width) * 2) + 100%);\n  }\n}\n\n@keyframes beforeBorders {\n  0% {\n    top: calc(var(--border-width) * -1);\n    left: 50%;\n    bottom: auto;\n    right: auto;\n    width: 0;\n    height: var(--border-width);\n  }\n  33% {\n    top: calc(var(--border-width) * -1);\n    left: calc(var(--border-width) * -1);\n    bottom: auto;\n    right: auto;\n    width: calc(var(--border-width) + 50%);\n    height: var(--border-width);\n  }\n  66% {\n    top: calc(var(--border-width) * -1);\n    left: calc(var(--border-width) * -1);\n    bottom: auto;\n    right: auto;\n    width: var(--border-width);\n    height: calc((var(--border-width) * 2) + 100%);\n  }\n  100% {\n    top: auto;\n    left: calc(var(--border-width) * -1);\n    bottom: calc(var(--border-width) * -1);\n    right: auto;\n    width: calc(var(--border-width) + 50%);\n    height: calc((var(--border-width) * 2) + 100%);\n  }\n}\n@-webkit-keyframes afterBorders {\n  0% {\n    top: calc(var(--border-width) * -1);\n    left: auto;\n    bottom: auto;\n    right: 50%;\n    width: 0;\n    height: var(--border-width);\n  }\n  33% {\n    top: calc(var(--border-width) * -1);\n    left: auto;\n    bottom: auto;\n    right: calc(var(--border-width) * -1);\n    width: calc(var(--border-width) + 50%);\n    height: var(--border-width);\n  }\n  66% {\n    top: calc(var(--border-width) * -1);\n    left: auto;\n    bottom: auto;\n    right: calc(var(--border-width) * -1);\n    width: var(--border-width);\n    height: calc((var(--border-width) * 2) + 100%);\n  }\n  100% {\n    top: auto;\n    left",
  "object Solution {\n    \n    def gcd(x: Int, y: Int): Int = {\n        if (x == 0) y else gcd(y % x, x)\n    }\n  \n    def acceptInputAndComputeGCD(pair:List[Int]) = {\n        println(gcd(pair.head,pair.reverse.head))\n    } \n\n    def main(args: Array[String]) {\n         acceptInputAndComputeGCD(readLine().trim().split(\" \").map(x=>x.toInt).toList)\n    }\n}\n",
  "# --------------------------------------------------------------------------\n# Copyright (c) Microsoft Corporation. All rights reserved.\n# Licensed under the MIT License. See License.txt in the project root for\n# license information.\n#\n# Code generated by Microsoft (R) AutoRest Code Generator.\n# Changes may cause incorrect behavior and will be lost if the code is\n# regenerated.\n# --------------------------------------------------------------------------\n# pylint: disable=too-many-lines\n\nfrom knack.help_files import helps\n\n\nhelps['dnc controller'] = \"\"\"\n    type: group\n    short-summary: Manage controller with dnc\n\"\"\"\n\nhelps['dnc controller show'] = \"\"\"\n    type: command\n    short-summary: \"Gets details about the specified dnc controller.\"\n    examples:\n      - name: Get details of a controller\n        text: |-\n               az dnc controller show --resource-group \"TestRG\" --resource-name \"testcontroller\"\n\"\"\"\n\nhelps['dnc controller create'] = \"\"\"\n    type: command\n    short-summary: \"Create a dnc controller.\"\n    examples:\n      - name: Create controller\n        text: |-\n               az dnc controller create --location \"West US\" --resource-group \"TestRG\" --resource-name \\\n\"testcontroller\"\n\"\"\"\n\nhelps['dnc controller delete'] = \"\"\"\n    type: command\n    short-summary: \"Deletes the DNC controller.\"\n    examples:\n      - name: Delete controller\n        text: |-\n               az dnc controller delete --resource-group \"TestRG\" --resource-name \"testcontroller\"\n\"\"\"\n\nhelps['dnc controller wait'] = \"\"\"\n    type: command\n    short-summary: Place the CLI in a waiting state until a condition of the dnc controller is met.\n    examples:\n      - name: Pause executing next line of CLI script until the dnc controller is successfully created.\n        text: |-\n               az dnc controller wait --resource-group \"TestRG\" --resource-name \"testcontroller\" --created\n      - name: Pause executing next line of CLI script until the dnc controller is successfully deleted.\n        text: |-\n               az dnc controller wait --resource-group \"TestRG\" --resource-name \"testcontroller\" --deleted\n\"\"\"\n\nhelps['dnc orchestrator-instance-service'] = \"\"\"\n    type: group\n    short-summary: Manage orchestrator instance service with dnc\n\"\"\"\n\nhelps['dnc orchestrator-instance-service show'] = \"\"\"\n    type: command\n    short-summary: \"Gets details about the orchestrator instance.\"\n    examples:\n      - name: Get details of a orchestratorInstance\n        text: |-\n               az dnc orchestrator-instance-service show --resource-group \"TestRG\" --resource-name \"testk8s1\"\n\"\"\"\n\nhelps['dnc orchestrator-instance-service create'] = \"\"\"\n    type: command\n    short-summary: \"Create a orchestrator instance.\"\n    examples:\n      - name: Create orchestrator instance\n        text: |-\n               az dnc orchestrator-instance-service create --type \"SystemAssigned\" --location \"West US\" \\\n--api-server-endpoint \"https://testk8s.cloudapp.net\" --cluster-root-ca \"ddsadsad344mfdsfdl\" --id \\\n\"/subscriptions/613192d7-503f-477a-9cfe-4efc3ee2bd60/resourceGroups/TestRG/providers/Microsoft.DelegatedNetwork/control\\\nler/testcontroller\" --orchestrator-app-id \"546192d7-503f-477a-9cfe-4efc3ee2b6e1\" --orchestrator-tenant-id \\\n\"da6192d7-503f-477a-9cfe-4efc3ee2b6c3\" --priv-link-resource-id \"/subscriptions/613192d7-503f-477a-9cfe-4efc3ee2bd60/res\\\nourceGroups/TestRG/providers/Microsoft.Network/privateLinkServices/plresource1\" --resource-group \"TestRG\" \\\n--resource-name \"testk8s1\"\n\"\"\"\n\nhelps['dnc orchestrator-instance-service delete'] = \"\"\"\n    type: command\n    short-summary: \"Deletes the Orchestrator Instance.\"\n    examples:\n      - name: Delete Orchestrator Instance\n        text: |-\n               az dnc orchestrator-instance-service delete --resource-group \"TestRG\" --resource-name \"k8stest1\"\n\"\"\"\n\nhelps['dnc orchestrator-instance-service wait'] = \"\"\"\n    type: command\n    short-summary: Place the CLI in a waiting state until a condition of the dnc orchestrator-instance-service is met.\n    examples:\n      - name: Pause executing next line of CLI script until the dnc orchestrator-instance-service is successfully \\\ncreated.\n        text: |-\n               az dnc orchestrator-instance-service wait --resource-group \"TestRG\" --resource-name \"testk8s1\" \\\n--created\n      - name: Pause executing next line of CLI script until the dnc orchestrator-instance-service is successfully \\\ndeleted.\n        text: |-\n               az dnc orchestrator-instance-service wait --resource-group \"TestRG\" --resource-name \"testk8s1\" \\\n--deleted\n\"\"\"\n\nhelps['dnc delegated-subnet-service'] = \"\"\"\n    type: group\n    short-summary: Manage delegated subnet service with dnc\n\"\"\"\n\nhelps['dnc delegated-subnet-service show'] = \"\"\"\n    type: command\n    short-summary: \"Gets details about the specified dnc DelegatedSubnet Link.\"\n    examples:\n      - name: Get details of a delegated subnet\n        text: |-\n               az dnc delegated-subnet-service show --resource-group \"TestRG\" --resource-name \"delegated1\"\n\"\"\"\n\nhelps['dnc delegated-subnet-service create'] = \"\"\"\n    type: command\n    short-summary: \"Put delegated subnet resource.\"\n    examples:\n      - name: put delegated subnet\n        text: |-\n               az dnc delegated-subnet-service create --location \"West US\" --id \"/subscriptions/613192d7-503f-477a-9cfe\\\n-4efc3ee2bd60/resourceGroups/TestRG/providers/Microsoft.DelegatedNetwork/controller/dnctestcontroller\" \\\n--subnet-details-id \"/subscriptions/613192d7-503f-477a-9cfe-4efc3ee2bd60/resourceGroups/TestRG/providers/Microsoft.Netw\\\nork/virtualNetworks/testvnet/subnets/testsubnet\" --resource-group \"TestRG\" --resource-name \"delegated1\"\n\"\"\"\n\nhelps['dnc delegated-subnet-service delete'] = \"\"\"\n    type: command\n    short-summary: \"Delete dnc DelegatedSubnet.\"\n    examples:\n      - name: delete delegated subnet\n        text: |-\n               az dnc delegated-subnet-service delete --resource-group \"TestRG\" --resource-name \"delegated1\"\n\"\"\"\n\nhelps['dnc delegated-subnet-service wait'] = \"\"\"\n    type: command\n    short-summary: Place the CLI in a waiting state until a condition of the dnc delegated-subnet-service is met.\n    examples:\n      - name: Pause executing next line of CLI script until the dnc delegated-subnet-service is successfully created.\n        text: |-\n               az dnc delegated-subnet-service wait --resource-group \"TestRG\" --resource-name \"delegated1\" --created\n      - name: Pause executing next line of CLI script until the dnc delegated-subnet-service is successfully deleted.\n        text: |-\n               az dnc delegated-subnet-service wait --resource-group \"TestRG\" --resource-name \"delegated1\" --deleted\n\"\"\"\n",
  "{extend name=\"public:base2\" /}\n\n\n{block name=\"main\"}\n<article class=\"page-container\">\n\t<form class=\"form form-horizontal\" id=\"form-admin-add\">\n\t<div class=\"row cl\">\n\t\t<label class=\"form-label col-xs-4 col-sm-3\"><span class=\"c-red\">*</span>\u5206\u7c7b\u540d\u79f0\uff1a</label>\n\t\t<div class=\"formControls col-xs-8 col-sm-9\">\n\t\t\t<input type=\"text\" class=\"input-text\" value=\"\" placeholder=\"\" id=\"name\" name=\"name\">\n\t\t</div>\n\t</div>\n\t<div class=\"row cl\">\n\t\t<label class=\"form-label col-xs-4 col-sm-3\">\u4e0a\u7ea7\u5206\u7c7b\uff1a</label>\n\t\t<div class=\"formControls col-xs-8 col-sm-9\"> <span class=\"select-box\" style=\"width:150px;\">\n\t\t\t<select class=\"select\" name=\"parent_id\" size=\"1\">\n\t\t\t\t<option>\u8bf7\u9009\u62e9</option>\n\t\t\t\t<option value=\"0\">\u4e00\u7ea7\u5206\u7c7b</option>\n\t\t\t\t{volist name=\"categorys\" id=\"category\"}\n\t\t\t\t<option value=\"{$category.id}\">{$category.name}</option>\n\t\t\t\t{/volist}\n\t\t\t</select>\n\t\t\t</span> \n\t\t</div>\n\t</div>\n<!-- \t<div class=\"row cl\">\n\t\t<label class=\"form-label col-xs-4 col-sm-3\"><span class=\"c-red\">*</span>\u521d\u59cb\u5bc6\u7801\uff1a</label>\n\t\t<div class=\"formControls col-xs-8 col-sm-9\">\n\t\t\t<input type=\"password\" class=\"input-text\" autocomplete=\"off\" value=\"\" placeholder=\"\u5bc6\u7801\" id=\"password\" name=\"password\">\n\t\t</div>\n\t</div>\n\t<div class=\"row cl\">\n\t\t<label class=\"form-label col-xs-4 col-sm-3\"><span class=\"c-red\">*</span>\u786e\u8ba4\u5bc6\u7801\uff1a</label>\n\t\t<div class=\"formControls col-xs-8 col-sm-9\">\n\t\t\t<input type=\"password\" class=\"input-text\" autocomplete=\"off\"  placeholder=\"\u786e\u8ba4\u65b0\u5bc6\u7801\" id=\"password2\" name=\"password2\">\n\t\t</div>\n\t</div>\n\t<div class=\"row cl\">\n\t\t<label class=\"form-label col-xs-4 col-sm-3\"><span class=\"c-red\">*</span>\u6027\u522b\uff1a</label>\n\t\t<div class=\"formControls col-xs-8 col-sm-9 skin-minimal\">\n\t\t\t<div class=\"radio-box\">\n\t\t\t\t<input name=\"sex\" type=\"radio\" id=\"sex-1\" checked>\n\t\t\t\t<label for=\"sex-1\">\u7537</label>\n\t\t\t</div>\n\t\t\t<div class=\"radio-box\">\n\t\t\t\t<input type=\"radio\" id=\"sex-2\" name=\"sex\">\n\t\t\t\t<label for=\"sex-2\">\u5973</label>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"row cl\">\n\t\t<label class=\"form-label col-xs-4 col-sm-3\"><span class=\"c-red\">*</span>\u624b\u673a\uff1a</label>\n\t\t<div class=\"formControls col-xs-8 col-sm-9\">\n\t\t\t<input type=\"text\" class=\"input-text\" value=\"\" placeholder=\"\" id=\"phone\" name=\"phone\">\n\t\t</div>\n\t</div>\n\t<div class=\"row cl\">\n\t\t<label class=\"form-label col-xs-4 col-sm-3\"><span class=\"c-red\">*</span>\u90ae\u7bb1\uff1a</label>\n\t\t<div class=\"formControls col-xs-8 col-sm-9\">\n\t\t\t<input type=\"text\" class=\"input-text\" placeholder=\"@\" name=\"email\" id=\"email\">\n\t\t</div>\n\t</div>\n\t<div class=\"row cl\">\n\t\t<label class=\"form-label col-xs-4 col-sm-3\">\u89d2\u8272\uff1a</label>\n\t\t<div class=\"formControls col-xs-8 col-sm-9\"> <span class=\"select-box\" style=\"width:150px;\">\n\t\t\t<select class=\"select\" name=\"adminRole\" size=\"1\">\n\t\t\t\t<option value=\"0\">\u8d85\u7ea7\u7ba1\u7406\u5458</option>\n\t\t\t\t<option value=\"1\">\u603b\u7f16</option>\n\t\t\t\t<option value=\"2\">\u680f\u76ee\u4e3b\u8f91</option>\n\t\t\t\t<option value=\"3\">\u680f\u76ee\u7f16\u8f91</option>\n\t\t\t</select>\n\t\t\t</span> </div>\n\t</div>\n\t<div class=\"row cl\">\n\t\t<label class=\"form-label col-xs-4 col-sm-3\">\u5907\u6ce8\uff1a</label>\n\t\t<div class=\"formControls col-xs-8 col-sm-9\">\n\t\t\t<textarea name=\"\" cols=\"\" rows=\"\" class=\"textarea\"  placeholder=\"\u8bf4\u70b9\u4ec0\u4e48...100\u4e2a\u5b57\u7b26\u4ee5\u5185\" dragonfly=\"true\" onKeyUp=\"$.Huitextarealength(this,100)\"></textarea>\n\t\t\t<p class=\"textarea-numberbar\"><em class=\"textarea-length\">0</em>/100</p>\n\t\t</div>\n\t</div> -->\n\t<div class=\"row cl\">\n\t\t<div class=\"col-xs-8 col-sm-9 col-xs-offset-4 col-sm-offset-3\">\n\t\t\t<input class=\"btn btn-primary radius\" type=\"submit\" value=\"&nbsp;&nbsp;\u63d0\u4ea4&nbsp;&nbsp;\">\n\t\t</div>\n\t</div>\n\t</form>\n{/block}\n\n{block name=\"js\"}\n<!--\u8bf7\u5728\u4e0b\u65b9\u5199\u6b64\u9875\u9762\u4e1a\u52a1\u76f8\u5173\u7684\u811a\u672c-->\n<script type=\"text/javascript\" src=\"/static/admin/lib/jquery.validation/1.14.0/jquery.validate.js\"></script> \n<script type=\"text/javascript\" src=\"/static/admin/lib/jquery.validation/1.14.0/validate-methods.js\"></script> \n<script type=\"text/javascript\" src=\"/static/admin/lib/jquery.validation/1.14.0/messages_zh.js\"></script> \n<script type=\"text/javascript\">\n$(function(){\n\t$('.skin-minimal input').iCheck({\n\t\tcheckboxClass: 'icheckbox-blue',\n\t\tradioClass: 'iradio-blue',\n\t\tincreaseArea: '20%'\n\t});\n\t\n\t$(\"#form-admin-add\").validate({\n\t\trules:{\n\t\t\tname:{\n\t\t\t\trequired:true,\n\t\t\t\tminlength:2,\n\t\t\t\tmaxlength:6\n\t\t\t},\n\t\t\tpassword:{\n\t\t\t\trequired:true,\n\t\t\t},\n\t\t\tpassword2:{\n\t\t\t\trequired:true,\n\t\t\t\tequalTo: \"#password\"\n\t\t\t},\n\t\t\tsex:{\n\t\t\t\trequired:true,\n\t\t\t},\n\t\t\tphone:{\n\t\t\t\trequired:true,\n\t\t\t\tisPhone:true,\n\t\t\t},\n\t\t\temail:{\n\t\t\t\trequired:true,\n\t\t\t\temail:true,\n\t\t\t},\n\t\t\tadminRole:{\n\t\t\t\trequired:true,\n\t\t\t},\n\t\t},\n\t\tonkeyup:false,\n\t\tfocusCleanup:true,\n\t\tsuccess:\"valid\",\n\t\tsubmitHandler:function(form){\n\t\t\t$(form).ajaxSubmit({\n\t\t\t\ttype: 'post',\n\t\t\t\turl: \"{:url('admin/Category/save')}\",\n\t\t\t\tsuccess: function(data){\n\t\t\t\t\tif(data.code){\n\t\t\t\t\t\tlayer.msg('\u6dfb\u52a0\u6210\u529f!',{icon:1,time:1000});\n\t\t\t\t\t\tvar index = parent.layer.getFrameIndex(window.name);\n\t\t\t\t\t\tparent.$('.btn-refresh').click();\n\t\t\t\t\t\tparent.layer.close(index);\n\t\t\t\t\t}\n\t\t\t\t},\n                error: function(XmlHttpRequest, textStatus, errorThrown){\n\t\t\t\t\tlayer.msg('error!',{icon:1,time:1000});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n});\n</script> \n<!--/\u8bf7\u5728\u4e0a\u65b9\u5199\u6b64\u9875\u9762\u4e1a\u52a1\u76f8\u5173\u7684\u811a\u672c-->\n{/block}",
  "// Copyright 1998-2017 Epic Games, Inc. All Rights Reserved.\n\n#pragma once\n\n#include \"CoreTypes.h\"\n#include \"Internationalization/TextLocalizationManager.h\"\n\nclass FTextHistory;\n\n/** \n * Interface to the internal data for an FText.\n * Various derived types are optimized to reduce memory allocation overhead.\n */\nclass ITextData\n{\npublic:\n\tvirtual ~ITextData()\n\t{\n\t}\n\n\t/**\n\t * True if this text data owns its localized string pointer, and allows you to call GetMutableLocalizedString on it\n\t */\n\tvirtual bool OwnsLocalizedString() const = 0;\n\n\t/**\n\t * Get the string to use for display purposes.\n\t * This may have come from the localization manager, or may been generated at runtime (eg, via FText::AsNumber).\n\t */\n\tvirtual const FString& GetDisplayString() const = 0;\n\n\t/** \n\t * Get the string pointer that was retrieved from the text localization manager.\n\t * Text that was generated at runtime by default will not have one of these, and you must call Persist() to generate one.\n\t */\n\tvirtual FTextDisplayStringPtr GetLocalizedString() const = 0;\n\n\t/** \n\t * Get a mutable reference to the localized string associated with this text (used when loading/saving text).\n\t */\n\tvirtual FTextDisplayStringPtr& GetMutableLocalizedString() = 0;\n\n\t/**\n\t * Get the history associated with this text.\n\t */\n\tvirtual const FTextHistory& GetTextHistory() const = 0;\n\n\t/**\n\t * Get a mutable reference to the history associated with this text (used when loading/saving text).\n\t */\n\tvirtual FTextHistory& GetMutableTextHistory() = 0;\n\n\t/**\n\t * Persist this text so that it can be stored in the localization manager.\n\t */\n\tvirtual void PersistText() = 0;\n\n\t/**\n\t * Get the global history revision associated with this text instance.\n\t */\n\tvirtual uint16 GetGlobalHistoryRevision() const = 0;\n\n\t/**\n\t * Get the local history revision associated with this text instance.\n\t */\n\tvirtual uint16 GetLocalHistoryRevision() const = 0;\n\n\t/**\n\t * Assign a new history object to this instance.\n\t * @note: There is no RTTI on these types, so it is your responsibility to make sure that the history object you're assigning is of the correct type!\n\t */\n\ttemplate <typename THistoryType>\n\tvoid SetTextHistory(THistoryType&& InHistory)\n\t{\n\t\t// Need to cast to avoid slicing data\n\t\tstatic_cast<THistoryType&>(GetMutableTextHistory()) = Forward<THistoryType>(InHistory);\n\t}\n};\n",
  "# TODO 1.2.0 Release\n\n## Already DONE\n- [X] update to.net #4O\n- [X] Add allow.auto.create.topics in StreamConfig property #47\n- [X] Add ProtobufSerDes which interact with Confluent Schema Registry #64\n\n## 1.2.0 - RC1\n- [ ] Changelog topic\n- [ ] Restore changelog state store (StateRestoreCallbackAdapter)\n- [X] Rocks DB state implementation\n\n## 1.2.0 - RC2\n- [ ] Repartition topic\n- [ ] Restore repartiton topic\n- [ ] Consumer Incremental Rebalance Protocol",
  "cwnmyr\n======\n\n[![Build Status](https://ci.quinn.tk/job/cwnmyr/badge/icon)](https://ci.quinn.tk/job/cwnmyr/)\n[![Documentation Status](http://inch-ci.org/github/keeganquinn/cwnmyr.svg?branch=master)](http://inch-ci.org/github/keeganquinn/cwnmyr)\n\ncwnmyr is an open-source community wireless network management platform\ndeveloped to meet the needs of the Personal Telco Project.\n\nSee also: http://personaltelco.net/wiki/CwnmyrProject\n\nThis is a Rails application, developed with PostgreSQL as a database. It can\nbe run in any server or container that supports Rails, and should work with\nany Ruby and DBMS supported by Rails.\n\nIn addition to the Ruby and JavaScript dependencies, which are described in\n`Gemfile` and `package.json`, GraphViz must be installed.\n\n\nStatus\n------\n\nThis software is running in production, with continued development ongoing as\ntime and resources allow. Several public-facing live instances are operational.\n\n * Personal Telco live instance: https://nodes.personaltelco.net/\n * Staging deployment: https://cwnmyr-staging.quinn.tk/\n\nFeedback, bug reports, and pull requests are very welcome.\n\n\nConfiguration\n-------------\n\nIn addition to the standard Rails configuration options, this app allows\nseveral common settings to be controlled through the environment:\n\n * `DOMAIN_NAME`: Host part of the URL the instance is hosted at. Required.\n * `SECRET_KEY_BASE`: Secret key for the instance. Required.\n * `PORT`: TCP port to listen for HTTP requests. Default is 3000.\n * `BIND`: Unix socket to listen for HTTP requests. Supersedes `PORT` if set.\n * `GMAPS_API_KEY`: Google Maps API key. Required.\n * `PTP_API_KEY`: PTP API key. Only needed to import confidential data.\n * `SMTP_HOST`: SMTP host for outgoing mail. Uses sendmail if not set.\n * `SMTP_USER`: Username for outgoing SMTP authentication. Required for SMTP.\n * `SMTP_PASS`: Password for outgoing SMTP authentication. Required for SMTP.\n * `FACEBOOK_APP_ID`: App ID to use for Facebook authentication.\n * `FACEBOOK_APP_SECRET`: Secret to use for Facebook authentication.\n * `GOOGLE_CLIENT_ID`: Client ID to use for Google authentication.\n * `GOOGLE_CLIENT_SECRET`: Secret to use for Google authentication.\n",
  "@extends('layout')\n\n@section('content')\n<nav>\n  <a href=\"{{ $product->id }}/edit\">Edit</a>\n</nav>\n    <div class=\"content\">\n        <h3>{{ $product->name }}</h3>\n        <ul>\n          <li>Category: {{ $categories->name }}</li>\n          <li>Price: ${{ $product->price }}</li>\n        </ul>\n    </div>\n@endsection",
  "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n#\n# Simple XMPP bot to query for the last entries in the CVE database\n#\n# current commands supported are:\n#\n# last <max>\n# cvetweet <max>\n# browse\n# search <vendor>\\<product>\n# get <cve>\n#\n# You need to add the XMPP bot in your roster if you want to communicate\n# with it.\n#\n# Software is free software released under the \"Modified BSD license\"\n#\n# Copyright (c) 2012-2013 \tAlexandre Dulaunoy - a@foo.be\n# Copyright (c) 2015\t \tPieter-Jan Moreels - pieterjan.moreels@gmail.com\n\n# Imports\nimport getpass\nimport json\nimport logging\nimport os\nimport sleekxmpp\nimport sys\nrunPath = os.path.dirname(os.path.realpath(__file__))\nsys.path.append(os.path.join(runPath, \"..\"))\n\n# BSON MongoDB include ugly stuff that needs to be processed for standard JSON\nfrom bson     import json_util\nfrom optparse import OptionParser\n\nfrom web.api  import API\n\nif sys.version_info < (3, 0):\n    from sleekxmpp.util.misc_ops import setdefaultencoding\n    setdefaultencoding('utf8')\nelse:\n    raw_input = input\n\n\nrankinglookup = True\n\nhelpmessage  = \"last [<n>]                - last n cve entries (default: 10) (output: JSON)\\n\"\nhelpmessage += \"get <cve-id>              - get cve info (output: JSON)\\n\"\nhelpmessage += \"browse                    - list of vendors (output: JSON)\\n\"\nhelpmessage += \"browse <vendor>           - list of products of vendor (output: JSON)\\n\"\nhelpmessage += \"search <vendor> <product> - list of cves for product (output: JSON)\\n\"\nhelpmessage += \"cvetweet <n>              - summary of <n> last cve entries (output: Text)\\n\"\nhelpmessage += \"cvetweet <cve-id>         - summary of cve <cve-id> (output: Text) \\n\\n\"\nhelpmessage += \"For more info about cve-search: http://adulau.github.com/cve-search/\"\n\napi = API()\n\ndef cvesearch(query=\"last\", option=None):\n    def last(option):\n        try:\n            limit = int(option) if option else 10\n        except:\n            return \"Please specify the number of CVEs\"\n        \n        if limit > opts.max or limit < 1:\n            return \"Request not in range 0-%d\" % opts.max\n        return api.api_last(limit)\n    def cve(option):\n        if option is None:\n            return \"A cve-id must be specified\"\n        return api.api_cve(option)\n\n\n    if   query in [\"last\", \"recent\"]:    return last(option)\n    elif query in [\"get\", \"cve\"]:        return cve(option)\n    elif query in [\"browse\", \"vendor\"]:  return api.api_browse(option)\n    elif query in [\"search\", \"product\"]:\n        parts = option.split()\n        if len(parts) < 2:\n            return \"Usage: search <vendor> <product>\"\n        return api.api_search(parts[0], parts[1])\n    elif query in [\"cvetweet\", \"tweet\"]:\n        text = \"\"\n        cves = []\n        if option.lower().startswith(\"cve-\"): cves.append(cve(option))\n        else:                                 cves = last(option)\n\n        for t in cves:\n            text += str(t['id']) + \", \" + str(t['summary']) + \" \" + \", \".join(t['references']) + \"\\n\"\n        return text\n    else:\n        return helpmessage\n\nclass CVEBot(sleekxmpp.ClientXMPP):\n\n    def __init__(self, jid, password):\n        sleekxmpp.ClientXMPP.__init__(self, jid, password)\n        if opts.ipv4 is False:\n            self.use_ipv6 = True\n        else:\n            self.use_ipv6 = False\n        self.add_event_handler(\"session_start\", self.start)\n        self.add_event_handler(\"message\", self.message)\n        self.add_event_handler(\"ssl_invalid_cert\", self.ssl_invalid_cert)\n\n    def format_message(self, message):\n        if type(message) in [dict, list]:\n            message = json.dumps(message, sort_keys=True, indent=4, default=json_util.default)\n        else:\n            message = str(message)\n        return message\n\n    def ssl_invalid_cert(self, cert):\n        return\n\n    def start(self, event):\n        self.send_presence()\n        self.get_roster()\n\n    def message(self, msg):\n        if msg['type'] in ('chat', 'normal'):\n            q = (msg['body']).split(' ', 1)\n            option = q[1] if len(q) == 2 else None\n\n            reply = cvesearch(query=q[0], option=option)\n            msg.reply(self.format_message(reply)).send()\n\nif __name__ == '__main__':\n    optp = OptionParser()\n    optp.add_option('-q', '--quiet', help='set logging to ERROR',\n                    action='store_const', dest='loglevel',\n                    const=logging.ERROR, default=logging.INFO)\n    optp.add_option('-d', '--debug', help='set logging to DEBUG',\n                    action='store_const', dest='loglevel',\n                    const=logging.DEBUG, default=logging.INFO)\n    optp.add_option('-v', '--verbose', help='set logging to COMM',\n                    action='store_const', dest='loglevel',\n                    const=5, default=logging.INFO)\n    optp.add_option('-n', '--cpenamelookup', help='CPE name lookup',\n                    action='store_false', dest='cpelookup', default=True)\n    optp.add_option(\"-j\", \"--jid\", dest=\"jid\",\n                    help=\"JID to use\")\n    optp.add_option('-m', '--max', dest='max', type='int', default=20, help='Maximum elements to return (default: 20)')\n    optp.add_option(\"-4\", \"--ipv4\", action='store_true', dest=\"ipv4\",\n                    default=False, help=\"Force IPv4 only\")\n    optp.add_option(\"-p\", \"--password\", dest=\"password\",\n                    help=\"password to use\")\n\n    opts, args = optp.parse_args()\n\n    # Setup logging.\n    logging.basicConfig(level=opts.loglevel,\n                        format='%(levelname)-8s %(message)s')\n\n    if opts.jid is None:\n        opts.jid = raw_input(\"Username: \")\n    if opts.password is None:\n        opts.password = getpass.getpass(\"Password: \")\n    # Basic skeleton based on CVEBot from sleekxmpp library\n    xmpp = CVEBot(opts.jid, opts.password)\n    xmpp.register_plugin('xep_0030')  # Service Discovery\n    xmpp.register_plugin('xep_0004')  # Data Forms\n    xmpp.register_plugin('xep_0060')  # PubSub\n    xmpp.register_plugin('xep_0199')  # XMPP Ping\n\n    if xmpp.connect():\n        xmpp.process(block=True)\n        print(\"Done\")\n    else:\n        print(\"Unable to connect.\")\n",
  ".svelte-sg04hs.foo,.svelte-sg04hs.foo{color:red}\n/*# sourceMappingURL=output.css.map */",
  "/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport expect from '@kbn/expect';\n\nimport { FtrProviderContext } from '../../ftr_provider_context';\n\nexport default function ({ getService, getPageObjects }: FtrProviderContext) {\n  const testSubjects = getService('testSubjects');\n  const retry = getService('retry');\n  const esArchiver = getService('esArchiver');\n  const kibanaServer = getService('kibanaServer');\n  const PageObjects = getPageObjects(['dashboard', 'common']);\n  const browser = getService('browser');\n  const globalNav = getService('globalNav');\n\n  describe('embed mode', () => {\n    const urlParamExtensions = [\n     'show-top-menu=true',\n     'show-query-input=true',\n     'show-time-filter=true',\n      'hide-filter-bar=true',\n    ];\n\n    before(async () => {\n      await esArchiver.load('dashboard/current/kibana');\n      await kibanaServer.uiSettings.replace({\n        defaultIndex: '0bf35f60-3dc9-11e8-8660-4d65aa086b3c',\n      });\n      await PageObjects.common.navigateToApp('dashboard');\n      await PageObjects.dashboard.preserveCrossAppState();\n      await PageObjects.dashboard.loadSavedDashboard('few panels');\n    });\n\n    it('hides the chrome', async () => {\n      const globalNavShown = await globalNav.exists();\n      expect(globalNavShown).to.be(true);\n\n      const currentUrl = await browser.getCurrentUrl();\n      const newUrl = currentUrl + '&embed=true';\n      // Embed parameter only works on a hard refresh.\n      const useTimeStamp = true;\n      await browser.get(newUrl.toString(), useTimeStamp);\n\n      await retry.try(async () => {\n        const globalNavHidden =!(await globalNav.exists());\n        expect(globalNavHidden).to.be(true);\n      });\n    });\n\n    it('shows or hides elements based on URL params', async () => {\n      await testSubjects.missingOrFail('top-nav');\n      await testSubjects.missingOrFail('queryInput');\n      await testSubjects.missingOrFail('superDatePickerToggleQuickMenuButton');\n      await testSubjects.existOrFail('showFilterActions');\n\n      const currentUrl = await browser.getCurrentUrl();\n      const newUrl = [currentUrl].concat(urlParamExtensions).join('&');\n      // Embed parameter only works on a hard refresh.\n      const useTimeStamp = true;\n      await browser.get(newUrl.toString(), useTimeStamp);\n\n      await testSubjects.existOrFail('top-nav');\n      await testSubjects.existOrFail('queryInput');\n      await testSubjects.existOrFail('superDatePickerToggleQuickMenuButton');\n      await testSubjects.missingOrFail('showFilterActions');\n    });\n\n    after(async function () {\n      const currentUrl = await browser.getCurrentUrl();\n      const replaceParams = ['', 'embed=true'].concat(urlParamExtensions).join('&');\n      const newUrl = currentUrl.replace(replaceParams, '');\n      // First use the timestamp to cause a hard refresh so the new embed parameter works correctly.\n      let useTimeStamp = true;\n      await browser.get(newUrl.toString(), useTimeStamp);\n      // Then get rid of the timestamp so the rest of the tests work with state and app switching.\n      useTimeStamp = false;\n      await browser.get(newUrl.toString(), useTimeStamp);\n    });\n  });\n}\n",
  "package com.victorlh.spotify.apiclient.models.pagination;\n\nimport com.victorlh.spotify.apiclient.models.objects.CategoryObject;\nimport com.victorlh.spotify.apiclient.models.pagination.PagingObject;\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\n\n@Data\n@AllArgsConstructor\n@NoArgsConstructor\npublic class ListCategoriesPagingObject {\n\n\tprivate PagingObject<CategoryObject> categories;\n}\n",
  "// Copyright 2017 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\npackage cmd\n\nimport (\n\t\"fmt\"\n\t\"io\"\n\n\t\"github.com/golang/glog\"\n\t\"github.com/spf13/cobra\"\n\n\t\"github.com/slamdev/k8s-multicluster-ingress/app/kubemci/pkg/gcp/cloudinterface\"\n\tgcplb \"github.com/slamdev/k8s-multicluster-ingress/app/kubemci/pkg/gcp/loadbalancer\"\n\tgcputils \"github.com/slamdev/k8s-multicluster-ingress/app/kubemci/pkg/gcp/utils\"\n)\n\nvar (\n\tgetStatusShortDescription = \"Get the status of an existing multicluster ingress.\"\n\tgetStatusLongDescription  = `Get the status of an existing multicluster ingress.\n\n\tTakes as input the name of the load balancer and prints its status (ip address, list of clusters it is spread to, etc).\n\t`\n)\n\ntype getStatusOptions struct {\n\t// Name of the load balancer.\n\t// Required.\n\tLBName string\n\t// Name of the GCP project in which the load balancer should be configured.\n\t// Required\n\t// TODO(nikhiljindal): This should be optional. Figure it out from gcloud settings.\n\tGCPProject string\n}\n\nfunc newCmdGetStatus(out, err io.Writer) *cobra.Command {\n\tvar options getStatusOptions\n\n\tcmd := &cobra.Command{\n\t\tUse:   \"get-status [lbname]\",\n\t\tShort: getStatusShortDescription,\n\t\tLong:  getStatusLongDescription,\n\t\t// TODO(nikhiljindal): Add an example.\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tif err := validateGetStatusArgs(&options, args); err!= nil {\n\t\t\t\tfmt.Println(err)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif err := runGetStatus(&options, args); err!= nil {\n\t\t\t\tfmt.Println(\"Error in getting status of the load balancer:\", err)\n\t\t\t}\n\t\t},\n\t}\n\taddGetStatusFlags(cmd, &options)\n\treturn cmd\n}\n\nfunc addGetStatusFlags(cmd *cobra.Command, options *getStatusOptions) error {\n\t// TODO(nikhiljindal): Add a short flag \"-p\" if it seems useful.\n\tcmd.Flags().StringVarP(&options.GCPProject, \"gcp-project\", \"\", options.GCPProject, \"[optional] name of the gcp project. Is fetched using gcloud config get-value project if unset here\")\n\t// TODO Add a verbose flag that turns on glog logging.\n\treturn nil\n}\n\nfunc validateGetStatusArgs(options *getStatusOptions, args []string) error {\n\tif len(args)!= 1 {\n\t\treturn fmt.Errorf(\"unexpected args: %v. Expected one arg as name of load balancer\", args)\n\t}\n\t// Verify that the project is available somewhere.\n\tif options.GCPProject == \"\" {\n\t\tproject, err := gcputils.GetProjectFromGCloud()\n\t\tif project == \"\" || err!= nil {\n\t\t\treturn fmt.Errorf(\"unexpected cannot determine GCP project. Either set --gcp-project flag, or set a default project with gcloud such that gcloud config get-value project returns that\")\n\t\t}\n\t\tglog.V(2).Infof(\"Got project from gcloud: %s.\", project)\n\t\toptions.GCPProject = project\n\t}\n\treturn nil\n}\n\nfunc runGetStatus(options *getStatusOptions, args []string) error {\n\toptions.LBName = args[0]\n\n\tcloudInterface, err := cloudinterface.NewGCECloudInterface(options.GCPProject)\n\tif err!= nil {\n\t\treturn fmt.Errorf(\"error in creating cloud interface: %s\", err)\n\t}\n\n\tlbs, err := gcplb.NewLoadBalancerSyncer(options.LBName, nil /* clientset */, cloudInterface, options.GCPProject)\n\tif err!= nil {\n\t\treturn err\n\t}\n\tstatus, err := lbs.PrintStatus()\n\tif err!= nil {\n\t\treturn err\n\t}\n\tfmt.Println(status)\n\treturn nil\n}\n",
  "#include \"trait.h\"\n\n// Constructor\nTrait::Trait(QString traitName_, int numUnits_, int tierCurrent_, int tierTotal_)\n{\n\n    traitName = traitName_;\n    numUnits = numUnits_;\n    tierCurrent = tierCurrent_;\n    tierTotal = tierTotal_;\n\n}\n\n\n// Define < operator to sort qlist\nbool Trait::operator <(const Trait &traitObj) const{\n    return numUnits < traitObj.numUnits;\n}\n",
  "lm_check:\n    pusha\n\n    pushfd\n    pop eax\n    mov ecx, eax\n\n    xor eax, 1 << 21\n    \n    push eax\n    popfd\n\n    pushfd\n    pop eax\n\n    xor eax, ecx\n    jz.done\n\n    mov eax, 0x80000000\n    cpuid\n    cmp eax, 0x80000001\n    jb.done\n\n    mov eax, 0x80000001\n    cpuid\n    test edx, 1 << 29\n    jz.done\n\n    mov si, STR_LM_COMPAT\n    call printf\n    popa\n    ret\n\n   .done:\n        popa\n        mov si, STR_NO_LM\n        call printf\n        jmp $ ",
  "package fpc.aoc.day1;\n\nimport org.junit.jupiter.api.Assertions;\nimport org.junit.jupiter.api.Test;\n\npublic class TestDay1Solver {\n\n    public static final String TEST_INPUT = \"\"\"\n            199\n            200\n            208\n            210\n            200\n            207\n            240\n            269\n            260\n            263\n            \"\"\";\n\n    @Test\n    public void testExampleDay1Part1() {\n        final long actual = new Day1Part1Solver().createProblem(TEST_INPUT).solve();\n        Assertions.assertEquals(7,actual);\n    }\n\n    @Test\n    public void testExampleDay1Part2() {\n        final long actual = new Day1Part2Solver().createProblem(TEST_INPUT).solve();\n        Assertions.assertEquals(5,actual);\n    }\n}\n",
  "// tested using Scala compiler version 2.4.0-RC1 -- (c) 2002-2011 LAMP/EPFL\n\n// Many thanks to all at LAMP for the work that goes into Scala.\n\n\nclass A {}\n\ntrait B[T <: B[T]] { self: T => }\n\nabstract class C extends A with B[C]\n{\n    protected val data: List[Int]\n}\n\nclass E extends D\n{\n    val data = Nil\n}\n\nclass F extends D\n{\n    val data = Nil\n}\n\nabstract class D extends C with B[D] {}\n",
  "# This program is free software; you can redistribute it and/or modify it under\n# the terms of the GNU Lesser General Public License as published by the Free Software\n# Foundation; either version 2 of the License, or (at your option) any later\n# version.\n#\n# This program is distributed in the hope that it will be useful, but WITHOUT\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n# FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.\n#\n# You should have received a copy of the GNU Lesser General Public License along with\n# this program; if not, write to the Free Software Foundation, Inc.,\n# 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n# copyright 2003-2010 LOGILAB S.A. (Paris, FRANCE), all rights reserved.\n# contact http://www.logilab.fr/ -- mailto:contact@logilab.fr\n# copyright 2003-2010 Sylvain Thenault, all rights reserved.\n# contact mailto:thenault@gmail.com\n#\n# This file is part of logilab-astng.\n#\n# logilab-astng is free software: you can redistribute it and/or modify it\n# under the terms of the GNU Lesser General Public License as published by the\n# Free Software Foundation, either version 2.1 of the License, or (at your\n# option) any later version.\n#\n# logilab-astng is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License\n# for more details.\n#\n# You should have received a copy of the GNU Lesser General Public License along\n# with logilab-astng. If not, see <http://www.gnu.org/licenses/>.\n\"\"\"This module contains some mixins for the different nodes.\n\n\"\"\"\n\nfrom logilab.astng import (ASTNGBuildingException, InferenceError,\n                           NotFoundError)\nfrom logilab.astng.bases import BaseClass\n\n# /!\\ We cannot build a StmtNode(NodeNG) class since modifying \"__bases__\"\n# in \"nodes.py\" has to work *both* for old-style and new-style classes,\n# but we need the StmtMixIn for scoped nodes\n\nclass StmtMixIn(BaseClass):\n    \"\"\"StmtMixIn used only for a adding a few attributes\"\"\"\n    is_statement = True\n\n    def replace(self, child, newchild):\n        sequence = self.child_sequence(child)\n        newchild.parent = self\n        child.parent = None\n        sequence[sequence.index(child)] = newchild\n\n    def next_sibling(self):\n        \"\"\"return the next sibling statement\"\"\"\n        stmts = self.parent.child_sequence(self)\n        index = stmts.index(self)\n        try:\n            return stmts[index +1]\n        except IndexError:\n            pass\n\n    def previous_sibling(self):\n        \"\"\"return the previous sibling statement\"\"\"\n        stmts = self.parent.child_sequence(self)\n        index = stmts.index(self)\n        if index >= 1:\n            return stmts[index -1]\n\n\nclass BlockRangeMixIn(BaseClass):\n    \"\"\"override block range \"\"\"\n    def set_line_info(self, lastchild):\n        self.fromlineno = self.lineno\n        self.tolineno = lastchild.tolineno\n        self.blockstart_tolineno = self._blockstart_toline()\n\n    def _elsed_block_range(self, lineno, orelse, last=None):\n        \"\"\"handle block line numbers range for try/finally, for, if and while\n        statements\n        \"\"\"\n        if lineno == self.fromlineno:\n            return lineno, lineno\n        if orelse:\n            if lineno >= orelse[0].fromlineno:\n                return lineno, orelse[-1].tolineno\n            return lineno, orelse[0].fromlineno - 1\n        return lineno, last or self.tolineno\n\nclass FilterStmtsMixin(object):\n    \"\"\"Mixin for statement filtering and assignment type\"\"\"\n\n    def _get_filtered_stmts(self, _, node, _stmts, mystmt):\n        \"\"\"method used in _filter_stmts to get statemtents and trigger break\"\"\"\n        if self.statement() is mystmt:\n            # original node's statement is the assignment, only keep\n            # current node (gen exp, list comp)\n            return [node], True\n        return _stmts, False\n\n    def ass_type(self):\n        return self\n\n\nclass AssignTypeMixin(object):\n\n    def ass_type(self):\n        return self\n\n    def _get_filtered_stmts(self, lookup_node, node, _stmts, mystmt):\n        \"\"\"method used in filter_stmts\"\"\"\n        if self is mystmt:\n            return _stmts, True\n        if self.statement() is mystmt:\n            # original node's statement is the assignment, only keep\n            # current node (gen exp, list comp)\n            return [node], True\n        return _stmts, False\n\n\nclass ParentAssignTypeMixin(AssignTypeMixin):\n\n    def ass_type(self):\n        return self.parent.ass_type()\n\n\n\nclass FromImportMixIn(BaseClass, FilterStmtsMixin):\n    \"\"\"MixIn for From and Import Nodes\"\"\"\n\n    def _infer_name(self, frame, name):\n        return name\n\n    def do_import_module(self, modname):\n        \"\"\"return the ast for a module whose name is <modname> imported by <self>\n        \"\"\"\n        # handle special case where we are on a package node importing a module\n        # using the same name as the package, which may end in an infinite loop\n        # on relative imports\n        # XXX: no more needed?\n        mymodule = self.root()\n        level = getattr(self, 'level', None) # Import as no level\n        if mymodule.absolute_modname(modname, level) == mymodule.name:\n            # FIXME: I don't know what to do here...\n            raise InferenceError('module importing itself: %s' % modname)\n        try:\n            return mymodule.import_module(modname, level=level)\n        except (ASTNGBuildingException, SyntaxError):\n            raise InferenceError(modname)\n\n    def real_name(self, asname):\n        \"\"\"get name from 'as' name\"\"\"\n        for index in range(len(self.names)):\n            name, _asname = self.names[index]\n            if name == '*':\n                return asname\n            if not _asname:\n                name = name.split('.', 1)[0]\n                _asname = name\n            if asname == _asname:\n                return name\n        raise NotFoundError(asname)\n\n\n\n",
  "#!/usr/bin/env ruby\n\n@sample = Array(1..10)\n\npid = Process.fork do\n        @sample.delete_at(-1)\n        puts \"Child:  #@sample\"\n      end\n\nProcess.wait(pid)\nputs \"Parent: #@sample\"\n",
  "/*\n *  EEPROMWearLeveler.cpp\n *  Created by Nabil Tewolde, May 14, 2012.\n *  Released into the public domain.\n * \n *  This library performs EEPROM wear leveling by spreading out writes across\n *  multiple address by following the techniques documented by Atmel\n *  (http://www.atmel.com/Images/doc2526.pdf). It is not memory efficient,\n *  but provides guaranteed reliability for a variable number of paramaters.\n *\n *  Facts:\n *\n *  AVR_EEPROM_SIZE/4 is the maximum number of variables that can be used with a\n *  guarantee of 200 000 erase/write cycles each. Any more than that and the \n *  library reverts back to one variable per address space providing no benefit\n *\n *  The maximum number of writes with 1 variable is 100 000 * (AVR_EEPROM_SIZE/2)\n *\n *  If the EEPROM size is not multiple of the number of variables there will\n *  be wasted space.\n *\n *\n *  The EEPROM in AVRs are rated for 100 000 erase/write cycles. By alternating \n *  writes across two memory address this number increase to 200 000. Three \n *  memory addresses gives you 300 000 writes and so on. To automate this \n *  process a status buffer is used to keep track of where the next write should\n *  be. The status buffer must also be the same length as the parameter buffer \n *  because wear leveling must be performed on it as well. When the first value, \n *  7, is written to the parameter buffer the corresponding element in the \n *  status buffer is incremented as shown in the figure below.\n *\n *  Note: The status buffer must be initialized to zero by calling clear() before \n *        any writes occur.\n *\n *      <------------------- EEPROM -------------------->  \n *      0                                               N\n *      -------------------------------------------------\n *          Parameter Buffer    |     Status Buffer     |\n *      -------------------------------------------------\n *\n *      Initial state.\n *      [ 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 ]\n *\n *      First write is a 7. This corresponding position\n *      in the status buffer is incremented.\n *      [ 7 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 ]\n *\n *      A second value, 4, is written to the parameter buffer \n *      and the second element in the status buffer becomes\n *      the previous element, 1 in this case, plus 1.\n *      [ 7 | 4 | 0 | 0 | 0 | 0 | 1 | 2 | 0 | 0 | 0 | 0 ]\n *\n *      And so on\n *      [ 7 | 4 | 9 | 0 | 0 | 0 | 1 | 2 | 3 | 0 | 0 | 0 ]\n *\n *  \n *  If the previous element + 1 does not equal the next element then that is\n *  where the next write should occur. Take a look at some examples.\n * \n *      Compute the differences by starting at the first\n *      element and wrapping around. \n *      1st element: 0 + 1 = 1 = 1st element (move on)\n *      2nd element: 1 + 1 = 2 = 2nd element (move on)\n *      3rd element: 2 + 1 = 3 = 3rd element (move on)\n *      4th element: 3 + 1 = 4!= 4th element (next write occurs here)\n *\n *      [ 7 | 4 | 9 | 0 | 0 | 0 | 1 | 2 | 3 | 0 | 0 | 0 ]\n *                                            ^\n *                                            |\n *\n *      This also works on the first element because it is\n *      a circular buffer.\n *      x = don't care\n *      1st element: 6 + 1 = 7!= first element (next write occurs here)\n *\n *      [ x | x | x | x | x | x | 1 | 2 | 3 | 4 | 5 | 6 ]\n *                                ^\n *                                | \n *\n *      Another edge case to consider is when the incrementing values\n *      wrap around at 256 because we are writing bytes. With the\n *      following buffer we know the next write is at the 3rd element \n *      because 255 + 1 = 0!= 250 assuming we are using byte arithmetic.\n *      \n *      [ x | x | x | x | x | x | 254 | 255 | 250 | 251 | 252 | 253 ]\n *                                             ^\n *                                             | \n *      \n *      After we write at element 3 the status buffer is incremented \n *      to the next value using byte arithmetic and looks like this.\n *      255 + 1 = 0\n *      [ x | x | x | x | x | x | 254 | 255 |  0  | 251 | 252 | 253 ]\n *\n *      Doing the math we see that element 4 is next to be written to.\n *      1st element: 253 + 1 = 254 = 1st element (move on)\n *      2nd element: 254 + 1 = 255 = 2nd element (move on)\n *      3rd element: 255 + 1 = 0 = 3rd element (move on)\n *      4rd element: 0 + 1 = 1!= 4th element  (next write occurs here)\n *                                             ^\n *                                             |\n\n [ x | x | x | x ^ x | x | 1 | 2 ^ 3 | 4 | 5 | 6 ]\n\n */\n\n//#include \"Arduino.h\"\n//#include <../EEPROM/EEPROM.h>\n#include \"EEPROMWearLeveler.h\"\n\n#ifdef DEBUG\nEEPROMClass EEPROM;\n#endif\n\nint AVR_EEPROM_SIZE = 32;\n\nEEPROMWearLeveler::EEPROMWearLeveler( uint16_t num_of_vars )\n{\n  _num_of_vars = num_of_vars;\n\n  _buffer_len = ( AVR_EEPROM_SIZE / 2 ) / _num_of_vars;\n\n  //if ( (_buffer_len % 256) == 0 )\n  //  _buffer_len -= 1;\n\n  if ( _buffer_len <= (uint16_t)1 )\n  {\n    // Revert back to using the entire EEPROM since we would get\n    // no benefits with a buffer length of 1\n    _num_of_vars = AVR_EEPROM_SIZE;\n    _buffer_len = 1;\n  }\n\n  std::cout << \"_buffer_len: \" << _buffer_len << std::endl;\n  std::cout << \"_num_of_vars: \" << _num_of_vars << std::endl;\n  std::cout << std::endl;\n    \n}\n\nvoid EEPROMWearLeveler::clear()\n{\n  for (int i = 0; i < AVR_EEPROM_SIZE; i++)\n  {\n    EEPROM.write(i, 0);\n  }  \n}\n\nuint8_t EEPROMWearLeveler::read( uint16_t address )\n{\n  if ( _num_of_vars == AVR_EEPROM_SIZE )\n  {\n    // Revert back to EEPROM class if the nubmer of variables is\n    // greater than AVR_EEPROM_SIZE/4\n    return EEPROM.read( address );\n  }\n  else\n  {\n    uint16_t write_offset = findNextWriteAddress( address );\n    uint16_t pb_start_addr = parameterBufferAddress( address );\n\n    uint16_t read_addr = pb_start_addr + write_offset;\n    if ( read_addr == pb_start_addr )\n    {\n      std::cout << read_addr << \" BBBBBBBB\\n\";      \n      read_addr += _buffer_len - 1;\n    }\n    else\n    {\n      read_addr -= 1;\n      std::cout << \"AAAAAA\\n\";\n    }\n    std::cout << \"read address: \" << read_addr << std::endl;\n    std::cout << \"pb_start_addr: \" << pb_start_addr << std::endl;\n    std::cout << \"write_offset: \" << write_offset << std::endl;\n    std::cout << \"address: \" << address << std::endl;\n\n    return EEPROM.read( read_addr );  \n  }\n}\n\nuint16_t EEPROMWearLeveler::statusBufferAddress( int address ) \n{\n  return ( ( (address + 1) * _buffer_len * 2 ) - _buffer_len );  \n}\n\nuint16_t EEPROMWearLeveler::parameterBufferAddress( int address ) \n{\n  return ( address * _buffer_len * 2 ) ;  \n}\n\nuint16_t EEPROMWearLeveler::findNextWriteAddress( int address )\n{",
  "use std::{\n    collections::{HashMap, HashSet},\n    error::Error,\n    io::{self, Read},\n};\n\ntype Result<ContentT> = std::result::Result<ContentT, Box<dyn Error>>;\ntype PolymerUnit = u8;\n\nfn main() -> Result<()> {\n    let mut input = Vec::new();\n    io::stdin().read_to_end(&mut input)?;\n\n    let polymer_length = run_polymer_reaction(&input)?;\n    println!(\"{}\", polymer_length);\n\n    let (symbol, polymer_length) = find_broken_unit_type(&input)?;\n    println!(\n        \"Reached minimal polymer length of {} as we removed {}\",\n        polymer_length, symbol as char\n    );\n\n    Ok(())\n}\n\nfn run_polymer_reaction(polymer: &[PolymerUnit]) -> Result<usize> {\n    let mut polymer = Vec::from(polymer);\n\n    loop {\n        let reaction_input_length = polymer.len();\n\n        let mut reaction_input = polymer.into_iter().peekable();\n        polymer = vec![];\n\n        while let Some(byte) = reaction_input.next() {\n            match reaction_input.peek() {\n                None => polymer.push(byte),\n                Some(&next_byte) => {\n                    let unit_distance = byte.wrapping_sub(next_byte);\n                    let should_react = unit_distance == 32 || unit_distance == 224;\n\n                    if should_react {\n                        reaction_input.next();\n                    } else {\n                        polymer.push(byte)\n                    }\n                }\n            }\n        }\n\n        if polymer.len() == reaction_input_length {\n            break;\n        }\n    }\n\n    Ok(polymer.len())\n}\n\nfn find_broken_unit_type(polymer: &[PolymerUnit]) -> Result<(PolymerUnit, usize)> {\n    let mut filter_results = HashMap::new();\n\n    let unit_types: HashSet<(PolymerUnit, PolymerUnit)> = polymer\n       .iter()\n       .map(|&unit| (unit.to_ascii_lowercase(), unit.to_ascii_uppercase()))\n       .collect();\n\n    for (symbol_lowercase, symbol_uppercase) in unit_types {\n        let filtered_polymer: Vec<PolymerUnit> = polymer\n           .iter()\n           .filter(|&&byte| byte!= symbol_lowercase && byte!= (symbol_uppercase))\n           .cloned()\n           .collect();\n\n        let polymer_length = run_polymer_reaction(&filtered_polymer)?;\n        filter_results.insert(symbol_lowercase, polymer_length);\n    }\n\n    let (&symbol, &polymer_length) = filter_results\n       .iter()\n       .min_by_key(|(_, &polymer_length)| polymer_length)\n       .expect(\"This map must always contain as many values as unit types.\");\n\n    Ok((symbol, polymer_length))\n}\n",
  "\"\"\"\nRequirements:\n    \u5982\u9700\u8fd0\u884c\u672c\u6a21\u5757, \u8bf7\u5148\u5b89\u88c5 Qt 5.0+ (\u63a8\u8350 5.15) \u5b8c\u6574\u7248.\n    \u672c\u6a21\u5757\u6240\u7528\u5230\u7684\u79bb\u7ebf\u6587\u4ef6\u8bfb\u53d6\u81ea:\n        \"{YourQtProgram}/Docs/Qt-{version}/qtdoc/qmltypes.html\".\n\"\"\"\nimport re\nfrom collections import defaultdict\n\nfrom bs4 import BeautifulSoup\nfrom lk_logger import lk\nfrom lk_utils import read_and_write\n\n\ndef main(file_i, file_o):\n    \"\"\"\n    \n    Args:\n        file_i: '~/blueprint/resources/no2_all_qml_types.html'. \u8be5\u6587\u4ef6\u88ab\u6211\u4e8b\u5148\u4ece\n            \"{YourQtProgram}/Docs/Qt-{version}/qtdoc/qmltypes.html\" \u62f7\u8d1d\u8fc7\u6765.\n        file_o: \u751f\u6210\u6587\u4ef6. \"~/blueprint/resources/no3_all_qml_types.json\"\n            {module_group: {module: {type_name: path},...},...}\n            #   {\u6a21\u7ec4: {\u6a21\u5757: {\u7c7b\u578b: \u8def\u5f84}}}\n            e.g. {\n                'qtquick': {\n                    'qtquick': {\n                        'Rectangle': 'qtquick/qml-qtquick-rectangle.html',\n                        'Text': 'qtquick/qml-qtquick-text.html',\n                       ...\n                    },\n                    'qtquick-window': {\n                        'Window': 'qtquick/qml-qtquick-window-window.html',\n                       ...\n                    },\n                   ...\n                },\n               ...\n            }\n    \n    \u601d\u8def:\n        1. \u6211\u4eec\u5b89\u88c5\u4e86 Qt \u4e3b\u7a0b\u5e8f\u4ee5\u540e, \u5728\u8f6f\u4ef6\u5b89\u88c5\u76ee\u5f55\u4e0b\u7684 'Docs/Qt-{version}' \u4e2d\u6709\n           \u5b83\u7684 API \u6587\u6863\n        2. \u5176\u4e2d \"~/Docs/Qt-{version}/qtdoc/qmltypes.html\" \u5217\u51fa\u4e86\u5168\u90e8\u7684 qml types\n        3. \u6211\u4eec\u5bf9 \"qmltypes.html\" \u7528 BeautifulSoup \u89e3\u6790, \u4ece\u4e2d\u83b7\u53d6\u6bcf\u4e2a qml types\n           \u548c\u5b83\u7684\u94fe\u63a5, \u6700\u7ec8\u6211\u4eec\u5c06\u5f97\u5230\u8fd9\u4e9b\u4fe1\u606f: \u6a21\u7ec4, \u6a21\u5757, \u7c7b\u578b, \u8def\u5f84\u7b49\n        4. \u5c06\u8fd9\u4e9b\u4fe1\u606f\u4fdd\u5b58\u5230\u672c\u9879\u76ee\u4e0b\u7684 \"~/resources/qmltypes.json\" \u6587\u4ef6\u4e2d\n    \"\"\"\n    soup = BeautifulSoup(read_and_write.read_file(file_i), 'html.parser')\n    \n    # https://www.itranslater.com/qa/details/2325827141935563776\n    data = defaultdict(lambda: defaultdict(dict))\n    #   {module_group: {module: {type_name: filename,...},...},...}\n    \n    container = soup.find('div', 'flowListDiv')\n    for e in container.find_all('dd'):\n        link = e.a['href']  # type: str\n        #   e.g. \"../qtdatavisualization/qml-qtdatavisualization-\n        #         abstract3dseries.html\"\n        \n        match = re.search(r'\\.\\./(\\w+)/([-\\w]+)\\.html', link)\n        #                  |     ^-1-^ ^--2---^      |\n        #                  ^-------- group(0) -------^\n        #   match.group(0): '../qtdatavisualization/qml-qtdatavisualization\n        #       -abstract3dseries.html'\n        #   match.group(1): 'qtdatavisualization'\n        #   match.group(2): 'qml-qtdatavisualization-abstract3dseries'\n        assert match, e\n        \n        module_group = match.group(1)\n        module = match.group(2)\n        # see `blueprint/qml_modules_indexing/no1_all_qml_modules.py:comments\n        # :\u9488\u5bf9 QtQuick Controls \u7684\u5904\u7406`\n        if module_group == 'qtquickcontrols1':\n            continue\n        if 'qtquick-controls2' in module:\n            #   e.g. 'qml-qtquick-controls2-label'\n            module = module.replace('controls2', 'controls')\n        \n        path = match.group(0).lstrip('../')\n        #   -> 'qtdatavisualization/qml-qtdatavisualization-abstract3dseries\n        #  .html'\n        module_group = _correct_module_lettercase(module_group)\n        #   'qtdatavisualization' -> 'QtDataVisualization'\n        module = _correct_module_lettercase('-'.join(module.split('-')[1:-1]))\n        #   eg1: 'qml-qtdatavisualization-abstract3dseries' -> ['qml',\n        #   'qtdatavisualization', 'abstract3dseries'] -> [\n        #   'qtdatavisualization'] -> 'qtdatavisualization'\n        #   -> 'QtDataVisualization'\n        #   eg2: 'qml-qt3d-input-abstractactioninput' -> ['qml', 'qt3d',\n        #   'input', 'abstractactioninput'] -> ['qt3d', 'input',\n        #   'abstractactioninput'] -> 'qt3d-input' -> 'Qt3D.Input'\n        #   \u6ce8: \u4e3a\u4ec0\u4e48\u8981\u820d\u53bb\u672b\u5c3e\u7684\u5143\u7d20? \u56e0\u4e3a\u672b\u5c3e\u7684\u90a3\u4e2a\u662f `type_name`, \u4e0d\u662f\n        #   `module`. \u63a5\u4e0b\u6765\u6211\u4eec\u4f1a\u62bd\u53d6 `type_name`.\n        type_name = e.text.split(':', 1)[0]\n        #   \u6ce8\u610f\u6211\u4eec\u4e0d\u4f7f\u7528 `correct_module_lettercase(match.group(2).split('-')\n        #   [-1])`, \u662f\u56e0\u4e3a `correct_module_lettercase` \u7684\u8bcd\u5e93\u8303\u56f4\u6bd4\u8f83\u5c0f, \u4ec5\u5bf9\n        #   `module_group` \u548c `module` \u505a\u4e86\u8986\u76d6, \u4e0d\u80fd\u4fdd\u8bc1\u5bf9 `type_name` \u7684\u5904\u7406\u6b63\n        #   \u786e; \u800c `soup` \u662f\u53ef\u4ee5\u6bd4\u8f83\u8f7b\u677e\u5730\u901a\u8fc7 tag \u63d0\u53d6\u5230\u5b83\u7684, \u6240\u4ee5\u901a\u8fc7 html \u5143\n        #   \u7d20\u83b7\u53d6.\n        #   e.g. 'RadioButton: QtQuickControls' -> 'RadioButton'\n        \n        lk.loga(module_group, module, type_name)\n        data[module_group][module][type_name] = path\n    \n    read_and_write.dumps(data, file_o)\n\n\n# ------------------------------------------------------------------------------\n\nqml_modules = read_and_write.loads('../resources/no2_all_qml_modules.json')\nqml_modules = qml_modules['module_group'] | qml_modules['module']  # type: dict\nqml_modules.update({  # \u6269\u5145\n    ''                        : '',\n    'qtquick-controls-private': 'QtQuick.Controls.Private',\n   'mediaplayer-qml'         : 'MediaPlayer.Qml',\n    #   \u6ce8: \u8fd9\u4e2a\u5176\u5b9e\u662f\u4e0d\u5b58\u5728\u7684, \u53ea\u662f\u4e3a\u4e86\u4e0d\u62a5\u9519\u6240\u4ee5\u52a0\u4e0a\u53bb\n})\n\n\ndef _correct_module_lettercase(module: str):\n    \"\"\" \u4fee\u6b63\u6a21\u5757\u7684\u5927\u5c0f\u5199.\n    \n    \u793a\u4f8b:\n        'qtquick-window' -> 'QtQuick.Window'\n        'qtgraphicaleffects' -> 'QtGraphicalEffects\n    \n    \u6ce8\u610f: \u5b58\u5728\u4e00\u4e9b\u7279\u6b8a\u60c5\u51b5:\n        'qt-labs-animation' -> 'Qt.labs.animation'\n        \n    \u601d\u8def:\n        1. \u6211\u4eec\u9700\u8981\u628a\u6a21\u5757\u7684\u540d\u5b57\u6309\u7167\u8bcd\u6765\u62c6\u5206:\n            'qtgraphicaleffects' -> ['qt', 'graphical', 'effects']\n        2. \u7136\u540e\u5c06\u6bcf\u4e2a\u8bcd\u7684\u9996\u5b57\u6bcd\u5927\u5199:\n            ['Qt', 'Graphical', 'Effects']\n        3. \u518d\u62fc\u63a5\u56de\u53bb:\n            'QtGraphicalEffects'\n            \n            (\u5bf9\u4e8e\u4e00\u4e9b\u7279\u6b8a\u60c5\u51b5, \u6bd4\u5982 Qt.l",
  "@extends('admin.admin')\n\n\n@section('content')\n<div class=\"container\">\n@include('info.notification')\n<h1>Modifier le r\u00f4le d'enseignant</h1>\n<form action=\"{{ route('admin.users.etudiant.validerbulletinupdate', $user->id) }}\" method=\"POST\">\n@csrf \n@method('PATCH')\n   <div class=\"form-row\">\n        <div class=\"col-md-6\">\n            <div class=\"form-group\">\n                <label for=\"valider_bulletin\" class=\"mb-1\">valider_bulletin: </label>\n                <input type=\"number\" name=\"valider_bulletin\" multiple class=\"form-control py-4\" value=\"{{ $user->valider_bulletin }}\">\n            </div>\n        </div>\n        <div class=\"col-md-6\">\n            <div class=\"form-group\">\n                <label class=\"small mb-1\" for=\"bulletin_id\">Bulletin_id </label>\n                <input type=\"number\" name=\"bulletin_id\" multiple class=\"form-control py-4\" value=\"{{ $user->bulletin_id }}\">   \n            </div>\n        </div>\n    </div> \n    <div class=\"form-row\">\n        <button type=\"submit\" class=\"btn btn-primary\">Valider Bulletin</button>\n    </div>\n</form>\n    \n</div>\n\n@endsection\n",
  "import json\nimport os\nimport sys\nfrom datetime import datetime\n\nimport requests\nfrom elasticsearch import Elasticsearch\nfrom elasticsearch_dsl import Document, Date, Text, connections, Float, Completion, Search, Keyword\n\n# Define a default Elasticsearch client\n# connections.create_connection(hosts=['localhost'])\nconnections.create_connection(\n    hosts=['https://e084291822ed42bab3766eefee360eb2.eu-west-1.aws.found.io:9243'],\n    http_auth='dim:asd123')\n\n\nclass Product(Document):\n    product_name = Text(analyzer=\"rebuilt_dutch\")\n    # suggest = Completion(analyzer=\"rebuilt_dutch_autocomp\")\n    suggest = Completion()\n    page_title = Text(analyzer=\"rebuilt_dutch\")\n    description = Text(analyzer=\"rebuilt_dutch\")\n    supermarket = Keyword()\n    url = Text()\n    date = Date()\n    weight_q = Float()\n    weight_ind = Text()\n    size = Text()\n    category = Text(analyzer=\"rebuilt_dutch\")\n    price = Float()\n    img_url = Text()\n\n    class Index:\n        name = 'product'\n        settings = {\n            \"analysis\": {\n                \"filter\": {\n                    \"dutch_stop\": {\n                        \"type\": \"stop\",\n                        \"stopwords\": \"_dutch_\"\n                    },\n                    \"dutch_keywords\": {\n                        \"type\": \"keyword_marker\",\n                        \"keywords\": [\"voorbeeld\"]\n                    },\n                    \"dutch_stemmer\": {\n                        \"type\": \"stemmer\",\n                        \"language\": \"dutch\"\n                    },\n                    \"dutch_override\": {\n                        \"type\": \"stemmer_override\",\n                        \"rules\": [\n                            \"fiets=>fiets\",\n                            \"bromfiets=>bromfiets\",\n                            \"ei=>eier\",\n                            \"kind=>kinder\"\n                        ]\n                    },\n                    \"autocomplete_filter\": {\n                        \"type\": \"edge_ngram\",\n                        \"min_gram\": 1,\n                        \"max_gram\": 4\n                    }\n                },\n                \"analyzer\": {\n                    \"rebuilt_dutch_autocomp\": {\n                        \"tokenizer\": \"standard\",\n                        \"type\": \"custom\",\n                        \"filter\": [\n                            \"lowercase\",\n                            \"autocomplete_filter\",\n                            \"dutch_stop\",\n                            \"dutch_keywords\",\n                            \"dutch_override\",\n                            \"dutch_stemmer\"\n                        ]\n                    },\n                    \"rebuilt_dutch\": {\n                        \"tokenizer\": \"standard\",\n                        \"filter\": [\n                            \"lowercase\",\n                            \"dutch_stop\",\n                            \"dutch_keywords\",\n                            \"dutch_override\",\n                            \"dutch_stemmer\"\n                        ]\n                    }\n                }\n            }\n        }\n\n    def save(self, **kwargs):\n        return super(Product, self).save(**kwargs)\n\n    def is_published(self):\n        return datetime.now() > self.date\n\n\ndef convert_json_to_product(product_json):\n    return Product(product_name=product_json['product_name'],\n                   suggest=product_json['product_name'],\n                   page_title=product_json['page_title'],\n                   description=product_json['description'],\n                   supermarket=product_json['supermarket'],\n                   url=product_json['url'],\n                   date=product_json['date'],\n                   weight_q=product_json['weight_q'],\n                   weight_ind=product_json['weight_ind'],\n                   size=product_json['size'],\n                   category=product_json['category'],\n                   price=product_json['price'],\n                   img_url=product_json['img_url']\n                   )\n\n\ndef document_exists(document):\n    url = 'http://localhost:9200/product/_count?q=' + '\"' + document.url + '\"'\n    r = requests.get(url)\n    json_data = r.json()\n    return json_data['count'] > 0\n\n\ndef create_index(directory):\n    Product.init()\n\n    # get the filename from the command line args\n    # remember: sys.argv[0] is always the current file.\n    for file in os.listdir(directory):\n        if file.endswith('.json'):\n            # load json array\n            input_file = open(os.path.join(directory, file))\n            json_array = json.load(input_file)\n\n            for product_json in json_array:\n                # create and save the product\n                product = convert_json_to_product(product_json)\n                product.save()\n\n        print('Successfully saved data from:'+ file)\n\n\ndef update_index(filename):\n    if os.path.isfile(filename):\n        # load json array\n        input_file = open(filename)\n        json_array = json.load(input_file)\n\n        for product_json in json_array:\n            product = convert_json_to_product(product_json)\n            exists = document_exists(product)\n            if not exists:\n                product.save()\n            else:\n                print('Skipping already indexed product:'+ str(product.product_name))\n\n        print('Successfully saved data from:'+ filename)\n    else:\n        print('File not found:'+ filename)\n\n\nif __name__ == '__main__':\n    if len(sys.argv) == 3:\n        # get the filename from the command line args\n        # remember: sys.argv[0] is always the current file.\n        input_path = sys.argv[1]\n        operation = sys.argv[2]\n        if operation == 'create':\n            create_index(input_path)\n        elif operation == 'update':\n            update_index(input_path)\n    else:\n        print('Args should be given in the format [path of file/directory to index] [create or update].')\n\n# Display cluster health\n# print(connections.get_connection().cluster.health())\n",
  "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PlayerProvider = void 0;\nconst BehaviorSubject_1 = require(\"rxjs/BehaviorSubject\");\nconst brazucas_eventos_1 = require(\"../interfaces/brazucas-eventos\");\nclass PlayerProvider {\n    constructor(brazucasServer) {\n        this.players$ = new BehaviorSubject_1.BehaviorSubject([]);\n        PlayerProvider.brazucasServer = brazucasServer;\n    }\n    findFromMp(player) {\n        return this.players$.value.find((storedPlayer) => (storedPlayer.mp && storedPlayer.mp.id === player.id));\n    }\n    update(player, data, autoSave = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const brzPlayer = this.findFromMp(player);\n                if (brzPlayer) {\n                    Object.keys(data).forEach((key) => brzPlayer.storage[key] = data[key]);\n                    if (autoSave) {\n                        yield brzPlayer.storage.save();\n                    }\n                    console.log(`Atualizando jogador ${player.name} ${JSON.stringify(brzPlayer.storage.toJSON())}`);\n                    player.call(brazucas_eventos_1.BrazucasEventos.ATUALIZAR_DADOS_JOGADOR, [brzPlayer.storage.toJSON()]);\n                }\n                else {\n                    console.warn('[WARNING] Jogador n\u00e3o encontrado para atualizar');\n                }\n                return true;\n            }\n            catch (err) {\n                console.error(`[ERROR] Um erro ocorreu ao atualizar o jogador.`);\n                console.error(err);\n                throw err;\n            }\n        });\n    }\n    savePlayer(player) {\n        const brzPlayer = this.findFromMp(player);\n        if (brzPlayer) {\n            return brzPlayer.storage.save();\n        }\n    }\n    addPlayer(brzPlayer) {\n        const players = this.players$.value;\n        players.push(brzPlayer);\n        this.players$.next(players);\n    }\n}\nexports.PlayerProvider = PlayerProvider;\n//# sourceMappingURL=player.provider.js.map",
  "/**\n * @file opcontrol.c\n * @brief File for operator control code\n *\n * This file should contain the user operatorControl() function and any\n * functions related to it.\n *\n * Any copyright is dedicated to the Public Domain.\n * http://creativecommons.org/publicdomain/zero/1.0/\n *\n * PROS contains FreeRTOS (http://www.freertos.org) whose source code may be\n * obtained from http://sourceforge.net/projects/freertos/files/ or on request.\n */\n\n#include \"main.h\"\n#include \"9502Lib/controllerLib.h\"\n\n//Refresh rate (in Hz) for driver mode\nunsigned char refreshRate = 20;\n\n/*\n * Runs the user operator control code. This function will be started in its own\n * task with the default priority and stack size whenever the robot is enabled\n * via the Field Management System or the VEX Competition Switch in the operator\n * control mode. If the robot is disabled or communications is lost, the\n * operator control task will be stopped by the kernel. Re-enabling the robot\n * will restart the task, not resume it from where it left off.\n *\n * If no VEX Competition Switch or Field Management system is plugged in, the\n * VEX Cortex will run the operator control task. Be warned that this will also\n * occur if the VEX Cortex is tethered directly to a computer via the USB A to A\n * cable without any VEX Joystick attached.\n *\n * Code running in this task can take almost any action, as the VEX Joystick is\n * available and the scheduler is operational. However, proper use of delay() or\n * taskDelayUntil() is highly recommended to give other tasks (including system\n * tasks such as updating LCDs) time to run.\n *\n * This task should never exit; it should end with some kind of infinite loop,\n * even if empty.\n */\n\nvoid operatorControl()\n{\n\tlcdClear(lcdPort);\n    lcdSetText(lcdPort, 1, \"  User Control  \");\n\tlcdSetText(lcdPort, 2, \"      Mode      \");\n\n\t//Initialize variables for loop here\n\n\twhile(true)\n\t{\n\t\t//Driver code here\n\n\t\tdelay(1000.0 / refreshRate);\n\t}\n}\n",
  "<input type=\"text\" class=\"knob\"\n       data-readonly=\"true\"\n       data-thickness=\"0.2\"\n       data-angleArc=\"250\"\n       data-angleOffset=\"-125\"\n       value=\"{{$categoryScore['operators'][0]['scores'][0]['value']}}\"\n       data-max=\"10\"\n       data-width=\"90\"\n       data-height=\"90\"\n       data-fgColor=\"{{$categoryScore['operators'][0]['scores'][0]['color']}}\">\n<div class=\"knob-label\">{{$categoryScore['operators'][0]['scores'][0]['name']}}</div>\n",
  "### To consider\n- [ ] Support user defined types instead of stringly typing the messages\n",
  "using System;\nusing System.Diagnostics;\nusing System.Numerics;\n\nnamespace ConsoleApp38\n{\n  class Program\n  {\n    static void Main(string[] args)\n    {\n      Stopwatch clock = Stopwatch.StartNew();\n      int numberOfLetters = 0;\n\n      for (int number = 1; number < 1001; number++)\n        numberOfLetters += CountLetters(number);\n\n      clock.Stop();\n      Console.WriteLine(\"Number of letters: \" + numberOfLetters);\n      Console.WriteLine(\"Answer reached in {0} ms.\", clock.ElapsedMilliseconds);\n      Console.ReadKey();\n\n    }\n\n    static int CountLetters(int number)\n    {\n      string[] units = new string[] { \"\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\" };\n      string[] units10 = new string[] { \"\", \"eleven\", \"twelve\", \"thirteen\", \"fourteen\", \"fifteen\", \"sixteen\", \"seventeen\", \"eighteen\", \"nineteen\" };\n      string[] tens = new string[] { \"\", \"ten\", \"twenty\", \"thirty\", \"forty\", \"fifty\", \"sixty\", \"seventy\", \"eighty\", \"ninety\" };\n\n      if (number == 1000)\n        return \"onethousand\".Length;\n      string numberString = \"\";\n      int[] digits = new int[3];\n\n      digits[0] = number / 100;\n      digits[1] = (number / 10) % 10;\n      digits[2] = number % 10;\n\n      if (digits[0] > 0)\n      {\n        numberString += units[digits[0]] + \"hundred\";\n        if (digits[1]!= 0 || digits[2]!= 0)\n          numberString += \"and\";\n      }\n\n      if (digits[1] == 1)\n      {\n        if (digits[2] == 0)\n          numberString += tens[digits[1]];\n        else\n          numberString += units10[digits[2]];\n      }\n      else\n        numberString += tens[digits[1]] + units[digits[2]];\n\n      return numberString.Length;\n\n    }\n  }\n}\n\n",
  "package services.applicant.question;\n\nimport com.google.common.collect.ImmutableList;\nimport com.google.common.collect.ImmutableSet;\nimport java.util.Optional;\nimport services.MessageKey;\nimport services.Path;\nimport services.applicant.ValidationErrorMessage;\nimport services.question.types.FileUploadQuestionDefinition;\nimport services.question.types.QuestionType;\n\n/**\n * Represents a file upload question in the context of a specific applicant.\n *\n * <p>See {@link ApplicantQuestion} for details.\n */\npublic class FileUploadQuestion implements PresentsErrors {\n\n  private final ApplicantQuestion applicantQuestion;\n  private Optional<String> fileKeyValue;\n\n  public FileUploadQuestion(ApplicantQuestion applicantQuestion) {\n    this.applicantQuestion = applicantQuestion;\n    assertQuestionType();\n  }\n\n  @Override\n  public boolean hasQuestionErrors() {\n    return!getQuestionErrors().isEmpty();\n  }\n\n  @Override\n  public ImmutableSet<ValidationErrorMessage> getQuestionErrors() {\n    // TODO: Implement admin-defined validation.\n    return ImmutableSet.of();\n  }\n\n  @Override\n  public ImmutableList<Path> getAllPaths() {\n    // We can't predict ahead of time what the path will be.\n    return ImmutableList.of();\n  }\n\n  @Override\n  public boolean hasTypeSpecificErrors() {\n    return!getAllTypeSpecificErrors().isEmpty();\n  }\n\n  @Override\n  public ImmutableSet<ValidationErrorMessage> getAllTypeSpecificErrors() {\n    // There are no inherent requirements in a file upload question.\n    return ImmutableSet.of();\n  }\n\n  @Override\n  public boolean isAnswered() {\n    return applicantQuestion.getApplicantData().hasPath(getFileKeyPath());\n  }\n\n  public ValidationErrorMessage fileRequiredMessage() {\n    return ValidationErrorMessage.create(MessageKey.FILEUPLOAD_VALIDATION_FILE_REQUIRED);\n  }\n\n  public Optional<String> getFileKeyValue() {\n    if (fileKeyValue!= null) {\n      return fileKeyValue;\n    }\n\n    fileKeyValue = applicantQuestion.getApplicantData().readString(getFileKeyPath());\n\n    return fileKeyValue;\n  }\n\n  public void assertQuestionType() {\n    if (!applicantQuestion.getType().equals(QuestionType.FILEUPLOAD)) {\n      throw new RuntimeException(\n          String.format(\n              \"Question is not a FILEUPLOAD question: %s (type: %s)\",\n              applicantQuestion.getQuestionDefinition().getQuestionPathSegment(),\n              applicantQuestion.getQuestionDefinition().getQuestionType()));\n    }\n  }\n\n  public FileUploadQuestionDefinition getQuestionDefinition() {\n    assertQuestionType();\n    return (FileUploadQuestionDefinition) applicantQuestion.getQuestionDefinition();\n  }\n\n  public Path getFileKeyPath() {\n    return applicantQuestion.getContextualizedPath().join(Scalar.FILE_KEY);\n  }\n\n  public Optional<String> getFilename() {\n    if (!isAnswered() || getFileKeyValue().isEmpty()) {\n      return Optional.empty();\n    }\n    return getFileKeyValue().map(key -> key.split(\"/\", 4)).map(arr -> arr[arr.length - 1]);\n  }\n\n  @Override\n  public String getAnswerString() {\n    if (getFilename().isEmpty()) {\n      return \"-- NO FILE SELECTED --\";\n    }\n    return String.format(\"-- %s UPLOADED (click to download) --\", getFilename().get());\n  }\n}\n",
  "export { default } from './Dot';\n",
  "/**\nThe MIT License (MIT)\n*/\n\nimport { Props, createIcon } from '../Icon'\nimport React from'react'\n\nexport default React.forwardRef((props: Props, ref: React.RefObject<HTMLSpanElement>) => (\n    createIcon(props, ref, {\n        filled: <g><g id=\"BriefcaseIcon/Fill/briefcase\"><path id=\"BriefcaseMask\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10 5.5C10 5.224 10.224 5 10.5 5H13.5C13.776 5 14 5.224 14 5.5V7H10V5.5ZM7 21H17V7H16V5.5C16 4.122 14.878 3 13.5 3H10.5C9.122 3 8 4.122 8 5.5V7H7V21ZM19 7V21C20.654 21 22 19.654 22 18V10C22 8.346 20.654 7 19 7ZM2 10C2 8.346 3.346 7 5 7V21C3.346 21 2 19.654 2 18V10Z\"/><mask id=\"Briefcasemask0\" mask-type=\"alpha\" maskUnits=\"userSpaceOnUse\" x=\"2\" y=\"3\" width=\"20\" height=\"18\"><path id=\"BriefcaseMask_2\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10 5.5C10 5.224 10.224 5 10.5 5H13.5C13.776 5 14 5.224 14 5.5V7H10V5.5ZM7 21H17V7H16V5.5C16 4.122 14.878 3 13.5 3H10.5C9.122 3 8 4.122 8 5.5V7H7V21ZM19 7V21C20.654 21 22 19.654 22 18V10C22 8.346 20.654 7 19 7ZM2 10C2 8.346 3.346 7 5 7V21C3.346 21 2 19.654 2 18V10Z\"/></mask><g mask=\"url(#Briefcasemask0)\"><g id=\"Briefcase&#Briefcase240;&#Briefcase159;&#Briefcase142;&#Briefcase168; Color\"><rect id=\"BriefcaseBase\" width=\"24\" height=\"24\"/></g></g></g></g>,\n        outline: <g><g id=\"Briefcase-oIcon/Outline/briefcase\"><path id=\"Briefcase-oMask\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M20 18C20 18.551 19.551 19 19 19H17V9H19C19.551 9 20 9.449 20 10V18ZM4 18V10C4 9.449 4.449 9 5 9H7V19H5C4.449 19 4 18.551 4 18ZM10 5.5C10 5.224 10.224 5 10.5 5H13.5C13.776 5 14 5.224 14 5.5V7H10V5.5ZM9 19H15V9H9V19ZM19 7H16V5.5C16 4.122 14.878 3 13.5 3H10.5C9.122 3 8 4.122 8 5.5V7H5C3.346 7 2 8.346 2 10V18C2 19.654 3.346 21 5 21H19C20.654 21 22 19.654 22 18V10C22 8.346 20.654 7 19 7Z\"/><mask id=\"Briefcase-omask0\" mask-type=\"alpha\" maskUnits=\"userSpaceOnUse\" x=\"2\" y=\"3\" width=\"20\" height=\"18\"><path id=\"Briefcase-oMask_2\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M20 18C20 18.551 19.551 19 19 19H17V9H19C19.551 9 20 9.449 20 10V18ZM4 18V10C4 9.449 4.449 9 5 9H7V19H5C4.449 19 4 18.551 4 18ZM10 5.5C10 5.224 10.224 5 10.5 5H13.5C13.776 5 14 5.224 14 5.5V7H10V5.5ZM9 19H15V9H9V19ZM19 7H16V5.5C16 4.122 14.878 3 13.5 3H10.5C9.122 3 8 4.122 8 5.5V7H5C3.346 7 2 8.346 2 10V18C2 19.654 3.346 21 5 21H19C20.654 21 22 19.654 22 18V10C22 8.346 20.654 7 19 7Z\"/></mask><g mask=\"url(#Briefcase-omask0)\"><g id=\"Briefcase-o&#Briefcase-o240;&#Briefcase-o159;&#Briefcase-o142;&#Briefcase-o168; Color\"><rect id=\"Briefcase-oBase\" width=\"24\" height=\"24\"/></g></g></g></g>,\n    })\n))",
  "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n    <script src=\"/public/js/jquery-3.1.1.min.js\"></script>\n</head>\n<body>\n\n<textarea rows=\"20\" cols=\"200\" readonly>\n\n</textarea>\n\n<br>\n\nhello {{.name}}!\n<input name=\"username\" data-node=\"{{.name}}\" />\n<input type=\"button\" onclick=\"sendMsg()\" value=\"\u53d1\u9001\">\n</body>\n<script type=\"text/javascript\">\n    if (window[\"WebSocket\"]) {\n        conn = new WebSocket(\"ws://{{.WebSocketHost}}/websocket\");\n        conn.onopen = function() {\n            console.log(\"connn websocket\")\n        };\n\n        conn.onmessage = function(evt) {\n            var data = JSON.parse(evt.data);\n            if(data.code == 401) {\n                location.href = \"/login\"\n            }\n            switch(data.Content.Type) {\n                case \"text_mtype\":\n                    //addMessage(data.TextMessage);\n                    var msg = JSON.parse(data.Content.Data);\n                    console.log(\"\u6536\u5230\u6d88\u606f\uff1a\" + data.Content.Data);\n                    $('textarea').val($('textarea').val() + msg.Name + ':'+ msg.Data + \"\\r\\n\");\n                    break;\n                case \"OnlineNotice\":\n                    //updateUsers(data.UserStatus)\n                    console.log(\"\u65b0\u7528\u6237\u4e0a\u7ebf\");\n                    break;\n                default:\n            }\n        };\n\n        conn.onerror = function() {\n            location.reload()\n            alert(\"\u8fde\u63a5\u5f02\u5e38\")\n        };\n\n        conn.onclose = function() {\n            //location.reload()\n            alert(\"\u8fde\u63a5\u5df2\u65ad\u5f00\")\n        };\n    } else {\n        alert(\"Your browser does not support WebSockets.\");\n    }\n\n    $('input[name=username]').bind('keypress',function(event){\n        if(event.which === 13)\n        {\n            sendMsg()\n        }\n\n    });\n\n    function sendMsg() {\n        var name = $('input[name=username]').data('node');\n        var msg = $('input[name=username]').val();\n        conn.send(JSON.stringify({Type: \"text_mtype\", Data: msg, Name: name}));\n        console.log(\"\u53d1\u9001\u6d88\u606f\uff1a\" + msg)\n        $('textarea').val($('textarea').val() + name + ':'+ msg + \"\\r\\n\");\n        $('input[name=username]').val(\"\")\n    }\n</script>\n</html>",
  "\n  devise_scope :user do\n    get 'invitation/accept',\n      to: 'devise_invitations/invitations#accept',\n      as: :accept_invitation_request\n  end\n",
  "<!-- \u6807\u9898 -->\n<h1 class=\"w3-center w3-padding-64 w3-tangerine\"><span class=\"w3-tag w3-wide\">ByteUtils.java</span></h1>\n<!-- \u5185\u5bb9 -->\n\n<div style=\"text-align: right\">\n    <a title=\"Table Of Content\" href=\"/archive/crypto/crypto_index.html\">TOC</a>\n    <a href=\"javascript:void(0);\" onclick=\"toggle_all_sub_note()\">Toggle Commentary</a>\n</div>\n\n<div title=\"ByteUtils.java\" class=\"javacode\">\nimport java.util.Formatter;\n\npublic class ByteUtils {\n    public static byte[] xor(byte[] bytes1, byte[] bytes2, int num) {\n        byte[] result_bytes = new byte[num];\n        for (int i = 0; i < num; i++) {\n            result_bytes[i] = (byte) (bytes1[i] ^ bytes2[i]);\n        }\n        return result_bytes;\n    }\n\n    public static byte[] concatenate(byte[] bytes1, byte[] bytes2) {\n        int len1 = bytes1.length;\n        int len2 = bytes2.length;\n\n        byte[] result_bytes = new byte[len1 + len2];\n\n        System.arraycopy(bytes1, 0, result_bytes, 0, len1);\n        System.arraycopy(bytes2, 0, result_bytes, len1, len2);\n\n        return result_bytes;\n    }\n\n    public static String toHex(byte[] bytes) {\n        StringBuilder sb = new StringBuilder();\n        Formatter fm = new Formatter(sb);\n        for (byte b : bytes) {\n            fm.format(\"%02X\", (b & 0xFF));\n        }\n        return sb.toString();\n    }\n\n    public static String toBinary(byte[] bytes) {\n        StringBuilder sb = new StringBuilder();\n        for (byte b : bytes) {\n            for (int i = 7; i >= 0; i--) {\n                int val = (b >> i) & 0x01;\n                sb.append(val == 0? \"0\" : \"1\");\n            }\n            sb.append(\" \");\n        }\n        return sb.toString();\n    }\n}\n</div>\n",
  "<?php\ndeclare(strict_types=1);\n\nnamespace App\\Data\\Database;\n\nuse App\\Data\\Database\\Entity\\AbstractEntity;\nuse App\\Data\\Database\\EntityRepository\\AbstractEntityRepository;\nuse App\\Infrastructure\\ApplicationConfig;\nuse App\\Infrastructure\\DateTimeFactory;\nuse Doctrine\\ORM\\Decorator\\EntityManagerDecorator;\nuse Doctrine\\ORM\\EntityManagerInterface;\nuse Psr\\Log\\LoggerInterface;\nuse Psr\\SimpleCache\\CacheInterface;\n\nclass EntityManager extends EntityManagerDecorator\n{\n    private CacheInterface $cache;\n    private LoggerInterface $logger;\n    private ApplicationConfig $applicationConfig;\n\n    /**\n     * @var array<string, AbstractEntityRepository>\n     */\n    private array $classCache = [];\n\n    public function __construct(\n        EntityManagerInterface $entityManager,\n        ApplicationConfig $applicationConfig,\n        CacheInterface $cache,\n        LoggerInterface $logger\n    ) {\n        parent::__construct($entityManager);\n        $this->cache = $cache;\n        $this->logger = $logger;\n        $this->applicationConfig = $applicationConfig;\n    }\n\n    /**\n     * @param AbstractEntity $entity\n     */\n    public function persist($entity): void\n    {\n        // interject to update the created_at/updated_at fields (for audit purposes)\n        $now = DateTimeFactory::now();\n        $entity->updatedAt = $now;\n        if (!$entity->createdAt) {\n            $entity->createdAt = $now;\n        }\n        parent::persist($entity);\n    }\n\n    /**\n     * @param class-string<mixed> $entityName\n     * @return AbstractEntityRepository\n     */\n    public function getRepository($entityName)\n    {\n        if (!isset($this->classCache[$entityName])) {\n            /** @var AbstractEntityRepository $repo */\n            $repo = parent::getRepository($entityName);\n\n            // set dependencies (which could not be injected via construct)\n            $repo->setEntityManager($this);\n            $repo->setApplicationConfig($this->applicationConfig);\n            $repo->setCache($this->cache);\n            $repo->setLogger($this->logger);\n\n            $this->classCache[$entityName] = $repo;\n        }\n\n        return $this->classCache[$entityName];\n    }\n\n    public function getAll(): array\n    {\n        $entityFiles = \\scandir(__DIR__. '/Entity/', SCANDIR_SORT_NONE);\n        if (!$entityFiles) {\n            return [];\n        }\n\n        $results = \\array_map(function ($className) {\n            $fullEntityName = __NAMESPACE__. '\\\\Entity\\\\'. \\str_replace('.php', '', $className);\n            if (\\class_exists($fullEntityName) && \\is_subclass_of($fullEntityName, AbstractEntity::class)) {\n                return $this->getRepository($fullEntityName);\n            }\n\n            return null;\n        }, $entityFiles);\n\n        return array_filter($results);\n    }\n\n    public function getAchievementRepo(): EntityRepository\\AchievementRepository\n    {\n        return $this->getRepository(Entity\\Achievement::class);\n    }\n\n    public function getActiveEffectRepo(): EntityRepository\\ActiveEffectRepository\n    {\n        return $this->getRepository(Entity\\ActiveEffect::class);\n    }\n\n    public function getAuthenticationTokenRepo(): EntityRepository\\AuthenticationTokenRepository\n    {\n        return $this->getRepository(Entity\\AuthenticationToken::class);\n    }\n\n    public function getChannelRepo(): EntityRepository\\ChannelRepository\n    {\n        return $this->getRepository(Entity\\Channel::class);\n    }\n\n    public function getConfigRepo(): EntityRepository\\ConfigRepository\n    {\n        return $this->getRepository(Entity\\Config::class);\n    }\n\n    public function getCrateRepo(): EntityRepository\\CrateRepository\n    {\n        return $this->getRepository(Entity\\Crate::class);\n    }\n\n    public function getCrateLocationRepo(): EntityRepository\\CrateLocationRepository\n    {\n        return $this->getRepository(Entity\\CrateLocation::class);\n    }\n\n    public function getCrateTypeRepo(): EntityRepository\\CrateTypeRepository\n    {\n        return $this->getRepository(Entity\\CrateType::class);\n    }\n\n    public function getDictionaryRepo(): EntityRepository\\DictionaryRepository\n    {\n        return $this->getRepository(Entity\\Dictionary::class);\n    }\n\n    public function getEffectRepo(): EntityRepository\\EffectRepository\n    {\n        return $this->getRepository(Entity\\Effect::class);\n    }\n\n    public function getEventRepo(): EntityRepository\\EventRepository\n    {\n        return $this->getRepository(Entity\\Event::class);\n    }\n\n    public function getHintRepo(): EntityRepository\\HintRepository\n    {\n        return $this->getRepository(Entity\\Hint::class);\n    }\n\n    public function getPlayerRankRepo(): EntityRepository\\PlayerRankRepository\n    {\n        return $this->getRepository(Entity\\PlayerRank::class);\n    }\n\n    public function getPortRepo(): EntityRepository\\PortRepository\n    {\n        return $this->getRepository(Entity\\Port::class);\n    }\n\n    public function getPortVisitRepo(): EntityRepository\\PortVisitRepository\n    {\n        return $this->getRepository(Entity\\PortVisit::class);\n    }\n\n    public function getPurchaseRepo(): EntityRepository\\PurchaseRepository\n    {\n        return $this->getRepository(Entity\\Purchase::class);\n    }\n\n    public function getRankAchievementRepo(): EntityRepository\\RankAchievementRepository\n    {\n        return $this->getRepository(Entity\\RankAchievement::class);\n    }\n\n    public function getShipRepo(): EntityRepository\\ShipRepository\n    {\n        return $this->getRepository(Entity\\Ship::class);\n    }\n\n    public function getShipClassRepo(): EntityRepository\\ShipClassRepository\n    {\n        return $this->getRepository(Entity\\ShipClass::class);\n    }\n\n    public function getShipLocationRepo(): EntityRepository\\ShipLocationRepository\n    {\n        return $this->getRepository(Entity\\ShipLocation::class);\n    }\n\n    public function getUsedActionTokenRepo(): EntityRepository\\UsedActionTokenRepository\n    {\n        return $this->getRepository(Entity\\UsedActionToken::class);\n    }\n\n    public function getUserAchievementRepo(): EntityRepository\\UserAchievementRepository\n    {\n        return $this->getRepository(Entity\\UserAchievement::class);\n    }\n\n    public function getUserEffectRepo(): EntityRepository\\UserEffectRepository\n    {\n        return $this->getRepository(Entity\\UserEffect::class);\n    }\n\n    public function getUserRepo(): EntityRepository\\UserRepository\n    {\n        return $this->getRepository(Entity\\User::class);\n    }\n}\n",
  "@props([\n    'classes' =>'mr-4 h-6 w-6 text-amber-200 dark:text-gray-400',\n])\n\n@if($classes)\n    <svg class=\"{{$classes}}\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4\"/>\n</svg>\n@endif\n",
  "#include <stdlib.h>\n#include <inttypes.h>\n#include <stdio.h>\n#include <arpa/inet.h>\n#include <string.h>\n\nvoid logexit(const char *msg){\n    perror(msg);\n    exit(EXIT_FAILURE);\n}\n\nint addrparse(const char* addrstr, const char* portstr, struct sockaddr_storage* storage){\n    if(addrstr == NULL || portstr == NULL){\n        return -1;\n    }\n\n    uint16_t port = (uint16_t)atoi(portstr); // unsigned short\n    if(port == 0){\n        return -1;\n    }\n    port = htons(port); // host to network short\n\n    /* %%%%%% IPv4 %%%%%% */\n    struct in_addr inaddr4; // 32-bit IP Adress\n    if(inet_pton(AF_INET, addrstr, &inaddr4)){\n        struct sockaddr_in *addr4 = (struct sockaddr_in*)storage;\n        addr4->sin_addr = inaddr4;\n        addr4->sin_family = AF_INET;\n        addr4->sin_port = port;\n        return 0;\n    }\n\n    /* %%%%%% IPv6 %%%%%% */\n    struct in6_addr inaddr6; // 128-bit IPv6 Adress\n    if(inet_pton(AF_INET6, addrstr, &inaddr6)){\n        struct sockaddr_in6 *addr6 = (struct sockaddr_in6*)storage;\n        addr6->sin6_family = AF_INET6;\n        addr6->sin6_port = port;\n        addr6->sin6_addr = inaddr6;\n        memcpy(&(addr6->sin6_addr), &inaddr6, sizeof(inaddr6));\n        return 0;\n    }\n\n    return -1;\n}\n\nvoid addrtostr(const struct sockaddr* addr, char* str, size_t strsize){\n    int version;\n    char addrstr[INET6_ADDRSTRLEN + 1] = \"\";\n    uint16_t port;\n\n    if(addr->sa_family == AF_INET){\n        version = 4;\n        struct sockaddr_in* addr4 = (struct sockaddr_in*)addr;\n        if(!inet_ntop(AF_INET, &(addr4->sin_addr), addrstr, INET6_ADDRSTRLEN + 1)){\n            logexit(\"ntop\");\n        }\n        port = ntohs(addr4->sin_port); //network to host short\n    }\n    else if(addr->sa_family == AF_INET6){\n        version = 6;\n        struct sockaddr_in6* addr6 = (struct sockaddr_in6*)addr;\n        if(!inet_ntop(AF_INET6, &(addr6->sin6_addr), addrstr, INET6_ADDRSTRLEN + 1)){\n            logexit(\"ntop\");\n        }\n        port = ntohs(addr6->sin6_port); //network to host short\n    }\n    else{\n        logexit(\"Unknown Protocol Family.\");\n    }\n\n    snprintf(str, strsize, \"IPv%d %s %hu\", version, addrstr, port);\n}\n\nint server_sockaddr_init(const char* proto, const char* portstr, struct sockaddr_storage* storage) {\n    \n    uint16_t port = (uint16_t)atoi(portstr); // unsigned short\n    if(port == 0){\n        return -1;\n    }\n    port = htons(port); // host to network short\n\n    memset(storage, 0, sizeof(*storage));\n\n    /* %%%%%% IPv4 %%%%%% */\n    if(strcmp(proto, \"v4\") == 0){\n        struct sockaddr_in *addr4 = (struct sockaddr_in*)storage;\n        addr4->sin_addr.s_addr = INADDR_ANY;\n        addr4->sin_family = AF_INET;\n        addr4->sin_port = port;\n        return 0;\n\n    }\n\n    /* %%%%%% IPv6 %%%%%% */\n    else if(strcmp(proto, \"v6\") == 0){\n        struct sockaddr_in6 *addr6 = (struct sockaddr_in6*)storage;\n        addr6->sin6_family = AF_INET6;\n        addr6->sin6_port = port;\n        addr6->sin6_addr = in6addr_any;\n        return 0;\n    }\n\n    /* %%%%%% ERROR %%%%%% */\n    else{\n        return -1;\n    }\n}\n\nint len(unsigned char* msg){\n\n    int count = 0;\n\n    while(msg[count]!= '\\0'){\n        count++;\n    }\n\n    return count;\n}",
  "\ufeff// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE file in the project root for full license information.\n\nusing System.Collections.Generic;\n\nusing Microsoft.RE2.Managed;\n\nnamespace Microsoft.CodeAnalysis.Sarif.PatternMatcher\n{\n    public static class DictionaryExtensions\n    {\n        public static Dictionary<string, string> ToStringDictionary(this IDictionary<string, FlexMatch> dictionary)\n        {\n            var stringDictionary = new Dictionary<string, string>(dictionary.Count);\n\n            foreach (KeyValuePair<string, FlexMatch> kv in dictionary)\n            {\n                stringDictionary[kv.Key] = kv.Value.Value.String;\n            }\n\n            return stringDictionary;\n        }\n\n        public static Dictionary<string, FlexMatch> Copy(this IDictionary<string, FlexMatch> dictionary)\n        {\n            return new Dictionary<string, FlexMatch>(dictionary);\n        }\n\n        public static void AddProperties(this IDictionary<string, FlexMatch> dictionary, IDictionary<string, string> properties)\n        {\n            if (properties == null || properties.Count == 0)\n            {\n                return;\n            }\n\n            foreach (KeyValuePair<string, string> kv in properties)\n            {\n                if (!dictionary.ContainsKey(kv.Key))\n                {\n                    dictionary[kv.Key] = new FlexMatch() { Value = kv.Value };\n                }\n            }\n        }\n    }\n}\n",
  "from scripts.next_step_assignment_user_prepared_plate_receipt import AssignNextStepUPL\nfrom tests.test_common import TestEPP\nfrom unittest.mock import Mock, patch, PropertyMock\n\n\nclass TestAssignNextStepUPL(TestEPP):\n    def setUp(self):\n        self.protostep = Mock(uri='http://test.com/config/protocols/1/step/2')\n        self.actions = Mock(next_actions=[{}, {}])\n\n        step_udfs1 = {\n            'Plate(s) Undamaged and Sealed?': 'Yes',\n            'Samples Present and Frozen in Wells?': 'Yes',\n        }\n\n        step_udfs2 = {\n            'Plate(s) Undamaged and Sealed?': 'No',\n            'Samples Present and Frozen in Wells?': 'Yes',\n        }\n\n        step_udfs3 = {\n            'Plate(s) Undamaged and Sealed?': 'No',\n            'Samples Present and Frozen in Wells?': 'No',\n        }\n        step_udfs4 = {\n            'Plate(s) Undamaged and Sealed?': 'Yes',\n            'Samples Present and Frozen in Wells?': 'No',\n        }\n\n        self.patched_process1 = patch.object(\n            AssignNextStepUPL,\n            'process',\n            new_callable=PropertyMock(return_value=Mock(step=Mock(actions=self.actions, configuration=self.protostep), udf=step_udfs1))\n        )\n\n        self.patched_process2 = patch.object(\n            AssignNextStepUPL,\n            'process',\n            new_callable=PropertyMock(return_value=Mock(step=Mock(actions=self.actions, configuration=self.protostep), udf=step_udfs2))\n        )\n        self.patched_process3 = patch.object(\n            AssignNextStepUPL,\n            'process',\n            new_callable=PropertyMock(return_value=Mock(step=Mock(actions=self.actions, configuration=self.protostep), udf=step_udfs3))\n        )\n        self.patched_process4 = patch.object(\n            AssignNextStepUPL,\n            'process',\n            new_callable=PropertyMock(return_value=Mock(step=Mock(actions=self.actions, configuration=self.protostep), udf=step_udfs4))\n        )\n\n        self.epp = AssignNextStepUPL(self.default_argv)\n\n    def test_assign_next_step_udfs1(self):\n        protocol = Mock(steps=[self.protostep, Mock(), Mock()])\n        patched_protocol = patch('scripts.next_step_assignment_user_prepared_plate_receipt.Protocol', return_value=protocol)\n\n        with self.patched_process1, patched_protocol:\n            self.epp._run()\n            # Ensure next step is set to the second step in the protocol\n            expected_next_actions = [\n                {'action': 'nextstep','step': protocol.steps[1]},\n                {'action': 'nextstep','step': protocol.steps[1]}\n            ]\n            assert self.actions.next_actions == expected_next_actions\n            assert self.actions.put.call_count == 1\n\n    def test_assign_next_step_udfs2(self):\n        with self.patched_process2:\n            self.epp._run()\n            # Ensure next step is set to the second step in the protocol\n            expected_next_actions = [\n                {'action':'review'},\n                {'action':'review'}\n            ]\n\n            assert self.actions.next_actions == expected_next_actions\n            assert self.actions.put.call_count == 1\n\n    def test_assign_next_step_udfs3(self):\n        with self.patched_process3:\n            self.epp._run()\n            # Ensure next step is set to the second step in the protocol\n            expected_next_actions = [\n                {'action':'review'},\n                {'action':'review'}\n            ]\n            assert self.actions.next_actions == expected_next_actions\n            assert self.actions.put.call_count == 1\n\n    def test_assign_next_step_udfs4(self):\n        with self.patched_process4:\n            self.epp._run()\n            # Ensure next step is set to the second step in the protocol\n            expected_next_actions = [\n                {'action':'review'},\n                {'action':'review'}\n            ]\n            assert self.actions.next_actions == expected_next_actions\n            assert self.actions.put.call_count == 1\n",
  "<?php\nnamespace App\\Http\\Controllers\\EmployeeGroup;\n\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Http\\Request;\n\nclass EmployeeGroup extends Controller\n{\n    public function __construct()\n    {\n        parent::__construct();\n\n        /* set default mod Alias */\n        $this->middleware(function ($request, $next) {\n            $this->viewData['modAlias'] = 'employee-group';\n            return $next($request);\n        });\n    }\n\n    /**\n     * page employee group\n     *\n     * @param Request $request\n     * @return \\Illuminate\\Contracts\\View\\Factory|\\Illuminate\\View\\View\n     */\n    public function index(Request $request)\n    {\n\n        /*\n         * get all GET data\n         */\n        $allGet = (object)$request->all();\n\n        /*\n         * get employee group data\n         */\n        $query = employeeRepository()\n            ->employeeGroup()\n            ->selectRaw('*,(SELECT COUNT(1) FROM employee where employee.guid = employee_group.guid) as total_user');\n\n        if ($request->has('q'))\n        {\n            $query->where('name','like','%'.$allGet->q.'%');\n        }\n\n        $employeeGroup = $query->paginate($this->limit)\n            ->appends($request->except('page'));\n\n        /*\n         * set view data\n         */\n        $this->viewData['page'] = 'employee group';\n        $this->viewData['content'] = 'employee-group.content';\n        $this->viewData['data'] = $employeeGroup;\n        $this->viewData['data'] = $employeeGroup;\n        $this->viewData['allGet'] = $allGet;\n\n        return view($this->themes,$this->viewData);\n    }\n\n    /**\n     * page add employee group\n     *\n     * @return \\Illuminate\\Contracts\\View\\Factory|\\Illuminate\\View\\View\n     */\n    public function add()\n    {\n        /*\n         * set view data\n         */\n        $this->viewData['page'] = 'add employee group';\n        $this->viewData['content'] = 'employee-group.formAdd';\n        $this->viewData['module'] = general()->getModule();\n\n        return view($this->themes,$this->viewData);\n    }\n\n    /**\n     * save insert employee group\n     *\n     * @param Request $request\n     * @return \\Illuminate\\Http\\RedirectResponse|\\Illuminate\\Routing\\Redirector\n     */\n    public function save(Request $request)\n    {\n        /*\n         * get all post\n         */\n        $allPost = (object)$request->all();\n\n        /*\n         * define variable\n         */\n        $callback = redirect(route('employee-group'));\n        $referrer = back()->withInput();\n\n        /*\n         * set form validation\n         */\n        $rules = array(\n            'name' =>'required',\n            'delete' =>'required',\n            'edit' =>'required',\n            'create' =>'required',\n            'view' =>'required'\n        );\n\n        $validator = validator();\n        $validator = $validator->make($request->all(), $rules);\n\n        if (!$validator->fails())\n        {\n            /*\n             * if validation success\n             */\n\n            /*\n             * insert data user group\n             */\n            $insertData = array(\n                'name'=>$allPost->name,\n                'create'  => implode(',',$allPost->create),\n                'update'  => implode(',',$allPost->edit),\n               'read'    => implode(',',$allPost->view),\n                'delete'  => implode(',',$allPost->delete),\n                'created_at' => general()->dateTime,\n            );\n\n            employeeRepository()->employeeGroup()->insert($insertData);\n\n            session()->flash('msgSuccess', 'Data Saved!');\n\n            return $callback;\n        }\n        else\n        {\n            /*\n             * if validation failed\n             */\n            session()->flash('msgError', $validator->errors()->first());\n\n            return $referrer;\n        }\n    }\n\n    /**\n     * page edit employee group\n     *\n     * @param null $id\n     * @return \\Illuminate\\Contracts\\View\\Factory|\\Illuminate\\Http\\RedirectResponse|\\Illuminate\\Routing\\Redirector|\\Illuminate\\View\\View\n     */\n    public function edit($id = null)\n    {\n\n        if (is_null($id))\n        {\n            session()->flash('msgError', 'Data Not found!');\n            return redirect(route('employee-group'));\n        }\n\n        /*\n         * get data edited data\n         */\n        $getData = employeeRepository()\n            ->EmployeeGroup()\n            ->selectRaw('*,(SELECT COUNT(1) FROM employee where employee.guid = employee_group.guid) as total_user')\n            ->where('guid',$id)->get();\n\n        if ($getData->count() == 0)\n        {\n            session()->flash('msgError', 'Data Not found!');\n            return redirect(route('employee-group'));\n        }\n\n        $data = $getData->first();\n\n        /*\n         * set view data\n         */\n        $this->viewData['page'] = 'edit employee group';\n        $this->viewData['content'] = 'employee-group.formEdit';\n        $this->viewData['module'] = general()->getModule();\n        $this->viewData['data'] = $data;\n\n\n        return view($this->themes,$this->viewData);\n    }\n\n    /**\n     * Update data employee group\n     *\n     * @param Request $request\n     * @return \\Illuminate\\Http\\RedirectResponse|\\Illuminate\\Routing\\Redirector\n     */\n    public function update(Request $request)\n    {\n        /*\n         * get all post data\n         */\n        $allPost = (object)$request->all();\n\n        /*\n         * define variable\n         */\n        $callback = route('employee-group');\n        $referrer = route('employee-group.edit',$allPost->guid);\n\n        /*\n         * set form validation\n         */\n        $rules = array(\n            'guid' =>'required',\n            'name' =>'required',\n            'delete' =>'required',\n            'edit' =>'required',\n            'create' =>'required',\n            'view' =>'required'\n        );\n\n        $validator = validator();\n        $validator = $validator->make($request->all(), $rules);\n\n        if (!$validator->fails())\n        {\n            /*\n             * if validation success\n             */\n\n            $employeeGroup = employeeRepository()->employeeGroup()->where('guid',$allPost->guid);\n\n            if ($employeeGroup->count() == 0)\n            {\n                session()->flash('msgError', 'Data Not found!');\n                return redirect($referrer);\n            }\n\n            /*\n             * insert data user group\n             */\n            $insertData = array(\n                'name'=>$allPost->name,\n                'create'  => implode(',',$allPost->create),\n                'update'  => implode(',',$allPost->edit),\n               'read'    => implode(',',$allPost->view),\n                'delete'  => implode(',',$allPost->delete),\n                'updated_at' => general()->dateTime,\n            );\n\n            $employeeGroup->update($insertData);\n\n            session()->flash('msgSuccess', 'Data has been updated!');\n\n            return redirect($callback);\n        }\n        else\n        {\n            /*\n             * if validation failed\n             */\n            session()->flash('msgError', $validator->errors()->first());\n\n            return redirect($referrer);\n        }\n    }\n\n    /**\n     * delete data employee group\n     *\n     * @param null $id\n     * @return \\Illuminate\\Http\\RedirectResponse|\\Illuminate\\Routing\\Redirector\n     */\n    public function delete($id = null)\n    {\n        if (is_null($id))\n        {\n            session()->flash('msgError', 'Data Not found!');\n            return redirect(route('employee-group'));\n        }\n\n        /*\n         * check data operator from group\n         */\n        $check = employeeRepository()->employee()\n            ->selectRaw('count(1) as count')\n            ->where('guid',$id)->first();\n\n        if($",
  "package service\n\nimport (\n\t\"fmt\"\n\t\"testing\"\n\n\tmetav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\t\"k8s.io/client-go/kubernetes/fake\"\n)\n\nfunc Test_NewEvent(t *testing.T) {\n\tt.Log(\"Test_NewEvent: should be able to get a new kubernetes event\")\n\treferencedNode := \"ip-10-10-10-10\"\n\tmsg := fmt.Sprintf(EventMessageInstanceDeregisterFailed, \"i-123456789012\", \"my-load-balancer\", \"some bad error occured\")\n\tevent := newKubernetesEvent(EventReasonInstanceDeregisterFailed, msg, referencedNode)\n\n\tif event.Reason!= string(EventReasonInstanceDeregisterFailed) {\n\t\tt.Fatalf(\"expected event.Reason to be: %v, got: %v\", string(EventReasonInstanceDeregisterFailed), event.Reason)\n\t}\n\n\tif event.InvolvedObject.Name!= referencedNode {\n\t\tt.Fatalf(\"expected event.InvolvedObject.Name to be: %v, got: %v\", referencedNode, event.InvolvedObject.Name)\n\t}\n\n\tif event.Message!= msg {\n\t\tt.Fatalf(\"expected event.Message to be: %v, got: %v\", msg, event.Message)\n\t}\n\n}\n\nfunc Test_PublishEvent(t *testing.T) {\n\tt.Log(\"Test_PublishEvent: should be able to publish kubernetes events\")\n\tkubeClient := fake.NewSimpleClientset()\n\treferencedNode := \"ip-10-10-10-10\"\n\tmsg := fmt.Sprintf(EventMessageInstanceDeregisterFailed, \"i-123456789012\", \"my-load-balancer\", \"some bad error occured\")\n\tevent := newKubernetesEvent(EventReasonInstanceDeregisterFailed, msg, referencedNode)\n\n\tpublishKubernetesEvent(kubeClient, event)\n\texpectedEvents := 1\n\n\tevents, err := kubeClient.CoreV1().Events(EventNamespace).List(metav1.ListOptions{})\n\tif err!= nil {\n\t\tt.Fatalf(\"Test_PublishEvent: expected error not to have occured, %v\", err)\n\t}\n\n\tif len(events.Items)!= expectedEvents {\n\t\tt.Fatalf(\"Test_PublishEvent: expected %v events, found: %v\", expectedEvents, len(events.Items))\n\t}\n}\n",
  "/*******************************************************************************\n * ***** BEGIN LICENSE BLOCK *****\n * Version: MPL 1.1/GPL 2.0/LGPL 2.1\n * \n * The contents of this file are subject to the Mozilla Public License Version\n * 1.1 (the \"License\"); you may not use this file except in compliance with\n * the License. You may obtain a copy of the License at\n * http://www.mozilla.org/MPL/\n * \n * Software distributed under the License is distributed on an \"AS IS\" basis,\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n * for the specific language governing rights and limitations under the\n * License.\n * \n * The Original Code is Opus-College zambia module code.\n * \n * The Initial Developer of the Original Code is\n * Center for Information Services, Radboud University Nijmegen.\n * Portions created by the Initial Developer are Copyright (C) 2008\n * the Initial Developer. All Rights Reserved.\n * \n * Contributor(s):\n *   For Java files, see Javadoc @author tags.\n * \n * Alternatively, the contents of this file may be used under the terms of\n * either the GNU General Public License Version 2 or later (the \"GPL\"), or\n * the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the MPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the MPL, the GPL or the LGPL.\n * \n * ***** END LICENSE BLOCK *****\n ******************************************************************************/\n\n-- Opus College\n-- Updates specific to Zambia\n--\n-- Initial author: Monique in het Veld\n\n\n-------------------------------------------------------\n-- table appVersions\n-------------------------------------------------------\nDELETE FROM opuscollege.appVersions WHERE lower(module) = 'zambia';\n\nINSERT INTO opuscollege.appVersions (module,state,db,dbVersion) VALUES('zambia','A','Y',3.22);\n\n-----------------------------------------------------------\n-- lookup TABLE cardinalTimeUnitStatus\n-----------------------------------------------------------\nDELETE FROM opuscollege.cardinalTimeUnitStatus where lang='en';\n\nINSERT INTO opuscollege.cardinalTimeUnitStatus (lang,code,description) VALUES ('en','5','Waiting for payment');\nINSERT INTO opuscollege.cardinalTimeUnitStatus (lang,code,description) VALUES ('en','6','Waiting for selection');\nINSERT INTO opuscollege.cardinalTimeUnitStatus (lang,code,description) VALUES ('en','7','Customize programme');\nINSERT INTO opuscollege.cardinalTimeUnitStatus (lang,code,description) VALUES ('en','8','Waiting for approval of registration');\nINSERT INTO opuscollege.cardinalTimeUnitStatus (lang,code,description) VALUES ('en','9','Rejected registration');\nINSERT INTO opuscollege.cardinalTimeUnitStatus (lang,code,description) VALUES ('en','10','Actively registered');\nINSERT INTO opuscollege.cardinalTimeUnitStatus (lang,code,description) VALUES ('en','20','Request for change');\n\n-----------------------------------------------------------\n-- lookup TABLE applicantCategory\n-----------------------------------------------------------\nDELETE FROM opuscollege.applicantCategory where lang='en';\n\nINSERT INTO opuscollege.applicantCategory (lang,code,description) VALUES ('en','1','School leaver');\nINSERT INTO opuscollege.applicantCategory (lang,code,description) VALUES ('en','2','Non-school leaver');\nINSERT INTO opuscollege.applicantCategory (lang,code,description) VALUES ('en','3','Special case');\n\n-------------------------------------------------------\n-- lookup table studyPlanStatus\n-------------------------------------------------------\nDELETE FROM opuscollege.studyPlanStatus where lang='en';\n\nINSERT INTO opuscollege.studyPlanStatus (lang,code,description) VALUES ('en','1','Waiting for payment');\nINSERT INTO opuscollege.studyPlanStatus (lang,code,description) VALUES ('en','2','Waiting for selection');\nINSERT INTO opuscollege.studyPlanStatus (lang,code,description) VALUES ('en','3','Approved initial admission');\nINSERT INTO opuscollege.studyPlanStatus (lang,code,description) VALUES ('en','4','Rejected initial admission');\n\nINSERT INTO opuscollege.studyPlanStatus (lang,code,description) VALUES ('en','10','Temporarily inactive');\nINSERT INTO opuscollege.studyPlanStatus (lang,code,description) VALUES ('en','11','Graduated');\nINSERT INTO opuscollege.studyPlanStatus (lang,code,description) VALUES ('en','12','Withdrawn');\n\n\n",
  "const cws = require('../dist/index');\nconst wss = new cws.WebSocketServer({ port: 3000 });\n\nsetTimeout(() => {\n  const client = new cws.WebSocket(\"ws://localhost:3000\");\n  client.on('close', (a, b) => {\n    console.log('In client', a, b);\n  });\n\n  client.on('error', (err) => {\n    console.log(err);\n  });\n}, 1000);\n\nwss.on('connection', (ws) => {\n  // ws.close()\n  ws.terminate();\n\n  ws.on('close', function incoming(code, reason) {\n    console.log('In server', code, reason);\n    // ws.send(data);\n  });\n\n  ws.on('error', (err) => {\n    console.log(\"In server\", err);\n  })\n})\n\n",
  "--------------------------------------------------------------------------------\n--------------------------------------------------------------------------------\nmodule Test.Support\n  ( withTestDatabase\n  ) where\n--------------------------------------------------------------------------------\nimport Test.Prelude\n--------------------------------------------------------------------------------\nimport GramDB\n--------------------------------------------------------------------------------\n\n-- | Helper for creating unique test ids\ntestState :: MVar Int\n{-# NOINLINE testState #-}\ntestState = unsafePerformIO $ newMVar 0\n\n-- | Create a unique ident for the test\nnewTestState :: MonadIO m => m Int\nnewTestState = liftIO $ modifyMVar testState (\\x -> pure (succ x, x))\n\n-- | Create a database name for the test\nmkTestDatabase :: Int -> String\nmkTestDatabase state = \"testDatabase\" <> show state <> \".db\"\n\n-- | Create a database from a 'FilePath'\ninitDatabase :: FilePath -> IO ()\ninitDatabase = undefined\n\n-- | Run a test with its own DB!\nwithTestDatabase\n  :: GramM a -> IO a\nwithTestDatabase = undefined\n",
  "package me.caiying.library.indexlistview;\n\nimport android.annotation.TargetApi;\nimport android.content.Context;\nimport android.database.DataSetObserver;\nimport android.graphics.Canvas;\nimport android.graphics.Color;\nimport android.graphics.PointF;\nimport android.graphics.Rect;\nimport android.graphics.drawable.GradientDrawable;\nimport android.os.Build;\nimport android.os.Parcelable;\nimport android.util.AttributeSet;\nimport android.view.MotionEvent;\nimport android.view.SoundEffectConstants;\nimport android.view.View;\nimport android.view.ViewConfiguration;\nimport android.view.accessibility.AccessibilityEvent;\nimport android.widget.AbsListView;\nimport android.widget.HeaderViewListAdapter;\nimport android.widget.ListAdapter;\nimport android.widget.ListView;\nimport android.widget.SectionIndexer;\n\n/**\n * Created by caiying on 03/02/2016.\n */\npublic class IndexListView extends ListView {\n    /**\n     * List adapter to be implemented for being used with PinnedSectionListView adapter.\n     */\n    public interface PinnedSectionListAdapter extends ListAdapter {\n        /**\n         * This method shall return 'true' if views of given type has to be pinned.\n         */\n        boolean isItemViewTypePinned(int viewType);\n    }\n\n    /**\n     * Wrapper class for pinned section view and its position in the list.\n     */\n    static class PinnedSection {\n        public View view;\n        public int position;\n        public long id;\n    }\n\n\n    // fields used for handling touch events\n    private final Rect mTouchRect = new Rect();\n    private final PointF mTouchPoint = new PointF();\n    private int mTouchSlop;\n    private View mTouchTarget;\n    private MotionEvent mDownEvent;\n\n    // fields used for drawing shadow under a pinned section\n    private GradientDrawable mShadowDrawable;\n    private int mSectionsDistanceY;\n    private int mShadowHeight;\n\n    /**\n     * Delegating listener, can be null.\n     */\n    OnScrollListener mDelegateOnScrollListener;\n\n    /**\n     * Shadow for being recycled, can be null.\n     */\n    PinnedSection mRecycleSection;\n\n    /**\n     * shadow instance with a pinned view, can be null.\n     */\n    PinnedSection mPinnedSection;\n\n    /**\n     * Pinned view Y-translation. We use it to stick pinned view to the next section.\n     */\n    int mTranslateY;\n\n    private IndexScroller mIndexScroller = null;\n\n\n    /**\n     * Scroll listener which does the magic\n     */\n    private final OnScrollListener mOnScrollListener = new OnScrollListener() {\n\n        @Override\n        public void onScrollStateChanged(AbsListView view, int scrollState) {\n            if (mDelegateOnScrollListener!= null) { // delegate\n                mDelegateOnScrollListener.onScrollStateChanged(view, scrollState);\n            }\n        }\n\n        @Override\n        public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCount, int totalItemCount) {\n\n            if (mDelegateOnScrollListener!= null) { // delegate\n                mDelegateOnScrollListener.onScroll(view, firstVisibleItem, visibleItemCount, totalItemCount);\n            }\n\n            // get expected adapter or fail fast\n            ListAdapter adapter = getAdapter();\n            if (adapter == null || visibleItemCount == 0) return; // nothing to do\n\n            final boolean isFirstVisibleItemSection =\n                isItemViewTypePinned(adapter, adapter.getItemViewType(firstVisibleItem));\n\n            if (isFirstVisibleItemSection) {\n                View sectionView = getChildAt(0);\n                if (sectionView.getTop() == getPaddingTop()) { // view sticks to the top, no need for pinned shadow\n                    destroyPinnedShadow();\n                } else { // section doesn't stick to the top, make sure we have a pinned shadow\n                    ensureShadowForPosition(firstVisibleItem, firstVisibleItem, visibleItemCount);\n                }\n\n            } else { // section is not at the first visible position\n                int sectionPosition = findCurrentSectionPosition(firstVisibleItem);\n                if (sectionPosition > -1) { // we have section position\n                    ensureShadowForPosition(sectionPosition, firstVisibleItem, visibleItemCount);\n                } else { // there is no section for the first visible item, destroy shadow\n                    destroyPinnedShadow();\n                }\n            }\n        }\n\n        ;\n\n    };\n\n    /**\n     * Default change observer.\n     */\n    private final DataSetObserver mDataSetObserver = new DataSetObserver() {\n        @Override\n        public void onChanged() {\n            recreatePinnedShadow();\n        }\n\n        ;\n\n        @Override\n        public void onInvalidated() {\n            recreatePinnedShadow();\n        }\n    };\n\n    public IndexListView(Context context) {\n        super(context);\n        initView();\n    }\n\n    public IndexListView(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        initView();\n    }\n\n    public IndexListView(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        initView();\n    }\n\n    @TargetApi(Build.VERSION_CODES.LOLLIPOP)\n    public IndexListView(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {\n        super(context, attrs, defStyleAttr, defStyleRes);\n        initView();\n    }\n\n    private void initView() {\n        setOnScrollListener(mOnScrollListener);\n        mTouchSlop = ViewConfiguration.get(getContext()).getScaledTouchSlop();\n        initShadow(false);\n    }\n\n\n    //-- public API methods\n\n    public void setShadowVisible(boolean visible) {\n        initShadow(visible);\n        if (mPinnedSection!= null) {\n            View v = mPinnedSection.view;\n            invalidate(v.getLeft(), v.getTop(), v.getRight(), v.getBottom() + mShadowHeight);\n        }\n    }\n\n    //-- pinned section drawing methods\n\n    public void initShadow(boolean visible) {\n        if (visible) {\n            if (mShadowDrawable == null) {\n                mShadowDrawable = new GradientDrawable(GradientDrawable.Orientation.TOP_BOTTOM,\n                    new int[]{Color.parseColor(\"#ffa0a0a0\"), Color.parseColor(\"#50a0a0a0\"), Color.parseColor(\"#00a0a0a0\")});\n                mShadowHeight = (int) (8 * getResources().getDisplayMetrics().density);\n            }\n        } else {\n            if (mShadowDrawable!= null) {\n                mShadowDrawable = null;\n                mShadowHeight = 0;\n            }\n        }\n    }\n\n    /**\n     * Create shadow wrapper with a pinned view for a view at given position\n     */\n    void createPinnedShadow(int position) {\n\n        // try to recycle shadow\n        PinnedSection pinnedShadow = mRecycleSection;\n        mRecycleSection = null;\n\n        // create new shadow, if needed\n        if (pinnedShadow == null) pinnedShadow = new PinnedSection();\n        // request new view using recycled view, if such\n        View pinnedView = getAdapter().getView(position, pinnedShadow.view, IndexListView.this);\n\n        // read layout parameters\n        LayoutParams layoutParams = (LayoutParams) pinnedView.getLayoutParams();\n        if (layoutParams == null) {\n            layoutParams = (LayoutParams) generateDefaultLayoutParams();\n            pinnedView.setLayoutParams(layoutParams);\n        }\n\n        int heightMode = MeasureSpec.getMode(layoutParams.height);\n        int heightSize = MeasureSpec.getSize(layoutParams.height);\n\n        if (heightMode == MeasureSpec.UNSPECIFIED) heightMode = MeasureSpec.EXACTLY;\n\n        int maxHeight = getHeight() - getListPaddingTop() - getListPaddingBottom();\n        if (heightSize > maxHeight) heightSize = maxHeight;\n\n        // measure & layout\n        int ws = MeasureSpec.makeMeasureSpec(getWidth() - getListPaddingLeft() - getListPaddingRight(), MeasureSpec.EXACTLY);\n        int hs = MeasureSpec.makeMeasureSpec(heightSize, heightMode);\n        pinnedView.measure(ws, hs);\n        pinnedView.layout(0, 0, pinnedView.getMeasuredWidth(), pinnedView.getMeasuredHeight());\n        mTranslateY = 0;\n\n        // initialize pinned shadow\n        pinnedShadow.view = pinnedView;\n        pinnedShadow.position = position;\n        pinnedShadow.id = getAdapter().getItemId",
  "package es.danpintas.tdi;\n\nimport org.atinject.tck.Tck;\nimport org.atinject.tck.auto.Car;\nimport org.atinject.tck.auto.Convertible;\nimport org.atinject.tck.auto.Drivers;\nimport org.atinject.tck.auto.DriversSeat;\nimport org.atinject.tck.auto.Engine;\nimport org.atinject.tck.auto.FuelTank;\nimport org.atinject.tck.auto.Seat;\nimport org.atinject.tck.auto.Tire;\nimport org.atinject.tck.auto.V8Engine;\nimport org.atinject.tck.auto.accessories.Cupholder;\nimport org.atinject.tck.auto.accessories.SpareTire;\n\nimport junit.framework.Test;\n\n/**\n * Runs the JSR 330 TCK against the library. Supports both static and private injection.\n *\n * @author danpintas\n */\npublic class TckSuite {\n    \n    /**\n     * Runs the test suite.\n     *\n     * @return {@link Test} suite to execute.\n     */\n    public static Test suite() {\n        Injector injector = new BaseInjector(TckSuite::bind);\n        Car car = injector.getInstance(Car.class);\n        return Tck.testsFor(car, true, true);\n    }\n    \n    private static void bind(Binder binder) {\n        binder.bind(Cupholder.class);\n        binder.bind(Seat.class);\n        binder.bind(Seat.class).annotated(Drivers.class).to(DriversSeat.class);\n        binder.bind(FuelTank.class);\n        binder.bind(Tire.class);\n        binder.bind(Tire.class).named(\"spare\").to(SpareTire.class);\n        binder.bind(SpareTire.class);\n        binder.bind(Engine.class).to(V8Engine.class);\n        binder.bind(Car.class).to(Convertible.class);\n    }\n    \n}\n",
  "<?php\nif (!defined('THINK_PATH')) exit();\n    return array( \n        'Mini' => array( \n                    'type' => array( '1'=>false ),//\u4e0d\u540c\u79cd\u7c7b\u7684\u5fc3\u60c5\u662f\u5426\u9700\u8981\u53d1\u9001\u52a8\u6001\n                    'delete' => false, //\u662f\u5426\u662f\u771f\u6b63\u5220\u9664\n                    'icopath' => __PUBLIC__.'/images/biaoqing/',\n            )\n        );\n",
  "body {\n    font-family: sans-serif;\n}\n\n.container {\n    margin: 0 auto;\n    width:80%;\n    max-width: 640px;\n    padding: 1em;\n}\n\n.lighter {\n    box-shadow: 1px 1px 3px 2px rgba(0,0,0,.3);\n    width: 80px;\n    margin: 10px auto;\n}\n\n.light {\n    border-radius: 50%;\n    height: 50px;\n    width: 50px;\n    border: 1px solid black;\n    text-align: center;\n    margin: 10px auto;\n    transition: background.5s\n}\n.switcher {\n    text-align: center;\n    background: red;\n    padding: 1rem;\n    box-sizing: border-box;\n}\n.lighter.active.switcher{\n    background: lime;\n}\n.red.active {background: red}\n.yellow.active {background: yellow}\n.green.active {background: green}",
  "\ufeffusing Aoc2018.Core.Puzzles;\nusing Aoc2018.Day18.Common;\nusing System;\nusing System.Collections.Generic;\nusing System.IO;\n\nnamespace Aoc2018.Day18\n{\n    static class Program\n    {\n        static void Main(string[] args)\n        {\n            Puzzle1();\n\n            Puzzle2();\n        }\n\n        [Puzzle]\n        static void Puzzle1()\n        {\n            var input = File.ReadAllLines(\"input-2018-18.txt\");\n\n            var area = InputParser.Parse(input);\n\n            for (var i = 0; i < 10; i++)\n            {\n                area.Grow();\n            }\n\n            var value = area.ResourceValue;\n\n            Console.WriteLine($\"Day 18 - Puzzle 1: {value}\");\n        }\n\n        [Puzzle]\n        static void Puzzle2()\n        {\n            var input = File.ReadAllLines(\"input-2018-18.txt\");\n\n            var area = InputParser.Parse(input);\n\n            var seen = new Dictionary<string, int>();\n\n            for (var i = 0; i < 1_000_000_000; i++)\n            {\n                area.Grow();\n\n                var s = area.ToString();\n                if (seen.ContainsKey(s))\n                {\n                    var previousRound = seen[s];\n\n                    Console.WriteLine($\"Seen twice (rounds {previousRound} and {i}):\");\n                    Console.WriteLine(s);\n\n                    var delta = i - previousRound;\n\n                    // skip repeating grow cycles\n                    i += (1_000_000_000 - delta - i) / delta * delta;\n\n                    // finish last grows\n                    for (++i; i < 1_000_000_000; i++)\n                    {\n                        area.Grow();\n                    }\n\n                    break;\n                }\n\n                seen[s] = i;\n            }\n\n            Console.WriteLine(area.ToString());\n\n            var value = area.ResourceValue;\n\n            Console.WriteLine($\"Day 18 - Puzzle 2: {value}\");\n        }\n    }\n}\n",
  "@extends('admin.layouts.main')\n@section('sub-header')\n<div class=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n    <div class=\"kt-container  kt-container--fluid \">\n        <div class=\"kt-subheader__main\">\n            <h3 class=\"kt-subheader__title\">\n                Partidas\n            </h3>\n            <span class=\"kt-subheader__separator kt-hidden\"></span>\n            <div class=\"kt-subheader__breadcrumbs\">\n                <a href=\"#\" class=\"kt-subheader__breadcrumbs-home\"><i class=\"flaticon2-shelter\"></i></a>\n                <span class=\"kt-subheader__breadcrumbs-separator\"></span>\n                <a href=\"\" class=\"kt-subheader__breadcrumbs-link\">\n                    Listado de Partidas</a>\n\n                <!-- <span class=\"kt-subheader_breadcrumbs-link kt-subheader_breadcrumbs-link--active\">Active link</span> -->\n            </div>\n        </div>\n    </div>\n</div>\n@stop\n@section('content')\n<!-- begin:: Content -->\n<div class=\"kt-container  kt-container--fluid  kt-grid_item kt-grid_item--fluid\">\n    <div class=\"kt-portlet kt-portlet--mobile\">\n        <div class=\"kt-portlet_head kt-portlet_head--lg\">\n            <div class=\"kt-portlet__head-label\">\n                <span class=\"kt-portlet__head-icon\">\n                    <i class=\"kt-font-brand flaticon-clipboard\"></i>\n                </span>\n                <h3 class=\"kt-portlet__head-title\">\n                    Listado de Partidas\n                </h3>\n            </div>\n            <div class=\"kt-portlet__head-toolbar\">\n                <div class=\"kt-portlet__head-wrapper\">\n                    <div class=\"kt-portlet__head-actions\">\n                        &nbsp;\n                        <button data-toggle=\"modal\"\n                         data-target=\"#modal-crear-partida\"\n                            class=\"btn btn-brand btn btn-primary btn-elevate btn-icon-sm\">\n                            <i class=\"la icon-policeplus\" data-toggle=\"tooltip\" title=\"Registrar\"></i>\n                            Registrar\n                        </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"kt-portlet__body\">\n                \n                    <table class=\"table table-striped- table-bordered table-hover table-checkable\" id=\"tabla_partidas\">\n                        <thead>\n                            <tr>\n                                <th>Nombre</th>\n                                <th>Numero</th>\n                                <th>Editar</th>\n                                <th>Eliminar</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            @foreach ($partidas as $partida)\n                            <tr>\n                                <td>{{ $partida->nombre }}</td>\n                                <td>{{ $partida->numero }}</td>\n                                <td>\n                                    <center>\n                                        <a data-toggle=\"modal\"\n                                        data-target=\"#modal-edit-{{$partida->id}}\"\n                                            class=\"btn btn-label-facebook\">\n                                            <i class=\"icon-policeedit\"></i>Editar</a>\n                                    </center>\n                                </td>\n                                <td>\n                                    <center>\n                                        <button type=\"button\"  class=\"btn btn-label-google btn-label-brand btn-sm\" \n                                        data-toggle=\"modal\"\n                                         data-target=\"#modal-destroy-{{$partida->id}}\">\n                                        <i class=\"icon-policeedit\"></i>\n                                        Eliminar</button>\n                                    </center>\n                                </td>\n                            </tr>\n                            @include('admin.partidas.edit')\n                            @include('admin.partidas.destroy')\n                            @endforeach\n                        </tbody>\n                    </table>\n                </div>\n\n            </div>\n        </div>\n        <!--End Advanced Tables -->\n    </div>\n</div>\n@include('admin.partidas.create')\n@push('styles')\n\n<!--begin::Page Vendors Styles(used by this page) -->\n<link href=\"/assets/vendors/custom/datatables/datatables.bundle.css\" rel=\"stylesheet\" type=\"text/css\" />\n\n\n@endpush\n@push('scripts')\n\n<!--begin::Page Vendors(used by this page) -->\n<script src=\"/assets/vendors/custom/datatables/datatables.bundle.js\" type=\"text/javascript\"></script>\n\n<!--end::Page Vendors -->\n<!--begin::Page Scripts(used by this page) -->\n<script src=\"/assets/js/demo1/pages/crud/datatables/advanced/row-callback.js\" type=\"text/javascript\"></script>\n\n<!--end::Page Scripts -->\n\n<script>\n$(document).ready(function() {\n        $('#tabla_partidas').dataTable({\n            \"bFilter\": true\n        });\n    });\n    $(document).ready(function(){\n          $('[data-toggle=\"tooltip\"]').tooltip();   \n        });\n</script>\n@endpush\n@stop\n",
  "\n// Description: Java 11 XML SAX Element Handler for ServiceType\n\n/*\n *\torg.msscf.msscf.CFSec\n *\n *\tCopyright (c) 2020 Mark Stephen Sobkow\n *\t\n *\tMSS Code Factory CFSec 2.13 Security Essentials\n *\t\n *\tCopyright 2020-2021 Mark Stephen Sobkow mark.sobkow@gmail.com\n *\t\n *\tLicensed under the Apache License, Version 2.0 (the \"License\");\n *\tyou may not use this file except in compliance with the License.\n *\tYou may obtain a copy of the License at\n *\t\n *\thttp://www.apache.org/licenses/LICENSE-2.0\n *\t\n *\tUnless required by applicable law or agreed to in writing, software\n *\tdistributed under the License is distributed on an \"AS IS\" BASIS,\n *\tWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\tSee the License for the specific language governing permissions and\n *\tlimitations under the License.\n *\n *\tManufactured by MSS Code Factory 2.12\n */\n\npackage org.msscf.msscf.v2_13.cfsec.CFSecSaxLoader;\n\nimport java.math.*;\nimport java.sql.*;\nimport java.text.*;\nimport java.util.*;\nimport org.apache.commons.codec.binary.Base64;\nimport org.xml.sax.*;\nimport org.msscf.msscf.v2_13.cflib.CFLib.*;\nimport org.msscf.msscf.v2_13.cfsec.CFSec.*;\nimport org.msscf.msscf.v2_13.cfsec.CFSecObj.*;\n\n/*\n *\tCFSecSaxLoaderServiceTypeParse XML SAX Element Handler implementation\n *\tfor ServiceType.\n */\npublic class CFSecSaxLoaderServiceType\n\textends CFLibXmlCoreElementHandler\n{\n\tpublic CFSecSaxLoaderServiceType( CFSecSaxLoader saxLoader ) {\n\t\tsuper( saxLoader );\n\t}\n\n\tpublic void startElement(\n\t\tString\t\turi,\n\t\tString\t\tlocalName,\n\t\tString\t\tqName,\n\t\tAttributes\tattrs )\n\tthrows SAXException\n\t{\n\t\tfinal String S_ProcName = \"startElement\";\n\t\tICFSecServiceTypeObj origBuff = null;\n\t\tICFSecServiceTypeEditObj editBuff = null;\n\t\t// Common XML Attributes\n\t\tString attrId = null;\n\t\t// ServiceType Attributes\n\t\tString attrDescription = null;\n\t\t// ServiceType References\n\t\t// Attribute Extraction\n\t\tString attrLocalName;\n\t\tint numAttrs;\n\t\tint idxAttr;\n\t\tfinal String S_LocalName = \"LocalName\";\n\t\ttry {\n\t\t\tassert qName.equals( \"ServiceType\" );\n\n\t\t\tCFSecSaxLoader saxLoader = (CFSecSaxLoader)getParser();\n\t\t\tif( saxLoader == null ) {\n\t\t\t\tthrow new CFLibNullArgumentException( getClass(),\n\t\t\t\t\tS_ProcName,\n\t\t\t\t\t0,\n\t\t\t\t\t\"getParser()\" );\n\t\t\t}\n\n\t\t\tICFSecSchemaObj schemaObj = saxLoader.getSchemaObj();\n\t\t\tif( schemaObj == null ) {\n\t\t\t\tthrow new CFLibNullArgumentException( getClass(),\n\t\t\t\t\tS_ProcName,\n\t\t\t\t\t0,\n\t\t\t\t\t\"getParser().getSchemaObj()\" );\n\t\t\t}\n\n\t\t\t// Instantiate an edit buffer for the parsed information\n\t\t\torigBuff = (ICFSecServiceTypeObj)schemaObj.getServiceTypeTableObj().newInstance();\n\t\t\teditBuff = (ICFSecServiceTypeEditObj)origBuff.beginEdit();\n\n\t\t\t// Extract Attributes\n\t\t\tnumAttrs = attrs.getLength();\n\t\t\tfor( idxAttr = 0; idxAttr < numAttrs; idxAttr++ ) {\n\t\t\t\tattrLocalName = attrs.getLocalName( idxAttr );\n\t\t\t\tif( attrLocalName.equals( \"Id\" ) ) {\n\t\t\t\t\tif( attrId!= null ) {\n\t\t\t\t\t\tthrow new CFLibUniqueIndexViolationException( getClass(),\n\t\t\t\t\t\t\tS_ProcName,\n\t\t\t\t\t\t\tS_LocalName,\n\t\t\t\t\t\t\tattrLocalName );\n\t\t\t\t\t}\n\t\t\t\t\tattrId = attrs.getValue( idxAttr );\n\t\t\t\t}\n\t\t\t\telse if( attrLocalName.equals( \"Description\" ) ) {\n\t\t\t\t\tif( attrDescription!= null ) {\n\t\t\t\t\t\tthrow new CFLibUniqueIndexViolationException( getClass(),\n\t\t\t\t\t\t\tS_ProcName,\n\t\t\t\t\t\t\tS_LocalName,\n\t\t\t\t\t\t\tattrLocalName );\n\t\t\t\t\t}\n\t\t\t\t\tattrDescription = attrs.getValue( idxAttr );\n\t\t\t\t}\n\t\t\t\telse if( attrLocalName.equals( \"schemaLocation\" ) ) {\n\t\t\t\t\t// ignored\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthrow new CFLibUnrecognizedAttributeException( getClass(),\n\t\t\t\t\t\tS_ProcName,\n\t\t\t\t\t\tgetParser().getLocationInfo(),\n\t\t\t\t\t\tattrLocalName );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Ensure that required attributes have values\n\t\t\tif( attrDescription == null ) {\n\t\t\t\tthrow new CFLibNullArgumentException( getClass(),\n\t\t\t\t\tS_ProcName,\n\t\t\t\t\t0,\n\t\t\t\t\t\"Description\" );\n\t\t\t}\n\n\t\t\t// Save named attributes to context\n\t\t\tCFLibXmlCoreContext curContext = getParser().getCurContext();\n\t\t\tcurContext.putNamedValue( \"Id\", attrId );\n\t\t\tcurContext.putNamedValue( \"Description\", attrDescription );\n\n\t\t\t// Convert string attributes to native Java types\n\t\t\t// and apply the converted attributes to the editBuff.\n\n\t\t\tInteger natId;\n\t\t\tif( ( attrId!= null ) && ( attrId.length() > 0 ) ) {\n\t\t\t\tnatId = Integer.valueOf( Integer.parseInt( attrId ) );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnatId = null;\n\t\t\t}\n\t\t\tString natDescription = attrDescription;\n\t\t\teditBuff.setRequiredDescription( natDescription );\n\n\t\t\t// Get the scope/container object\n\n\t\t\tCFLibXmlCoreContext parentContext = curContext.getPrevContext();\n\t\t\tObject scopeObj;\n\t\t\tif( parentContext!= null ) {\n\t\t\t\tscopeObj = parentContext.getNamedValue( \"Object\" );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tscopeObj = null;\n\t\t\t}\n\n\t\t\tCFSecSaxLoader.LoaderBehaviourEnum loaderBehaviour = saxLoader.getServiceTypeLoaderBehaviour();\n\t\t\tICFSecServiceTypeEditObj editServiceType = null;\n\t\t\tICFSecServiceTypeObj origServiceType = (ICFSecServiceTypeObj)schemaObj.getServiceTypeTableObj().readServiceTypeByUDescrIdx( editBuff.getRequiredDescription() );\n\t\t\tif( origServiceType == null ) {\n\t\t\t\teditServiceType = editBuff;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tswitch( loaderBehaviour ) {\n\t\t\t\t\tcase Insert:\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Update:\n\t\t\t\t\t\teditServiceType = (ICFSecServiceTypeEditObj)origServiceType.beginEdit();\n\t\t\t\t\t\teditServiceType.setRequiredDescription( editBuff.getRequiredDescription() );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Replace:\n\t\t\t\t\t\teditServiceType = (ICFSecServiceTypeEditObj)origServiceType.beginEdit();\n\t\t\t\t\t\teditServiceType.deleteInstance();\n\t\t\t\t\t\teditServiceType = null;\n\t\t\t\t\t\torigServiceType = null;\n\t\t\t\t\t\teditServiceType = editBuff;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( editServiceType!= null ) {\n\t\t\t\tif( origServiceType!= null ) {\n\t\t\t\t\teditServiceType.update();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\torigServiceType = (ICFSecServiceTypeObj)editServiceType.create();\n\t\t\t\t}\n\t\t\t\teditServiceType = null;\n\t\t\t}\n\n\t\t\tcurContext.putNamedValue( \"Object\", origServiceType );\n\t\t}\n\t\tcatch( RuntimeException e ) {\n\t\t\tthrow new SAXException( \"Near \" + getParser().getLocationInfo() + \": Caught and rethrew \" + e.getClass().getName() + \" - \" + e.getMessage(),\n\t\t\t\te );\n\t\t}\n\t\tcatch( Error e ) {\n\t\t\tthrow new SAXException( \"Near \" + getParser().getLocationInfo() + \": Caught and rethrew \" + e.getClass().getName() + \" - \" + e.getMessage() );\n\t\t}\n\t}\n\n\tpublic void endElement(\n\t\tString\t\turi,\n\t\tString\t\tlocalName,\n\t\tString\t\tqName )\n\tthrows SAXException\n\t{\n\t}\n}\n",
  "#!/bin/bash\n\n# if Makefile already exists, just rename it\nif [ -f Makefile ]; then\n  rm Makefile\nfi\nsuffix=.c\n# generate make file body\nsource_file_list=$(ls *${suffix})\nfor file in $source_file_list ;do\n  target_file_list=\"${target_file_list} ${file/${suffix}/}\"\n  target_list=\"${target_list}${file/$suffix/}:\\n\\tgcc -g -o ${file/${suffix}/} $file\\n\"\ndone\n\necho -e \".PHONY : ALL\" >> Makefile\necho -e \"ALL : $target_file_list\\n\" >> Makefile\necho -e $target_list >> Makefile\necho -e \".PHONY : clean\" >> Makefile\necho -e \"clean : \\n\\t rm -rf ${target_file_list}\" >> Makefile\n\n# tip for user\necho -e \"INFO: done sucessfully\"\n",
  "package common.protocol\n\n/**\n * Sharded Entry Interaction Protocol.\n *\n * @author dbolene\n */\nobject ShardingProtocol {\n\n  case class EntryEnvelope(id: String, payload: Any)\n\n}\n",
  "/*\n * Copyright 2017-present Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n#pragma once\n\nnamespace wangle {\n\nclass SSLStats {\n public:\n  virtual ~SSLStats() noexcept {}\n\n  // downstream\n  virtual void recordSSLAcceptLatency(int64_t latency) noexcept = 0;\n  virtual void recordTLSTicket(bool ticketNew, bool ticketHit) noexcept = 0;\n  virtual void recordSSLSession(bool sessionNew, bool sessionHit, bool foreign)\n    noexcept = 0;\n  virtual void recordSSLSessionRemove() noexcept = 0;\n  virtual void recordSSLSessionFree(uint32_t freed) noexcept = 0;\n  virtual void recordSSLSessionSetError(uint32_t err) noexcept = 0;\n  virtual void recordSSLSessionGetError(uint32_t err) noexcept = 0;\n  virtual void recordClientRenegotiation() noexcept = 0;\n  virtual void recordSSLClientCertificateMismatch() noexcept = 0;\n  virtual void recordTLSTicketRotation(bool valid) noexcept = 0;\n\n  // upstream\n  virtual void recordSSLUpstreamConnection(bool handshake) noexcept = 0;\n  virtual void recordSSLUpstreamConnectionError(bool verifyError) noexcept = 0;\n\n};\n\n} // namespace wangle\n",
  "### Setup a LXD for remote access\n\nOn the LXD server you will need to allow access over the network by setting the following configs:\n\n     lxc config set core.https_address [::]:8443\n     lxc config set core.trust_password 'Super secret password'\n\n### Connect to LXD server\n\nTo connect to the LXD server you will need a certificate for the client.\n\nHere is how to create one in PHP:\n\n```\n<?php\n\n// Create certificate\n$dn = array(\n    \"countryName\"            => \"UK\",\n    \"stateOrProvinceName\"    => \"Isle Of Wight\",\n    \"localityName\"           => \"Cowes\",\n    \"organizationName\"       => \"Open Sauce Systems\",\n    \"organizationalUnitName\" => \"Dev\",\n    \"commonName\"             => \"127.0.0.1\",\n    \"emailAddress\"           => \"info@opensauce.systems\"\n);\n\n// Generate certificate\n$privkey = openssl_pkey_new();\n$cert    = openssl_csr_new($dn, $privkey);\n$cert    = openssl_csr_sign($cert, null, $privkey, 365);\n\n// Generate strings\nopenssl_x509_export($cert, $certString);\nopenssl_pkey_export($privkey, $privkeyString);\n\n// Save to file\n$pemFile = __DIR__.'/client.pem';\nfile_put_contents($pemFile, $certString.$privkeyString);\n\n```\n\nOnce you have a ssl certificate, you can use this to connect to the LXD server:\n\n```\nrequire \"vendor/autoload.php\";\n\nuse GuzzleHttp\\Client as GuzzleClient;\nuse Http\\Adapter\\Guzzle6\\Client as GuzzleAdapter;\n\n$config = [\n   'verify' => false,\n    'cert' => [\n        __DIR__.'/client.pem',\n        ''\n    ]\n];\n\n$guzzle = new GuzzleClient($config);\n$adapter = new GuzzleAdapter($guzzle);\n\n$lxd = new \\Opensaucesystems\\Lxd\\Client($adapter);\n\n$lxd->setUrl('https://lxd.example.com:8443');\n\n```\n",
  "//\n// Created by forgot on 2019-08-03.\n//\n/*1016 \u90e8\u5206A+B (15 point(s))*/\n//\u6b63\u6574\u6570 A \u7684\u201cD\u200bA\u200b\u200b\uff08\u4e3a 1 \u4f4d\u6574\u6570\uff09\u90e8\u5206\u201d\u5b9a\u4e49\u4e3a\u7531 A \u4e2d\u6240\u6709 D\u200bA\u200b\u200b \u7ec4\u6210\u7684\u65b0\u6574\u6570 P\u200bA\u200b\u200b\u3002\u4f8b\u5982\uff1a\u7ed9\u5b9a A=3862767\uff0cD\u200bA\u200b\u200b=6\uff0c\u5219 A \u7684\u201c6 \u90e8\u5206\u201dP\u200bA\u200b\u200b \u662f 66\uff0c\u56e0\u4e3a A \u4e2d\u6709 2 \u4e2a 6\u3002\n//\u73b0\u7ed9\u5b9a A\u3001D\u200bA\u200b\u200b\u3001B\u3001D\u200bB\u200b\u200b\uff0c\u8bf7\u7f16\u5199\u7a0b\u5e8f\u8ba1\u7b97 P\u200bA\u200b\u200b+P\u200bB\u200b\u200b\u3002\n//\u8f93\u5165\u683c\u5f0f\uff1a\n//\u8f93\u5165\u5728\u4e00\u884c\u4e2d\u4f9d\u6b21\u7ed9\u51fa A\u3001D\u200bA\u200b\u200b\u3001B\u3001D\u200bB\u200b\u200b\uff0c\u4e2d\u95f4\u4ee5\u7a7a\u683c\u5206\u9694\uff0c\u5176\u4e2d 0<A,B<10\u200b^10\u200b\u200b\u3002\n//\u8f93\u51fa\u683c\u5f0f\uff1a\n//\u5728\u4e00\u884c\u4e2d\u8f93\u51fa P\u200bA\u200b\u200b+P\u200bB\u200b\u200b \u7684\u503c\u3002\n//\u8f93\u5165\u6837\u4f8b 1\uff1a\n//3862767 6 13530293 3\n//\u8f93\u51fa\u6837\u4f8b 1\uff1a\n//399\n//\u8f93\u5165\u6837\u4f8b 2\uff1a\n//3862767 1 13530293 8\n//\u8f93\u51fa\u6837\u4f8b 2\uff1a\n//0\n\n#include <stdio.h>\n//\u7528\u6c42\u4f59\u6570\u6cd5\u6765\u5404\u4f4d\u6570\u503c\n//int main() {\n//    int A, Da, B, Db;\n//    scanf(\"%d %d %d %d\", &A, &Da, &B, &Db);\n//    int Pa=0,Pb=0;\n//    while (A!=0){\n//        if (A%10==Da){\n//            Pa = Pa*10+Da;\n//        }\n//        A = A/10;\n//    }\n//\n//    while (B!=0){\n//        if (B%10==Db){\n//            Pb = Pb*10+Db;\n//        }\n//        B = B/10;\n//    }\n//\n//    printf(\"%d\", Pa + Pb);\n//\n//    return 0;\n//}\n\n\n//\u6cd52 \u5b57\u7b26\u4e32\u641c\u7d22\u7684\u6570\u5b57\u51fa\u73b0\u7684\u4e2a\u6570\n//int main() {\n//    char A[10], B[10];\n//    int Da, Db;\n//    int Pa = 0;\n//    int Pb = 0;\n//    scanf(\"%s %d %s %d\", A, &Da, B, &Db);\n//    for (int i = 0; i < strlen(A); i++) {\n//        if (A[i] == Da + '0') {\n//            Pa = Pa * 10 + Da;\n//        }\n//    }\n//\n//    for (int i = 0; i < strlen(B); i++) {\n//        if (B[i] == Db + '0') {\n//            Pb = Pb * 10 + Db;\n//        }\n//    }\n//\n//    printf(\"%d\", Pa + Pb);\n//\n//    return 0;\n//}\n\n\n",
  "\ufeffusing System;\nusing System.Threading.Tasks;\nusing Dapr;\nusing Dapr.Actors;\nusing Dapr.Actors.Client;\nusing Microsoft.AspNetCore.Mvc;\nusing Microsoft.AspNetCore.SignalR;\nusing Microsoft.eShopOnContainers.Services.Ordering.API.Actors;\nusing Microsoft.eShopOnContainers.Services.Ordering.API.Model;\nusing Microsoft.Extensions.Logging;\nusing Microsoft.Extensions.Options;\nusing Microsoft.eShopOnContainers.Services.Ordering.API.IntegrationEvents;\n\nnamespace Microsoft.eShopOnContainers.Services.Ordering.API.Controllers\n{\n    [Route(\"api/v1/[controller]\")]\n    [ApiController]\n    public class UpdateOrderStatusEventController : ControllerBase\n    {\n        private const string DaprPubSubName = \"pubsub\";\n\n        private readonly IOrderRepository _orderRepository;\n        private readonly IHubContext<NotificationsHub> _hubContext;\n        private readonly ILogger<UpdateOrderStatusEventController> _logger;\n\n        public UpdateOrderStatusEventController(IOrderRepository orderRepository,\n            IHubContext<NotificationsHub> hubContext, ILogger<UpdateOrderStatusEventController> logger)\n        {\n            _orderRepository = orderRepository?? throw new ArgumentNullException(nameof(orderRepository));\n            _hubContext = hubContext?? throw new ArgumentNullException(nameof(hubContext));\n            _logger = logger?? throw new ArgumentNullException(nameof(logger));\n        }\n\n        [HttpPost(\"OrderStatusChangedToSubmitted\")]\n        [Topic(DaprPubSubName, \"OrderStatusChangedToSubmittedIntegrationEvent\")]\n        public async Task Handle(OrderStatusChangedToSubmittedIntegrationEvent integrationEvent,\n            [FromServices] IOptions<OrderingSettings> settings, [FromServices] IEmailService emailService)\n        {\n            // Gets the order details from Actor state.\n            var actorId = new ActorId(integrationEvent.OrderId.ToString());\n            var orderingProcess = ActorProxy.Create<IOrderingProcessActor>(actorId, nameof(OrderingProcessActor));\n            //\n            var actorOrder = await orderingProcess.GetOrderDetails();\n            var readModelOrder = Model.Order.FromActorState(integrationEvent.OrderId, actorOrder);\n\n            // Add the order to the read model so it can be queried from the API.\n            // It may already exist if this event has been handled before (at-least-once semantics).\n            readModelOrder = await _orderRepository.AddOrGetOrderAsync(readModelOrder);\n\n            // Send a SignalR notification to the client.\n            await SendNotificationAsync(readModelOrder.OrderNumber, integrationEvent.OrderStatus,\n                integrationEvent.BuyerName);\n\n            // Send a confirmation e-mail if enabled.\n            if (settings.Value.SendConfirmationEmail)\n            {\n                await emailService.SendOrderConfirmation(readModelOrder);\n            }\n        }\n\n        [HttpPost(\"OrderStatusChangedToAwaitingStockValidation\")]\n        [Topic(DaprPubSubName, \"OrderStatusChangedToAwaitingStockValidationIntegrationEvent\")]\n        public Task Handle(OrderStatusChangedToAwaitingStockValidationIntegrationEvent integrationEvent)\n        {\n            // Save the updated status in the read model and notify the client via SignalR.\n            return UpdateReadModelAndSendNotificationAsync(integrationEvent.OrderId,\n                integrationEvent.OrderStatus, integrationEvent.Description, integrationEvent.BuyerName);\n        }\n\n        [HttpPost(\"OrderStatusChangedToValidated\")]\n        [Topic(DaprPubSubName, \"OrderStatusChangedToValidatedIntegrationEvent\")]\n        public Task Handle(OrderStatusChangedToValidatedIntegrationEvent integrationEvent)\n        {\n            // Save the updated status in the read model and notify the client via SignalR.\n            return UpdateReadModelAndSendNotificationAsync(integrationEvent.OrderId,\n                integrationEvent.OrderStatus, integrationEvent.Description, integrationEvent.BuyerName);\n        }\n\n        [HttpPost(\"OrderStatusChangedToPaid\")]\n        [Topic(DaprPubSubName, \"OrderStatusChangedToPaidIntegrationEvent\")]\n        public Task Handle(OrderStatusChangedToPaidIntegrationEvent integrationEvent)\n        {\n            // Save the updated status in the read model and notify the client via SignalR.\n            return UpdateReadModelAndSendNotificationAsync(integrationEvent.OrderId,\n                integrationEvent.OrderStatus, integrationEvent.Description, integrationEvent.BuyerName);\n        }\n\n        [HttpPost(\"OrderStatusChangedToShipped\")]\n        [Topic(DaprPubSubName, \"OrderStatusChangedToShippedIntegrationEvent\")]\n        public Task Handle(OrderStatusChangedToShippedIntegrationEvent integrationEvent)\n        {\n            // Save the updated status in the read model and notify the client via SignalR.\n            return UpdateReadModelAndSendNotificationAsync(integrationEvent.OrderId,\n                integrationEvent.OrderStatus, integrationEvent.Description, integrationEvent.BuyerName);\n        }\n\n        [HttpPost(\"OrderStatusChangedToCancelled\")]\n        [Topic(DaprPubSubName, \"OrderStatusChangedToCancelledIntegrationEvent\")]\n        public Task Handle(OrderStatusChangedToCancelledIntegrationEvent integrationEvent)\n        {\n            // Save the updated status in the read model and notify the client via SignalR.\n            return UpdateReadModelAndSendNotificationAsync(integrationEvent.OrderId,\n                integrationEvent.OrderStatus, integrationEvent.Description, integrationEvent.BuyerName);\n        }\n\n        private async Task UpdateReadModelAndSendNotificationAsync(Guid orderId, string orderStatus,\n            string description, string buyerName)\n        {\n            var order = await _orderRepository.GetOrderByIdAsync(orderId);\n            if (order!= null)\n            {\n                order.OrderStatus = orderStatus;\n                order.Description = description;\n\n                await _orderRepository.UpdateOrderAsync(order);\n                await SendNotificationAsync(order.OrderNumber, orderStatus, buyerName);\n            }\n        }\n\n        private Task SendNotificationAsync(int orderNumber, string orderStatus, string buyerName)\n        {\n            return _hubContext.Clients\n               .Group(buyerName)\n               .SendAsync(\"UpdatedOrderState\", new { OrderNumber = orderNumber, Status = orderStatus });\n        }\n    }\n}",
  "import {ParseFragment, RegRepository, RegRepositoryToken} from '../interface/index';\nimport { NumericParseService } from './numeric-parse.service';\nimport { isNil } from 'lodash';\nimport { Inject, Injectable} from '@angular/core';\n\n@Injectable()\nexport class RegParseService {\n  constructor(\n    @Inject(RegRepositoryToken)\n    public readonly regRepo:RegRepository,\n    public readonly numericPareService:NumericParseService,\n  ) {}\n\n  public parse(operand:ParseFragment,length:number):string {\n    if(isNil(this.regRepo.get(operand.code))) {\n      return operand.code;\n    }\n    return this.numericPareService.comp(this.regRepo.get(operand.code),length);\n  }\n}\n",
  "<?php\n\nnamespace DCS\\User\\CoreBundle\\DependencyInjection\\Compiler;\n\nuse Symfony\\Component\\DependencyInjection\\Compiler\\CompilerPassInterface;\nuse Symfony\\Component\\DependencyInjection\\ContainerBuilder;\nuse Symfony\\Component\\DependencyInjection\\Exception\\ServiceNotFoundException;\n\nclass RepositoryCompilerPass implements CompilerPassInterface\n{\n    public function process(ContainerBuilder $container)\n    {\n        $repositoryService = $container->getParameter('dcs_user.core.repository_service');\n\n        if (!$container->has($repositoryService)) {\n            throw new ServiceNotFoundException($repositoryService);\n        }\n\n        $container->setAlias('dcs_user.repository', $repositoryService);\n    }\n}\n",
  "require'migration_helpers'\nclass CreateReferenceLogs < ActiveRecord::Migration\n  def self.up\n    create_table :reference_logs do |t|\n      t.integer :channel_id\n      t.integer :tape_id\n      t.integer :start_at\n      t.integer :end_at\n\n      t.timestamps\n    end\n\t\tadd_index :reference_logs, [:channel_id, :tape_id]\n\t\tforeign_key :reference_logs, :channel_id, :delete => \"cascade\"\n\t\tforeign_key :reference_logs, :tape_id, :delete => \"cascade\"\n  end\n\n  def self.down\n\t\tdrop_foreign_key :reference_logs, :channel_id\n\t\tdrop_foreign_key :reference_logs, :tape_id\n    drop_table :reference_logs\n  end\nend\n",
  "### [UnrealEngine.Framework](./UnrealEngine-Framework.md 'UnrealEngine.Framework')\r\n## Blueprint Class\r\nAn asset that provides an intuitive node-based interface  \r\n```csharp\r\npublic class Blueprint :\r\nSystem.IEquatable<UnrealEngine.Framework.Blueprint>\r\n```\r\nInheritance [System.Object](https://docs.microsoft.com/en-us/dotnet/api/System.Object 'System.Object') &#129106; Blueprint  \r\n\r\nImplements [System.IEquatable&lt;](https://docs.microsoft.com/en-us/dotnet/api/System.IEquatable-1 'System.IEquatable`1')[Blueprint](./Blueprint.md 'UnrealEngine.Framework.Blueprint')[&gt;](https://docs.microsoft.com/en-us/dotnet/api/System.IEquatable-1 'System.IEquatable`1')  \r\n### Properties\r\n- [IsCreated](./Blueprint-IsCreated.md 'UnrealEngine.Framework.Blueprint.IsCreated')\r\n### Methods\r\n- [Equals(UnrealEngine.Framework.Blueprint)](./Blueprint-Equals(Blueprint).md 'UnrealEngine.Framework.Blueprint.Equals(UnrealEngine.Framework.Blueprint)')\r\n- [GetHashCode()](./Blueprint-GetHashCode().md 'UnrealEngine.Framework.Blueprint.GetHashCode()')\r\n- [Load(string)](./Blueprint-Load(string).md 'UnrealEngine.Framework.Blueprint.Load(string)')\r\n",
  "\n        \n    <html>    \n        <div id=\"notfound\">\n            <div class=\"notfound\">\n                <div class=\"notfound-404\">\n                    <h3>Oops!</h3>\n                    <h1><span>5</span><span>0</span><span>0</span></h1>\n                </div>\n                <h2>If possible we will resend the revised offer</h2>\n            </div>\n        </div>\n        </html>\n    \n        <style>\n            * {\n      -webkit-box-sizing: border-box;\n              box-sizing: border-box;\n    }\n    \n    body {\n      padding: 0;\n      margin: 0;\n    }\n    \n    #notfound {\n      position: relative;\n      height: 100vh;\n    }\n    \n    #notfound.notfound {\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      -webkit-transform: translate(-50%, -50%);\n          -ms-transform: translate(-50%, -50%);\n              transform: translate(-50%, -50%);\n    }\n    \n   .notfound {\n      max-width: 520px;\n      width: 100%;\n      line-height: 1.4;\n      text-align: center;\n    }\n    \n   .notfound.notfound-404 {\n      position: relative;\n      height: 240px;\n    }\n    \n   .notfound.notfound-404 h1 {\n      font-family: 'Montserrat', sans-serif;\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      -webkit-transform: translate(-50%, -50%);\n          -ms-transform: translate(-50%, -50%);\n              transform: translate(-50%, -50%);\n      font-size: 252px;\n      font-weight: 900;\n      margin: 0px;\n      color: #262626;\n      text-transform: uppercase;\n      letter-spacing: -40px;\n      margin-left: -20px;\n    }\n    \n   .notfound.notfound-404 h1>span {\n      text-shadow: -8px 0px 0px #fff;\n    }\n    \n   .notfound.notfound-404 h3 {\n      font-family: 'Cabin', sans-serif;\n      position: relative;\n      font-size: 16px;\n      font-weight: 700;\n      text-transform: uppercase;\n      color: #262626;\n      margin: 0px;\n      letter-spacing: 3px;\n      padding-left: 6px;\n    }\n    \n   .notfound h2 {\n      font-family: 'Cabin', sans-serif;\n      font-size: 20px;\n      font-weight: 400;\n      text-transform: uppercase;\n      color: #000;\n      margin-top: 0px;\n      margin-bottom: 25px;\n    }\n    \n    @media only screen and (max-width: 767px) {\n     .notfound.notfound-404 {\n        height: 200px;\n      }\n     .notfound.notfound-404 h1 {\n        font-size: 200px;\n      }\n    }\n    \n    @media only screen and (max-width: 480px) {\n     .notfound.notfound-404 {\n        height: 162px;\n      }\n     .notfound.notfound-404 h1 {\n        font-size: 162px;\n        height: 150px;\n        line-height: 162px;\n      }\n     .notfound h2 {\n        font-size: 16px;\n      }\n    }\n    \n    \n            </style>",
  "<?php namespace Umroh\\Users\\Models;\n\nuse Model;\n\nuse Umrohcom\\Provinces\\Models\\Province;\nuse Umrohcom\\Cities\\Models\\City;\n\n/**\n * Model\n */\nclass User extends Model\n{\n   // use \\October\\Rain\\Database\\Traits\\Validation;\n    \n    /*\n     * Disable timestamps by default.\n     * Remove this line if timestamps are defined in the database table.\n     */\n    public $timestamps = false;\n\n    protected $connection ='mysql_account';\n\n\n    /**\n     * @var string The database table used by the model.\n     */\n    public $table = 'users';\n\n    /**\n     * @var array Guarded fields\n     */\n    protected $guarded = ['*'];\n\n    /**\n     * @var array Fillable fields\n     */\n    protected $fillable = [];\n\n    /**\n     * @var array Relations\n     */\n    public $hasOne = [\n        'partner' => ['umroh\\Partners\\Models\\Partner', 'key' => 'user_id', 'otherKey' => 'id'],\n        'passport' => ['umroh\\Passports\\Models\\Passport', 'key' => 'user_id', 'otherKey' => 'id']\n    ];\n    public $hasMany = [\n       'review' => ['umroh\\Reviews\\Models\\Review', 'key' => 'user_id'],\n       'reward' => ['umroh\\Rewards\\Models\\Reward', 'key' => 'owner_id'],\n       'rewardClaim' => ['umroh\\Rewards\\Models\\RewardClaim', 'key' => 'user_id'],\n        'hotelRequest' => ['umroh\\HotelRequests\\Models\\HotelRequest', 'key' => 'user_id'],\n        'packagetransaction' => ['umroh\\PackageTransactions\\Models\\PackageTransaction', 'key' => 'user_id'],\n        'quotationSender' => ['umroh\\Quotations\\Models\\Quotation', 'key' =>'sender_id'],\n        'quotationReceiver' => ['umroh\\Quotations\\Models\\Quotation', 'key' =>'receiver_id']\n    ];\n    public $belongsTo = [\n        'province' => ['umroh\\provinces\\Models\\province', 'key' => 'province_id', 'otherKey' => 'id'],\n        'city' => ['umroh\\Cities\\Models\\City', 'key' => 'city_id', 'otherKey' => 'id']\n    ];\n    public $belongsToMany = [];\n    public $morphTo = [];\n    public $morphOne = [];\n    public $morphMany = [];\n    public $attachOne = [];\n    public $attachMany = [];\n\n    public function getProvinceOptions()\n    {\n\n        $provinces = Province::lists('name', 'id');\n\n        return $provinces;\n    }\n\n    public function getCityOptions()\n    {\n        if (isset($this->province->id))\n        {\n            $cities = City::where('province_id', '=', $this->province->id)->lists('name', 'id');\n        }\n        else\n        {\n            $cities = City::lists('name', 'id');\n        }\n\n        return $cities;\n    }\n\n\n    public function getVerifiedHelperAttribute()\n    {\n        if ($this->verified == 0)\n            return 'Belum Verifikasi';\n        else if ($this->verified == 1)\n            return 'Verifikasi';\n    }\n}\n",
  "# This file is auto-generated by AWSMetadata.jl using AWS using AWS.AWSServices: location using AWS.Compat using AWS.UUIDs \"\"\" associate_tracker_consumer(consumer_arn, tracker_name) associate_tracker_consumer(consumer_arn, tracker_name, params::Dict{String,<:Any}) Creates an association between a geofence collection and a tracker resource. This allows the tracker resource to communicate location data to the linked geofence collection. You can associate up to five geofence collections to each tracker resource. Currently not supported \u2014 Cross-account configurations, such as creating associations between a tracker resource in one account and a geofence collection in another account. # Arguments - `consumer_arn`: The Amazon Resource Name (ARN) for the geofence collection to be associated to tracker resource. Used when you need to specify a resource across all AWS. Format example: arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollectionConsumer - `tracker_name`: The name of the tracker resource to be associated with a geofence collection. \"\"\" function associate_tracker_consumer( ConsumerArn, TrackerName; aws_config::AbstractAWSConfig=global_aws_config() ) return location( \"POST\", \"/tracking/v0/trackers/$(TrackerName)/consumers\", Dict{String,Any}(\"ConsumerArn\" => ConsumerArn); aws_config=aws_config, feature_set=SERVICE_FEATURE_SET, ) end function associate_tracker_consumer( ConsumerArn, TrackerName, params::AbstractDict{String}; aws_config::AbstractAWSConfig=global_aws_config(), ) return location( \"POST\", \"/tracking/v0/trackers/$(TrackerName)/consumers\", Dict{String,Any}( mergewith(_merge, Dict{String,Any}(\"ConsumerArn\" => ConsumerArn), params) ); aws_config=aws_config, feature_set=SERVICE_FEATURE_SET, ) end \"\"\" batch_delete_device_position_history(device_ids, tracker_name) batch_delete_device_position_history(device_ids, tracker_name, params::Dict{String,<:Any}) Deletes the position history of one or more devices from a tracker resource. # Arguments - `device_ids`: Devices whose position history you want to delete. For example, for two devices: \u201cDeviceIds\u201d : [DeviceId1,DeviceId2] - `tracker_name`: The name of the tracker resource to delete the device position history from. \"\"\" function batch_delete_device_position_history( DeviceIds, TrackerName; aws_config::AbstractAWSConfig=global_aws_config() ) return location( \"POST\", \"/tracking/v0/trackers/$(TrackerName)/delete-positions\", Dict{String,Any}(\"DeviceIds\" => DeviceIds); aws_config=aws_config, feature_set=SERVICE_FEATURE_SET, ) end function batch_delete_device_position_history( DeviceIds, TrackerName, params::AbstractDict{String}; aws_config::AbstractAWSConfig=global_aws_config(), ) return location( \"POST\", \"/tracking/v0/trackers/$(TrackerName)/delete-positions\", Dict{String,Any}( mergewith(_merge, Dict{String,Any}(\"DeviceIds\" => DeviceIds), params) ); aws_config=aws_config, feature_set=SERVICE_FEATURE_SET, ) end \"\"\" batch_delete_geofence(collection_name, geofence_ids) batch_delete_geofence(collection_name, geofence_ids, params::Dict{String,<:Any}) Deletes a batch of geofences from a geofence collection. This operation deletes the resource permanently. # Arguments - `collection_name`: The geofence collection storing the geofences to be deleted. - `geofence_ids`: The batch of geofences to be deleted. \"\"\" function batch_delete_geofence( CollectionName, GeofenceIds; aws_config::AbstractAWSConfig=global_aws_config() ) return location( \"POST\", \"/geofencing/v0/collections/$(CollectionName)/delete-geofences\", Dict{String,Any}(\"GeofenceIds\" => GeofenceIds); aws_config=aws_config, feature_set=SERVICE_FEATURE_SET, ) end function batch_delete_geofence( CollectionName, GeofenceIds, params::AbstractDict{String}; aws_config::AbstractAWSConfig=global_aws_config(), ) return location( \"POST\", \"/geofencing/v0/collections/$(CollectionName)/delete-geofences\", Dict{String,Any}( mergewith(_merge, Dict{String,Any}(\"GeofenceIds\" => GeofenceIds), params) ); aws_config=aws_config, feature_set=SERVICE_FEATURE_SET, ) end \"\"\" batch_evaluate_geofences(collection_name, device_position_updates) batch_evaluate_geofences(collection_name, device_position_updates, params::Dict{String,<:Any}) Evaluates device positions against the geofence geometries from a given geofence collection. This operation always returns an empty response because geofences are asynchronously evaluated. The evaluation determines if the device has entered or exited a geofenced area, and then publishes one of the following events to Amazon EventBridge: ENTER if Amazon Location determines that the tracked device has entered a geofenced area. EXIT if Amazon Location determines that the tracked device has exited a geofenced area. The last geofence that a device was observed within is tracked for 30 days after the most recent device position update. Geofence evaluation uses the given device position. It does not account for the optional Accuracy of a DevicePositionUpdate. # Arguments - `collection_name`: The geofence collection used in evaluating the position of devices against its geofences. - `device_position_updates`: Contains device details for each device to be evaluated against the given geofence collection. \"\"\" function batch_evaluate_geofences( CollectionName, DevicePositionUpdates; aws_config::AbstractAWSConfig=global_aws_config() ) return location( \"POST\", \"/geofencing/v0/collections/$(CollectionName)/positions\", Dict{String,Any}(\"DevicePositionUpdates\" => DevicePositionUpdates); aws_config=aws_config, feature_set=SERVICE_FEATURE_SET, ) end function batch_evaluate_geofences( CollectionName, DevicePositionUpdates, params::AbstractDict{String}; aws_config::AbstractAWSConfig=global_aws_config(), ) return location( \"POST\", \"/geofencing/v0/collections/$(CollectionName)/positions\", Dict{String,Any}( mergewith( _merge, Dict{String,Any}(\"DevicePositionUpdates\" => DevicePositionUpdates), params, ), ); aws_config=aws_config, feature_set=SERVICE_FEATURE_SET, ) end \"\"\" batch_get_device_position(device_ids, tracker_name) batch_get_device_position(device_ids, tracker_name, params::Dict{String,<:Any}) Lists the latest device positions for requested devices. # Arguments - `device_ids`: Devices whose position you want to retrieve. For example, for two devices: device-ids=DeviceId1&amp;device-ids=DeviceId2 - `tracker_name`: The tracker resource retrieving the device position. \"\"\" function batch_get_device_position( DeviceIds, TrackerName; aws_config::AbstractAWSConfig=global_aws_config() ) return location( \"POST\", \"/tracking/v0/trackers/$(TrackerName)/get-positions\", Dict{String,Any}(\"DeviceIds\" => DeviceIds); aws_config=aws_config, feature_set=SERVICE_FEATURE_SET, ) end function batch_get_device_position( DeviceIds, TrackerName, params::AbstractDict{String}; aws_config::AbstractAWSConfig=global_aws_config(), ) return location( \"POST\", \"/tracking/v0/trackers/$(TrackerName)/get-positions\", Dict{String,Any}( mergewith(_merge, Dict{String,Any}(\"DeviceIds\" => DeviceIds), params) ); aws_config=aws_config, feature_set=SERVICE_FEATURE_SET, ) end \"\"\" batch_put_geofence(collection_name, entries) batch_put_geofence(collection_name, entries, params::Dict{String,<:Any}) A batch request for storing geofence geometries into a given geofence collection, or updates the geometry of an existing geofence if a geofence ID is included in the request. # Arguments - `collection_name`: The geofence collection storing the geofences. - `entries`: The batch of geofences to be stored in a geofence collection. \"\"\" function batch_put_ge",
  "/*\n * Copyright (C) 2013 Glyptodon LLC\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\npackage org.glyptodon.guacamole.net.basic.properties;\n\nimport java.lang.reflect.InvocationTargetException;\nimport org.glyptodon.guacamole.GuacamoleException;\nimport org.glyptodon.guacamole.net.auth.AuthenticationProvider;\nimport org.glyptodon.guacamole.net.basic.GuacamoleClassLoader;\nimport org.glyptodon.guacamole.properties.GuacamoleProperty;\n\n/**\n * A GuacamoleProperty whose value is the name of a class to use to\n * authenticate users. This class must implement AuthenticationProvider.\n *\n * @author Michael Jumper\n */\npublic abstract class AuthenticationProviderProperty implements GuacamoleProperty<AuthenticationProvider> {\n\n    @Override\n    public AuthenticationProvider parseValue(String authProviderClassName) throws GuacamoleException {\n\n        // If no property provided, return null.\n        if (authProviderClassName == null)\n            return null;\n\n        // Get auth provider instance\n        try {\n\n            Object obj = GuacamoleClassLoader.getInstance().loadClass(authProviderClassName)\n                           .getConstructor().newInstance();\n\n            if (!(obj instanceof AuthenticationProvider))\n                throw new GuacamoleException(\"Specified authentication provider class is not a AuthenticationProvider.\");\n\n            return (AuthenticationProvider) obj;\n\n        }\n        catch (ClassNotFoundException e) {\n            throw new GuacamoleException(\"Authentication provider class not found\", e);\n        }\n        catch (NoSuchMethodException e) {\n            throw new GuacamoleException(\"Default constructor for authentication provider not present\", e);\n        }\n        catch (SecurityException e) {\n            throw new GuacamoleException(\"Creation of authentication provider disallowed; check your security settings\", e);\n        }\n        catch (InstantiationException e) {\n            throw new GuacamoleException(\"Unable to instantiate authentication provider\", e);\n        }\n        catch (IllegalAccessException e) {\n            throw new GuacamoleException(\"Unable to access default constructor of authentication provider\", e);\n        }\n        catch (InvocationTargetException e) {\n            throw new GuacamoleException(\"Internal error in constructor of authentication provider\", e.getTargetException());\n        }\n\n    }\n\n}\n\n",
  "---\npid: '02429cc'\nlabel: Uncategorized\nkey: uncat\nlocation: \nkeywords: \ndescription: West side of Colorado Midland Railroad's Hagerman (Howard Photo)\nnamed_persons: \nrights: This photo is property of Lake County Civic Center Association.\ncreation_date: \ningest_date: '2021-03-30'\nformat: Photo\nsource: Scanned Negative\norder: '2224'\nlayout: cmhc_item\nthumbnail: \"/img/derivatives/iiif/images/02429cc/full/250,/0/default.jpg\"\nfull: \"/img/derivatives/iiif/images/02429cc/full/1140,/0/default.jpg\"\nmanifest: \"/img/derivatives/iiif/02429cc/manifest.json\"\ncollection: cmhc\n---\n",
  "angular.module(\"ovh-api-services\").service(\"OvhApiDBaasTs\", function ($injector) {\n    \"use strict\";\n    return {\n        v6: function () {\n            return $injector.get(\"OvhApiDBaasTsV6\");\n        },\n        Region: function () {\n            return $injector.get(\"OvhApiDBaasTsRegion\");\n        },\n        Project: function () {\n            return $injector.get(\"OvhApiDBaasTsProject\");\n        }\n    };\n});\n",
  "{% from \"../macros/version.html\" import versionNumber %}\n{% set section = \"referrals\" %}\n{% set headerType = \"search\" %}\n{% extends \"layout_dwp.html\" %}\n\n{% block page_title %}\n Graham Highfields - Visiting Service Management System \n{% endblock %}\n\n{% block content %}\n\n{% include \"includes/nav.html\" %}\n\n<main id=\"content\" role=\"main\">\n\n  <div class=\"grid-row\">\n    <div class=\"column-two-thirds\">\n      <a href=\"../referrals/team-referrals\" class=\"link-back\">Team referrals</a>\n    </div>\n\n  </div>{# /grid-row #}\n\n  <div class=\"panel panel-border-wide alert-success m-t-l\">\n    <p>Graham Highfields has been transferred to the Nottinghamshire County Council visiting team</p>\n  </div>\n\n</main>\n\n{% endblock %}",
  "\ufeff//\u70b9\u51fb\u6811\u8282\u70b9\u6267\u884c\u65b9\u6cd5\nfunction ConfigDataVNodeClick() {\n    var url = CPWebRootPath +\"/Plat/Tab/TabView?TabCode=Tab201806170829070012\";\n    url += \"&DataVId=\" + $.CPGetQuery(\"DataVId\");\n    url += \"&StatisticsId=\" + CPTreeGlobal_CurSelNodeData.NodeAttrEx;\n    CPTreeSetFrameUrl(url);\n}\n//\u65b0\u589e\nfunction ConfigDataVAdd() {\n    //console.log(CPTreeGlobal_CurSelNodeData);\n    var url = CPWebRootPath + \"/Plat/Form/FormView?FormCode=Form201806170810310038&SceneCode=Scene201806170811480040&ViewCode=View201806170811480041&DeviceType=1&InitGroupCode=Group201806170817120037\";\n    url += \"&DataVId=\" + $.CPGetQuery(\"DataVId\");\n    if (CPTreeGlobal_CurSelNodeData == null) {\n        url += \"&ParentStatisticsId=-1\";\n    }\n    else {\n        url += \"&ParentStatisticsId=\" + CPTreeGlobal_CurSelNodeData.NodeAttrEx;\n    }\n    CPTreeSetFrameUrl(url);\n}\n//\u6253\u5f00\u9884\u89c8\u754c\u9762\nfunction OpenDataVPreview(DataVId) {\n    var url = CPWebRootPath + \"/Plat/Form/FormView?FormCode=Form201806252108530042&SceneCode=Scene201806252109120044&ViewCode=View201806252109120045&DeviceType=1&InitGroupCode=Group201806252111500041&DataVId=\" + DataVId;\n    top.OpenNewModel(url, \"\u9884\u89c8\", 500, 300);\n}\n\n//\u83b7\u53d6\u8868\u5355\u9884\u89c8\u5730\u5740\nfunction PreviewDataV() {\n    if (CPFormGlobal_FormObj.Data.DataV_Preview.LayoutCode == \"\") {\n        alert(\"\u8bf7\u9009\u62e9\u5e03\u5c40\uff01\");\n        return;\n    } \n    var url = CPWebRootPath + \"/Plat/DataV/DataVView?DataVCode=\" + CPFormGlobal_FormObj.Data.DataV_Preview.DataVCode +\n        \"&LayoutCode=\" + CPFormGlobal_FormObj.Data.DataV_Preview.LayoutCode;\n    \n    var IsGetUrl = $.CPGetQuery(\"IsGetUrl\");\n    if (IsGetUrl!= null && IsGetUrl == \"true\") {\n        parent.window.opener.SelectPageUrl_SetReturn(url);\n        parent.window.close();\n    }\n    else {\n        window.open(url);\n    }\n}\n\n\n//\u5bfc\u51fa\u914d\u7f6e\nfunction DataVExportConfig() {\n    var sSel = CPGridGetSelChkData();\n    if (sSel == \"\") {\n        alert(\"\u8bf7\u9009\u62e9\u8981\u5bfc\u51fa\u7684\u6570\u636e\u7edf\u8ba1\uff01\");\n        return false;\n    }\n    var url = CPWebRootPath + \"/api/DataVEngine/DownloadDataVConfig?DataVIds=\" + sSel + \"&CurUserId=\" + CPCurUserId + \"&CurUserIden=\" + CPCurUserIden;\n    window.location.href = url;\n}\n//\u66f4\u65b0\u914d\u7f6e\nfunction DataVUpateConfig(sysId) {\n    var url = CPWebRootPath + \"/Plat/DataV/ManaConfig?IsCreateNew=false&TargetSysId=\" + sysId + \"&CurUserId=\" + CPCurUserId + \"&CurUserIden=\" + CPCurUserIden;\n    OpenNewModel(url, \"\u66f4\u65b0\u914d\u7f6e\", 400, 200);\n}\n//\u4ece\u914d\u7f6e\u6587\u4ef6\u521b\u5efa\u65b0\u5217\u8868\nfunction DataVCreateByConfigFile(sysId) {\n    var url = CPWebRootPath + \"/Plat/DataV/ManaConfig?IsCreateNew=true&TargetSysId=\" + sysId + \"&CurUserId=\" + CPCurUserId + \"&CurUserIden=\" + CPCurUserIden;\n    OpenNewModel(url, \"\u4ece\u914d\u7f6e\u6587\u4ef6\u5168\u65b0\u521b\u5efa\", 400, 200);\n}",
  "package lacework\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"testing\"\n\n\t\"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource\"\n\t\"github.com/hashicorp/terraform-plugin-sdk/v2/terraform\"\n\t\"github.com/lacework/go-sdk/api\"\n)\n\nconst (\n\ttestAccAlertChannelGcpPubSubResourceType = \"lacework_alert_channel_gcp_pub_sub\"\n\ttestAccAlertChannelGcpPubSubResourceName = \"example\"\n\n\t// Environment variables for testing Gcp Pub Sub Alert Channel Integrations\n\ttestAccAlertChannelGcpPubSubProjectID     = \"GCP_PUB_SUB_PROJECT_ID\"\n\ttestAccAlertChannelGcpPubSubTopicID       = \"GCP_PUB_SUB_TOPIC_ID\"\n\ttestAccAlertChannelGcpPubSubIssueGrouping = \"GCP_PUB_SUB_ISSUE_GROUPING\"\n\ttestAccAlertChannelGcpPubSubClientID      = \"GCP_PUB_SUB_CLIENT_ID\"\n\ttestAccAlertChannelGcpPubSubClientEmail   = \"GCP_PUB_SUB_CLEINT_EMAIL\"\n\ttestAccAlertChannelGcpPubSubPrivateKey    = \"GCP_PUB_SUB_PRIVATE_KEY\"\n\ttestAccAlertChannelGcpPubSubPrivateKeyID  = \"GCP_PUB_SUB_PRIVATE_KEY_ID\"\n)\n\nfunc TestAccAlertChannelGcpPubSub(t *testing.T) {\n\tresourceTypeAndName := fmt.Sprintf(\"%s.%s\",\n\t\ttestAccAlertChannelGcpPubSubResourceType,\n\t\ttestAccAlertChannelGcpPubSubResourceName,\n\t)\n\n\tresource.Test(t, resource.TestCase{\n\t\tPreCheck: func() {\n\t\t\ttestAccPreCheck(t)\n\t\t\ttestAccAlertChannelGcpPubSubEnvVarsPreCheck(t)\n\t\t},\n\t\tProviders:    testAccProviders,\n\t\tCheckDestroy: testAccCheckAlertChannelGcpPubSubDestroy,\n\t\tSteps: []resource.TestStep{\n\t\t\t{\n\t\t\t\tConfig: testAccAlertChannelGcpPubSubConfig(\n\t\t\t\t\ttrue,\n\t\t\t\t),\n\t\t\t\tCheck: resource.ComposeTestCheckFunc(\n\t\t\t\t\ttestAccCheckAlertChannelGcpPubSubExists(resourceTypeAndName),\n\t\t\t\t\tresource.TestCheckResourceAttr(resourceTypeAndName, \"enabled\", \"true\"),\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tConfig: testAccAlertChannelGcpPubSubConfig(\n\t\t\t\t\tfalse,\n\t\t\t\t),\n\t\t\t\tCheck: resource.ComposeTestCheckFunc(\n\t\t\t\t\ttestAccCheckAlertChannelGcpPubSubExists(resourceTypeAndName),\n\t\t\t\t\tresource.TestCheckResourceAttr(resourceTypeAndName, \"enabled\", \"false\"),\n\t\t\t\t),\n\t\t\t},\n\t\t},\n\t})\n}\n\nfunc testAccCheckAlertChannelGcpPubSubDestroy(s *terraform.State) error {\n\tlacework := testAccProvider.Meta().(*api.Client)\n\n\tfor _, rs := range s.RootModule().Resources {\n\t\tif rs.Type!= testAccAlertChannelGcpPubSubResourceType {\n\t\t\tcontinue\n\t\t}\n\n\t\tresponse, err := lacework.Integrations.GetGcpPubSubAlertChannel(rs.Primary.ID)\n\t\tif err!= nil {\n\t\t\treturn err\n\t\t}\n\n\t\tfor _, integration := range response.Data {\n\t\t\tif integration.IntgGuid == rs.Primary.ID {\n\t\t\t\treturn fmt.Errorf(\n\t\t\t\t\t\"the %s integration (%s) still exists\",\n\t\t\t\t\tapi.GcpPubSubChannelIntegration, rs.Primary.ID,\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\n\treturn nil\n}\n\nfunc testAccCheckAlertChannelGcpPubSubExists(resourceTypeAndName string) resource.TestCheckFunc {\n\treturn func(s *terraform.State) error {\n\t\tlacework := testAccProvider.Meta().(*api.Client)\n\n\t\trs, ok := s.RootModule().Resources[resourceTypeAndName]\n\t\tif!ok {\n\t\t\treturn fmt.Errorf(\"resource (%s) not found\", resourceTypeAndName)\n\t\t}\n\n\t\tif rs.Primary.ID == \"\" {\n\t\t\treturn fmt.Errorf(\"resource (%s) ID not set\", resourceTypeAndName)\n\t\t}\n\n\t\tresponse, err := lacework.Integrations.GetGcpPubSubAlertChannel(rs.Primary.ID)\n\t\tif err!= nil {\n\t\t\treturn err\n\t\t}\n\n\t\tif len(response.Data) < 1 {\n\t\t\treturn fmt.Errorf(\"the %s integration (%s) doesn't exist\",\n\t\t\t\tapi.GcpPubSubChannelIntegration, rs.Primary.ID)\n\t\t}\n\n\t\tfor _, integration := range response.Data {\n\t\t\tif integration.IntgGuid == rs.Primary.ID {\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\n\t\treturn fmt.Errorf(\"the %s integration (%s) doesn't exist\",\n\t\t\tapi.GcpPubSubChannelIntegration, rs.Primary.ID)\n\t}\n}\n\nfunc testAccAlertChannelGcpPubSubEnvVarsPreCheck(t *testing.T) {\n\tif v := os.Getenv(testAccAlertChannelGcpPubSubProjectID); v == \"\" {\n\t\tt.Fatalf(\"%s must be set for acceptance tests\", testAccAlertChannelGcpPubSubProjectID)\n\t}\n\tif v := os.Getenv(testAccAlertChannelGcpPubSubTopicID); v == \"\" {\n\t\tt.Fatalf(\"%s must be set for acceptance tests\", testAccAlertChannelGcpPubSubTopicID)\n\t}\n\tif v := os.Getenv(testAccAlertChannelGcpPubSubIssueGrouping); v == \"\" {\n\t\tt.Fatalf(\"%s must be set for acceptance tests\", testAccAlertChannelGcpPubSubIssueGrouping)\n\t}\n\tif v := os.Getenv(testAccAlertChannelGcpPubSubClientID); v == \"\" {\n\t\tt.Fatalf(\"%s must be set for acceptance tests\", testAccAlertChannelGcpPubSubClientID)\n\t}\n\tif v := os.Getenv(testAccAlertChannelGcpPubSubClientEmail); v == \"\" {\n\t\tt.Fatalf(\"%s must be set for acceptance tests\", testAccAlertChannelGcpPubSubClientEmail)\n\t}\n\tif v := os.Getenv(testAccAlertChannelGcpPubSubPrivateKey); v == \"\" {\n\t\tt.Fatalf(\"%s must be set for acceptance tests\", testAccAlertChannelGcpPubSubPrivateKey)\n\t}\n\tif v := os.Getenv(testAccAlertChannelGcpPubSubPrivateKeyID); v == \"\" {\n\t\tt.Fatalf(\"%s must be set for acceptance tests\", testAccAlertChannelGcpPubSubPrivateKeyID)\n\t}\n}\n\nfunc testAccAlertChannelGcpPubSubConfig(enabled bool) string {\n\treturn fmt.Sprintf(`\nresource \"%s\" \"%s\" {\n  name = \"integration test\"\n  enabled = %t\n  project_id = \"%s\"\n  topic_id = \"%s\"\n  issue_grouping = \"%s\"\n  credentials {\n    client_id = \"%s\"\n    client_email = \"%s\"\n    private_key = \"%s\"\n    private_key_id = \"%s\"\n  }\n}\n\t\t`,\n\t\ttestAccAlertChannelGcpPubSubResourceType,\n\t\ttestAccAlertChannelGcpPubSubResourceName,\n\t\tenabled,\n\t\tos.Getenv(testAccAlertChannelGcpPubSubProjectID),\n\t\tos.Getenv(testAccAlertChannelGcpPubSubTopicID),\n\t\tos.Getenv(testAccAlertChannelGcpPubSubIssueGrouping),\n\t\tos.Getenv(testAccAlertChannelGcpPubSubClientID),\n\t\tos.Getenv(testAccAlertChannelGcpPubSubClientEmail),\n\t\tos.Getenv(testAccAlertChannelGcpPubSubPrivateKey),\n\t\tos.Getenv(testAccAlertChannelGcpPubSubPrivateKeyID),\n\t)\n}\n",
  "/*\n                       * This header is generated by classdump-dyld 1.0\n                       * on Monday, September 28, 2020 at 5:55:16 PM Mountain Standard Time\n                       * Operating System: Version 14.0 (Build 18A373)\n                       * Image Source: /System/Library/PrivateFrameworks/GameCenterUI.framework/GameCenterUI\n                       * classdump-dyld is licensed under GPLv3, Copyright \u00a9 2013-2016 by Elias Limneos.\n                       */\n\n\n@interface GameCenterUI.FriendsListPresenter : _UKNOWN_SUPERCLASS_ {\n\n\t playerId;\n\t friendType;\n\t requiredData;\n\t gameCenterDataUpdatePresenter;\n\t isUpdating;\n\t searchTerm;\n\t onApplySnapshot;\n\t onShowPageOverlay;\n\t onUpdatePhaseChange;\n\n}\n@end\n\n",
  "export class CommonRegExp {\n  static UUID_REGEX = /[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}/g;\n\n  static UUID_REGEX_SUB = /^[0-9a-fA-F]{4}$/;\n\n  public static get ODOMETER_VALUE(): RegExp {\n    return /\\B(?=(\\d{3})+(?!\\d))/g;\n  }\n\n  public static get JTW_TOKEN(): RegExp {\n    return /^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+/=]*$/;\n  }\n}\n",
  "//~ name a641\n\nalert(a641);\n\n//~ component a642.js\n\n",
  "<?php\nrequire_once __DIR__. \"/autoload.php\";\n\nprint \"\\033[2J\";\nprint \"\\nForeground:\\n\";\n\n$executionStartTime = microtime(true);\nfor ($i = 0; $i < 256; ++$i) {\n    $color = \"color_{$i}\";\n    print $chalk->$color(\" $i \");\n    if ($i == 15 || ($i > 15 && $i % 21 == 0)) print \"\\n\";\n}\n$elapsed = microtime(true) - $executionStartTime;\n\nprint \"\\n\\nBackground:\\n\";\n\nfor ($i = 0; $i < 256; ++$i) {\n    $color = \"bgColor_{$i}\";\n    print $chalk->$color(\"  \");\n    if ($i == 15 || ($i > 15 && $i % 21 == 0)) print \"\\n\";\n}\n",
  "package me.adeane6.model.Telemetry.Event;\n\nimport lombok.Getter;\nimport lombok.Setter;\nimport me.adeane6.model.Telemetry.object.Character;\n\n/**\n * TelemetryEvent including a character\n */\n@Setter\n@Getter\npublic abstract class EventCharacter extends EventBase {\n\n    private Character character;\n\n    public EventCharacter() {\n        super();\n    }\n}\n",
  "# emarm\nRobotic Arm Controller for Engineering Mathematics\n",
  "---\ntemplateKey: blog-post\ntitle: new blog test\ndate: 2020-06-25T14:35:46.392Z\ndescription: this is a test\nfeaturedpost: true\nfeaturedimage: /img/products-grid1.jpg\ntags:\n  - test\n---\nHey there",
  "<html>\n    <head>\n    <script src=\"script.js\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n    </head>\n    <body>\n<body>\n        <div class=\"maindiv\">\n        <h1>Simple Interest Calculator</h1>\n\n        Amount <input type=\"number\"  id=\"principal\">  <br/>\n        Rate <input type=\"range\" min=\"1\" max=\"20\" step=\"0.25\" value=\"10.25\" id=\"rate\" onchange=refreshSlider()>  <span id=\"rateLabel\">10.25%</span><br/>\n        <span id=\"rate_val\"> 10.25% </span>\n<br><br>\nNo. of Years <select id=\"years\">\n<option value=\"1\">1</option>\n<option value=\"2\">2</option>\n<option value=\"3\">3</option>\n<option value=\"4\">4</option>\n<option value=\"5\">5</option>\n<option value=\"6\">6</option>\n<option value=\"7\">7</option>\n<option value=\"8\">8</option>\n<option value=\"9\">9</option>\n<option value=\"10\">10</option>\n\n    <!-- fill in the rest of the values-->\n</select>\n<br><br>\n        Interest : <span id=\"result\"></span><br>\n\n        <button onclick=\"compute()\">Compute Interest</button>\n        <span id=\"result\"></span>\n        </div>\n        <footer>\n\n        &#169; This Calculator belongs to  viswa kumar\n\n\n</footer>\n    </body>\n</html>\n\n",
  "# -*- coding=utf-8 -*-\nr\"\"\"\nMIT License\n\nCopyright (c) 2021 PlayerG9\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\"\"\"\n\nfrom.exceptions import *\nfrom.mathcompiler import (\n    MathCompiler,\n    compute,\n    default_functions as mathfunctions,\n    default_constants as mathconstants\n)\n\n__author__ = \"PlayerG9\"\n__copyright__ = \"Copyright 2021, PlayerG9\"\n__credits__ = [\"PlayerG9\"]\n__license__ = \"MIT\"\n__version_info__ = (0,0,0)\n__version__ = '.'.join(str(_) for _ in __version_info__)\n__maintainer__ = \"PlayerG9\"\n__email__ = None\n__status__ = \"Prototype\"  # Prototype, Development, Production\n",
  "\ufeffusing System;\nusing System.Collections.Generic;\n\n// ReSharper disable once InconsistentNaming\n\nnamespace OpenCvSharp.CPlusPlus\n{\n#if LANG_JP\n    /// <summary>\n    /// FREAK \u5b9f\u88c5\n    /// </summary>\n#else\n    /// <summary>\n    /// FREAK implementation\n    /// </summary>\n#endif\n    public class FREAK : DescriptorExtractor\n    {\n        private bool disposed;\n        private Ptr<FREAK> detectorPtr;\n\n        #region Init & Disposal\n        /// <summary>\n        /// Constructor\n        /// </summary>\n        /// <param name=\"orientationNormalized\">enable orientation normalization</param>\n        /// <param name=\"scaleNormalized\">enable scale normalization</param>\n        /// <param name=\"patternScale\">scaling of the description pattern</param>\n        /// <param name=\"nOctaves\">number of octaves covered by the detected keypoints</param>\n        /// <param name=\"selectedPairs\">(optional) user defined selected pairs</param>\n        public FREAK(\n            bool orientationNormalized = true,\n            bool scaleNormalized = true,\n            float patternScale = 22.0f,\n            int nOctaves = 4,\n            IEnumerable<int> selectedPairs = null)\n        {\n            int[] selectedPairsArray = EnumerableEx.ToArray(selectedPairs);\n            int selectedPairslength = selectedPairs == null? 0 : selectedPairsArray.Length;\n\n            ptr = NativeMethods.features2d_FREAK_new(orientationNormalized? 1 : 0,\n                scaleNormalized? 1 : 0, patternScale, nOctaves, \n                selectedPairsArray, selectedPairslength);\n        }\n\n        /// <summary>\n        /// Creates instance by cv::Ptr&lt;cv::SURF&gt;\n        /// </summary>\n        internal FREAK(Ptr<FREAK> detectorPtr)\n        {\n            this.detectorPtr = detectorPtr;\n            this.ptr = detectorPtr.Obj;\n        }\n        /// <summary>\n        /// Creates instance by raw pointer cv::SURF*\n        /// </summary>\n        internal FREAK(IntPtr rawPtr)\n        {\n            detectorPtr = null;\n            ptr = rawPtr;\n        }\n        /// <summary>\n        /// Creates instance from cv::Ptr&lt;T&gt;.\n        /// ptr is disposed when the wrapper disposes. \n        /// </summary>\n        /// <param name=\"ptr\"></param>\n        internal static new FREAK FromPtr(IntPtr ptr)\n        {\n            if (ptr == IntPtr.Zero)\n                throw new OpenCvSharpException(\"Invalid cv::Ptr<FREAK> pointer\");\n            var ptrObj = new Ptr<FREAK>(ptr);\n            return new FREAK(ptrObj);\n        }\n\n#if LANG_JP\n    /// <summary>\n    /// \u30ea\u30bd\u30fc\u30b9\u306e\u89e3\u653e\n    /// </summary>\n    /// <param name=\"disposing\">\n    /// true\u306e\u5834\u5408\u306f\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u30e6\u30fc\u30b6\u30b3\u30fc\u30c9\u304b\u3089\u76f4\u63a5\u304c\u547c\u3070\u308c\u305f\u3053\u3068\u3092\u793a\u3059\u3002\u30de\u30cd\u30fc\u30b8\u30fb\u30a2\u30f3\u30de\u30cd\u30fc\u30b8\u53cc\u65b9\u306e\u30ea\u30bd\u30fc\u30b9\u304c\u89e3\u653e\u3055\u308c\u308b\u3002\n    /// false\u306e\u5834\u5408\u306f\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u30e9\u30f3\u30bf\u30a4\u30e0\u304b\u3089\u30d5\u30a1\u30a4\u30ca\u30e9\u30a4\u30b6\u306b\u3088\u3063\u3066\u547c\u3070\u308c\u3001\u3082\u3046\u307b\u304b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089\u53c2\u7167\u3055\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u793a\u3059\u3002\u30a2\u30f3\u30de\u30cd\u30fc\u30b8\u30ea\u30bd\u30fc\u30b9\u306e\u307f\u89e3\u653e\u3055\u308c\u308b\u3002\n    ///</param>\n#else\n        /// <summary>\n        /// Releases the resources\n        /// </summary>\n        /// <param name=\"disposing\">\n        /// If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.\n        /// If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.\n        /// </param>\n#endif\n        protected override void Dispose(bool disposing)\n        {\n            if (!disposed)\n            {\n                try\n                {\n                    // releases managed resources\n                    if (disposing)\n                    {\n                    }\n                    // releases unmanaged resources\n                    if (detectorPtr!= null)\n                    {\n                        detectorPtr.Dispose();\n                        detectorPtr = null;\n                    }\n                    else\n                    {\n                        if (ptr!= IntPtr.Zero)\n                            NativeMethods.features2d_FREAK_delete(ptr);\n                        ptr = IntPtr.Zero;\n                    }\n                    disposed = true;\n                }\n                finally\n                {\n                    base.Dispose(disposing);\n                }\n            }\n        }\n        #endregion\n\n        #region Methods\n        /// <summary>\n        /// returns the descriptor size in bytes\n        /// </summary>\n        /// <returns></returns>\n        public override int DescriptorSize()\n        {\n            ThrowIfDisposed();\n            return NativeMethods.features2d_FREAK_descriptorSize(ptr);\n        }\n\n        /// <summary>\n        /// returns the descriptor type\n        /// </summary>\n        /// <returns></returns>\n        public override int DescriptorType()\n        {\n            ThrowIfDisposed();\n            return NativeMethods.features2d_FREAK_descriptorType(ptr);\n        }\n\n        /// <summary>\n        /// select the 512 \"best description pairs\"\n        /// </summary>\n        /// <param name=\"images\">grayscale images set</param>\n        /// <param name=\"keypoints\">set of detected keypoints</param>\n        /// <param name=\"corrThresh\">correlation threshold</param>\n        /// <param name=\"verbose\">print construction information</param>\n        /// <returns>list of best pair indexes</returns>\n        public int[] SelectPairs(IEnumerable<Mat> images, out KeyPoint[][] keypoints,\n            double corrThresh = 0.7, bool verbose = true)\n        {\n            if (images == null)\n                throw new ArgumentNullException(\"images\");\n\n            IntPtr[] imagesPtrs = EnumerableEx.SelectPtrs(images);\n\n            using (var outVec = new VectorOfInt32())\n            using (var keypointsVec = new VectorOfVectorKeyPoint())\n            {\n                NativeMethods.features2d_FREAK_selectPairs(ptr, imagesPtrs, imagesPtrs.Length,\n                    keypointsVec.CvPtr, corrThresh, verbose? 1 : 0, outVec.CvPtr);\n                keypoints = keypointsVec.ToArray();\n                return outVec.ToArray();\n            }\n        }\n\n\n        /// <summary>\n        /// Pointer to algorithm information (cv::AlgorithmInfo*)\n        /// </summary>\n        /// <returns></returns>\n        public override IntPtr InfoPtr\n        {\n            get\n            {\n                return NativeMethods.features2d_FREAK_info(ptr);\n            }\n        }\n        #endregion\n    }\n}\n",
  "require 'date_time_precision/lib'\nrequire 'date'\n\nclass Date\n  MAX_PRECISION = DateTimePrecision::DAY\n\n  include DateTimePrecision\nend",
  "# Contributing to KafkaJS\n\nThank you for considering contributing to KafkaJS!\n\nReading and following these guidelines will help us make the contribution process easy and effective for everyone involved. It also communicates that you agree to respect the time of the developers managing and developing these open source projects.\n\n## Getting Started\n\nContributions are made to this repo via Issues and Pull Requests (PRs). A few general guidelines that cover both:\n\n- Search for existing issues and PRs before creating your own.\n- The maintainers of KafkaJS are people that volunteer their time. We try to address issues and PRs in a timely manner, but cannot make any guarantees. Please don't @mention individual maintainers to try to get their attention.\n\n### Issues\n\nIssues should be used to report problems with the library, request a new feature, or to discuss potential changes before a PR is created. Please follow the issue template that's provided when you first create an issue in order to collect all the necessary information.\n\nIssues are not a support channel. Please use [StackOverflow](https://stackoverflow.com/questions/tagged/kafkajs), [Slack](https://kafkajs-slackin.herokuapp.com/) or other online resources instead. [Limited support from a maintainer](https://github.com/sponsors/Nevon?frequency=one-time&sponsor=Nevon) is available to sponsors.\n\nIf you find an issue that addresses the problem you're having, please add your own reproduction information to the existing issue rather than creating a new one. Adding a [reaction](https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/) can also help be indicating to our maintainers that a particular problem is affecting more than just the reporter.\n\n### Pull Requests\n\nPRs are welcome and can be a quick way to get your fix or improvement out. If you've never contributed before, see [the contribution guidelines on our website](https://kafka.js.org/docs/contribution-guide) for practical information on how to get started.\n\nIn general, PRs should:\n\n- Only fix/add the functionality in question **OR** address wide-spread whitespace/style issues, not both.\n- Add tests for fixed or changed functionality.\n- Address a single concern.\n- Update the [Typescript type definitions](./types) if your change introduces any new or affects existing interfaces.\n- Include documentation if it changes the functionality of the library. Our [documentation](https://kafka.js.org/docs/getting-started) is in the [`/docs`](./docs/) folder of the repo.\n\nIf your PR introduces a change in functionality or adds new functionality, always open an issue first to discuss your proposal before implementing it. This is especially crucial for breaking changes, which will almost always be rejected unless discussed first. For bug fixes this is not required, but still recommended.\n\nOnce a PR is merged and the master build is successful, a pre-release version of KafkaJS will be published to NPM in the [beta channel](https://www.npmjs.com/package/kafkajs/v/beta), which you can use until a there has been a stable release made containing your change.\n\n## Getting Help\n\nJoin our [Slack community](https://kafkajs-slackin.herokuapp.com/) if you have questions about the contribution process or otherwise want to get in touch.\n",
  "{% extends 'bootstrap_base.html' %}\n\n\n{% block main  %}\n\n\n    <div class=\"row\">\n        <div class=\"col-md-8\">\n\n            {% block coedytowac %}\n\n            {% endblock %}\n\n            <form role=\"form\"  method=\"post\">\n                <div class=\"form-group\">\n                    {% csrf_token %}\n                    {{ form }}\n                </div>\n                <button type=\"submit\" class=\"btn btn-default btn-lg\" name=\"save\">Zapisz</button>\n\n                {% block archives %}\n\n                {% endblock %}\n\n\n                <!-- modal button-->\n                <button type=\"button\" class=\"btn btn-danger btn-lg\" data-toggle=\"modal\" data-target=\"#myModal\">Usu\u0144</button>\n\n                <!-- Modal -->\n                <div class=\"modal fade\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\n                    <div class=\"modal-dialog\" role=\"document\">\n                        <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n                                <h4 class=\"modal-title\" id=\"myModalLabel\">Uwaga!</h4>\n                            </div>\n                            <div class=\"modal-body\">\n                                <p>Obiekt zostanie usuni\u0119ty bezpowrotnie po naci\u015bni\u0119ciu \"Usu\u0144\".</p>\n                                <p>Wybierz \"Anuluj\", je\u015bli nie chcesz usuwa\u0107 obiektu.\n                            </div>\n                            <div class=\"modal-footer\">\n                                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Anuluj</button>\n                                <button type=\"submit\" class=\"btn btn-danger\" name=\"delete\">Usu\u0144</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n\n\n        </div>\n    </div>\n    <br><br>\n\n{% endblock %}\n\n\n",
  "// Copyright 2019-2022 The Liqo Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// Package errdefs defines the error types that are understood by other packages\n// in this project. Consumers of this project should look here to know how to\n// produce and consume errors for this project.\npackage errdefs\n",
  "# ------------------------------------------------------------------\n# Licensed under the MIT License. See LICENCE in the project root.\n# ------------------------------------------------------------------\n\n\"\"\"\n    TauModel()\n\nProbabilistic rank aggregation with the Tau model.\n\n## References\n\n* Journel 2002. Combining Knowledge From Diverse Sources:\n  An Alternative to Traditional Data Independence Hypotheses.\n\"\"\"\nstruct TauModel <: AggregationMethod end\n\nfunction rank_impl(objects, scores::NTuple{N,Symbol},\n                   method::TauModel) where {N}\n  # score columns\n  cols = []\n  for col in propertynames(objects)\n    if col \u2208 scores\n      push!(cols, getproperty(objects, col))\n    end\n  end\n\n  # conditional probabilities\n  S = reduce(hcat, cols)\n  P = S./ sum(S, dims=1)\n  n = size(P, 1)\n\n  # uniform prior\n  x\u2092 = (1 - 1/n) / (1/n)\n\n  # odds with no redundancy\n  X = (1.- P)./ P\n  x = x\u2092 * prod(X/x\u2092, dims=2)\n\n  # posterior probabilities\n  p = 1./ (1.+ x)\n\n  # final rank\n  sortperm(vec(p), rev=true)\nend\n",
  "/**\n * <a href=\"http://www.openolat.org\">\n * OpenOLAT - Online Learning and Training</a><br>\n * <p>\n * Licensed under the Apache License, Version 2.0 (the \"License\"); <br>\n * you may not use this file except in compliance with the License.<br>\n * You may obtain a copy of the License at the\n * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\">Apache homepage</a>\n * <p>\n * Unless required by applicable law or agreed to in writing,<br>\n * software distributed under the License is distributed on an \"AS IS\" BASIS, <br>\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. <br>\n * See the License for the specific language governing permissions and <br>\n * limitations under the License.\n * <p>\n * Initial code contributed and copyrighted by<br>\n * frentix GmbH, http://www.frentix.com\n * <p>\n */\npackage org.olat.course.noderight.ui;\n\nimport org.olat.core.gui.UserRequest;\nimport org.olat.core.gui.components.form.flexible.impl.Form;\nimport org.olat.core.gui.control.WindowControl;\nimport org.olat.core.gui.control.generic.wizard.BasicStep;\nimport org.olat.core.gui.control.generic.wizard.PrevNextFinishConfig;\nimport org.olat.core.gui.control.generic.wizard.StepFormController;\nimport org.olat.core.gui.control.generic.wizard.StepsRunContext;\nimport org.olat.core.util.Util;\n\n/**\n * \n * Initial date: 29 Oct 2020<br>\n * @author uhensler, urs.hensler@frentix.com, http://www.frentix.com\n *\n */\npublic class AddIdentities_2_ConfirmStep extends BasicStep {\n\t\n\tpublic AddIdentities_2_ConfirmStep(UserRequest ureq) {\n\t\tsuper(ureq);\n\t\tsetNextStep(NOSTEP);\n\t\tsetTranslator(Util.createPackageTranslator(NodeRightsController.class, getLocale(), getTranslator()));\n\t\tsetI18nTitleAndDescr(\"add.identities.confirm.title\", \"add.identities.confirm.title\");\n\t}\n\n\t@Override\n\tpublic PrevNextFinishConfig getInitialPrevNextFinishConfig() {\n\t\treturn new PrevNextFinishConfig(true, false, true);\n\t}\n\n\t@Override\n\tpublic StepFormController getStepController(UserRequest ureq, WindowControl wControl, StepsRunContext runContext, Form form) {\n\t\treturn new AddIdentities_2_ConfirmController(ureq, wControl, form, runContext);\n\t}\n}",
  "package tivan\n\nimport (\n\t\"github.com/Azure/AzureDefender-K8S-InClusterDefense/pkg/infra/instrumentation/metric\"\n\ttivanInstrumentation \"tivan.ms/libs/instrumentation\"\n)\n\n// WrapperTivanMetricSubmitterFactory implement the IMetricSubmitterFactory and creates the default metric submitter.\n// It wraps Tivan's MetricSubmitter\ntype WrapperTivanMetricSubmitterFactory struct {\n\t// configuration is the configuration of the metric submitter\n\tconfiguration *MetricSubmitterConfiguration\n\t// metricSubmitter is the metric submitter of tivan\n\tmetricSubmitter tivanInstrumentation.MetricSubmitter\n}\n\n// MetricSubmitterConfiguration is the configuration for the metric submitter.\ntype MetricSubmitterConfiguration struct {\n}\n\n// NewMetricSubmitterFactory creates WrapperTivanMetricSubmitterFactory that creates metric submitter by wrapping the metric submitter of Tivan\nfunc NewMetricSubmitterFactory(configuration *MetricSubmitterConfiguration, metricSubmitter tivanInstrumentation.MetricSubmitter) (factory metric.IMetricSubmitterFactory) {\n\treturn &WrapperTivanMetricSubmitterFactory{\n\t\tconfiguration:   configuration,\n\t\tmetricSubmitter: metricSubmitter,\n\t}\n}\n\n// CreateMetricSubmitter creates new IMetricSubmitter by using the metric submitter of Tivan\nfunc (factory *WrapperTivanMetricSubmitterFactory) CreateMetricSubmitter() (metricSubmitter metric.IMetricSubmitter) {\n\treturn NewWrapperTivanMetricSubmitter(factory.metricSubmitter)\n}\n",
  "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" class=\"pinned\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Heeralal v Kalyan Maland Others | Westlaw India</title><!--\r\n      Copyright 2010 Thomson Reuters Global Resources AG. All Rights Reserved.\r\n      Proprietary and Confidential information of TRGR.\r\n      Disclosure, Use or Reproduction without the written authorization of TRGR is prohibited.\r\n    --><meta content=\"text/html; charset=UTF-8\" http-equiv=\"Content-Type\" /><meta content=\"en-gb\" http-equiv=\"Content-Language\" /><link type=\"image/x-icon\" rel=\"shortcut icon\" href=\"/wlin/favicon.ico\" /><link type=\"text/css\" rel=\"stylesheet\" href=\"/wlin/css/base.css?14-3-11\" /><link type=\"text/css\" rel=\"stylesheet\" href=\"/wlin/css/token-input-india.css?14-3-11\" /><link type=\"text/css\" rel=\"stylesheet\" href=\"/wlin/css/minimal.css?14-3-11\" /><link type=\"text/css\" rel=\"stylesheet\" href=\"/wlin/css/jquery.selectBox.css?14-3-11\" /><link type=\"text/css\" rel=\"stylesheet\" href=\"/wlin/css/jquery-ui.css?14-3-11\" /><style media=\"screen, print\" type=\"text/css\">\r\n\t\t\t@import \"/wlin/css/advanced.css?14-3-11\";\r\n\t\t</style>\r\n\t\t\t<!--[if lte IE 6]>\r\n\t\t<link href=\"/wlin/css/ie.css?14-3-11\" type=\"text/css\" rel=\"stylesheet\"><script type=\"text/javascript\">\r\n\t\t\t\ttry {document.execCommand(\"BackgroundImageCache\", false, true);}\r\n\t\t\t\tcatch(e) {}\r\n\t\t\t</script>\r\n\t\t\t<![endif]-->\r\n\t\t\r\n\t\t\t<!--[if IE 7]>\r\n\t\t<link href=\"/wlin/css/ie7.css?14-3-11\" type=\"text/css\" rel=\"stylesheet\">\r\n\t\t\t<![endif]-->\r\n\t\t\r\n\t\t\t<!--[if IE 8]>\r\n\t\t<link href=\"/wlin/css/ie8.css?14-3-11\" type=\"text/css\" rel=\"stylesheet\">\r\n\t\t\t<![endif]-->\r\n\t\t<script type=\"text/javascript\" src=\"/wlin/js/jquery.js?14-3-11\">//</script><script type=\"text/javascript\" src=\"/wlin/js/jquery.dimensions.pack.js?14-3-11\">//</script><script type=\"text/javascript\" src=\"/wlin/js/jquery.cookie.js?14-3-11\">//</script><script type=\"text/javascript\" src=\"/wlin/js/jquery.dimensions.pack.js?14-3-11\">//</script><script type=\"text/javascript\" src=\"/wlin/js/rspace/jqueryui.js\">//</script><script type=\"text/javascript\" src=\"/wlin/js/jsTree/jquery.jstree.js\">//</script><script type=\"text/javascript\" src=\"/wlin/js/jqueryforms/jquery.forms.js\">//</script><script type=\"text/javascript\" src=\"/wlin/js/blockUI/jquery.blockUI.js\">//</script><script type=\"text/javascript\" src=\"/wlin/js/jquerycookie/jquery.cookie.js\">//</script><script type=\"text/javascript\" src=\"/wlin/js/jquery.scrollTo/jquery.scrollTo-min.1.4.2.js\">//</script><link type=\"text/css\" rel=\"stylesheet\" href=\"/wlin/css/jqueryui/jquery-ui.css\" /><link href=\"/wlin/css/rspace/rspace.css\" type=\"text/css\" rel=\"stylesheet\" /><link href=\"/wlin/css/rspace/rspace.growl.css\" type=\"text/css\" rel=\"stylesheet\" /><script type=\"text/javascript\" src=\"/wlin/js/jquery-ui.js?14-3-11\">//</script><script type=\"text/javascript\" src=\"/wlin/js/jquery.icheck.min.js?14-3-11\">//</script><script type=\"text/javascript\" src=\"/wlin/js/jquery.selectBox.js?14-3-11\">//</script><script type=\"text/javascript\" src=\"/wlin/js/jqmodal.js?14-3-11\">//</script><script type=\"text/javascript\" src=\"/wlin/js/classes/UpdateNoteProcessor-bk.js?14-3-11\">//</script><script type=\"text/javascript\" src=\"/wlin/js/classes/InlineImageProcessor.js?14-3-11\">//</script><script type=\"text/javascript\">\r\n        \tvar brand=\"wlin\";\r\n        \t\r\n        \tvar iip = new InlineImageProcessor(\"TABULAR OR GRAPHIC MATERIAL SET FORTH AT THIS POINT IS NOT DISPLAYABLE\"); \r\n            $(window).load(iip.init);\r\n            \r\n    \t\tjQuery.curCSS = jQuery.css;\r\n        </script>\r\n\t\t\t<!--[if IE 7]>\r\n\t\t<script type=\"text/javascript\" src=\"/wlin/js/ie7.js?14-3-11\">//</script>\r\n\t\t\t<![endif]-->\r\n\t\t<link type=\"text/css\" rel=\"stylesheet\" href=\"/wlin/css/document.css?14-3-11\" /><link type=\"text/css\" rel=\"stylesheet\" href=\"/wlin/css/document-plus.css?14-3-11\" /><script type=\"text/javascript\" src=\"/wlin/js/general.js?14-3-11\">//</script><script type=\"text/javascript\" src=\"/wlin/js/jquery.icheck.min.js?14-3-11\">//</script><script type=\"text/javascript\" src=\"/wlin/js/timeout.js?14-3-11\">//</script><script type=\"text/javascript\" src=\"/wlin/js/jquery.timers-1.2.js?14-3-11\">//</script><script type=\"text/javascript\" src=\"/wlin/js/jquery.selectBox.js?14-3-11\">//</script><script type=\"text/javascript\" src=\"/wlin/js/classes/FootnoteViewer.js?14-3-11\">//</script><script type=\"text/javascript\" src=\"/wlin/js/classes/InlineDocLoader.js?14-3-11\">//</script><link type=\"text/css\" rel=\"stylesheet\" href=\"/wlin/css/jqueryui/jquery-ui.css\" /><!--[if lte IE 7]><link type=\"text/css\" rel=\"stylesheet\" href=\"/wlin/css/rspace/ie67.css\"><![endif]--><script type=\"text/javascript\" src=\"/wlin/js/maf.js\">//</script><script type=\"text/javascript\" src=\"/maf/wlin/app/folders/scripts/rspace_params_constants.js?no-context=true\">//</script><script type=\"text/javascript\" src=\"/wlin/js/rspace/btree.js\">//</script><script type=\"text/javascript\" src=\"/wlin/js/rspace/rspace.growl.js\">//</script><script type=\"text/javascript\" src=\"/wlin/js/rspace/rspace.js\">//</script><script type=\"text/javascript\" src=\"/wlin/js/rspace/rspace_init.js\">//</script><script type=\"text/javascript\" src=\"/wlin/js/rspace/search_results.js\">//</script><script type=\"text/javascript\" src=\"/wlin/js/lazyload-min.js\">//</script><script type=\"text/javascript\" src=\"/wlin/js/rspace/doc_view.js\">//</script><script type=\"text/javascript\">\r\n\t\t\t\tvar isRSActions = true;\r\n\t\t\t</script><script type=\"text/javascript\" src=\"/wlin/js/rspace/doc_view_init.js\">//</script><script type=\"text/javascript\" src=\"/wlin/js/document.js?14-3-11\">//</script>\r\n\t\t\t<!--[if IE 7]>\r\n\t\t<script type=\"text/javascript\" src=\"/wlin/js/ie7.js?14-3-11\">//</script>\r\n\t\t\t<![endif]-->\r\n\t\t<style type=\"text/css\">.jstree ul,.j",
  "/*\n  Copyright 2020 Joel Elkins <joel@elkins.com>\n\n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 2 of the License, or\n  (at your option) any later version.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n#include QMK_KEYBOARD_H\n\n#include \"print.h\"\n\n// Idle handling\n\n#define IDLE_TIMEOUT 360\nuint16_t rgb_idle_seconds = 0;\nuint16_t rgb_timer;\nuint8_t save_layer;\n\n#define NUMLOCK_ON (host_keyboard_leds() & (1<<USB_LED_NUM_LOCK))\n#define MODS_SHIFT (get_mods() & MOD_MASK_SHIFT)\n#define MODS_CTRL (get_mods() & MOD_MASK_CTRL)\n\n// Macro keycodes\n\nenum alt_keycodes {\n    KB_BOOT = SAFE_RANGE,\n};\n\nenum layers {\n        _QWERTY,\n        _ADJUST,\n};\n\n// Layers\n\nconst uint16_t PROGMEM keymaps[][MATRIX_ROWS][MATRIX_COLS] = {\n    [_QWERTY] = LAYOUT(\n        KC_GESC, KC_1,    KC_2,    KC_3,    KC_4,    KC_5,    KC_6,    KC_7,    KC_8,    KC_9,    KC_0,    KC_MINS,    KC_EQL,  KC_BSPC, KC_DEL,\n        KC_TAB,  KC_Q,    KC_W,    KC_E,    KC_R,    KC_T,    KC_Y,    KC_U,    KC_I,    KC_O,    KC_P,    KC_LBRC,    KC_RBRC, KC_BSLS, KC_HOME,\n        KC_CAPS, KC_A,    KC_S,    KC_D,    KC_F,    KC_G,    KC_H,    KC_J,    KC_K,    KC_L,    KC_SCLN, KC_QUOT,    KC_ENT,           KC_PGUP,\n        KC_LSFT, KC_Z,    KC_X,    KC_C,    KC_V,    KC_B,    KC_N,    KC_M,    KC_COMM, KC_DOT,  KC_SLSH, KC_RSFT,             KC_UP,   KC_PGDN,\n        KC_LCTL, KC_LALT, KC_LGUI,                       KC_SPC,                                  KC_RALT, MO(_ADJUST),KC_LEFT, KC_DOWN, KC_RGHT\n    ),\n    [_ADJUST] = LAYOUT(\n        KC_GRV,  KC_F1,   KC_F2,   KC_F3,   KC_F4,   KC_F5,   KC_F6,   KC_F7,   KC_F8,   KC_F9,   KC_F10,  KC_F11,  KC_F12,  KC_F13,  KC_INS,\n        _______, RGB_SPD, RGB_VAI, RGB_SPI, RGB_HUI, RGB_SAI, _______, _______, _______, _______, KC_PSCR, KC_SLCK, KC_PAUS, KC_CALC, KC_END,\n        _______, RGB_RMOD,RGB_VAD, RGB_MOD, RGB_HUD, RGB_SAD, _______, _______, _______, _______, _______, _______, _______,          KC_MPLY,\n        _______, RGB_TOG, _______, _______, _______, KB_BOOT, _______, _______, _______, _______, _______, _______,          KC_VOLU, KC_MUTE,\n        _______, _______, _______,                            _______,                            _______, _______, KC_MPRV, KC_VOLD, KC_MNXT\n    ),\n    /*\n    [X] = LAYOUT(\n        _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______,\n        _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______,\n        _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______,          _______,\n        _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______,          _______, _______,\n        _______, _______, _______,                            _______,                            _______, _______, _______, _______, _______\n    ),\n    */\n};\n\n#ifdef _______\n#undef _______\n#endif\n\n#define RGB_NULL 254, 254, 254\n#define RGB_IS_NULL(rgb) ((rgb).r == 254 && (rgb).g == 254 && (rgb).b == 254)\n\n#define DEFAULT_HSV 255, 255, 128\n#define R(COL) { RGB_ ## COL }\n#define _______ R(NULL)\n#define xxxxxxx R(BLACK)\n\nstruct layer_rgb PROGMEM rgbs[] = {\n    [_QWERTY] = LAYOUT_hsv(LED_FLAG_ALL, RGB_MATRIX_CYCLE_ALL, DEFAULT_HSV),\n    [_ADJUST] = LAYOUT_rgb(LED_FLAG_NONE, RGB_MATRIX_SOLID_COLOR,\n        R(GREEN),  R(GREEN),   R(GREEN),   R(GREEN),   R(GREEN),   R(GREEN),   R(GREEN),   R(GREEN),   R(GREEN),   R(GREEN),   R(GREEN),   R(GREEN),   R(GREEN),   R(GREEN),   R(GREEN),\n        R(GREEN),  R(WHITE),  R(WHITE),  R(WHITE),  R(WHITE), R(WHITE), R(WHITE), R(WHITE), R(WHITE), R(WHITE), R(WHITE), R(WHITE), R(WHITE),  R(WHITE),  R(WHITE), R(WHITE),  R(GREEN),\n        R(GREEN),  xxxxxxx,   R(BLUE),   R(YELLOW), R(BLUE),  R(GREEN), R(ORANGE),xxxxxxx,  xxxxxxx,  xxxxxxx,  xxxxxxx,  xxxxxxx,  xxxxxxx,   xxxxxxx,   xxxxxxx,  xxxxxxx,   R(GREEN),\n                   xxxxxxx,   R(MAGENTA),R(YELLOW), R(MAGENTA),R(GREEN),R(ORANGE),xxxxxxx,  xxxxxxx,  xxxxxxx,  xxxxxxx,  xxxxxxx,  xxxxxxx,         xxxxxxx,       R(BLUE),\n        R(GREEN),  xxxxxxx,   R(WHITE),  xxxxxxx,   xxxxxxx,  xxxxxxx,  xxxxxxx,  xxxxxxx,  xxxxxxx,  xxxxxxx,  xxxxxxx,  xxxxxxx,         xxxxxxx,       R(YELLOW),R(ORANGE), R(GREEN),\n        R(GREEN),  xxxxxxx,   xxxxxxx,   xxxxxxx,                                        xxxxxxx,                         xxxxxxx,  xxxxxxx,   R(RED),    R(YELLOW),R(RED),    R(GREEN),\n        R(GREEN),  R(GREEN),   R(GREEN),   R(GREEN),   R(GREEN),   R(GREEN),   R(GREEN),   R(GREEN),   R(GREEN),   R(GREEN),   R(GREEN),   R(GREEN),   R(GREEN),   R(GREEN),   R(GREEN)\n    ),\n    /*\n    [X] = LAYOUT_rgb(\n        _______,   _______,    _______,    _______,    _______,    _______,    _______,    _______,    _______,    _______,    _______,    _______,    _______,    _______,    _______,\n        ______",
  "/* Images Component CSS */\n\n.grid-container {\n  text-align: center;\n  margin: auto;\n  width: 100%;\n  padding: 10px;\n}\n\n.grid-container.container {\n  padding-left: 0;\n  padding-right: 0;\n  width: 100%!important;\n}\n\n.grid-container.container * {\n  margin: 0;\n  padding: 0;\n  cursor: pointer;\n}\n\n.grid-container.col-md-4 {\n  width: 33.33333333%;\n}\n\n.grid-container.border {\n  border: 2px solid white;\n  border-radius: 6px;\n}\n\n.grid-container.background {\n  background-size: cover!important;\n  background-position: center!important;\n  background-repeat: no-repeat!important;\n}\n\n.grid-container.height-one {\n  width: 100%;\n  padding-top: 100%;\n}\n\n.grid-container.height-two {\n  width: 50%;\n  padding-top: 50%;\n}\n\n.grid-container.height-three {\n  width: 33.3333%;\n  padding-top: 33.3333%;\n}\n\n.grid-container.cover {\n  background-color: #222;\n  opacity: 0.5;\n  position: absolute;\n  right: 0;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  border-radius: 6px;\n}\n\n.grid-container.cover-text {\n  right: 0;\n  left: 0;\n  bottom: 0;\n  color: white;\n  font-size: 7%;\n  position: absolute;\n  top: 50%;\n  -webkit-transform: translate(0%, -50%);\n  -ms-transform: translate(0%, -50%);\n  transform: translate(0%, -50%);\n  text-align: center;\n}\n\n.grid-container.cover-text > p {\n  margin: 0;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.grid-container.slide {\n  height: 0;\n  bottom: 100%;\n  overflow: hidden;\n  font-size: 3%;\n}\n\n.grid-container.border:hover.slide {\n  bottom: 0;\n  height: auto;\n}\n\n.grid-container.border:hover.animate-text {\n  top: 62%;\n}\n",
  "#pragma checksum \"C:\\Users\\Batata\\Desktop\\tentativa crud\\terceira entrega\\ProjetoFinal terceira squad 7\\ProjetoFinal2\\Views\\CadastroJuridicoes2\\Edit.cshtml\" \"{ff1816ec-aa5e-4d10-87f7-6f4963833460}\" \"9b51e51764a6d627f47a959d6b77ef1f85805673\"\n// <auto-generated/>\n#pragma warning disable 1591\n[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_CadastroJuridicoes2_Edit), @\"mvc.1.0.view\", @\"/Views/CadastroJuridicoes2/Edit.cshtml\")]\nnamespace AspNetCore\n{\n    #line hidden\n    using System;\n    using System.Collections.Generic;\n    using System.Linq;\n    using System.Threading.Tasks;\n    using Microsoft.AspNetCore.Mvc;\n    using Microsoft.AspNetCore.Mvc.Rendering;\n    using Microsoft.AspNetCore.Mvc.ViewFeatures;\n#nullable restore\n#line 1 \"C:\\Users\\Batata\\Desktop\\tentativa crud\\terceira entrega\\ProjetoFinal terceira squad 7\\ProjetoFinal2\\Views\\_ViewImports.cshtml\"\nusing ProjetoFinal2;\n\n#line default\n#line hidden\n#nullable disable\n#nullable restore\n#line 2 \"C:\\Users\\Batata\\Desktop\\tentativa crud\\terceira entrega\\ProjetoFinal terceira squad 7\\ProjetoFinal2\\Views\\_ViewImports.cshtml\"\nusing ProjetoFinal2.Models;\n\n#line default\n#line hidden\n#nullable disable\n    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@\"SHA1\", @\"9b51e51764a6d627f47a959d6b77ef1f85805673\", @\"/Views/CadastroJuridicoes2/Edit.cshtml\")]\n    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@\"SHA1\", @\"a9f9d8d5f22e9a8adac201e24af293dd717519ff\", @\"/Views/_ViewImports.cshtml\")]\n    public class Views_CadastroJuridicoes2_Edit : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<ProjetoFinal2.Models.CadastroJuridico>\n    {\n        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(\"class\", new global::Microsoft.AspNetCore.Html.HtmlString(\"text-danger\"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);\n        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(\"type\", \"hidden\", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);\n        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(\"class\", new global::Microsoft.AspNetCore.Html.HtmlString(\"control-label\"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);\n        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(\"class\", new global::Microsoft.AspNetCore.Html.HtmlString(\"form-control\"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);\n        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(\"class\", new global::Microsoft.AspNetCore.Html.HtmlString(\"form-check-input\"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);\n        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(\"asp-action\", \"Edit\", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);\n        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(\"asp-action\", \"Index\", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);\n        #line hidden\n        #pragma warning disable 0649\n        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;\n        #pragma warning restore 0649\n        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();\n        #pragma warning disable 0169\n        private string __tagHelperStringValueBuffer;\n        #pragma warning restore 0169\n        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;\n        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager\n        {\n            get\n            {\n                if (__backed__tagHelperScopeManager == null)\n                {\n                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);\n                }\n                return __backed__tagHelperScopeManager;\n            }\n        }\n        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;\n        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;\n        private global::Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper;\n        private global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper;\n        private global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper;\n        private global::Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper;\n        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;\n        #pragma warning disable 1998\n        public async override global::System.Threading.Tasks.Task ExecuteAsync()\n        {\n            WriteLiteral(\"\\r\\n\");\n#nullable restore\n#line 3 \"C:\\Users\\Batata\\Desktop\\tentativa crud\\terceira entrega\\ProjetoFinal terceira squad 7\\ProjetoFinal2\\Views\\CadastroJuridicoes2\\Edit.cshtml\"\n  \n    ViewData[\"Title\"] = \"Edit\";\n\n#line default\n#line hidden\n#nullable disable\n            WriteLiteral(\"\\r\\n<h1>Edit</h1>\\r\\n\\r\\n<h4>CadastroJuridico</h4>\\r\\n<hr />\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col",
  "package com.poc.springredis.domain;\n\nimport java.io.Serializable;\nimport javax.persistence.Column;\nimport javax.persistence.Entity;\nimport javax.persistence.EnumType;\nimport javax.persistence.Enumerated;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.Id;\nimport lombok.AllArgsConstructor;\nimport lombok.Builder;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\nimport org.hibernate.annotations.GenericGenerator;\n\n/**\n * @author Luram Archanjo / 20180820\n */\n@Entity\n@Data\n@Builder\n@NoArgsConstructor\n@AllArgsConstructor\npublic class Car implements Serializable {\n\n  @Id\n  @GeneratedValue(generator = \"UUID\")\n  @GenericGenerator(name = \"UUID\", strategy = \"org.hibernate.id.UUIDGenerator\")\n  private String id;\n\n  @Column\n  private String model;\n\n  @Column\n  private Integer year;\n\n  @Enumerated(EnumType.STRING)\n  private CarType type;\n\n}",
  "package org.apache.lucene.index.sorter;\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\n\nimport org.apache.lucene.index.DirectoryReader;\nimport org.apache.lucene.index.IndexWriter;\nimport org.apache.lucene.index.SlowCompositeReaderWrapper;\nimport org.apache.lucene.store.Directory;\nimport org.apache.lucene.util.Bits;\nimport org.apache.lucene.util._TestUtil;\nimport org.junit.BeforeClass;\n\npublic class IndexSortingTest extends SorterTestBase {\n  \n  private static final Sorter[] SORTERS = new Sorter[] {\n    new NumericDocValuesSorter(NUMERIC_DV_FIELD, true),\n    Sorter.REVERSE_DOCS,\n  };\n  \n  @BeforeClass\n  public static void beforeClassSorterUtilTest() throws Exception {\n    // only read the values of the undeleted documents, since after addIndexes,\n    // the deleted ones will be dropped from the index.\n    Bits liveDocs = reader.getLiveDocs();\n    List<Integer> values = new ArrayList<Integer>();\n    for (int i = 0; i < reader.maxDoc(); i++) {\n      if (liveDocs == null || liveDocs.get(i)) {\n        values.add(Integer.valueOf(reader.document(i).get(ID_FIELD)));\n      }\n    }\n    Sorter sorter = SORTERS[random().nextInt(SORTERS.length)];\n    if (sorter == Sorter.REVERSE_DOCS) {\n      Collections.reverse(values);\n    } else {\n      Collections.sort(values);\n      if (sorter instanceof NumericDocValuesSorter && random().nextBoolean()) {\n        sorter = new NumericDocValuesSorter(NUMERIC_DV_FIELD, false); // descending\n        Collections.reverse(values);\n      }\n    }\n    sortedValues = values.toArray(new Integer[values.size()]);\n    if (VERBOSE) {\n      System.out.println(\"sortedValues: \" + sortedValues);\n      System.out.println(\"Sorter: \" + sorter);\n    }\n\n    Directory target = newDirectory();\n    IndexWriter writer = new IndexWriter(target, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    reader = SortingAtomicReader.wrap(reader, sorter);\n    writer.addIndexes(reader);\n    writer.close();\n    reader.close();\n    dir.close();\n    \n    // CheckIndex the target directory\n    dir = target;\n    _TestUtil.checkIndex(dir);\n    \n    // set reader for tests\n    reader = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dir));\n    assertFalse(\"index should not have deletions\", reader.hasDeletions());\n  }\n  \n}\n",
  "<?php\n\ndeclare(strict_types=1);\n\nnamespace Itineris\\GFLoqateBankVerification;\n\nuse Itineris\\GFLoqateBankVerification\\API\\APIKeyValidator;\nuse Itineris\\GFLoqateBankVerification\\API\\TransientCachedBankAccountValidator;\n\nclass SettingsFields\n{\n    public const SERVICE_KEY_NAME = 'loqate_bank_verification_service_key';\n\n    public static function toArray(): array\n    {\n        return [\n            [\n                'title' => esc_html__('GF Loqate Bank Verification', 'gf-loqate-bank-verification'),\n                'fields' => [\n                    [\n                        'name' => static::SERVICE_KEY_NAME,\n                        'label' => esc_html__('Service Key', 'gf-loqate-bank-verification'),\n                        'type' => 'text',\n                        'input_type' => 'password',\n                        'feedback_callback' => function ($value): bool {\n                            if (! is_string($value) || '' === $value) {\n                                return false;\n                            }\n\n                            $validator = new APIKeyValidator();\n                            return $validator->isValid($value);\n                        },\n                        'class' =>'medium',\n                        'validation_callback' => function () {\n                            TransientPurger::purge(TransientCachedBankAccountValidator::TRANSIENT_KEY_PREFIX);\n                        },\n                    ],\n                ],\n            ],\n        ];\n    }\n}\n",
  "\u672c\u4e66\u7684\u5b97\u65e8\u662f\u6253\u9020\u4e00\u672c\u4e25\u8c28\u3001\u6613\u61c2\u7684`React`\u6e90\u7801\u5206\u6790\u6559\u7a0b\u3002\n\n\u4e3a\u4e86\u8fbe\u5230\u8fd9\u4e2a\u76ee\u6807\uff0c\u5728\u884c\u6587\u4e0a\uff0c\u672c\u4e66\u4f1a\u9075\u5faa\uff1a\n\n1. \u4e0d\u9884\u8bbe\u89c2\u70b9 \u2014\u2014 \u6240\u6709\u89c2\u70b9\u6765\u81ea`React`\u6838\u5fc3\u56e2\u961f\u6210\u5458\u5728\u516c\u5f00\u573a\u5408\u7684\u5206\u4eab\u3002\n\n2. \u4e30\u5bcc\u7684\u53c2\u8003\u8d44\u6599 \u2014\u2014 \u5305\u62ec\u5728\u7ebfDemo\u3001\u6587\u7ae0\u3001\u89c6\u9891\u3002\n\n3. \u4fdd\u6301\u66f4\u65b0 \u2014\u2014 \u5728`React`\u7248\u672c\u66f4\u65b0\u540e\u4f1a\u53ca\u65f6\u8865\u5145\u3002\u5f53\u524d\u7248\u672c`v17.0.0-alpha`\u3002\n\n## \u5bfc\u5b66\u89c6\u9891\n\n\u6bcf\u4f4d\u540c\u5b66\u7684\u57fa\u7840\u3001\u5b66\u4e60\u76ee\u7684\u3001\u53ef\u652f\u914d\u7684\u5b66\u4e60\u65f6\u95f4\u90fd\u4e0d\u540c\uff0c\u5bf9\u4e8e\u201c\u5b66\u4e60\u6e90\u7801\u201d\u8fd9\u79cd\u9700\u8981\u957f\u671f\u6295\u5165\u7684\u4e8b\u60c5\uff0c\u9700\u8981\u614e\u91cd\u8003\u8651\u6295\u5165\u4ea7\u51fa\u6bd4\u3002\n\n\u4e3a\u6b64\uff0c\u6211\u5728B\u7ad9\u5f55\u4e86\u4e00\u671f[\u5bfc\u5b66\u89c6\u9891](https://www.bilibili.com/video/BV1Ki4y1u7Vr)\u3002\n\n\u5728\u89c6\u9891\u7684\u524d\u534a\u90e8\u5206\uff0c\u6211\u5c06\u201c\u5b66\u4e60\u6e90\u7801\u201d\u5212\u5206\u4e3a5\u4e2a\u5c42\u6b21\uff0c\u9610\u8ff0\u4e86\uff1a\n\n- \u8fbe\u5230\u6bcf\u4e2a\u5c42\u6b21\u9700\u8981\u638c\u63e1\u54ea\u4e9b\u77e5\u8bc6\n\n- \u600e\u6837\u6700\u5feb\u7684\u638c\u63e1\u8fd9\u4e9b\u77e5\u8bc6\n\n- \u8fbe\u5230\u8fd9\u4e00\u5c42\u6b21\u540e\u4f1a\u6536\u83b7\u4ec0\u4e48\n\n\u5728\u5b66\u4e60\u672c\u4e66\u524d\uff0c\u4f60\u53ef\u4ee5\u7ed3\u5408\u81ea\u8eab\u60c5\u51b5\u505a\u51fa\u53d6\u820d\uff0c\u6709\u7684\u653e\u77e2\u3002\n\n\u5728\u89c6\u9891\u7684\u540e\u534a\u90e8\u5206\uff0c\u6211\u4f1a\u4ee5\u4e00\u4e2a`Demo`\u6f14\u793a`React`\u6e90\u7801\u7684\u8fd0\u884c\u6d41\u7a0b\uff0c\u4e3a\u4f60\u5b66\u4e60\u672c\u4e66\u5185\u5bb9\u6253\u4e0b\u57fa\u7840\u3002\n\n::: warning \u89c6\u9891\u8bfe\u7a0b\n\u6587\u5b57\u5305\u542b\u7684\u4fe1\u606f\u91cf\u6709\u9650\uff0c\u8ffd\u6c42\u6548\u7387\u7684\u540c\u5b66\u53ef\u4ee5\u8003\u8651[\u89c6\u9891\u8bfe\u7a0b](https://ke.sifou.com/course/1650000023864436)\uff0c\u7531\u6211\u5e26\u7740\u4f60\u4e00\u8d77debug\u6e90\u7801\u3002\n:::\n\n## \u7ae0\u8282\u8bf4\u660e\n\n\u6211\u4eec\u5e76\u6ca1\u6709\u4ece\u5982`ReactDOM.render`\u3001`this.setState`\u6216`Hooks`\u7b49\u8fd9\u4e9b\u65e5\u5e38\u5f00\u53d1\u8033\u719f\u80fd\u8be6\u7684`API`\u5165\u624b\uff0c\u800c\u662f\u4ece**\u7406\u5ff5**\u8fd9\u6837\u6bd4\u8f83\u9ad8\u7684\u62bd\u8c61\u5c42\u6b21\u5f00\u59cb\u5b66\u4e60\uff0c\u8fd9\u662f\u6709\u610f\u4e3a\u4e4b\u7684\u3002\n\n\u4ece\u7406\u5ff5\u5230\u67b6\u6784\uff0c\u4ece\u67b6\u6784\u5230\u5b9e\u73b0\uff0c\u4ece\u5b9e\u73b0\u5230\u5177\u4f53\u4ee3\u7801\u3002\n\n\u8fd9\u662f\u4e00\u4e2a\u81ea\u9876\u5411\u4e0b\u3001\u62bd\u8c61\u7a0b\u5ea6\u9012\u51cf\uff0c\u7b26\u5408\u8ba4\u77e5\u7684\u8fc7\u7a0b\u3002\u5982\u679c\u76f4\u63a5\u8bb2\u89e3API\uff0c\u90a3\u4e48\u5f88\u5bb9\u6613\u9677\u5165\u6e90\u7801\u7684\u6c6a\u6d0b\u5927\u6d77\u3002\n\n\u57fa\u4e8e\u6b64\uff0c\u672c\u4e66\u5212\u5206\u4e3a`\u7406\u5ff5\u7bc7`\u3001`\u67b6\u6784\u7bc7`\u3001`\u5b9e\u73b0\u7bc7`\u3002\n\n## \u7ae0\u8282\u5217\u8868\n\n### \u7406\u5ff5\u7bc7\n\n#### \u7b2c\u4e00\u7ae0 React\u7406\u5ff5\n\n\u2705 React\u7406\u5ff5\n\n\u2705 \u8001\u7684React\u67b6\u6784\n\n\u2705 \u65b0\u7684React\u67b6\u6784\n\n\u2705 Fiber\u67b6\u6784\u7684\u5fc3\u667a\u6a21\u578b\n\n\u2705 Fiber\u67b6\u6784\u7684\u5b9e\u73b0\u539f\u7406\n\n\u2705 Fiber\u67b6\u6784\u7684\u5de5\u4f5c\u539f\u7406\n\n\u2705 \u603b\u7ed3\n\n#### \u7b2c\u4e8c\u7ae0 \u524d\u7f6e\u77e5\u8bc6\n\n\u2705 \u6e90\u7801\u7684\u6587\u4ef6\u7ed3\u6784\n\n\u2705 \u8c03\u8bd5\u6e90\u7801\n\n\u2705 \u6df1\u5165\u7406\u89e3JSX\n\n### \u67b6\u6784\u7bc7\n\n#### \u7b2c\u4e09\u7ae0 render\u9636\u6bb5\n\n\u2705 \u6d41\u7a0b\u6982\u89c8\n\n\u2705 beginWork\n\n\u2705 completeWork\n\n#### \u7b2c\u56db\u7ae0 commit\u9636\u6bb5\n\n\u2705 \u6d41\u7a0b\u6982\u89c8\n\n\u2705 before mutation\u9636\u6bb5\n\n\u2705 mutation\u9636\u6bb5\n\n\u2705 layout\u9636\u6bb5\n\n### \u5b9e\u73b0\u7bc7\n\n#### \u7b2c\u4e94\u7ae0 Diff\u7b97\u6cd5\n\n\u2705 \u6982\u89c8\n\n\u2705 \u5355\u8282\u70b9Diff\n\n\u2705 \u591a\u8282\u70b9Diff\n\n#### \u7b2c\u516d\u7ae0 \u72b6\u6001\u66f4\u65b0\n\n\u2705 \u6d41\u7a0b\u6982\u89c8\n\n\u2705 \u5fc3\u667a\u6a21\u578b\n\n\u2705 Update\n\n\u2705 \u6df1\u5165\u7406\u89e3\u4f18\u5148\u7ea7\n\n\u2705 ReactDOM.render\n\n\u2705 this.setState\n\n#### \u7b2c\u4e03\u7ae0 Hooks\n\n\u2705 Hooks\u7406\u5ff5\n\n\u2705 \u6781\u7b80Hooks\u5b9e\u73b0\n\n\u2705 Hooks\u6570\u636e\u7ed3\u6784\n\n\u2705 useState\u4e0euseReducer\n\n\u2705 useEffect\n\n\u2705 useRef\n\n\u2705 useMemo\u4e0euseCallback\n\n#### \u7b2c\u516b\u7ae0 Concurrent Mode\n\n\u2705 \u6982\u89c8\n\n\u2705 Scheduler\u7684\u539f\u7406\u4e0e\u5b9e\u73b0\n\n\u2705 lane\u6a21\u578b\n\n\ud83d\udcdd \u5f02\u6b65\u53ef\u4e2d\u65ad\u66f4\u65b0\n\n\ud83d\udcdd \u9ad8\u4f18\u4efb\u52a1\u6253\u65ad\u673a\u5236\n\n\ud83d\udcdd batchedUpdates\n\n\ud83d\udcdd Suspense",
  "export enum ObjectCommands {\n  ADD_OBJECTS = 1,\n  REMOVE_OBJECTS = 2,\n  DUPLICATE_OBJECTS = 3,\n  MODIFY_PROPERTY = 4\n}\n\nexport enum SelectionCommands {\n  ADD_TO_SELECTION = 5,\n  REMOVE_FROM_SELECTION = 6,\n  TOGGLE_SELECTION = 7,\n  REPLACE_SELECTION = 8\n}\n\nexport enum ParentCommands {\n  REPARENT = 9,\n  GROUP = 10\n}\n\nexport enum TransformCommands {\n  POSITION = 11,\n  ROTATION = 12,\n  SCALE = 13,\n  ROTATE_AROUND = 14\n}\n\nexport enum MiscCommands {\n  TAG_COMPONENT = 15\n}\n\nexport const EditorCommands = {\n ...ObjectCommands,\n ...SelectionCommands,\n ...ParentCommands,\n ...TransformCommands,\n ...MiscCommands\n}\n\nexport type EditorCommandsType = ObjectCommands | SelectionCommands | ParentCommands | TransformCommands | MiscCommands\n\nexport default EditorCommands\n",
  "<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand\" href=\"#\">Info 6</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link active\" aria-current=\"page\" href=\"{{ route(\"post.index\") }}\">Home</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"{{ route(\"post.index\") }}\">Post</a>\n          </li>\n          @auth\n              <li class=\"nav-item dropdown\">\n              <a id=\"navbarDropdown\" class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" v-pre>\n                  {{ Auth::user()->name }}\n              </a>\n\n              <div class=\"dropdown-menu dropdown-menu-end\" aria-labelledby=\"navbarDropdown\">\n                  <a class=\"dropdown-item\" href=\"{{ route('logout') }}\"\n                    onclick=\"event.preventDefault();\n                                  document.getElementById('logout-form').submit();\">\n                      {{ __('Logout') }}\n                  </a>\n\n                  <form id=\"logout-form\" action=\"{{ route('logout') }}\" method=\"POST\" class=\"d-none\">\n                      @csrf\n                  </form>\n                </div>\n              </li>\n          @endauth\n          \n          {{--\n          <li class=\"nav-item dropdown\">\n            <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n              Dropdown\n            </a>\n            <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n              <li><a class=\"dropdown-item\" href=\"#\">Action</a></li>\n              <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>\n              <li><hr class=\"dropdown-divider\"></li>\n              <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li>\n            </ul>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\n          </li>\n        </ul>\n        <form class=\"d-flex\">\n          <input class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\n          <button class=\"btn btn-outline-success\" type=\"submit\">Search</button>\n        </form>\n    --}}\n      </div>\n    </div>\n  </nav>",
  "/* TEMPLATE GENERATED TESTCASE FILE\r\nFilename: CWE36_Absolute_Path_Traversal__wchar_t_console_ofstream_05.cpp\r\nLabel Definition File: CWE36_Absolute_Path_Traversal.label.xml\r\nTemplate File: sources-sink-05.tmpl.cpp\r\n*/\r\n/*\r\n * @description\r\n * CWE: 36 Absolute Path Traversal\r\n * BadSource: console Read input from the console\r\n * GoodSource: Full path and file name\r\n * Sink: ofstream\r\n *    BadSink : Open the file named in data using ofstream::open()\r\n * Flow Variant: 05 Control flow: if(staticTrue) and if(staticFalse)\r\n *\r\n * */\r\n\r\n#include \"std_testcase.h\"\r\n\r\n#ifndef _WIN32\r\n#include <wchar.h>\r\n#endif\r\n\r\n#include <fstream>\r\nusing namespace std;\r\n\r\n/* The two variables below are not defined as \"const\", but are never\r\n   assigned any other value, so a tool should be able to identify that\r\n   reads of these will always return their initialized values. */\r\nstatic int staticTrue = 1; /* true */\r\nstatic int staticFalse = 0; /* false */\r\n\r\nnamespace CWE36_Absolute_Path_Traversal__wchar_t_console_ofstream_05\r\n{\r\n\r\n#ifndef OMITBAD\r\n\r\nvoid bad()\r\n{\r\n    wchar_t * data;\r\n    wchar_t dataBuffer[FILENAME_MAX] = L\"\";\r\n    data = dataBuffer;\r\n    if(staticTrue)\r\n    {\r\n        {\r\n            /* Read input from the console */\r\n            size_t dataLen = wcslen(data);\r\n            /* if there is room in data, read into it from the console */\r\n            if (FILENAME_MAX-dataLen > 1)\r\n            {\r\n                /* POTENTIAL FLAW: Read data from the console */\r\n                if (fgetws(data+dataLen, (int)(FILENAME_MAX-dataLen), stdin)!= NULL)\r\n                {\r\n                    /* The next few lines remove the carriage return from the string that is\r\n                     * inserted by fgetws() */\r\n                    dataLen = wcslen(data);\r\n                    if (dataLen > 0 && data[dataLen-1] == L'\\n')\r\n                    {\r\n                        data[dataLen-1] = L'\\0';\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    printLine(\"fgetws() failed\");\r\n                    /* Restore NUL terminator if fgetws fails */\r\n                    data[dataLen] = L'\\0';\r\n                }\r\n            }\r\n        }\r\n    }\r\n    {\r\n        ofstream outputFile;\r\n        /* POTENTIAL FLAW: Possibly opening a file without validating the file name or path */\r\n        outputFile.open((char *)data);\r\n        outputFile.close();\r\n    }\r\n}\r\n\r\n#endif /* OMITBAD */\r\n\r\n#ifndef OMITGOOD\r\n\r\n/* goodG2B1() - use goodsource and badsink by changing the staticTrue to staticFalse */\r\nstatic void goodG2B1()\r\n{\r\n    wchar_t * data;\r\n    wchar_t dataBuffer[FILENAME_MAX] = L\"\";\r\n    data = dataBuffer;\r\n    if(staticFalse)\r\n    {\r\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\r\n        printLine(\"Benign, fixed string\");\r\n    }\r\n    else\r\n    {\r\n#ifdef _WIN32\r\n        /* FIX: Use a fixed, full path and file name */\r\n        wcscat(data, L\"c:\\\\temp\\\\file.txt\");\r\n#else\r\n        /* FIX: Use a fixed, full path and file name */\r\n        wcscat(data, L\"/tmp/file.txt\");\r\n#endif\r\n    }\r\n    {\r\n        ofstream outputFile;\r\n        /* POTENTIAL FLAW: Possibly opening a file without validating the file name or path */\r\n        outputFile.open((char *)data);\r\n        outputFile.close();\r\n    }\r\n}\r\n\r\n/* goodG2B2() - use goodsource and badsink by reversing the blocks in the if statement */\r\nstatic void goodG2B2()\r\n{\r\n    wchar_t * data;\r\n    wchar_t dataBuffer[FILENAME_MAX] = L\"\";\r\n    data = dataBuffer;\r\n    if(staticTrue)\r\n    {\r\n#ifdef _WIN32\r\n        /* FIX: Use a fixed, full path and file name */\r\n        wcscat(data, L\"c:\\\\temp\\\\file.txt\");\r\n#else\r\n        /* FIX: Use a fixed, full path and file name */\r\n        wcscat(data, L\"/tmp/file.txt\");\r\n#endif\r\n    }\r\n    {\r\n        ofstream outputFile;\r\n        /* POTENTIAL FLAW: Possibly opening a file without validating the file name or path */\r\n        outputFile.open((char *)data);\r\n        outputFile.close();\r\n    }\r\n}\r\n\r\nvoid good()\r\n{\r\n    goodG2B1();\r\n    goodG2B2();\r\n}\r\n\r\n#endif /* OMITGOOD */\r\n\r\n} /* close namespace */\r\n\r\n/* Below is the main(). It is only used when building this testcase on\r\n   its own for testing or for building a binary to use in testing binary\r\n   analysis tools. It is not used when compiling all the testcases as one\r\n   application, which is how source code analysis tools are tested. */\r\n\r\n#ifdef INCLUDEMAIN\r\n\r\nusing namespace CWE36_Absolute_Path_Traversal__wchar_t_console_ofstream_05; /* so that we can use good and bad easily */\r\n\r\nint main(int argc, char * argv[])\r\n{\r\n    /* seed randomness */\r\n    srand( (unsigned)time(NULL) );\r\n#ifndef OMITGOOD\r\n    printLine(\"Calling good()...\");\r\n    good();\r\n    printLine(\"Finished good()\");\r\n#endif /* OMITGOOD */\r\n#ifndef OMITBAD\r\n    printLine(\"Calling bad()...\");\r\n    bad();\r\n    printLine(\"Finished bad()\");\r\n#endif /* OMITBAD */\r\n    return 0;\r\n}\r\n\r\n#endif\r\n",
  "import { format, addMilliseconds } from \"date-fns\"\nimport { BLOCK_TIME } from \"../../constants\"\n\n/* end */\nexport const estimateTime = (current: number, next: number) => {\n  const estimated = addMilliseconds(new Date(), (next - current) * BLOCK_TIME)\n  return format(estimated, \"EEE, LLL dd, HH:mm aa\")\n}\n\n/* link */\nexport const replaceLink = (paragraph: string = \"\") => {\n  const replaced = paragraph.replace(\n    /(https?:\\/\\/[^\\s]+)/g,\n    '<a href=\"$1\" target=\"_blank\" rel=\"noopener noreferrer\">$1</a>'\n  )\n\n  return { dangerouslySetInnerHTML: { __html: replaced } }\n}\n",
  "import pandas as pd\nimport scipy.misc\nimport os\n\n# Load the data\ndfTrain = pd.read_csv(\"./dataset/mnist_train.csv\", header=None)\ndfTest = pd.read_csv(\"./dataset/mnist_test.csv\", header=None)\n\nyTrain = dfTrain[0]\n# Drop 'label' column\nxTrain = dfTrain.drop(labels=[0], axis=1)\n\nyTest = dfTest[0]\n# Drop 'label' column\nxTest = dfTest.drop(labels=[0], axis=1)\n\n# free some space\ndel dfTest\ndel dfTrain\n\n# Reshape images\nxTrain = xTrain.values.reshape(-1, 28, 28)\nxTest = xTest.values.reshape(-1, 28, 28)\n\ndicTrain = {}\ndicTest = {}\nfor i in range(0, 10):\n    dicTrain[i] = 1\n    dicTest[i] = 1\n\n# Generate training jpg files\nindex = 0\n\nfolder = os.path.join( os.path.dirname(os.path.abspath(__file__)), 'dataset')\nfolder = os.path.join(folder, 'images')\nfolderTrain = os.path.join(folder, 'train')\n\nfor img in xTrain:\n    label = yTrain[index]\n    imageName = '{}_{}.jpg'.format(label, dicTrain[label])\n    imagePath = os.path.join(folderTrain, imageName)\n    scipy.misc.imsave(imagePath, img)\n    dicTrain[label] = dicTrain[label] + 1\n    index += 1\n    print('Save train {}'.format(imageName))\n\n# Generate test jpg files\nindex = 0\n\nfolder = os.path.join( os.path.dirname(os.path.abspath(__file__)), 'dataset')\nfolder = os.path.join(folder, 'images')\nfolderTest = os.path.join(folder, 'test')\n\nfor img in xTest:\n    label = yTest[index]\n    imageName = '{}_{}.jpg'.format(label, dicTest[label])\n    imagePath = os.path.join(folderTest, imageName)\n    scipy.misc.imsave(imagePath, img)\n    dicTest[label] = dicTest[label] + 1\n    index += 1\n    print('Save test {}'.format(imageName))\n",
  "export default { 'fire-extinguisher': { width: 1408, height: 1792, paths: [{ d: 'M512 192q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zM1408 160v320q0 16-12 25-8 7-20 7-4 0-7-1l-448-96q-11-2-18-11t-7-20h-256v102q111 23 183.5 111t72.5 203v800q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45v-800q0-106 62.5-190.5t161.5-114.5v-111h-32q-59 0-115 23.5t-91.5 53-66 66.5-40.5 53.5-14 24.5q-17 35-57 35-16 0-29-7-23-12-31.5-37t3.5-49q5-10 14.5-26t37.5-53.5 60.5-70 85-67 108.5-52.5q-25-42-25-86 0-66 47-113t113-47 113 47 47 113q0 33-14 64h302q0-11 7-20t18-11l448-96q3-1 7-1 12 0 20 7 12 9 12 25z' }] } };\n",
  "## Cypress Kitchen Sink Test\nThese tests have been copied over from the Cypress kitchen sink to test and demonstrate compatibility.\nIt can work along with `saucectl` perfectly.\n\n## How to run\n```sh\nsaucectl run -c.sauce/config.yml\n```\n\n## Config File\nAn example config file is in `.sauce/config.yml`.\n\n## Reference\n[Kitchen Sink](https://example.cypress.io/)\n[Cypress Kitchen Sink Test Repository](https://github.com/cypress-io/cypress-example-kitchensink/)\n[Cypress](https://www.cypress.io/)\n",
  "<div class=\"wrapper-sm\">\n    <tabset class=\"nav-tabs\">\n        <tab>\n            <tab-heading>\n                \u89d2\u8272\u7ba1\u7406\n            </tab-heading>\n            <div ng-controller=\"AdminRoleCtrl as vm\">\n                <div class=\"panel panel-default\">\n                    <div class=\"panel-heading\">\n                        <button type=\"button\" ng-click=\"vm.addData()\" class=\"btn btn-sm btn-success\">\n                            <i class=\"glyphicon glyphicon-plus\"></i>\n                            \u6dfb\u52a0\n                        </button>\n                    </div>\n                    <div class=\"table-responsive\">\n                        <table ng-table=\"vm.tableParams\"\n                               class=\"table table-condensed table-bordered table-striped\">\n                            <tr ng-repeat=\"row in $data\">\n                                <td title=\"'id'\" filter=\"{ id: 'text'}\" sortable=\"'id'\">\n                                    {{row.id}}\n                                </td>\n                                <td title=\"'\u89d2\u8272\u540d'\" filter=\"{ role_name: 'text'}\" sortable=\"'role_name'\">\n                                    {{row.role_name}}\n                                </td>\n                                <td title=\"'\u6743\u9650\u96c6\u5408'\" filter=\"{ authid_set: 'text'}\" sortable=\"'authid_set'\">\n                                    <!--{{row.role_permits}} -->\n                                    {{row.authid_set}}\n                                </td>\n\n                                <td title=\"'sid'\">\n                                    {{row.sid}}\n                                </td>\n                                <td title=\"'mid'\">\n                                    {{row.mid}}\n                                </td>\n\n                                <td title=\"'\u64cd\u4f5c'\">\n                                    <div class=\"btn-group\">\n                                        <button type=\"button\" class=\"btn btn-info\" ng-click=\"vm.editData(row)\">\u7f16\u8f91</button>\n                                        <button type=\"button\" class=\"btn btn-info\" ng-click=\"vm.deleteData(row.id)\">\u5220\u9664</button>\n                                    </div>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n\n                <!--llw updage start-->\n\n                <script type=\"text/ng-template\" id=\"admin.role.edit.html\">\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading font-bold\">\u89d2\u8272\u7ba1\u7406</div>\n                        <div class=\"modal-body  wrapper-lg\">\n                            <form role=\"form\" class=\"form-horizontal\" novalidate=\"novalidate\" name=\"admin_user_edit_form\">\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-2 control-label\">Mid</label>\n\n                                    <div class=\"col-sm-6\" ng-class=\"\">\n                                        <input type=\"text\" class=\"form-control\" placeholder=\"Mid\"\n                                               ng-model=\"data.mid\"\n                                               ng-required=\"true\">\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-2 control-label\">SID</label>\n\n                                    <div class=\"col-sm-6\" ng-class=\"\">\n                                        <input type=\"text\" class=\"form-control\" placeholder=\"SID\"\n                                               ng-model=\"data.sid\"\n                                               ng-required=\"true\">\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-2 control-label\">\u89d2\u8272\u540d</label>\n\n                                    <div class=\"col-sm-6\"\n                                         ng-class=\"\">\n                                        <input type=\"text\" class=\"form-control\" placeholder=\"\u89d2\u8272\u540d\"\n                                               ng-model=\"data.role_name\"\n                                               ng-required=\"true\">\n                                    </div>\n                                </div>\n\n                                <div class=\"form-group\">\n                                    <label class=\"col-sm-2 control-label\">\u89d2\u8272\u6743\u9650</label>\n\n                                    <div class=\"col-sm-6\" ng-class=\"\">\n                                        <!--<input type=\"text\" class=\"form-control\" placeholder=\"\u89d2\u8272\u6743\u9650\"-->\n                                               <!--ng-model=\"data.role_permits\"-->\n                                               <!--ng-required=\"true\">-->\n                                        <select ui-jq=\"chosen\"\n                                                multiple\n                                                data-placeholder=\"\u89d2\u8272\u6743\u9650\"\n                                                ng-model=\"data.permitsSelected\"\n                                                ng-options=\"value.id as value.name for value in permits\"\n                                                class=\"w-md form-control\">\n                                        </select>\n                                    </div>\n                                </div>\n\n                            </form>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button class=\"btn btn-default\" ng-click=\"cancel()\">\u53d6\u6d88</button>\n                            <button class=\"btn btn-primary\" ng-click=\"ok()\">\u4fdd\u5b58</button>\n                        </div>\n                    </div>\n\n                </script>\n\n                <!--llw update end-->\n            </div>\n        </tab>\n    </tabset>\n</div>\n",
  "---\ntitle: 2020.01.03 \u8def\u5b89\u65f6\u8bc4\nauthor: \u8def\u5fb7\u793e\ndate: 2020-01-03 07:00:00 -0400\ncategories: [\u8def\u5fb7\u8bbf\u8c08]\ntags: [\u8def\u5fb7, \u5b89\u7ea2]\n---\n\n> \u6587\u5b57\u6765\u6e90\uff1a[@ling52804443](https://twitter.com/ling52804443)  \n> YouTube \u89c6\u9891\u5730\u5740\uff1a[https://www.youtube.com/watch?v=IvM2Tkdb8cE](https://www.youtube.com/watch?v=IvM2Tkdb8cE)\n\n## 00:00:15\n\n\u8def\u5fb7: \u6240\u6709\u4f0a\u62c9\u514b\u7f8e\u56fd\u516c\u6c11\u7acb\u5373\u64a4\u79bb\uff0c\u7f8e\u9886\u9986\u6682\u505c\u670d\u52a1\uff1b\u4e00\u65e6\u638c\u63e1\u4f0a\u8bd5\u56fe\u6709\u6240\u884c\u52a8\uff0c\u7f8e\u519b\u5fc5\u5148\u53d1\u5236\u4eba\uff1b\u7f8e\u84ec\u4f69\u6fb3\u7acb\u5373\u901a\u77e5\u6768\u6d01\u7bea\uff0c\u9694\u5c71\u6253\u725b\u8b66\u544a\u4e2d\u5171\uff1f\n\n## 00:01:42\n\n\u5b89\u7ea2: \u9ed1\u8b66\u5047\u626e\u5e02\u6c11\u7838\u73bb\u7483\u88ab\u8bc6\u7834\uff1bCCP\u5175\u5de5\u5382\u52a0\u73ed\u52a0\u70b9\u5236\u9020\uff0c\u65b0\u7586\u6838\u6b66\u57fa\u5730\u7591\u4f3c\u6709\u52a8\u4f5c\uff1b\n\n## 00:02:53\n\n\u8def\u5fb7: \u9ec4\u91d1\u98d9\u6da8\uff1b\u81ea\u536b\u53cd\u51fb\uff0c\u7f8e\u519b\u5408\u6cd5\u65a9\u9996\u4f0a\u6717\u4f0a\u65af\u5170\u9769\u547d\u536b\u961f\u5c06\u9886\u82cf\u83b1\u66fc\u5c3c\uff0c\u6709\u6cd5\u7406\u4f9d\u636e\uff0c\u4f0a\u6717\u88ad\u51fb\u7f8e\u5927\u4f7f\u9986\uff0c\u7ed9\u4e86\u5ddd\u666e\u603b\u7edf\u8206\u8bba\u3001\u9053\u4e49\u5236\u9ad8\u70b9\u3002\n\n## 00:09:34\n\n\u5b89\u7ea2: \u4f0a\u6717\u548e\u7531\u81ea\u53d6\uff1bCCP\u4e00\u4e3e\u4e00\u52a8\u4e5f\u5728\u7f8e\u56fd\u76d1\u63a7\u4e4b\u4e0b\uff1b\u9488\u5bf9\u82cf\u83b1\u66fc\u5c3c\u7cbe\u51c6\u5730\u5b9a\u70b9\u6e05\u9664\uff0c\u8db3\u89c1\u7f8e\u519b\u5b9e\u529b\uff0c\u5ddd\u666e\u603b\u7edf\u4e0d\u558a\u53e3\u53f7\uff0c\u96f7\u9706\u6253\u51fb\u3002\n\n## 00:12:05\n\n\u8def\u5fb7: \u53c2\u8bae\u9662\u5362\u6bd4\u5965\u53d1\u63a8\uff0c\u6f84\u6e05\u4e3a\u4f55\u6e05\u9664\u82cf\u83b1\u66fc\u5c3c\uff1b\u84ec\u76ae\u5965\u53d1\u63a8\u4e0e\u6768\u6d01\u7bea\u4ea4\u8c08\uff1b\u7f8e\u56fd\u5b9a\u70b9\u6e05\u9664\uff0c\u901a\u8fc7\u8138\u90e8\u8bc6\u522b\u4e0d\u4f1a\u6253\u9519\u4eba\uff0c\u8ba4\u4e3aCCP\u5c06\u9886\u7684\u8138\u90fd\u88ab\u7f8e\u56fd\u5907\u6848\u3002\u7f8e\u56fd\u56fd\u9632\u90e8\u957f\u57c3\u65af\u4f2f\u547c\u5401\u671d\u9c9c\u514b\u5236\uff1b\u7f8e\u519b\u6050\u6016\u7684\u60c5\u62a5\u80fd\u529b\uff0c\u738b\u5065\u7167\u7247\u3001\u9648\u950b\u53cc\u4fee\u89c6\u9891\u5168\u90e8\u638c\u63e1\uff1b\u7f8e\u56fd\u591a\u65b9\u519b\u4e8b\u884c\u52a8\uff0c\u5b9e\u5219\u8b66\u544aCCP\u3002\n\n## 00:19:15\n\n\u5b89\u7ea2: \u54c8\u6885\u5185\u4f0a\u6c89\u75db\u60bc\u5ff5\u82cf\u83b1\u66fc\u5c3c\uff1b\u7f8e\u519b\u5bf9\u82cf\u83b1\u66fc\u5c3c\u884c\u8e2a\u7684\u7cbe\u51c6\u638c\u63e1\uff1b2017\u5e74\uff0c\u8f70\u70b8\u53d9\u5229\u4e9a\u5df2\u7ecf\u5c55\u73b0\u7f8e\u519b\u5f3a\u5927\u7684\u79d1\u6280\u4e0e\u519b\u4e8b\u5b9e\u529b\uff1b\u5ddd\u666e\u63d0\u9192\u91d1\u6b63\u6069\u8981\u201c\u8bf4\u8bdd\u7b97\u8bdd\u201d\uff0c\u7f8e\u56fd\u5bf9\u5f85\u91d1\u6b63\u6069\u8fde\u62c9\u5e26\u6253\uff0c\u5bf9\u4f0a\u6717\u6beb\u4e0d\u7559\u60c5\uff0c\u5bf9CCP\u76f4\u63a5\u81f4\u7535\u6768\u6d01\u7bea\u8b66\u544a\u3002\n\n## 00:24:26\n\n\u8def\u5fb7: \u9ec4\u91d1\u6da8\u4ef7\u53ea\u662f\u521a\u521a\u5f00\u59cb\u3002\u6545\u4e8b\u5e76\u672a\u7ed3\u675f\uff0c \u82cf\u62c9\u66fc\u5c3c\u884c\u8e2a\u6cc4\u9732\uff0c\u6709\u671b\u4ee4\u4e2d\u4f0a\u8054\u76df\u4ea7\u751f\u5206\u88c2\uff0cCCP\u65b9\u7591\u4f3c\u6709\u4eba\u5411\u7f8e\u65b9\u6cc4\u9732\u60c5\u62a5\uff0c\u5c06\u548c\u4ee5\u5171\u706d\u5171\u6709\u5de8\u5927\u5173\u7cfb\uff1b\u4e0eCCP\u5408\u4f5c\uff0c\u53ef\u80fd\u968f\u65f6\u88ab\u51fa\u5356\uff0c\u5f53\u70ae\u7070\uff1b\u5f20\u53ec\u5fe0\u53d1\u5fae\u535a\uff0c\u8ba4\u4e3a\u7f8e\u4f0a\u5f00\u5f20\u5c06\u8f6c\u79fb\u7f8e\u519b\u6ce8\u610f\u529b\uff0c\u4f46\u8def\u5fb7\u8ba4\u4e3a\u53cd\u800c\u4f1a\u805a\u7126CCP\u3002\u6587\u8d35\u5148\u751f\u653e\u738b\u5065\u7167\u7247\uff0c\u9884\u544a\u9648\u950b\u53cc\u4fee\u89c6\u9891\u5e76\u975e\u5a31\u4e50\uff0c\u90fd\u5728\u91ca\u653e\u4fe1\u53f7\u3002\n\n## 00:30:50\n\n\u5b89\u7ea2: \u8c08\u9000\u4f0d\u519b\u4eba\u4fe1\u8bbf\u5c40\u95e8\u53e3\u4e0a\u540a\u3001\u5929\u4ef7\u8fc7\u8def\u8d39\u3001\u9ec4\u91d1\u5927\u8d8b\u52bf\u3002CCP\u5185\u6597\uff0c\u5b58\u5728\u88c2\u7f1d\uff0c\u91d1\u6b63\u6069\u5de6\u53f3\u6447\u6446\uff0c\u5f85\u4ef7\u800c\u6cbd\uff1b\u6bdb\u65f6\u4ee3\u652f\u63f4\u201c\u4e9a\u975e\u62c9\u201d\u4e0e\u4e00\u5e26\u4e00\u8def\u201c\u5927\u6492\u5e01\u201d\u601d\u8def\u4e00\u81f4\uff0c\u738b\u6bc5\u8bbf\u95ee\u975e\u6d32\u4e94\u56fd\u3002\n\n## 00:35:36\n\n\u8def\u5fb7: \u7f8e\u56fd\u8b66\u544a\u4f0a\u6717\uff0c\u4e00\u65e6\u4f0a\u6717\u6709\u6240\u884c\u52a8\uff0c\u7f8e\u519b\u5148\u53d1\u5236\u4eba\u3002\u4f0a\u6717\u80cc\u540e\u662f\u4e2d\u4fc4\u652f\u6301\uff0c\u4e00\u4e3e\u4e00\u52a8\u5c3d\u5728\u7f8e\u519b\u638c\u63e1\uff1b1\u670815\u65e5\u662f\u7f8e\u65b9\u7ed9CCP\u6700\u540e\u7684\u673a\u4f1a\uff0c\u82e5\u4e0d\u7b7e\u7ea6\uff0c\u7f8e\u65b9\u53ef\u968f\u65f6\u8ba4\u5b9a\u6050\u6016\u7ec4\u7ec7\uff08\u65b0\u7586\u6cd5\u6848\u7b49\u5df2\u901a\u8fc7\uff0c\u6c11\u4f17\u60c5\u613f\uff09\uff1b\u4f0a\u6717\u96be\u4ee5\u5c01\u9501\u970d\u5c14\u6728\u5179\u6d77\u5ce1\uff1b\u5ddd\u666e\u603b\u7edf\u5c1a\u672a\u5bf9\u88ad\u51fb\u7f8e\u56fd\u4f7f\u9986\u8fdb\u884c\u53cd\u51fb\uff0c\u731c\u6d4b\u53ef\u80fd\u5c06\u4f0a\u6717\u653f\u5e9c\u8ba4\u5b9a\u4e3a\u6050\u6016\u7ec4\u7ec7\uff0c\u5176\u9886\u5bfc\u4eba\u968f\u65f6\u88ab\u5b9a\u70b9\u6e05\u9664\u3002\u6240\u6709\u4e00\u5207\u90fd\u662f\u505a\u7ed9CCP\u770b\uff0c\u9e21\u86cbpk\u5bfc\u5f39\uff0c\u7b2c\u4e09\u6b21\u4e16\u754c\u5927\u6218\u4e0d\u53ef\u80fd\u53d1\u751f\u3002\n\n## 00:41:59\n\n\u5b89\u7ea2: \u5982\u4f55\u7406\u89e3\u201c\u4e00\u65e6\u6709\u884c\u52a8\uff0c\u7acb\u5373\u5148\u53d1\u5236\u4eba\u201d\u3002\u4ece\u4f53\u5236\u89d2\u5ea6\u5206\u6790\u4e3a\u4f55CCP\u6253\u4e0d\u8d62\u3002\n\n## 00:45:52\n\n\u8def\u5fb7: \u5728\u7f8e\u56fd\u770b\u6765\uff0c\u4f0a\u6717\u6bd4CCP\u96be\u5bf9\u4ed8\uff0c\u4f0a\u6717\u4eba\u6709\u4fe1\u4ef0\uff0cCCP\u53ea\u8ba4\u94b1\u3002\u65f6\u95f4\u8868\uff1a12\u670831\u65e5\u4f0a\u6717\u5916\u957f\u8bbf\u95ee\u5317\u4eac\uff0c1\u67081\u65e5\u653b\u51fb\u7f8e\u56fd\u5927\u4f7f\u9986\u30021\u67082\u65e5\u9646\u519b82\u7a7a\u964d\u5e08\u51fa\u52a8\u30023\u65e5\u65a9\u9996\u82cf\u83b1\u66fc\u5c3c\u3002\u8c08\u6d3e\u51fa82\u7a7a\u964d\u5e08\uff08\u91cd\u88c5\u5907\uff09\uff0c\u800c\u975e\u6d77\u519b\u9646\u6218\u961f\u7684\u539f\u56e0\u3002\u9739\u96f3\u5e74\uff1a\u7ed9\u515a\u5185\u4fe1\u5fc3\u548c\u5e0c\u671b\uff0c\u7f8e\u56fd\u8bf4\u5230\u505a\u5230\u3002\u4e0d\u8981\u7406\u4f1a\u4f55\u5496\u5561\u5927\u5916\u5ba3\u3002\u9ec4\u91d1\u8981\u957f\u671f\u6301\u6709\u3002\n\n## 00:51:07\n\n\u5b89\u7ea2: \u5b97\u6559\u6781\u7aef\u4e3b\u4e49\u975e\u5e38\u53ef\u6015\uff1bCCP\u501f\u4f0a\u6717\u6491\u95e8\u9762\u3002\n\n## 00:53:20\n\n\u8def\u5fb7: \u9694\u5c71\u6253\u725b\u3002\u8bf7\u6218\u53cb\u5173\u6ce82018\u5e7411\u6708\u4efd\u5de6\u53f3\u6587\u8d35\u5148\u751f\u7cfb\u5217\u8282\u76ee\uff0c\u5bf9\u4eca\u5929\u7684\u4e00\u7cfb\u5217\u4e3e\u52a8\u65e9\u6709\u5e03\u5c40\u3002\u5ddd\u666e\u603b\u7edf\u4e00\u5b9a\u4f1a\u5728\u5927\u9009\u4e4b\u524d\u89e3\u51b3\u6389CCP\uff0c6\u67084\u65e5\u4e4b\u540eCCP\u53ef\u80fd\u4f1a\u6548\u4eff\u9a6c\u675c\u7f57\uff0c",
  "cask \"singularity\" do\n  version \"1.8.9.8709\"\n  sha256 \"ef40901d39389588be972b6f72ec58d1a4f0d982dbb87f0ea1eeeab1d388763b\"\n\n  url \"https://bitbucket.org/router_gray/singularityviewer/downloads/Singularity_Alpha_#{version.dots_to_underscores}_x86_64.dmg\",\n      verified: \"bitbucket.org/router_gray/singularityviewer/\"\n  name \"Singularity Viewer\"\n  desc \"Client for Second Life and OpenSim\"\n  homepage \"http://www.singularityviewer.org/\"\n\n  livecheck do\n    url \"http://www.singularityviewer.org/downloads\"\n    strategy :page_match do |page|\n      v = page[/Singularity[._-]?Alpha[._-]?(\\d+(?:_\\d+)*)[._-]?x86_64\\.dmg/i, 1]\n      v.tr(\"_\", \".\")\n    end\n  end\n\n  app \"SingularityAlpha.app\"\nend\n",
  "/*\n * Copyright 2013 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n#include <log/log.h>\n#include <ui/Rect.h>\n#include <ui/Region.h>\n\n#include \"GLES20RenderEngine.h\"\n#include \"GLExtensions.h\"\n#include \"Image.h\"\n#include \"Mesh.h\"\n#include \"RenderEngine.h\"\n\n#include <SurfaceFlinger.h>\n#include <vector>\n\n#include <android/hardware/configstore/1.0/ISurfaceFlingerConfigs.h>\n#include <configstore/Utils.h>\n\nusing namespace android::hardware::configstore;\nusing namespace android::hardware::configstore::V1_0;\n\nextern \"C\" EGLAPI const char* eglQueryStringImplementationANDROID(EGLDisplay dpy, EGLint name);\n\n// ---------------------------------------------------------------------------\nnamespace android {\nnamespace RE {\n// ---------------------------------------------------------------------------\n\nRenderEngine::~RenderEngine() = default;\n\nnamespace impl {\n\nstd::unique_ptr<RenderEngine> RenderEngine::create(int hwcFormat, uint32_t featureFlags) {\n    // initialize EGL for the default display\n    EGLDisplay display = eglGetDisplay(EGL_DEFAULT_DISPLAY);\n    if (!eglInitialize(display, nullptr, nullptr)) {\n        LOG_ALWAYS_FATAL(\"failed to initialize EGL\");\n    }\n\n    GLExtensions& extensions = GLExtensions::getInstance();\n    extensions.initWithEGLStrings(eglQueryStringImplementationANDROID(display, EGL_VERSION),\n                                  eglQueryStringImplementationANDROID(display, EGL_EXTENSIONS));\n\n    // The code assumes that ES2 or later is available if this extension is\n    // supported.\n    EGLConfig config = EGL_NO_CONFIG;\n    if (!extensions.hasNoConfigContext()) {\n        config = chooseEglConfig(display, hwcFormat, /*logConfig*/ true);\n    }\n\n    EGLint renderableType = 0;\n    if (config == EGL_NO_CONFIG) {\n        renderableType = EGL_OPENGL_ES2_BIT;\n    } else if (!eglGetConfigAttrib(display, config, EGL_RENDERABLE_TYPE, &renderableType)) {\n        LOG_ALWAYS_FATAL(\"can't query EGLConfig RENDERABLE_TYPE\");\n    }\n    EGLint contextClientVersion = 0;\n    if (renderableType & EGL_OPENGL_ES2_BIT) {\n        contextClientVersion = 2;\n    } else if (renderableType & EGL_OPENGL_ES_BIT) {\n        contextClientVersion = 1;\n    } else {\n        LOG_ALWAYS_FATAL(\"no supported EGL_RENDERABLE_TYPEs\");\n    }\n\n    std::vector<EGLint> contextAttributes;\n    contextAttributes.reserve(6);\n    contextAttributes.push_back(EGL_CONTEXT_CLIENT_VERSION);\n    contextAttributes.push_back(contextClientVersion);\n    bool useContextPriority = overrideUseContextPriorityFromConfig(extensions.hasContextPriority());\n    if (useContextPriority) {\n        contextAttributes.push_back(EGL_CONTEXT_PRIORITY_LEVEL_IMG);\n        contextAttributes.push_back(EGL_CONTEXT_PRIORITY_HIGH_IMG);\n    }\n    contextAttributes.push_back(EGL_NONE);\n\n    EGLContext ctxt = eglCreateContext(display, config, nullptr, contextAttributes.data());\n\n    // if can't create a GL context, we can only abort.\n    LOG_ALWAYS_FATAL_IF(ctxt == EGL_NO_CONTEXT, \"EGLContext creation failed\");\n\n    // now figure out what version of GL did we actually get\n    // NOTE: a dummy surface is not needed if KHR_create_context is supported\n\n    EGLConfig dummyConfig = config;\n    if (dummyConfig == EGL_NO_CONFIG) {\n        dummyConfig = chooseEglConfig(display, hwcFormat, /*logConfig*/ true);\n    }\n    EGLint attribs[] = {EGL_WIDTH, 1, EGL_HEIGHT, 1, EGL_NONE, EGL_NONE};\n    EGLSurface dummy = eglCreatePbufferSurface(display, dummyConfig, attribs);\n    LOG_ALWAYS_FATAL_IF(dummy == EGL_NO_SURFACE, \"can't create dummy pbuffer\");\n    EGLBoolean success = eglMakeCurrent(display, dummy, dummy, ctxt);\n    LOG_ALWAYS_FATAL_IF(!success, \"can't make dummy pbuffer current\");\n\n    extensions.initWithGLStrings(glGetString(GL_VENDOR), glGetString(GL_RENDERER),\n                                 glGetString(GL_VERSION), glGetString(GL_EXTENSIONS));\n\n    GlesVersion version = parseGlesVersion(extensions.getVersion());\n\n    // initialize the renderer while GL is current\n\n    std::unique_ptr<RenderEngine> engine;\n    switch (version) {\n        case GLES_VERSION_1_0:\n        case GLES_VERSION_1_1:\n            LOG_ALWAYS_FATAL(\"SurfaceFlinger requires OpenGL ES 2.0 minimum to run.\");\n            break;\n        case GLES_VERSION_2_0:\n        case GLES_VERSION_3_0:\n            engine = std::make_unique<GLES20RenderEngine>(featureFlags);\n            break;\n    }\n    engine->setEGLHandles(display, config, ctxt);\n\n    ALOGI(\"OpenGL ES informations:\");\n    ALOGI(\"vendor    : %s\", extensions.getVendor());\n    ALOGI(\"renderer  : %s\", extensions.getRenderer());\n    ALOGI(\"version   : %s\", extensions.getVersion());\n    ALOGI(\"extensions: %s\", extensions.getExtensions());\n    ALOGI(\"GL_MAX_TEXTURE_SIZE = %zu\", engine->getMaxTextureSize());\n    ALOGI(\"GL_MAX_VIEWPORT_DIMS = %zu\", engine->getMaxViewportDims());\n\n    eglMakeCurrent(display, EGL_NO_SURFACE, EGL_NO_SURFACE, EGL_NO_CONTEXT);\n    eglDestroySurface(display, dummy);\n\n    return engine;\n}\n\nbool RenderEngine::overrideUseContextPriorityFromConfig(bool useContextPriority) {\n    OptionalBool ret;\n    ISurfaceFlingerConfigs::getService()->useContextPriority([&ret](OptionalBool b) { ret = b; });\n    if (ret.specified) {\n        return ret.value;\n    } else {\n        return useContextPriority;\n    }\n}\n\nRenderEngine::RenderEngine(uint32_t featureFlags)\n      : mEGLDisplay(EGL_NO_DISPLAY),\n        mEGLConfig(nullptr),\n        mEGLContext(EGL_NO_CONTEXT),\n        mFeatureFlags(featureFlags) {}\n\nRenderEngine::~RenderEngine() {\n    eglMakeCurrent(mEGLDisplay, EGL_NO_SURFACE, EGL_NO_SURFACE, EGL_NO_CONTEXT);\n    eglTerminate(mEGLDisplay);\n}\n\nvoid RenderEngine::setEGLHandles(EGLDisplay display, EGLConfig config, EGLContext ctxt) {\n    mEGLDisplay = display;\n    mEGLConfig = config;\n    mEGLContext = ctxt;\n}\n\nEGLDisplay RenderEngine::getEGLDisplay() const {\n    return mEGLDisplay;\n}\n\nEGLConfig RenderEngine::getEGLConfig() const {\n    return mEGLConfig;\n}\n\nbool RenderEngine::supportsImageCrop() const {\n    return GLExtensions::getInstance().hasImageCrop();\n}\n\nbool RenderEngine::isCurrent() const {\n    return mEGLDisplay == eglGetCurrentDisplay() && mEGLContext == egl",
  "export * from './debounceAsyncResult';\nexport * from './debounceAsync';\nexport * from './throttleAsyncResult';\nexport * from './concurrentAsync';\nexport * from './withRetryAsync';\nexport * from './abortableAsync';\n",
  "import React, { Dispatch, useCallback } from'react'\nimport './index.less'\nimport { Menu } from 'antd';\nimport { routes } from '../../routes';\nimport { push } from 'connected-react-router'\nimport { connect, useStore } from'react-redux'\nimport { IStore } from '../../types/store/action';\nimport store from '../../store';\n\nfunction MyMenu(prop: { dispatchMenu: (path: string, store: IStore) => void, pathname: string }) {\n  // \u7ec4\u88c5\u83dc\u5355\n  const menuList = routes.map(p => {\n    // \u9700\u8981\u7ec4\u8f6c\u7684\u8def\u7531\uff0c\u9996\u5c4f\u4e0d\u9700\u8981\n    if (!p.hidden) {\n      return (\n        <Menu.Item key={(p.path as string)} icon={p.meta.icon}>\n          {p.name}\n        </Menu.Item>\n      )\n    }\n  })\n\n  // \u83b7\u53d6\u4ed3\u5e93\n  const store: IStore = useStore().getState();\n  // \u70b9\u51fb\u8df3\u8f6c\u9875\u9762\n  const handleGotoPage = useCallback(\n    ({ item, key, keyPath }) => {\n      // \u56de\u5230\u9996\u9875\n      if (key === '/Home') {\n        window.location.href = '/';\n      } else {\n        prop.dispatchMenu(key, store);\n      }\n    },\n    [],\n  )\n\n  return (\n    <div className='myMenu-container'>\n      <Menu\n        style={{ width: 256 }}\n        mode=\"inline\"\n        selectedKeys={[prop.pathname]}\n        onClick={handleGotoPage}\n      >\n        {menuList}\n      </Menu>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n  dispatchMenu(path: string) {\n    const storeData = store.getState() as IStore\n    // \u5982\u679c\u5f53\u524d\u662f\u9879\u76ee\n    if (path === '/Project') {\n      dispatch(push(`${path}?pageNo=${storeData.project.totalProjectCondition.pageNo}&title=${storeData.project.totalProjectCondition.title}`))\n    } else if (path === '/Article') {\n      dispatch(push(`${path}?pageNo=${storeData.article.totalArticleCondition.pageNo}&title=${storeData.article.totalArticleCondition.title}&tagCloudId=${storeData.article.totalArticleCondition.tagCloudId}`))\n    } else {\n      dispatch(push(path));\n    }\n  }\n})\n\nconst mapStateToProps = (store: IStore) => ({\n  pathname: store.router.location.pathname\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyMenu)\n",
  "package day17_forloop;\n\nimport java.util.Scanner;\n\npublic class C2_ForLoop2 {\n\tpublic static void main(String[] args) {\n\t\t/*\n\t\t Kullanicidan bir tamsayi girmesini isteyin\n\t\t sayi negatif veya sifirsa \"Lutfen pozitif bir tamsayi giriniz\" yazdirin\n\t\t Girilen Sayinin rakamlar toplamini ayri bir method'da hesaplayin\n\t\t\n\t\t Main method icinde Kullanicidan bir sinir deger isteyin\n\t\t rakamlar toplami sinir degerden buyukse \n\t\t \"Girdiginiz sayinin rakamlar toplami, girdiginiz sinir degerinden buyuk\",\n\t\t degilse \"Girdiginiz sayinin rakamlar toplami, girdiginiz sinir degerinden buyuk degil\"\n\t\t yazdirin\t\t\n\t\t */\n\t\t\n\t\tScanner scan= new Scanner(System.in);\n\t\tSystem.out.println(\"Lutfen Rakamlar toplamini bulmak icin pozitif bir tamsayi giriniz\");\n\t\tint sayi=scan.nextInt();\n\t\tSystem.out.println(\"Lutfen sinir degeri icin pozitif bir tamsayi giriniz\");\n\t\tint sinir=scan.nextInt();\n\t\t\n\t\tif (sayi<=0) {\n\t\t\tSystem.out.println(\"Lutfen pozitif bir tamsayi giriniz\");\n\t\t} else {\n\n\t\t\tif(rakamlarToplamiHesapla(sayi)>sinir ) {\n\t\t\t\tSystem.out.println(\"Girdiginiz sayinin rakamlar toplami, girdiginiz sinir degerinden buyuk\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"Girdiginiz sayinin rakamlar toplami, girdiginiz sinir degerinden buyuk degil\");\n\t\t\t}\n\t\t}\n\t\tscan.close();\n\t}\n\n\tpublic static int rakamlarToplamiHesapla(int sayi) {\n\t\tint rakamlarToplami=0;\n\t\tString sayi2=sayi+\"\"; // sayi1'i String'e cevirdik\n\t\t\n\t\tfor (int i = 0; i < sayi2.length(); i++) {\n\t\t\trakamlarToplami+=sayi%10;\n\t\t\tsayi/=10;\n\t\t}\t\t\n\t\treturn rakamlarToplami;\n\t\t\n\t}\n\n}\n",
  "package me.definedoddy.fluidapi;\n\npublic interface FluidRunnable {\n    void run();\n\n    default void onComplete() {\n\n    }\n\n    default void onCancel() {\n\n    }\n}\n",
  "\ufeff#region Imports\n\nusing System.Reflection;\nusing System.Runtime.InteropServices;\n\n#endregion\n\n// General Information about an assembly is controlled through the following set of attributes. Change these attribute values to modify the information associated with an assembly.\n\n[assembly: AssemblyTitle(\"CrazyflieDotNet\")]\n[assembly: AssemblyConfiguration(\"\")]\n[assembly: AssemblyCompany(\"Chris Karcz\")]\n[assembly: AssemblyProduct(\"CrazyflieDotNet\")]\n[assembly: AssemblyCopyright(\"Copyright \u00a9  2013\")]\n[assembly: AssemblyTrademark(\"Chris Karcz\")]\n[assembly: AssemblyCulture(\"\")]\n\n// Version information for an assembly consists of the following four values:\n//\n// Major Version Minor Version Build Number Revision\n//\n// You can specify all the values or you can default the Build and Revision Numbers by using the '*' as shown below: [assembly: AssemblyVersion(\"1.0.*\")]\n\n[assembly: AssemblyVersion(\"0.1.0.0\")]\n[assembly: AssemblyFileVersion(\"0.1.0.0\")]",
  "package junit.swingui;\n\nimport java.awt.Color;\n\nimport javax.swing.JProgressBar;\n\n/**\n * A progress bar showing the green/red status\n */\nclass ProgressBar extends JProgressBar {\n\tboolean fError= false;\n\t\n\tpublic ProgressBar() {\n\t\tsuper(); \n\t\tsetForeground(getStatusColor());\n\t}\n\t\n\tprotected Color getStatusColor() {\n\t\tif (fError)\n\t\t\treturn Color.red;\n\t\treturn Color.green;\n\t}\n\t\t\n\tpublic void reset() {\n\t\tfError= false;\n\t\tupdateBarColor();\n\t\tsetValue(0);\n\t}\n\t\n\tpublic void start(int total) {\n\t\tsetMaximum(total);\n\t\treset();\n\t}\n\t\n\tpublic void step(int value, boolean successful) {\n\t\tsetValue(value);\n\t\tif (!fError &&!successful) {\n\t\t\tfError= true;\n\t\t\tupdateBarColor();\n\t\t}\n\t\t}\n\t\n\tprotected void updateBarColor() {\n\t\tsetForeground(getStatusColor());\n\t}\n}\n",
  "<div>\n    <div class=\"card mb-3\">\n        <div class=\"card-header text-white\" style=\"background-color: black;\">Alumnos</div>\n        <div class=\"card-body\">\n    <div class=\"row m-4\">\n        <div class=\"col d-flex justify-content-end\">\n            <button (click)=\"alta(content)\" mdbBtn class=\"btn btn-dark\">\n                <i class=\"fa fa-plus\" ></i>\n                Agregar Alumno\n            </button>\n        </div>\n    </div>\n</div>\n<div class=\"container-fluid\">\n    <table datatable [dtOptions]=\"dtOptions\"\n        class=\"mt-3 animated fadeIn faster\">\n        <thead >\n        <tr>\n          <th scope=\"col\">#</th>\n          <th scope=\"col\">Nombre</th>\n          <th scope=\"col\">Matricula</th>\n          <th scope=\"col\">Carrera</th>\n          <th scope=\"col\">Periodo</th>\n          <th scope=\"col\">Acciones</th>\n        </tr>\n      </thead>\n      <tbody *ngIf=\"alumnos?.length!= 0\">\n        <tr  *ngFor=\"let a of alumnos; let i=index \">\n            <td>{{ i+1 }}</td>\n            <td>{{ a.nombres }}</td>\n            <td>{{ a.matricula }}</td>\n            <td>{{ a.carrera }}</td>\n            <td>{{ a.periodo}}</td>\n            <td>\n                <button (click)=\"actualizar(a, content)\"\n                        type=\"button\"\n                        color=\"elegant\" mdbWavesEffect\n                        size=\"sm\"\n                         mdbBtn>\n                         <mdb-icon fas icon=\"edit\"></mdb-icon>\n                  </button>\n                  <button\n                       (click)=\"borrar(a, i)\"\n                       size=\"sm\"\n                        color=\"danger\"\n                        mdbBtn>\n                    <i class=\"fa fa-trash\"></i>\n                  </button>\n            </td>\n        </tr>\n\n      </tbody>\n      <tbody *ngIf=\"alumnos?.length == 0\">\n        <tr>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td colspan=\"3\" class=\"no-data-available\">No hay datos</td>\n            <td></td>\n        </tr>\n      <tbody>\n    </table>\n</div>\n\n</div>\n</div>\n\n<ng-template #content let-c=\"close\" let-d=\"dismiss\">\n    <form (ngSubmit)=\"guardar(formulario, content)\" #formulario=\"ngForm\">\n        <div class=\"modal-header p-3 rounded z-depth-3 elegant-color-dark white-text text-center white-text\">\n            <h4 class=\"modal-title text-center\">Alumno</h4>\n            <button\n                type=\"button\"\n                class=\"close text-white\"\n                aria-label=\"Close\"\n                (click)=\"d('Cross click')\"\n            >\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n        </div>\n\n        <div class=\"modal-body\">\n            <aw-wizard navBarLayout=\"large-filled\">\n                <aw-wizard-step\n                    [navigationSymbol]=\"{ symbol: '1' }\"\n                    stepTitle=\"Informacion personal\"\n                >\n            <div class=\"form-row\">\n                <div class=\"md-form col-md-12\">\n                    <mdb-icon fas icon=\"id-card\" class=\"prefix grey-text\"></mdb-icon>\n                   <input\n                        type=\"text\"\n                        class=\"form-control\"\n                        required\n                        [(ngModel)]=\"alumno.nombres\"\n                        name=\"nombres\"\n                        mdbInput\n                    />\n                    <label>Nombre(s)</label>\n                </div>\n\n            </div>\n            <div class=\"form-row\">\n                <div class=\"md-form col-md-6\">\n                    <mdb-icon fas icon=\"id-card\" class=\"prefix grey-text\"></mdb-icon>\n                    <input\n                        type=\"text\"\n                        class=\"form-control\"\n                        required\n                        [(ngModel)]=\"alumno.apellidoPaterno\"\n                        name=\"apellidoPaterno\"\n                        mdbInput\n                    />\n                    <label>Apellido paterno</label>\n                </div>\n                <div class=\"md-form col-md-6\">\n                    <mdb-icon fas icon=\"id-card\" class=\"prefix grey-text\"></mdb-icon>\n                    <input\n                        type=\"text\"\n                        class=\"form-control\"\n                        required\n                        [(ngModel)]=\"alumno.apellidoMaterno\"\n                        name=\"apellidoMaterno\"\n                        mdbInput\n                    />\n                    <label>Apellido materno</label>\n                </div>\n            </div>\n            <div class=\"form-row\">\n                <div class=\"md-form col-md-6\">\n                    <mdb-icon fas icon=\"passport\" class=\"prefix grey-text\"></mdb-icon>\n                    <input\n                        type=\"text\"\n                        class=\"form-control\"\n                        required\n                        [(ngModel)]=\"alumno.matricula\"\n                        name=\"matricula\"\n                        mdbInput\n                    />\n                    <label>Codigo</label>\n                </div>\n                <div class=\"form-group col-md-6 \">\n                    <label for=\"carrera\">Periodo</label>\n                    <select class=\"form-control\"\n                             name=\"periodo\"\n                             id=\"periodo\"\n                             [(ngModel)]=\"alumno.periodo\"\n                       >\n                        <option default selected>Seleccione una opci\u00f3n...</option>\n                        <option value=\"Enero-Abril\">Enero - Abril</option>\n                        <option value=\"Mayo-Agosto\">Mayo - Agosto</option>\n                        <option value=\"Septiembre-Diciembre\">Septiembre - Diciembre</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"form-row\">\n                <div class=\"md-form col-md-6\">\n                    <mdb-icon fas icon=\"mobile-alt\" class=\"prefix grey-text\"></mdb-icon>\n                    <input\n                        type=\"number\"\n                        class=\"form-control\"\n                        required\n                        [(ngModel)]=\"alumno.telefono\"\n                        name=\"telefono\"\n                        mdbInput\n                    />\n                    <label>Tel\u00e9fono</label>\n                </div>\n                <div class=\"md-form col-md-6\">\n                    <mdb-icon fas icon=\"envelope\" class=\"prefix grey-text\"></mdb-icon>\n                    <input\n                        type=\"email\"\n                        class=\"form-control\"\n                        required\n                        [(ngModel)]=\"alumno.correo\"\n                        name=\"correo\"\n                        mdbInput\n                    />\n                    <label>Correo</label>\n                </div>\n            </div>\n            <button type=\"button\" class=\"btn btn-dark pull-right\" mdbBtn awNextStep> Siguiente <mdb-icon fas icon=\"arrow-circle-right\" class=\"prefix grey-text\"></mdb-icon></button>\n        </aw-wizard-step>\n        <aw-wizard-step\n                    [navigationSymbol]=\"{ symbol: '2' }\"\n                    stepTitle=\"Datos complementarios\"\n                >\n            <div class=\"form-row\">\n                <div class=\"form-group col-md-6 \">\n                    <label for=\"nivel\">Carrera</label>\n                    <select class=\"form-control\"\n                            name=\"carrera\"\n                             id=\"carrera\"\n                            [(ngModel)]=\"alumno.carrera\"\n                       >\n\n                        <option default selected>Seleccione una opci\u00f3n...</option>\n                        <option value=\"TSU-TIC\">T\u00e9cnico Superior Universitario-TIC</option>\n                        <option value=\"ING-TIC\">Ingenier\u00eda - TIC</option>\n                    </select>\n                </div>\n                <div class=\"form-group col-md-6 \">\n                    <label for=\"nivel\">Turno</label>",
  "\ufeff(function ($) {\n   /**\n    *  Todo Bind UI Hadnler when the page ready.\n    */\n    $(document).ready(function () {\n        // productTable\n        $('#productTable').bind('click', function (e) {\n            var t = $(e.target)\n            if (t.attr('name') == \"btn_updateModal\") {\n                $('#ProductCategoryUpdateModal').modal('show');\n                UpdateModal.$data.Name = t.attr(\"data-Name\")\n                UpdateModal.$data.Id = t.attr(\"data-Id\")\n                UpdateModal.$data.Description = t.attr(\"data-Description\")\n                UpdateModal.$data.Errors = {}\n            }\n            if (t.attr('name') == \"btn_deleteProduct\") {\n                if (confirm('\u78ba\u5b9a\u8981\u522a\u9664'+ t.attr('data-Name') + '?')) {\n                    deleteProductCategory(t.attr(\"data-Id\"))\n                }\n            }\n        })\n        // list table control\n        $('#btn-clearSearch').bind('click', function () {\n            clearSearch()\n        })\n        $('#select_goToPage').bind('change', function () {\n            goToPage()\n        })\n        $('#select_changePageSize').bind('change', function () {\n            changePageSize()\n        })\n        //./list table control\n        $('#btn_productCategoryModal').bind(\"click\", function () {\n            // show modal\n            $('#ProductCategoryCreateModal').modal('show');\n        })\n\n\n        var CreateModal = new Vue({\n            el: '#ProductCategoryCreateModal',\n            data: {\n                Name: \"\",\n                Description: \"\",\n                Errors: {}\n            },\n            methods: {\n                create() {\n                    $.ajax({\n                        type: 'POST',\n                        context:this,\n                        url: '/Product/CreateProductCategory',\n                        contentType: 'application/x-www-form-urlencoded',\n                        headers: {\n                            \"RequestVerificationToken\": $('input:hidden[name=\"__RequestVerificationToken\"]').val()\n                        },\n                        data: {\n                            Name: this.Name,\n                            Description: this.Description\n                        },\n                        success: function (res) {\n                            if (res.IsSuccess) {\n                                alert('\u65b0\u589e\u6210\u529f')\n                                location.reload();\n                            } else{\n                                this.Errors = res.Error;\n                            }\n                        },\n                        error: function () { alert('A error'); }\n                    })\n                }\n            }\n        })\n        var UpdateModal = new Vue({\n            el: '#ProductCategoryUpdateModal',\n            data: {\n                Id: \"\",\n                Name: \"\",\n                Description: \"\",\n                Errors: {}\n            },\n            methods: {\n                update() {\n                    $.ajax({\n                        type: 'POST',\n                        context: this,\n                        url: '/Product/UpdateProductCategory',\n                        contentType: 'application/x-www-form-urlencoded',\n                        headers: {\n                            \"RequestVerificationToken\": $('input:hidden[name=\"__RequestVerificationToken\"]').val()\n                        },\n                        data: {\n                            Id: this.Id,\n                            Name: this.Name,\n                            Description: this.Description\n                        },\n                        success: function (res) {\n                            if (res.IsSuccess) {\n                                alert('\u66f4\u65b0\u6210\u529f')\n                                location.reload();\n                            } else {\n                                this.Errors = res.Error;\n                            }\n                        },\n                        error: function () { alert('A error'); }\n                    })\n                }\n            }\n        })\n    });\n\n\n    function deleteProductCategory(Id) {\n        $.ajax({\n            type: 'POST',\n            url: '/Product/DeleteProductCategory',\n            contentType: 'application/x-www-form-urlencoded',\n            headers: {\n                \"RequestVerificationToken\": $('input:hidden[name=\"__RequestVerificationToken\"]').val()\n            },\n            data: {\n                \"Id\":Id,\n            },\n            success: function (res) {\n                if (res.IsSuccess) {\n                    alert('\u522a\u9664\u6210\u529f!')\n                    location.reload();\n                } \n            },\n            error: function () { alert('A error'); }\n        })\n    }\n    // list table\n    function clearSearch() {\n        $('#input_number').val('')\n        $('#input_name').val('')\n        $('#select_goToPage').val(1);\n        $('#form_search').submit()\n    }\n    function goToPage() {\n        $('#form_search').submit()\n    }\n    function changePageSize() {\n        $('#form_search').submit()\n    }\n    //./list table\n})(jQuery)",
  "/**\n * Created by juanlopez on 13/07/17.\n */\nimport { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { DeleteModalRes } from './delete-modal/delete-modal.component';\n\n@Component({\n  selector:'responses',\n  templateUrl: './responses.html',\n  styleUrls: ['./responses.scss']\n})\nexport class Responses {\n  responsesData = [];\n  prov: string = '';\n\n  constructor(private _routerA: ActivatedRoute, private modalService: NgbModal, private _router: Router) {\n    for (let _i = 0; _i < 10; _i++) {\n      this.responsesData.push({\n        id: _i,\n        type: 'Error',\n        addRetry: true,\n        sendEmail: false\n      });\n    }\n  }\n\n  ngOnInit() {\n    this._routerA.params.subscribe(params => {\n      this.prov = params['id'];\n    });\n  }\n\n  onPush() {\n    this._router.navigate(['/pages/providers/editResponse/']);\n  }\n\n  onUpdate(id) {\n    this._router.navigate(['/pages/providers/editResponse/' + id]);\n  }\n\n  onDelete(id) {\n    const activeModal = this.modalService.open(DeleteModalRes, {\n      size:'sm',\n      backdrop:'static'\n    });\n    activeModal.componentInstance.modalHeader = 'Elimiar response';\n    activeModal.componentInstance.titleBtn = 'Elimiar';\n    activeModal.componentInstance.modalContent = 'Desea eliminar el response'+ id + '?';\n  }\n\n}\n",
  "package com.trace.filter.dubbo;\n\nimport java.util.UUID;\n\nimport org.apache.dubbo.common.constants.CommonConstants;\nimport org.apache.dubbo.common.extension.Activate;\nimport org.apache.dubbo.rpc.Filter;\nimport org.apache.dubbo.rpc.Invocation;\nimport org.apache.dubbo.rpc.Invoker;\nimport org.apache.dubbo.rpc.Result;\nimport org.apache.dubbo.rpc.RpcContext;\nimport org.apache.dubbo.rpc.RpcException;\n\nimport com.trace.core.TraceId;\n\nimport lombok.Getter;\nimport lombok.Setter;\n\n@Getter\n@Setter\n@Activate(group = { CommonConstants.PROVIDER })\npublic class DubboProviderTraceFilter implements Filter {\n\n\t@Override\n\tpublic Result invoke(Invoker<?> invoker, Invocation invocation) throws RpcException {\n\t\tTraceId.ADAPTER.set(getTraceId());\n\t\ttry {\n\t\t\treturn invoker.invoke(invocation);\n\t\t} finally {\n\t\t\tTraceId.ADAPTER.clean();\n\t\t}\n\t}\n\n\tprivate String getTraceId() {\n\t\tString property = TraceIdProperty.get();\n\t\tString traceId = RpcContext.getContext().getAttachment(property);\n\t\tif (traceId == null || traceId.isEmpty()) {\n\t\t\ttraceId = UUID.randomUUID().toString().replace(\"-\", \"\");\n\t\t\tRpcContext.getContext().setAttachment(property, traceId);\n\t\t}\n\t\treturn traceId;\n\t}\n}\n",
  "package users\n\nimport (\n\t\"crypto/md5\"\n\t\"encoding/hex\"\n\t\"fmt\"\n\t\"net/mail\"\n\t\"strings\"\n\n\t\"golang.org/x/crypto/bcrypt\"\n)\n\n//gravatarBasePhotoURL is the base URL for Gravatar image requests.\n//See https://id.gravatar.com/site/implement/images/ for details\nconst gravatarBasePhotoURL = \"https://www.gravatar.com/avatar/\"\n\n//bcryptCost is the default bcrypt cost to use when hashing passwords\nvar bcryptCost = 13\n\n//User represents a user account in the database\ntype User struct {\n\tID        int64  `json:\"id\"`\n\tEmail     string `json:\"-\"` //never JSON encoded/decoded\n\tPassHash  []byte `json:\"-\"` //never JSON encoded/decoded\n\tUserName  string `json:\"userName\"`\n\tFirstName string `json:\"firstName\"`\n\tLastName  string `json:\"lastName\"`\n\tPhotoURL  string `json:\"photoURL\"`\n}\n\n//Credentials represents user sign-in credentials\ntype Credentials struct {\n\tEmail    string `json:\"email\"`\n\tPassword string `json:\"password\"`\n}\n\n//NewUser represents a new user signing up for an account\ntype NewUser struct {\n\tEmail        string `json:\"email\"`\n\tPassword     string `json:\"password\"`\n\tPasswordConf string `json:\"passwordConf\"`\n\tUserName     string `json:\"userName\"`\n\tFirstName    string `json:\"firstName\"`\n\tLastName     string `json:\"lastName\"`\n}\n\n//Updates represents allowed updates to a user profile\ntype Updates struct {\n\tFirstName string `json:\"firstName\"`\n\tLastName  string `json:\"lastName\"`\n}\n\n//Validate validates the new user and returns an error if\n//any of the validation rules fail, or nil if its valid\nfunc (nu *NewUser) Validate() error {\n\t//- Email field must be a valid email address (hint: see mail.ParseAddress)\n\t_, err := mail.ParseAddress(nu.Email)\n\n\tif err!= nil {\n\t\treturn fmt.Errorf(\"BadEmailFormat\")\n\t}\n\n\t//- Password must be at least 6 characters\n\n\tif len(nu.Password) < 6 {\n\t\treturn fmt.Errorf(\"BadPasswordLen\")\n\t}\n\t//- Password and PasswordConf must match\n\n\tif nu.Password!= nu.PasswordConf {\n\t\treturn fmt.Errorf(\"PasswordMatchError\")\n\t}\n\t//- UserName must be non-zero length and may not contain spaces\n\tif len(nu.UserName) == 0 {\n\t\treturn fmt.Errorf(\"UsernameContainsSpaces\")\n\t}\n\n\tif strings.Contains(nu.UserName, \" \") {\n\t\treturn fmt.Errorf(\"UsernameContainsSpaces\")\n\t}\n\n\t//use fmt.Errorf() to generate appropriate error messages if\n\t//the new user doesn't pass one of the validation rules\n\n\treturn nil\n}\n\n//ToUser converts the NewUser to a User, setting the\n//PhotoURL and PassHash fields appropriately\nfunc (nu *NewUser) ToUser() (*User, error) {\n\t//call Validate() to validate the NewUser and\n\t//return any validation errors that may occur.\n\n\terr := nu.Validate()\n\n\tif err!= nil {\n\t\treturn nil, err\n\t}\n\n\t//if valid, create a new *User and set the fields\n\t//based on the field values in `nu`.\n\tu := &User{}\n\n\t//Leave the ID field as the zero-value; your Store\n\t//implementation will set that field to the DBMS-assigned\n\t//primary key value.\n\tu.FirstName = nu.FirstName\n\tu.LastName = nu.LastName\n\tu.UserName = nu.UserName\n\tu.Email = nu.Email\n\tu.ID = 0\n\n\t//Set the PhotoURL field to the Gravatar PhotoURL\n\t//for the user's email address.\n\t//see https://en.gravatar.com/site/implement/hash/\n\t//and https://en.gravatar.com/site/implement/images/\n\tmail1 := strings.TrimSpace(u.Email)\n\tmail1 = strings.ToLower(mail1)\n\tm := md5.New()\n\tm.Write([]byte(mail1))\n\tmailHash := hex.EncodeToString(m.Sum(nil)) //fmt.Sprintf(\"%x\", md5.Sum(m.Sum(nil)))\n\n\tu.PhotoURL = \"https://www.gravatar.com/avatar/\" + mailHash\n\n\t//call.SetPassword() to set the PassHash\n\t//field of the User to a hash of the NewUser.Password\n\n\terr1 := u.SetPassword(nu.Password)\n\n\tif err1!= nil {\n\t\treturn nil, err1\n\t}\n\n\treturn u, nil\n}\n\n//FullName returns the user's full name, in the form:\n// \"<FirstName> <LastName>\"\n//If either first or last name is an empty string, no\n//space is put between the names. If both are missing,\n//this returns an empty string\nfunc (u *User) FullName() string {\n\treturn u.FirstName + \" \" + u.LastName\n}\n\n//SetPassword hashes the password and stores it in the PassHash field\nfunc (u *User) SetPassword(password string) error {\n\t//use the bcrypt package to generate a new hash of the password\n\t//https://godoc.org/golang.org/x/crypto/bcrypt\n\n\tbhash, err := bcrypt.GenerateFromPassword([]byte(password), bcryptCost)\n\n\tif err!= nil {\n\t\treturn err\n\t}\n\n\tu.PassHash = bhash\n\n\treturn nil\n}\n\n//Authenticate compares the plaintext password against the stored hash\n//and returns an error if they don't match, or nil if they do\nfunc (u *User) Authenticate(password string) error {\n\t//use the bcrypt package to compare the supplied\n\t//password with the stored PassHash\n\t//https://godoc.org/golang.org/x/crypto/bcrypt\n\n\treturn bcrypt.CompareHashAndPassword(u.PassHash, []byte(password))\n}\n\n//ApplyUpdates applies the updates to the user. An error\n//is returned if the updates are invalid\nfunc (u *User) ApplyUpdates(updates *Updates) error {\n\t//set the fields of `u` to the values of the related\n\t//field in the `updates` struct\n\n\tif len(updates.FirstName) == 0 || len(updates.LastName) == 0 {\n\t\treturn fmt.Errorf(\"InvalidUpdateFormat\")\n\t}\n\n\tu.FirstName = updates.FirstName\n\tu.LastName = updates.LastName\n\n\treturn nil\n}\n",
  "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%                                  %\n% Titre  : s_i.tex                 %\n% Sujet  : Manuel de maintenance   %\n%          du projet 'Scotch'      %\n%          Introduction            %\n% Auteur : Francois Pellegrini     %\n%                                  %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\n\\section{Introduction}\n\nThis document is a starting point for the persons interested in using\n\\scotch\\ as a testbed for their new partitioning methods, and/or\nwilling to contribute to it by making these methods available to the\nrest of the scientific community.\n\nMuch information is missing. If you need specific information, please\nsend an e-mail, so that relevant additional information can be added\nto this document.\n",
  "'use strict';\n\nconst { API_SEND_EMAIL, apiCall } = require('../../../common/common');\nconst createWsServer = require('../../createWsServer');\nconst createWsClient = require('../createWsClient');\nconst db = require('../../db');\nconst User = require('../../model/User/User');\nconst generateTestToken = require('../generateTestToken');\n\nconst port = 5613;\nconst wsServer = createWsServer({});\nconst wsClient = createWsClient({ port });\nconst token = generateTestToken();\n\nbeforeAll(async () => {\n  wsServer.listen(port);\n  await wsClient.open();\n  await db.connect();\n});\n\nbeforeEach(async () => {\n  await User.deleteMany();\n\n  const user = new User({ username: 'tum\u00e1\u0161', password: 'jcm2018', email: 'tumas@topol.io' });\n  await user.save();\n});\n\nafterAll(async () => {\n  await User.deleteMany();\n\n  await wsClient.close();\n  await wsServer.close();\n  await db.disconnect();\n});\n\nit('sendEmail successfully', async () => {\n  const { requestId,...response } = await wsClient.sendRequest(\n    apiCall({\n      endpoint: API_SEND_EMAIL,\n      request: {\n        mailTo: 'test@test.io',\n        subject: 'Test subject',\n        body: 'Test email for <i>masses</i>.',\n      },\n      token,\n    })\n  );\n\n  expect(response).toMatchSnapshot();\n\n  const users = await User.find({}, { _id: 0 }).lean();\n  expect(users[0].sentEmails).toHaveLength(1);\n  expect(users[0].sentEmails[0].date).toBeTruthy();\n  users[0].password = '===password===';\n  users[0].sentEmails[0].date = '===date===';\n  expect(users).toMatchSnapshot();\n});\n\nit('not authenticated', async () => {\n  const { requestId,...response } = await wsClient.sendRequest(\n    apiCall({ endpoint: API_SEND_EMAIL })\n  );\n  expect(response).toMatchSnapshot();\n});\n",
  "# Table: okta_app_assigned_group\n\nApplication integrations can be assigned to groups. When app integrations share the same group they are \"linked\". This can be helpful if you need to add provisioning functionality in an SSO-enabled app integration.\n\n## Examples\n\n### Basic info\n\n```sql\nselect\n  id as group_id,\n  app_id,\n  last_updated,\n  priority\nfrom\n  okta_app_assigned_group;\n```\n\n### List groups that are not assigned to any application\n\n```sql\nselect\n  grp.name as name,\n  grp.description as description,\n  jsonb_pretty(grp.group_members) as group_members\nfrom\n  okta_group grp\nfull outer join okta_app_assigned_group ag on grp.id = ag.id\nwhere\n  grp.id is null or ag.id is null;\n```\n\n### List applications with assigned group details\n\n```sql\nselect\n  app.name as app_name,\n  app.id as app_id,\n  app.created as app_created,\n  app.status as app_status,\n  ag.id as group_id,\n  grp.name as group_name,\n  grp.description as group_description,\n  jsonb_pretty(grp.group_members) as group_members\nfrom\n  okta_application app\nleft join okta_app_assigned_group ag on app.id = ag.app_id\nleft join okta_group grp on ag.id = grp.id;\n```\n",
  "/*\n * Copyright (c) 2015 Brocade Communications Systems, Inc. and others.  All rights reserved.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v1.0 which accompanies this distribution,\n * and is available at http://www.eclipse.org/legal/epl-v10.html\n */\npackage org.opendaylight.controller.cluster.datastore.messages;\n\n/**\n * Reply message for CreateShard.\n *\n * @author Thomas Pantelis\n */\npublic class CreateShardReply {\n}\n",
  "<div class=\"wrap-loading fullscreen\" [ngClass]=\"colorClass\" [ngStyle]=\"backgroundStyle\" *ngIf=\"loading\">\n  <div [ngClass]=\"configClassSpinner\" role=\"status\"></div>\n</div>\n\n",
  "# gbc-rom-writer\n## Hardware and software documentation for a gameboy (color) rom cart\nto be continued\n\n## Helpful links\n* [8 D flip-flops IC (74LS374 datasheet)](http://ecee.colorado.edu/~mcclurel/dm74ls374.pdf)\n* [MCP23017 with raspberry pi](http://www.raspberrypi-spy.co.uk/2013/07/how-to-use-a-mcp23017-i2c-port-expander-with-the-raspberry-pi-part-1/)\n",
  "import pytest\n\nfrom pymemdb import Table\n\n@pytest.fixture(scope=\"session\")\ndef big_table():\n    t = Table(primary_id=\"normal\")\n    for i in range(100):\n        t.insert({\"normal\": i, \"squared\": i**2, \"cubed\": i**3})\n    return t",
  "/*\n * Copyright 2015 OpenCB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage org.opencb.cellbase.lib.db.core;\n\nimport org.bson.Document;\n\nimport com.mongodb.QueryBuilder;\nimport org.bson.conversions.Bson;\nimport org.opencb.biodata.models.core.Position;\nimport org.opencb.biodata.models.core.Region;\nimport org.opencb.biodata.models.core.Transcript;\nimport org.opencb.cellbase.core.db.api.core.TranscriptDBAdaptor;\nimport org.opencb.cellbase.lib.db.MongoDBAdaptor;\nimport org.opencb.commons.datastore.core.QueryOptions;\nimport org.opencb.commons.datastore.core.QueryResult;\nimport org.opencb.commons.datastore.mongodb.MongoDataStore;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class TranscriptMongoDBAdaptor extends MongoDBAdaptor implements TranscriptDBAdaptor {\n\n\n    public TranscriptMongoDBAdaptor(String species, String assembly, MongoDataStore mongoDataStore) {\n        super(species, assembly, mongoDataStore);\n        mongoDBCollection = mongoDataStore.getCollection(\"gene\");\n\n        logger.info(\"TranscriptMongoDBAdaptor: in 'constructor'\");\n    }\n\n\n    @Override\n    public QueryResult first() {\n        return mongoDBCollection.find(new Document(), new QueryOptions(\"limit\", 1));\n    }\n\n    @Override\n    public QueryResult count() {\n        return mongoDBCollection.count();\n    }\n\n    @Override\n    public QueryResult stats() {\n        return null;\n    }\n\n\n    @Override\n    public QueryResult getAll(QueryOptions options) {\n        QueryBuilder builder = new QueryBuilder();\n\n        Document[] commands = new Document[2];\n        Document unwind = new Document(\"$unwind\", \"$transcripts\");\n        commands[0] = unwind;\n\n        List<Object> biotypes = options.getList(\"biotypes\", null);\n        if (biotypes!= null && biotypes.size() > 0) {\n\n//            Document match = new Document(\"$match\", new Document(\"chunkIds\", id));\n//            builder = builder.and(\"biotype\").in(biotypeIds);\n\n//            commands[0] = match;\n            commands[1] = unwind;\n        } else {\n            commands[0] = unwind;\n        }\n\n        return executeAggregation2(\"result\", Arrays.asList(commands), options);\n    }\n\n    public QueryResult next(String id, QueryOptions options) {\n        QueryOptions options1 = new QueryOptions();\n        options1.put(\"include\", Arrays.asList(\"chromosome\", \"start\"));\n        QueryResult queryResult = getById(id, options1);\n        if (queryResult!= null && queryResult.getResult()!= null) {\n            Document gene = (Document) queryResult.getResult().get(0);\n            String chromosome = gene.get(\"chromosome\").toString();\n            int start = Integer.parseInt(gene.get(\"start\").toString());\n            return next(chromosome, start, options);\n        }\n        return null;\n    }\n\n    @Override\n    public QueryResult next(String chromosome, int position, QueryOptions options) {\n        return null;  //To change body of implemented methods use File | Settings | File Templates.\n    }\n\n    @Override\n    public QueryResult getById(String id, QueryOptions options) {\n        return getAllByIdList(Arrays.asList(id), options).get(0);\n\n    }\n\n    @Override\n    public List<QueryResult> getAllByIdList(List<String> idList, QueryOptions options) {\n//        db.core.aggregate({$match: {\"transcripts.id\": \"ENST00000343281\"}}, {$unwind: \"$transcripts\"},\n// {$match: {\"transcripts.id\": \"ENST00000343281\"}})\n\n        List<List<Bson>> commandsList = new ArrayList<>(idList.size());\n        for (String id : idList) {\n            List<Bson> commandList = new ArrayList<>(3);\n            Document match = new Document(\"$match\", new Document(\"transcripts.id\", id));\n            Document unwind = new Document(\"$unwind\", \"$transcripts\");\n//            Document project = new Document(\"$project\", new Document(\"transcripts\", 1));\n            commandList.add(match);\n            commandList.add(unwind);\n            commandList.add(match);\n//            commandList.add(project);\n            commandsList.add(commandList);\n        }\n        return executeAggregationList2(idList, commandsList, options);\n    }\n\n    @Override\n    public QueryResult getAllByXref(String id, QueryOptions options) {\n        return null;\n    }\n\n    @Override\n    public List<QueryResult> getAllByXrefList(List<String> idList, QueryOptions options) {\n//        db.core.aggregate({$match: {\"transcripts.id\": \"ENST00000343281\"}}, {$unwind: \"$transcripts\"},\n// {$match: {\"transcripts.id\": \"ENST00000343281\"}})\n\n        List<List<Bson>> commandsList = new ArrayList<>(idList.size());\n        for (String id : idList) {\n//            Document[] commands = new Document[3];\n            List<Bson> commandList = new ArrayList<>(3);\n            Document match = new Document(\"$match\", new Document(\"transcripts.xrefs.id\", id));\n            Document unwind = new Document(\"$unwind\", \"$transcripts\");\n//            commands[0] = match;\n//            commands[1] = unwind;\n//            commands[2] = match;\n            commandList.add(match);\n            commandList.add(unwind);\n            commandList.add(match);\n            commandsList.add(commandList);\n        }\n        return executeAggregationList2(idList, commandsList, options);\n    }\n\n    @Override\n    public QueryResult getAllByPosition(String chromosome, int position,\n                                        QueryOptions options) {\n        return getAllByRegion(new Region(chromosome, position, position), options);\n    }\n\n    @Override\n    public QueryResult getAllByPosition(Position position, QueryOptions options) {\n        return getAllByRegion(new Region(position.getChromosome(), position.getPosition(), position.getPosition()), options);\n    }\n\n    @Override\n    public List<QueryResult> getAllByPositionList(List<Position> positionList, QueryOptions options) {\n        List<Region> regions = new ArrayList<>();\n        for (Position position : positionList) {\n            regions.add(new Region(position.getChromosome(), position.getPosition(), position.getPosition()));\n        }\n        return getAllByRegionList(regions, options);\n    }\n\n    @Override\n    public QueryResult getAllByRegion(String chromosome, int start, int end, QueryOptions options) {\n        return getAllByRegion(new Region(chromosome, start, end), options);\n    }\n\n    @Override\n    public QueryResult getAllByRegion(Region region, QueryOptions options) {\n        return getAllByRegionList(Arrays.asList(region), options).get(0);\n    }\n\n    @Override\n    public List<QueryResult> getAllByRegionList(List<Region> regions, QueryOptions options) {\n\n\n        List<Document[]> commandsList = new ArrayList<>(regions.size());\n        for (Region region : regions) {\n            Document geneMatch = new Document(\"$match\", new Document(\"transcripts.chromosome\", region.getChromosome()));\n            Document regionMatch = new Document(\"$match\", new Document(\"transcripts.start\", region.getStart()));\n            Document unwind = new Document(\"$unwind\", \"$transcripts\");\n            // biotype in, pero en aggregation\n\n        }\n\n//        List<Document> queries = new ArrayList",
  "class PhaseDaysController < ApplicationController\n  before_action :set_phase_day, only: [:show, :edit, :update, :destroy]\n\n  def index\n    @phase_1_days = PhaseDay.ph(1)\n    @phase_2_days = PhaseDay.ph(2)\n    @phase_3_days = PhaseDay.ph(3)\n  end\n\n  def show\n  end\n\n  def new\n    @phase_day = PhaseDay.new\n  end\n\n  def edit\n  end\n\n  def create\n    @phase_day = PhaseDay.new(phase_day_params)\n\n    respond_to do |format|\n      if @phase_day.save\n        format.html {\n          redirect_to @phase_day, notice: 'PhaseDay successfully created.' }\n        format.json { render :show, status: :created, location: @phase_day }\n      else\n        format.html { render :new }\n        format.json {\n          render json: @phase_day.errors, status: :unprocessable_entity }\n      end\n    end\n  end\n\n  def update\n    respond_to do |format|\n      if @phase_day.update(phase_day_params)\n        format.html { redirect_to @phase_day, \n          notice: 'Phase day was successfully updated.' }\n        format.json { render :show, status: :ok, location: @phase_day }\n      else\n        format.html { render :edit }\n        format.json {\n          render json: @phase_day.errors, status: :unprocessable_entity }\n      end\n    end\n  end\n\n  def destroy\n    @phase_day.destroy\n    respond_to do |format|\n      format.html {\n        redirect_to phase_days_url, notice: 'PhaseDay successfully destroyed.' }\n      format.json { head :no_content }\n    end\n  end\n\n  private\n    def set_phase_day\n      @phase_day = PhaseDay.find(params[:id])\n    end\n\n    def phase_day_params\n      params.require(:phase_day).permit(\n        :title, :phase_no, :day_no, :lead_required)\n    end\nend\n",
  "\nimport {of as observableOf,  Observable } from 'rxjs';\nimport { TelemetryStartDirective } from './telemetry-start.directive';\nimport { IStartEventInput } from '../../interfaces';\nimport { TelemetryService, TELEMETRY_PROVIDER } from '../../services';\nimport {TestBed, ComponentFixture} from '@angular/core/testing';\nimport {eventData} from './telemetry-start.directive.spec.data';\ndescribe('TelemetryStartDirective', () => {\n  beforeEach(() => {\n    TestBed.configureTestingModule({\n      declarations: [TelemetryStartDirective],\n      providers: [TelemetryService, { provide: TELEMETRY_PROVIDER, useValue: EkTelemetry}]\n    });\n  });\n  it('should take input and  generate the telemetry start event', () => {\n    const telemetryService = TestBed.get(TelemetryService);\n    const directive = new TelemetryStartDirective(telemetryService);\n    spyOn(telemetryService,'start').and.callFake(() => observableOf(eventData.inputData));\n    directive.appTelemetryStart = eventData.inputData;\n    directive.ngOnChanges();\n    expect(directive.appTelemetryStart).toBeDefined();\n    expect(directive.appTelemetryStart).toBe(eventData.inputData);\n    expect(telemetryService.start).toHaveBeenCalled();\n  });\n});\n",
  "---\nlayout: default\n---\n\n<div class=\"page\">{{ content }}</div>\n<div class=\"container\">{% include notice.html %}</div>\n",
  "<div class=\"page_container\">\n    \n        <div class=\"row\">\n    \n            <div>\n    \n                <div class=\"panel panel-default\">\n                    <div class=\"panel-heading\">\n                        <h3 class=\"panel-title\">G\u00f6rev Tan\u0131m\u0131</h3>\n                    </div>\n    \n                    <div class=\"panel-body\">\n                        <div class=\"form-group\">\n                            <label for=\"txtMeslek\">Meslek</label>\n                            <input type=\"text\" class=\"form-control required\" id=\"txtMeslek\" placeholder=\"A\u015f\u00e7\u0131\">\n                        </div>\n    \n                    </div>\n                    <div class=\"panel-footer\">\n                        <button onclick=\"if(validateFields()){kaydetMeslek()};return false;\" class=\"btn btn-success btn-block\">Kaydet</button>\n                    </div>\n                </div>\n    \n            </div>\n    \n            <div class=\"col-md-6\"></div>\n    \n        </div>\n    \n    \n    </div>",
  "from dataclasses import dataclass, field\nfrom typing import Dict, List, Set, TYPE_CHECKING, Tuple, Type, Union\n\nfrom ormar.queryset.utils import get_relationship_alias_model_and_str\n\nif TYPE_CHECKING:  # pragma: no cover\n    from ormar import Model\n\n\n@dataclass\nclass Excludable:\n    \"\"\"\n    Class that keeps sets of fields to exclude and include\n    \"\"\"\n\n    include: Set = field(default_factory=set)\n    exclude: Set = field(default_factory=set)\n\n    def get_copy(self) -> \"Excludable\":\n        \"\"\"\n        Return copy of self to avoid in place modifications\n        :return: copy of self with copied sets\n        :rtype: ormar.models.excludable.Excludable\n        \"\"\"\n        _copy = self.__class__()\n        _copy.include = {x for x in self.include}\n        _copy.exclude = {x for x in self.exclude}\n        return _copy\n\n    def set_values(self, value: Set, is_exclude: bool) -> None:\n        \"\"\"\n        Appends the data to include/exclude sets.\n\n        :param value: set of values to add\n        :type value: set\n        :param is_exclude: flag if values are to be excluded or included\n        :type is_exclude: bool\n        \"\"\"\n        prop = \"exclude\" if is_exclude else \"include\"\n        current_value = getattr(self, prop)\n        current_value.update(value)\n        setattr(self, prop, current_value)\n\n    def is_included(self, key: str) -> bool:\n        \"\"\"\n        Check if field in included (in set or set is {...})\n        :param key: key to check\n        :type key: str\n        :return: result of the check\n        :rtype: bool\n        \"\"\"\n        return (... in self.include or key in self.include) if self.include else True\n\n    def is_excluded(self, key: str) -> bool:\n        \"\"\"\n        Check if field in excluded (in set or set is {...})\n        :param key: key to check\n        :type key: str\n        :return: result of the check\n        :rtype: bool\n        \"\"\"\n        return (... in self.exclude or key in self.exclude) if self.exclude else False\n\n\nclass ExcludableItems:\n    \"\"\"\n    Keeps a dictionary of Excludables by alias + model_name keys\n    to allow quick lookup by nested models without need to travers\n    deeply nested dictionaries and passing include/exclude around\n    \"\"\"\n\n    def __init__(self) -> None:\n        self.items: Dict[str, Excludable] = dict()\n\n    @classmethod\n    def from_excludable(cls, other: \"ExcludableItems\") -> \"ExcludableItems\":\n        \"\"\"\n        Copy passed ExcludableItems to avoid inplace modifications.\n\n        :param other: other excludable items to be copied\n        :type other: ormar.models.excludable.ExcludableItems\n        :return: copy of other\n        :rtype: ormar.models.excludable.ExcludableItems\n        \"\"\"\n        new_excludable = cls()\n        for key, value in other.items.items():\n            new_excludable.items[key] = value.get_copy()\n        return new_excludable\n\n    def get(self, model_cls: Type[\"Model\"], alias: str = \"\") -> Excludable:\n        \"\"\"\n        Return Excludable for given model and alias.\n\n        :param model_cls: target model to check\n        :type model_cls: ormar.models.metaclass.ModelMetaclass\n        :param alias: table alias from relation manager\n        :type alias: str\n        :return: Excludable for given model and alias\n        :rtype: ormar.models.excludable.Excludable\n        \"\"\"\n        key = f\"{alias + '_' if alias else ''}{model_cls.get_name(lower=True)}\"\n        excludable = self.items.get(key)\n        if not excludable:\n            excludable = Excludable()\n            self.items[key] = excludable\n        return excludable\n\n    def build(\n        self,\n        items: Union[List[str], str, Tuple[str], Set[str], Dict],\n        model_cls: Type[\"Model\"],\n        is_exclude: bool = False,\n    ) -> None:\n        \"\"\"\n        Receives the one of the types of items and parses them as to achieve\n        a end situation with one excludable per alias/model in relation.\n\n        Each excludable has two sets of values - one to include, one to exclude.\n\n        :param items: values to be included or excluded\n        :type items: Union[List[str], str, Tuple[str], Set[str], Dict]\n        :param model_cls: source model from which relations are constructed\n        :type model_cls: ormar.models.metaclass.ModelMetaclass\n        :param is_exclude: flag if items should be included or excluded\n        :type is_exclude: bool\n        \"\"\"\n        if isinstance(items, str):\n            items = {items}\n\n        if isinstance(items, Dict):\n            self._traverse_dict(\n                values=items,\n                source_model=model_cls,\n                model_cls=model_cls,\n                is_exclude=is_exclude,\n            )\n\n        else:\n            items = set(items)\n            nested_items = set(x for x in items if \"__\" in x)\n            items.difference_update(nested_items)\n            self._set_excludes(\n                items=items,\n                model_name=model_cls.get_name(lower=True),\n                is_exclude=is_exclude,\n            )\n            if nested_items:\n                self._traverse_list(\n                    values=nested_items, model_cls=model_cls, is_exclude=is_exclude\n                )\n\n    def _set_excludes(\n        self, items: Set, model_name: str, is_exclude: bool, alias: str = \"\"\n    ) -> None:\n        \"\"\"\n        Sets set of values to be included or excluded for given key and model.\n\n        :param items: items to include/exclude\n        :type items: set\n        :param model_name: name of model to construct key\n        :type model_name: str\n        :param is_exclude: flag if values should be included or excluded\n        :type is_exclude: bool\n        :param alias:\n        :type alias: str\n        \"\"\"\n        key = f\"{alias + '_' if alias else ''}{model_name}\"\n        excludable = self.items.get(key)\n        if not excludable:\n            excludable = Excludable()\n        excludable.set_values(value=items, is_exclude=is_exclude)\n        self.items[key] = excludable\n\n    def _traverse_dict(  # noqa: CFQ002\n        self,\n        values: Dict,\n        source_model: Type[\"Model\"],\n        model_cls: Type[\"Model\"],\n        is_exclude: bool,\n        related_items: List = None,\n        alias: str = \"\",\n    ) -> None:\n        \"\"\"\n        Goes through dict of nested values and construct/update Excludables.\n\n        :param values: items to include/exclude\n        :type values: Dict\n        :param source_model: source model from which relations are constructed\n        :type source_model: ormar.models.metaclass.ModelMetaclass\n        :param model_cls: model from which current relation is constructed\n        :type model_cls: ormar.models.metaclass.ModelMetaclass\n        :param is_exclude: flag if values should be included or excluded\n        :type is_exclude: bool\n        :param related_items: list of names of related fields chain\n        :type related_items: List\n        :param alias: alias of relation\n        :type alias: str\n        \"\"\"\n        self_fields = set()\n        related_items = related_items[:] if related_items else []\n        for key, value in values.items():\n            if value is...:\n                self_fields.add(key)\n            elif isinstance(value, set):\n                (\n                    table_prefix,\n                    target_model,\n                    _,\n                    _,\n                ) = get_relationship_alias_model_and_str(\n                    source_model=source_model, related_parts=related_items + [key]\n                ",
  "declare function runScripts($container: any): void;\nexport default runScripts;\n",
  "<?php\n\nnamespace App;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Post extends Model\n{\n\n        // Avoid misassignment, note: $fillable more secure\n        protected $guarded = [];\n\n\n        // For a market product use $fillable rather than $guarded. \n\n\n    // Create relationship\n\n    public function user() {\n\n\n        // every post object belongsTo a user object.\n        return $this->belongsTo(User::class);\n\n    }\n\n\n\n    /**\n     * S30/V203 Image Path\n     * Mutators: change data before inserted to database.\n     */\n    // public function setPostImageAttribute($value) {\n\n    //     if (strpos($value, '127.0.0.1:8000')!== FALSE || strpos($value, 'https://')!== FALSE) {\n    //         return $value;\n    //     }else{\n    //     return asset('storage/'. $value);\n    //     }\n    // }\n\n\n\n    /** \n     * S30/V203 Image path\n     * Accessor: change data after reciving it from the database.\n     * */\n    public function getPostImageAttribute($value) {\n\n        // $value = images/VEW2PdYTQlyFNigzCJDrQDJgm0F1tEjpAIJkChHF.jpg\n\n        if (strpos($value, '127.0.0.1:8000')!== FALSE || strpos($value, 'https://')!== FALSE) {\n            return $value;\n        }else{\n            return asset('storage/'. $value);\n        }\n    }\n\n}",
  "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<!-- NewPage -->\n<html lang=\"en\">\n<head>\n<!-- Generated by javadoc (version 1.7.0_45) on Sun Nov 10 23:24:00 EST 2013 -->\n<title>JavaSpaceAdmin (Apache River v2.2.2 API Documentation)</title>\n<meta name=\"date\" content=\"2013-11-10\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"../../../../stylesheet.css\" title=\"Style\">\n</head>\n<body>\n<script type=\"text/javascript\"><!--\n    if (location.href.indexOf('is-external=true') == -1) {\n        parent.document.title=\"JavaSpaceAdmin (Apache River v2.2.2 API Documentation)\";\n    }\n//-->\n</script>\n<noscript>\n<div>JavaScript is disabled on your browser.</div>\n</noscript>\n<!-- ========= START OF TOP NAVBAR ======= -->\n<div class=\"topNav\"><a name=\"navbar_top\">\n<!--   -->\n</a><a href=\"#skip-navbar_top\" title=\"Skip navigation links\"></a><a name=\"navbar_top_firstrow\">\n<!--   -->\n</a>\n<ul class=\"navList\" title=\"Navigation\">\n<li><a href=\"../../../../overview-summary.html\">Overview</a></li>\n<li><a href=\"package-summary.html\">Package</a></li>\n<li class=\"navBarCell1Rev\">Class</li>\n<li><a href=\"class-use/JavaSpaceAdmin.html\">Use</a></li>\n<li><a href=\"package-tree.html\">Tree</a></li>\n<li><a href=\"../../../../deprecated-list.html\">Deprecated</a></li>\n<li><a href=\"../../../../index-all.html\">Index</a></li>\n<li><a href=\"../../../../help-doc.html\">Help</a></li>\n</ul>\n</div>\n<div class=\"subNav\">\n<ul class=\"navList\">\n<li><a href=\"../../../../com/sun/jini/outrigger/ConstrainableJavaSpaceAdmin.html\" title=\"interface in com.sun.jini.outrigger\"><span class=\"strong\">Prev Class</span></a></li>\n<li><a href=\"../../../../com/sun/jini/outrigger/LogOps.html\" title=\"interface in com.sun.jini.outrigger\"><span class=\"strong\">Next Class</span></a></li>\n</ul>\n<ul class=\"navList\">\n<li><a href=\"../../../../index.html?com/sun/jini/outrigger/JavaSpaceAdmin.html\" target=\"_top\">Frames</a></li>\n<li><a href=\"JavaSpaceAdmin.html\" target=\"_top\">No Frames</a></li>\n</ul>\n<ul class=\"navList\" id=\"allclasses_navbar_top\">\n<li><a href=\"../../../../allclasses-noframe.html\">All Classes</a></li>\n</ul>\n<div>\n<script type=\"text/javascript\"><!--\n  allClassesLink = document.getElementById(\"allclasses_navbar_top\");\n  if(window==top) {\n    allClassesLink.style.display = \"block\";\n  }\n  else {\n    allClassesLink.style.display = \"none\";\n  }\n  //-->\n</script>\n</div>\n<div>\n<ul class=\"subNavList\">\n<li>Summary:&nbsp;</li>\n<li>Nested&nbsp;|&nbsp;</li>\n<li><a href=\"#field_summary\">Field</a>&nbsp;|&nbsp;</li>\n<li>Constr&nbsp;|&nbsp;</li>\n<li><a href=\"#method_summary\">Method</a></li>\n</ul>\n<ul class=\"subNavList\">\n<li>Detail:&nbsp;</li>\n<li><a href=\"#field_detail\">Field</a>&nbsp;|&nbsp;</li>\n<li>Constr&nbsp;|&nbsp;</li>\n<li><a href=\"#method_detail\">Method</a></li>\n</ul>\n</div>\n<a name=\"skip-navbar_top\">\n<!--   -->\n</a></div>\n<!-- ========= END OF TOP NAVBAR ========= -->\n<!-- ======== START OF CLASS DATA ======== -->\n<div class=\"header\">\n<div class=\"subTitle\">com.sun.jini.outrigger</div>\n<h2 title=\"Interface JavaSpaceAdmin\" class=\"title\">Interface JavaSpaceAdmin</h2>\n</div>\n<div class=\"contentContainer\">\n<div class=\"description\">\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<dl>\n<dt>All Superinterfaces:</dt>\n<dd><a href=\"../../../../com/sun/jini/admin/DestroyAdmin.html\" title=\"interface in com.sun.jini.admin\">DestroyAdmin</a>, <a href=\"../../../../net/jini/admin/JoinAdmin.html\" title=\"interface in net.jini.admin\">JoinAdmin</a></dd>\n</dl>\n<dl>\n<dt>All Known Subinterfaces:</dt>\n<dd><a href=\"../../../../com/sun/jini/outrigger/ConstrainableJavaSpaceAdmin.html\" title=\"interface in com.sun.jini.outrigger\">ConstrainableJavaSpaceAdmin</a></dd>\n</dl>\n<hr>\n<div class=\"block\"><strong>Deprecated.</strong>&nbsp;\n<div class=\"block\"><i>Invoke the <a href=\"../../../../net/jini/admin/JoinAdmin.html\" title=\"interface in net.jini.admin\"><code>JoinAdmin</code></a> and <a href=\"../../../../com/sun/jini/admin/DestroyAdmin.html\" title=\"interface in com.sun.jini.admin\"><code>DestroyAdmin</code></a> methods though those interfaces.  A view\n             of the space contents can be obtained through the\n             <a href=\"../../../../net/jini/space/JavaSpace05.html#contents(java.util.Collection, net.jini.core.transaction.Transaction, long, long)\"><code>JavaSpace05.contents</code></a>\n             method.</i></div>\n</div>\n<br>\n<pre>public interface <span class=\"strong\">JavaSpaceAdmin</span>\nextends <a href=\"../../../../net/jini/admin/JoinAdmin.html\" title=\"interface in net.jini.admin\">JoinAdmin</a>, <a href=\"../../../../com/sun/jini/admin/DestroyAdmin.html\" title=\"interface in com.sun.jini.admin\">DestroyAdmin</a></pre>\n<div class=\"block\">This interface contains all the administrative methods that Outrigger\n provides to control its JavaSpaces<sup><font size=-2>TM</font></sup> \n service. <p></div>\n<dl><dt><span class=\"strong\">Author:</span></dt>\n  <dd>Sun Microsystems, Inc.</dd></dl>\n</li>\n</ul>\n</div>\n<div class=\"summary\">\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<!-- =========== FIELD SUMMARY =========== -->\n<ul class=\"blockList\">\n<li class=\"blockList\"><a name=\"field_summary\">\n<!--   -->\n</a>\n<h3>Field Summary</h3>\n<table class=\"overviewSummary\" border=\"0\" cellpadding=\"3\" cellspacing=\"0\" summary=\"Field Summary table, listing fields, and an explanation\">\n<caption><span>Fields</span><span class=\"tabEnd\">&nbsp;</span></caption>\n<tr>\n<th class=\"colFirst\" scope=\"col\">Modifier and Type</th>\n<th class=\"colLast\" scope=\"col\">Field and Description</th>\n</tr>\n<tr class=\"altColor\">\n<td class=\"colFirst\"><code>static int</code></td>\n<td class=\"colLast\"><code><strong><a href=\"../../../../com/sun/jini/outrigger/JavaSpaceAdmin.html#USE_DEFAULT\">USE_DEFAULT</a></strong></code>\n<div class=\"block\"><strong>Deprecated.</strong>&nbsp;</div>\n<div class=\"block\">Can be passed to <code>contents</code> to indicate\n no preference for the fetch size.</div>\n</td>\n</tr>\n</table>\n</li>\n</ul>\n<!-- ========== METHOD SUMMARY =========== -->\n<ul class=\"blockList\">\n<li class=\"blockList\"><a name=\"method_summary\">\n<!--   -->\n</a>\n<h3>Method Summary</h3>\n<table class=\"overviewSummary\" border=\"0\" cellpadding=\"3\" cellspacing=\"0",
  "FROM python:3.10.0\nEXPOSE 8501\nWORKDIR /bplaner\nCOPY requirements.txt./requirements.txt\nRUN pip install --no-cache-dir -r requirements.txt\nCOPY..\nCMD streamlit run bplaner.py",
  "package io.onedev.server.ci.job.trigger;\n\nimport java.util.Collection;\nimport java.util.List;\n\nimport org.eclipse.jgit.lib.ObjectId;\n\nimport io.onedev.commons.codeassist.InputSuggestion;\nimport io.onedev.commons.utils.match.Matcher;\nimport io.onedev.commons.utils.match.PathMatcher;\nimport io.onedev.server.ci.job.Job;\nimport io.onedev.server.event.ProjectEvent;\nimport io.onedev.server.event.RefUpdated;\nimport io.onedev.server.git.GitUtils;\nimport io.onedev.server.model.Project;\nimport io.onedev.server.util.patternset.PatternSet;\nimport io.onedev.server.web.editable.annotation.Editable;\nimport io.onedev.server.web.editable.annotation.NameOfEmptyValue;\nimport io.onedev.server.web.editable.annotation.Patterns;\nimport io.onedev.server.web.util.SuggestionUtils;\n\n@Editable(order=100, name=\"When update branches\")\npublic class BranchUpdateTrigger extends JobTrigger {\n\n\tprivate static final long serialVersionUID = 1L;\n\n\tprivate String branches;\n\t\n\tprivate String paths;\n\t\n\t@Editable(name=\"Branches\", order=100, \n\t\t\tdescription=\"Optionally specify space-separated branches to check. Use * or? for wildcard match. \"\n\t\t\t\t\t+ \"Leave empty to match all branches\")\n\t@Patterns(suggester = \"suggestBranches\")\n\t@NameOfEmptyValue(\"Any branch\")\n\tpublic String getBranches() {\n\t\treturn branches;\n\t}\n\n\tpublic void setBranches(String branches) {\n\t\tthis.branches = branches;\n\t}\n\n\t@SuppressWarnings(\"unused\")\n\tprivate static List<InputSuggestion> suggestBranches(String matchWith) {\n\t\treturn SuggestionUtils.suggestBranches(Project.get(), matchWith);\n\t}\n\t\n\t@Editable(name=\"Touched Files\", order=200, \n\t\t\tdescription=\"Optionally specify space-separated files to check. Use * or? for wildcard match. \"\n\t\t\t\t\t+ \"Leave empty to match all files\")\n\t@Patterns(suggester = \"getPathSuggestions\")\n\t@NameOfEmptyValue(\"Any file\")\n\tpublic String getPaths() {\n\t\treturn paths;\n\t}\n\n\tpublic void setPaths(String paths) {\n\t\tthis.paths = paths;\n\t}\n\n\t@SuppressWarnings(\"unused\")\n\tprivate static List<InputSuggestion> getPathSuggestions(String matchWith) {\n\t\treturn SuggestionUtils.suggestBlobs(Project.get(), matchWith);\n\t}\n\n\tprivate boolean touchedFile(RefUpdated refUpdated) {\n\t\tif (getPaths()!= null) {\n\t\t\tif (refUpdated.getOldCommitId().equals(ObjectId.zeroId())) {\n\t\t\t\treturn true;\n\t\t\t} else if (refUpdated.getNewCommitId().equals(ObjectId.zeroId())) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tCollection<String> changedFiles = GitUtils.getChangedFiles(refUpdated.getProject().getRepository(), \n\t\t\t\t\t\trefUpdated.getOldCommitId(), refUpdated.getNewCommitId());\n\t\t\t\tPatternSet patternSet = PatternSet.fromString(getPaths());\n\t\t\t\tMatcher matcher = new PathMatcher();\n\t\t\t\tfor (String changedFile: changedFiles) {\n\t\t\t\t\tif (patternSet.matches(matcher, changedFile))\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\t@Override\n\tpublic boolean matches(ProjectEvent event, Job job) {\n\t\tif (event instanceof RefUpdated) {\n\t\t\tRefUpdated refUpdated = (RefUpdated) event;\n\t\t\tString branch = GitUtils.ref2branch(refUpdated.getRefName());\n\t\t\tif (branch!= null) {\n\t\t\t\tif ((getBranches() == null || PatternSet.fromString(getBranches()).matches(new PathMatcher(), branch)) \n\t\t\t\t\t\t&& touchedFile(refUpdated)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t@Override\n\tpublic String getDescription() {\n\t\tString description;\n\t\tif (getBranches()!= null && getPaths()!= null)\n\t\t\tdescription = String.format(\"When update branches '%s' and touch files '%s'\", getBranches(), getPaths());\n\t\telse if (getBranches()!= null)\n\t\t\tdescription = String.format(\"When update branches '%s'\", getBranches());\n\t\telse if (getPaths()!= null)\n\t\t\tdescription = String.format(\"When touch files '%s'\", getBranches());\n\t\telse\n\t\t\tdescription = \"When update branches\";\n\t\treturn description;\n\t}\n\n}\n",
  "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Install Fest chat</title>\n  <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n  <ul class=\"pages\">\n    <li class=\"chat page\">\n      <div class=\"chatArea\">\n        <ul class=\"messages\"></ul>\n      </div>\n      <input class=\"inputMessage\" placeholder=\"Ingresa aqu\u00ed...\"/>\n    </li>\n    <li class=\"login page\">\n      <div class=\"form\">\n        <h3 class=\"title\">\u00bfCu\u00e1l es tu nombre de usuario?</h3>\n        <input class=\"usernameInput\" type=\"text\" maxlength=\"14\" />\n      </div>\n    </li>\n  </ul>\n\n  <script src=\"https://code.jquery.com/jquery-1.10.2.min.js\"></script>\n  <script src=\"/socket.io/socket.io.js\"></script>\n  <script src=\"/main.js\"></script>\n</body>\n</html>",
  "/*\n * qb - C++ Actor Framework\n * Copyright (C) 2011-2021 isndev (www.qbaf.io). All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n *         limitations under the License.\n */\n\n#include \"../xml.h\"\n#include <chrono>\n#include <gtest/gtest.h>\n#include <qb/io/async.h>\n#include <thread>\n#include <atomic>\n\nusing namespace qb::io;\n\nconstexpr const std::size_t NB_ITERATION = 4096;\nconstexpr const char STRING_MESSAGE[] = \"Here is my content test\";\nstd::atomic<std::size_t> msg_count_server_side = 0;\nstd::atomic<std::size_t> msg_count_client_side = 0;\n\nbool\nall_done() {\n    return msg_count_server_side == (NB_ITERATION) && msg_count_client_side == NB_ITERATION;\n}\n\n// OVER TCP\n\nclass TestServer;\n\nclass TestServerClient : public use<TestServerClient>::tcp::client<TestServer> {\npublic:\n    using Protocol = qb::xml::protocol<TestServerClient>;\n\n    explicit TestServerClient(IOServer &server)\n        : client(server) {}\n\n    ~TestServerClient() {\n        EXPECT_EQ(msg_count_server_side, NB_ITERATION);\n    }\n\n    void\n    on(Protocol::message const &msg) {\n        EXPECT_EQ(strlen(msg.xml.child_value(\"message\")), sizeof(STRING_MESSAGE) - 1);\n        *this << msg.xml << '\\0';\n        ++msg_count_server_side;\n    }\n};\n\nclass TestServer : public use<TestServer>::tcp::server<TestServerClient> {\n    std::size_t connection_count = 0u;\n\npublic:\n    ~TestServer() {\n        EXPECT_EQ(connection_count, 1u);\n    }\n\n    void\n    on(IOSession &) {\n        ++connection_count;\n    }\n};\n\nclass TestClient : public use<TestClient>::tcp::client<> {\npublic:\n    using Protocol = qb::xml::protocol<TestClient>;\n\n    ~TestClient() {\n        EXPECT_EQ(msg_count_client_side, NB_ITERATION);\n    }\n\n    void\n    on(Protocol::message const &msg) {\n        EXPECT_EQ(strlen(msg.xml.child_value(\"message\")), sizeof(STRING_MESSAGE) - 1);\n        ++msg_count_client_side;\n    }\n};\n\nTEST(Session, XML_OVER_TCP) {\n    async::init();\n    msg_count_server_side = 0;\n    msg_count_client_side = 0;\n\n    TestServer server;\n    server.transport().listen_v4(60666);\n    server.start();\n\n    std::thread t([]() {\n        async::init();\n        TestClient client;\n        if (SocketStatus::Done!= client.transport().connect_v4(\"127.0.0.1\", 60666)) {\n            throw std::runtime_error(\"could not connect\");\n        }\n        client.start();\n\n        pugi::xml_document doc;\n\n        for (auto i = 0u; i < NB_ITERATION; ++i) {\n            doc.load_string((\"<message>\" + std::string(STRING_MESSAGE) + \"</message>\").c_str());\n            client << doc << '\\0';\n        }\n\n        for (auto i = 0; i < (NB_ITERATION * 5) &&!all_done(); ++i)\n            async::run(EVRUN_ONCE);\n    });\n\n    for (auto i = 0; i < (NB_ITERATION * 5) &&!all_done(); ++i)\n        async::run(EVRUN_ONCE);\n    t.join();\n}\n\n// OVER SECURE TCP\n\n#ifdef QB_IO_WITH_SSL\n\nclass TestSecureServer;\n\nclass TestSecureServerClient\n    : public use<TestSecureServerClient>::tcp::ssl::client<TestSecureServer> {\npublic:\n    using Protocol = qb::xml::protocol_view<TestSecureServerClient>;\n\n    explicit TestSecureServerClient(IOServer &server)\n        : client(server) {}\n\n    ~TestSecureServerClient() {\n        EXPECT_EQ(msg_count_server_side, NB_ITERATION);\n    }\n\n    void\n    on(Protocol::message const &msg) {\n        EXPECT_EQ(strlen(msg.xml.child_value(\"message\")), sizeof(STRING_MESSAGE) - 1);\n        *this << msg.xml << '\\0';\n        ++msg_count_server_side;\n    }\n};\n\nclass TestSecureServer\n    : public use<TestSecureServer>::tcp::ssl::server<TestSecureServerClient> {\n    std::size_t connection_count = 0u;\n\npublic:\n    ~TestSecureServer() {\n        EXPECT_EQ(connection_count, 1u);\n    }\n\n    void\n    on(IOSession &) {\n        ++connection_count;\n    }\n};\n\nclass TestSecureClient : public use<TestSecureClient>::tcp::ssl::client<> {\npublic:\n    using Protocol = qb::xml::protocol_view<TestSecureClient>;\n\n    ~TestSecureClient() {\n        EXPECT_EQ(msg_count_client_side, NB_ITERATION);\n    }\n\n    void\n    on(Protocol::message const &msg) {\n        EXPECT_EQ(strlen(msg.xml.child_value(\"message\")), sizeof(STRING_MESSAGE) - 1);\n        ++msg_count_client_side;\n    }\n};\n\nTEST(Session, XML_OVER_SECURE_TCP) {\n    async::init();\n    msg_count_server_side = 0;\n    msg_count_client_side = 0;\n\n    TestSecureServer server;\n    server.transport().init(\n        ssl::create_server_context(SSLv23_server_method(), \"cert.pem\", \"key.pem\"));\n    server.transport().listen_v6(60666);\n    server.start();\n\n    std::thread t([]() {\n        async::init();\n        TestSecureClient client;\n        if (SocketStatus::Done!= client.transport().connect_v6(\"::1\", 60666)) {\n            throw std::runtime_error(\"could not connect\");\n        }\n        client.start();\n\n        pugi::xml_document doc;\n\n        for (auto i = 0u; i < NB_ITERATION; ++i) {\n            doc.load_string((\"<message>\" + std::string(STRING_MESSAGE) + \"</message>\").c_str());\n            client << doc << '\\0';\n        }\n\n        for (auto i = 0; i < (NB_ITERATION * 5) &&!all_done(); ++i)\n            async::run(EVRUN_ONCE);\n    });\n\n    for (auto i = 0; i < (NB_ITERATION * 5) &&!all_done(); ++i)\n        async::run(EVRUN_ONCE);\n    t.join();\n}\n\n#endif",
  "package com.example.android.sunshine.app;\n\nimport android.content.BroadcastReceiver;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.content.IntentFilter;\nimport android.content.res.Resources;\nimport android.graphics.Bitmap;\nimport android.graphics.BitmapFactory;\nimport android.graphics.Canvas;\nimport android.graphics.Color;\nimport android.graphics.Paint;\nimport android.graphics.Rect;\nimport android.graphics.Typeface;\nimport android.os.Bundle;\nimport android.os.Handler;\nimport android.os.Message;\nimport android.support.wearable.watchface.CanvasWatchFaceService;\nimport android.support.wearable.watchface.WatchFaceStyle;\nimport android.text.format.Time;\nimport android.util.Log;\nimport android.view.LayoutInflater;\nimport android.view.SurfaceHolder;\nimport android.view.View;\nimport android.view.WindowInsets;\nimport android.widget.FrameLayout;\nimport android.widget.ImageView;\nimport android.widget.TextView;\nimport com.google.android.gms.common.ConnectionResult;\nimport com.google.android.gms.common.api.GoogleApiClient;\nimport com.google.android.gms.common.api.ResultCallback;\nimport com.google.android.gms.common.data.FreezableUtils;\nimport com.google.android.gms.wearable.Asset;\nimport com.google.android.gms.wearable.DataApi;\nimport com.google.android.gms.wearable.DataEvent;\nimport com.google.android.gms.wearable.DataEventBuffer;\nimport com.google.android.gms.wearable.DataItem;\nimport com.google.android.gms.wearable.DataMap;\nimport com.google.android.gms.wearable.DataMapItem;\nimport com.google.android.gms.wearable.PutDataMapRequest;\nimport com.google.android.gms.wearable.PutDataRequest;\nimport com.google.android.gms.wearable.Wearable;\n\nimport java.io.InputStream;\nimport java.lang.ref.WeakReference;\nimport java.text.DateFormat;\nimport java.text.SimpleDateFormat;\nimport java.util.Calendar;\nimport java.util.Date;\nimport java.util.List;\nimport java.util.TimeZone;\nimport java.util.concurrent.TimeUnit;\n\n/**\n * Digital watch face with seconds. In ambient mode, the seconds aren't displayed. On devices with\n * low-bit ambient mode, the text is drawn without anti-aliasing in ambient mode.\n */\npublic class SunshineWatchFace extends CanvasWatchFaceService implements DataApi.DataListener,\n        GoogleApiClient.ConnectionCallbacks, GoogleApiClient.OnConnectionFailedListener  {\n\n    /**\n     * Update rate in milliseconds for interactive mode. We update once a second since seconds are\n     * displayed in interactive mode.\n     */\n    private static final long INTERACTIVE_UPDATE_RATE_MS = TimeUnit.SECONDS.toMillis(1);\n\n    /**\n     * Handler message id for updating the time periodically in interactive mode.\n     */\n    private static final int MSG_UPDATE_TIME = 0;\n\n    static final int BACKGROUND_COLOR_AMBIENT = Color.BLACK;\n    static final int BACKGROUND_COLOR = Color.parseColor(\"#03A9F4\");\n    private LayoutInflater mInflater;\n    public final String LOG_TAG = SunshineWatchFace.class.getSimpleName();\n\n    private int mWeatherHigh = 0;\n    private int mWeatherLow = 0;\n    private Bitmap mWeatherBitmap;\n\n    DateFormat mDateFormat = new SimpleDateFormat(\"EEE, MMM d yyyy \");\n\n    GoogleApiClient mGoogleApiClient;\n\n    @Override\n    public Engine onCreateEngine() {\n        mInflater = (LayoutInflater) this.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n\n        mGoogleApiClient = new GoogleApiClient.Builder(SunshineWatchFace.this)\n               .addConnectionCallbacks(this)\n               .addOnConnectionFailedListener(this)\n               .addApi(Wearable.API)\n               .build();\n        mGoogleApiClient.connect();\n\n        return new Engine();\n    }\n\n    private class Engine extends CanvasWatchFaceService.Engine {\n        final Handler mUpdateTimeHandler = new EngineHandler(this);\n        final BroadcastReceiver mTimeZoneReceiver = new BroadcastReceiver() {\n            @Override\n            public void onReceive(Context context, Intent intent) {\n                mTime.clear(intent.getStringExtra(\"time-zone\"));\n                mTime.setToNow();\n                mDate = Calendar.getInstance().getTime();\n            }\n        };\n\n        boolean mRegisteredTimeZoneReceiver = false;\n        boolean mAmbient;\n\n        Time mTime;\n        Date mDate ;\n\n        private FrameLayout mFrameLayout;\n\n        /**\n         * Whether the display supports fewer bits for each color in ambient mode. When true, we\n         * disable anti-aliasing in ambient mode.\n         */\n        boolean mLowBitAmbient;\n\n        @Override\n        public void onCreate(SurfaceHolder holder) {\n            super.onCreate(holder);\n\n            mFrameLayout = (FrameLayout) mInflater.inflate(R.layout.watch_face, null);\n\n            setWatchFaceStyle(new WatchFaceStyle.Builder(SunshineWatchFace.this)\n                   .setCardPeekMode(WatchFaceStyle.PEEK_MODE_VARIABLE)\n                   .setBackgroundVisibility(WatchFaceStyle.BACKGROUND_VISIBILITY_INTERRUPTIVE)\n                   .setShowSystemUiTime(false)\n                   .build());\n\n            mTime = new Time();\n            mDate = Calendar.getInstance().getTime();\n        }\n\n        @Override\n        public void onDestroy() {\n            mUpdateTimeHandler.removeMessages(MSG_UPDATE_TIME);\n            super.onDestroy();\n        }\n\n        @Override\n        public void onVisibilityChanged(boolean visible) {\n            super.onVisibilityChanged(visible);\n\n            if (visible) {\n                registerReceiver();\n\n                // Update time zone in case it changed while we weren't visible.\n                mTime.clear(TimeZone.getDefault().getID());\n                mTime.setToNow();\n                mDate = Calendar.getInstance().getTime();\n            } else {\n                unregisterReceiver();\n            }\n\n            // Whether the timer should be running depends on whether we're visible (as well as\n            // whether we're in ambient mode), so we may need to start or stop the timer.\n            updateTimer();\n        }\n\n        private void registerReceiver() {\n            if (mRegisteredTimeZoneReceiver) {\n                return;\n            }\n            mRegisteredTimeZoneReceiver = true;\n            IntentFilter filter = new IntentFilter(Intent.ACTION_TIMEZONE_CHANGED);\n            SunshineWatchFace.this.registerReceiver(mTimeZoneReceiver, filter);\n        }\n\n        private void unregisterReceiver() {\n            if (!mRegisteredTimeZoneReceiver) {\n                return;\n            }\n            mRegisteredTimeZoneReceiver = false;\n            SunshineWatchFace.this.unregisterReceiver(mTimeZoneReceiver);\n        }\n\n        @Override\n        public void onApplyWindowInsets(WindowInsets insets) {\n            super.onApplyWindowInsets(insets);\n\n            // Load resources that have alternate values for round watches.\n            Resources resources = SunshineWatchFace.this.getResources();\n            boolean isRound = insets.isRound();\n        }\n\n        @Override\n        public void onPropertiesChanged(Bundle properties) {\n            super.onPropertiesChanged(properties);\n            mLowBitAmbient = properties.getBoolean(PROPERTY_LOW_BIT_AMBIENT, false);\n        }\n\n        @Override\n        public void onTimeTick() {\n            super.onTimeTick();\n            invalidate();\n        }\n\n        @Override\n        public void onAmbientModeChanged(boolean inAmbientMode) {\n            super.onAmbientModeChanged(inAmbientMode);\n            if (mAmbient!= inAmbientMode) {\n                mAmbient = inAmbientMode;\n                if (mLowBitAmbient) {\n                }\n                invalidate();\n            }\n            // Whether the timer should be running depends on whether we're visible (as well as\n            // whether we're in ambient mode), so we may need to start or stop the timer.\n            updateTimer();\n        }\n\n        @Override\n        public void onDraw(Canvas canvas, Rect bounds) {\n\n            TextView tvTime = (TextView) mFrameLayout.findViewById(R.id.tvTime);\n            TextView tvDate = (TextView) mFrameLayout.findViewById(R.id.tvDate);",
  "# terraform-aws-route53-zone\n\nCreate a route53 hosted zone, either public or private, and optionally create delegated subdomains\n\n## Requirements\n\n| Name | Version |\n|------|---------|\n| terraform | >= 0.12 |\n| aws | ~> 3.0 |\n\n## Providers\n\n| Name | Version |\n|------|---------|\n| aws | ~> 3.0 |\n\n## Inputs\n\n| Name | Description | Type | Default | Required |\n|------|-------------|------|---------|:--------:|\n| create\\_acm\\_cert | If set to true an ACM SSL certificate will be generated for the apex domain and wildcard under it | `bool` | `true` | no |\n| delegated\\_sub\\_domains | List of objects with subdomain and name\\_server keys. e.g. `[{ subdomain = 'dev', name_servers=['8.8.8.8', '8.8.4.4'] }]` ***NOTE:*** Order is crucial, changing the order (including removing elements) will cause recreation | `list(object({ subdomain = string, name_servers = list(string) }))` | `[]` | no |\n| environment | Deployment environment (e.g. prod, test, dev) | `string` | n/a | yes |\n| tags | Additional tags to add to all taggable resources created | `map` | `{}` | no |\n| ttl | TTL to apply to delegated subdomain NS records | `number` | `300` | no |\n| vpc\\_name | Name tag on the vpc in which the private hosted zone will be created. If left null public zone will be created | `string` | `null` | no |\n| zone\\_name | Route 53 zone name | `string` | n/a | yes |\n\n## Outputs\n\n| Name | Description |\n|------|-------------|\n| acm\\_certificate\\_arn | ARN of the created wildcard and apex ACM SSL certificate, or null if not created |\n| acm\\_certificate\\_validation\\_certificate\\_arn | ARN of the created wildcard and apex ACM SSL certificate as an output from the aws\\_acm\\_certificate\\_validation resource. |\n| name\\_servers | List of name servers for the hosted zone |\n| route53\\_cert\\_validation\\_fqdn | FQDN of the route53 ACM certificate validation record |\n| zone\\_id | Route 53 hosted zone id |\n\n",
  "import { expect, test } from '@jest/globals'\nimport { DocBase, DocRecord, DocType, SengiPatchValidationFailedError } from'sengi-interfaces'\nimport { asError } from '../utils'\nimport { executePatch } from './executePatch'\n\ninterface ExampleDoc extends DocBase {\n  propA: string\n  propB: string\n  propC?: string\n}\n\nfunction createDocType () {\n  const docType: DocType<ExampleDoc, unknown, unknown, unknown, unknown, unknown> = {\n    name: 'test',\n    pluralName: 'tests',\n    jsonSchema: {},\n    readonlyFieldNames: ['propB']\n  }\n\n  return docType\n}\n\ntest('A valid patch that changes a value is applied.', () => {\n  const doc: DocRecord = { id: '123', propA: 'aaa',  propB: 'bbb' }\n  executePatch(createDocType(), doc, { propA: 'AAA' })\n  expect(doc).toEqual({ id: '123', propA: 'AAA',  propB: 'bbb' })\n})\n\ntest('A valid patch that removes a value is applied.', () => {\n  const doc: DocRecord = { id: '123', propA: 'aaa',  propB: 'bbb', propC: 'ccc' }\n  executePatch(createDocType(), doc, { propC: null })\n  expect(doc).toEqual({ id: '123', propA: 'aaa',  propB: 'bbb' })\n})\n\ntest('A valid patch on a doc type with no readonly properties is applied.', () => {\n  const docType = createDocType()\n  delete docType.readonlyFieldNames\n  const doc: DocRecord = { id: '123', propA: 'aaa',  propB: 'bbb' }\n  executePatch(docType, doc, { propA: 'AAA' })\n  expect(doc).toEqual({ id: '123', propA: 'AAA',  propB: 'bbb' })\n})\n\ntest('A patch that changes a system field is rejected.', () => {\n  const doc: DocRecord = { id: '123', propA: 'aaa',  propB: 'bbb' }\n  expect(() => executePatch(createDocType(), doc, { id: '321' })).toThrow(asError(SengiPatchValidationFailedError))\n  expect(() => executePatch(createDocType(), doc, { id: '321' })).toThrow(/Cannot patch system field/)\n})\n\ntest('A patch that changes a readonly field is rejected.', () => {\n  const doc: DocRecord = { id: '123', propA: 'aaa',  propB: 'bbb' }\n  expect(() => executePatch(createDocType(), doc, { propB: 'BBB' })).toThrow(asError(SengiPatchValidationFailedError))\n  expect(() => executePatch(createDocType(), doc, { propB: 'BBB' })).toThrow(/Cannot patch readonly field/)\n})\n",
  "try:\n    from typing_extensions import Protocol\n    from typing import Optional, List, Callable, Dict, Any\n    assert Optional and List and Callable and Dict and Any\nexcept ImportError:\n    pass\n    Protocol = object  # type: ignore\n\n\nclass Settings(object):\n\n    def __init__(self) -> None:\n        self.show_status_messages = True\n        self.show_view_status = True\n        self.auto_show_diagnostics_panel = True\n        self.auto_show_diagnostics_panel_level = 3\n        self.show_diagnostics_phantoms = False\n        self.show_diagnostics_count_in_view_status = False\n        self.show_diagnostics_in_view_status = True\n        self.show_diagnostics_severity_level = 3\n        self.only_show_lsp_completions = False\n        self.diagnostics_highlight_style = \"underline\"\n        self.highlight_active_signature_parameter = True\n        self.document_highlight_style = \"stippled\"\n        self.document_highlight_scopes = {\n            \"unknown\": \"text\",\n            \"text\": \"text\",\n            \"read\": \"markup.inserted\",\n            \"write\": \"markup.changed\"\n        }\n        self.diagnostics_gutter_marker = \"dot\"\n        self.complete_all_chars = False\n        self.completion_hint_type = \"auto\"\n        self.complete_using_text_edit = False\n        self.resolve_completion_for_snippets = False\n        self.log_debug = True\n        self.log_server = True\n        self.log_stderr = False\n        self.log_payloads = False\n\n\nclass ClientStates(object):\n    STARTING = 0\n    READY = 1\n    STOPPING = 2\n\n\nclass LanguageConfig(object):\n    def __init__(self, language_id: str, scopes: 'List[str]', syntaxes: 'List[str]') -> None:\n        self.id = language_id\n        self.scopes = scopes\n        self.syntaxes = syntaxes\n\n\nclass ClientConfig(object):\n    def __init__(self, name: str, binary_args: 'List[str]', tcp_port: 'Optional[int]', scopes=[],\n                 syntaxes=[], languageId: 'Optional[str]'=None,\n                 languages: 'List[LanguageConfig]'=[], enabled: bool=True, init_options=dict(),\n                 settings=dict(), env=dict(), tcp_host: 'Optional[str]'=None) -> None:\n        self.name = name\n        self.binary_args = binary_args\n        self.tcp_port = tcp_port\n        self.tcp_host = tcp_host\n        if not languages:\n            languages = [LanguageConfig(languageId, scopes, syntaxes)] if languageId else []\n        self.languages = languages\n        self.enabled = enabled\n        self.init_options = init_options\n        self.settings = settings\n        self.env = env\n\n\nclass ViewLike(Protocol):\n    def __init__(self) -> None:\n        pass\n\n    def file_name(self) -> 'Optional[str]':\n       ...\n\n    def window(self) -> 'Optional[Any]':  # WindowLike\n       ...\n\n    def buffer_id(self) -> int:\n       ...\n\n    def substr(self, region: 'Any') -> str:\n       ...\n\n    def settings(self) -> 'Any':  # SettingsLike\n       ...\n\n    def size(self) -> int:\n       ...\n\n    def set_status(self, key: str, status: str) -> None:\n       ...\n\n    def sel(self):\n       ...\n\n    def score_selector(self, region, scope: str) -> int:\n       ...\n\n\nclass WindowLike(Protocol):\n    def id(self) -> int:\n       ...\n\n    def folders(self) -> 'List[str]':\n       ...\n\n    def num_groups(self) -> int:\n       ...\n\n    def active_group(self) -> int:\n       ...\n\n    def active_view_in_group(self, group: int) -> ViewLike:\n       ...\n\n    def project_data(self) -> 'Optional[dict]':\n       ...\n\n    def active_view(self) -> 'Optional[ViewLike]':\n       ...\n\n    def status_message(self, msg: str) -> None:\n       ...\n\n    def views(self) -> 'List[ViewLike]':\n       ...\n",
  "<?php\n\n/** @var \\Illuminate\\Database\\Eloquent\\Factory $factory */\n\nuse App\\Sale;\nuse Faker\\Generator as Faker;\n\n$factory->define(Sale::class, function (Faker $faker) {\n   $date = $faker->dateTimeBetween($startDate = '2020-05-01 00:00:00', $endDate = 'now');\n   return [\n      'company_id' => 1,\n      'user_id' => 1,\n      'client_id' => $faker->numberBetween(1, 30),\n      'discount' => $faker->randomFloat(2, 1, 4),\n      'total_price' => $faker->randomFloat(2, 10, 50),\n     'status' => $faker->numberBetween(1, 2),\n      'created_at' => $date,\n      'updated_at' => $date,\n   ];\n});\n",
  "package stock;\n\nimport java.io.Serializable;\n\npublic abstract class Shape implements Serializable {\n    public abstract void move(int deltaX, int deltaY);\n}\n",
  "const stack = require(\"../../src/data-structures/01-stack\");\n\ndescribe(\"Stack test suite:\", () => {\n    test(\"New stack should be empty if no parameters passed\", () => {\n        const s = stack();\n        expect(s.count()).toBe(0);\n        expect(s.isEmpty()).toBe(true);\n    });\n\n    test(\"Last element of the stack should be the last one pushed\", () => {\n        const s = stack();\n        s.push(1);\n        s.push(2);\n        s.push(999);\n        expect(s.top()).toBe(999);\n    });\n\n    test(\"Pushing an element onto the stack should increase the count\", () => {\n        const s = stack();\n        const count = s.count();\n        s.push(1);\n        expect(s.count()).toBe(count + 1);\n        s.push(5);\n        expect(s.count()).toBe(count + 2);\n    });\n\n    test(\"Passing an array of elements to stack should initialize it to hold those elements\", () => {\n        const arr = [0, 1, 2, 3];\n        const s = stack(arr);\n        expect(s.count()).toBe(arr.length);\n    });\n\n    test(\"Popping an element off the stack should return the last number and decrease the count\", () => {\n        const s = stack([1, 9]);\n        const num = s.pop()\n        expect(s.count()).toBe(1);\n        expect(num).toBe(9);\n    });\n\n    test(\"Clearing the stack should remove all elements and set count to 0\", () => {\n        const arr = [0, 1, 2, 3];\n        const s = stack(arr);\n        s.clear();\n\n        expect(s.count()).toBe(0);\n        expect(s.isEmpty()).toBe(true);\n    });\n\n    test(\"Stack should be iterable and order preserved\", () => {\n        const arr = [0, 1, 2, 3];\n        const s = stack(arr);\n\n        const new_arr = []\n\n        for (k of s) {\n            new_arr.push(k);\n        }\n\n        expect(new_arr).toEqual(arr);\n    });\n});",
  "/*Copyright (C) 2020 Telit Communications S.p.A. Italy - All Rights Reserved.*/\n/*    See LICENSE file in the project root for full license information.     */\n\n/**\n  @file\n    M2MB_main.c\n\n  @brief\n    The file contains the main user entry point of Appzone\n\n  @details\n\n  @description\n    Sample application showcasing events setup and usage. Debug prints on AUX UART\n    \n  @version \n    1.0.1\n  @note\n    Start of Appzone: Entry point\n    User code entry is in function M2MB_main()\n\n  @author\n\n\n  @date\n    12/11/2019\n */\n/* Include files ================================================================================*/\n#include <stdio.h>\n#include <string.h>\n#include \"m2mb_types.h\"\n\n#include \"m2mb_os_types.h\"\n#include \"m2mb_os_api.h\"\n#include \"m2mb_hwTmr.h\"\n\n#include \"azx_log.h\"\n#include \"azx_utils.h\"\n\n#include \"app_cfg.h\"\n\n\n/* Local defines ================================================================================*/\n/* Each event handler can manage up to 32 events (1 bit each in the bitmask) */\n#define MY_EVENT1_BIT         (UINT32)0x1    /*0x0000000000000001*/\n\n\n/* Local typedefs ===============================================================================*/\n\n/* Local statics ================================================================================*/\n\nstatic M2MB_OS_EV_HANDLE my_evHandle   = NULL;\n\n/* Local function prototypes ====================================================================*/\n/* Static functions =============================================================================*/\nstatic void hwTimerCb( M2MB_HWTMR_HANDLE hwTmrHandle, void *argCb )\n{\n  (void)hwTmrHandle;\n  (void)argCb;\n  AZX_LOG_DEBUG(\"Timer Callback, generate event!\\r\\n\");\n  m2mb_os_ev_set(my_evHandle, MY_EVENT1_BIT, M2MB_OS_EV_SET);\n}\n\n\nint setup_timer(void)\n{\n  M2MB_HWTMR_RESULT_E        hwRes;\n  M2MB_HWTMR_ATTR_HANDLE     tmrHwAttrHandle;\n  M2MB_HWTMR_HANDLE          tmrHwHandle;\n  \n  MEM_W                      argCb = 0;\n\n  /* Create timer attributes */\n  if( (hwRes = m2mb_hwTmr_setAttrItem( &tmrHwAttrHandle, 1, M2MB_HWTMR_SEL_CMD_CREATE_ATTR, NULL ))!= M2MB_HW_SUCCESS )\n  {\n    AZX_LOG_ERROR(\"Create the timer attributes, error %d\\r\\n\", hwRes);\n    return -1;\n\n  }\n\n  /* set timer attributes structure */\n\n  hwRes = m2mb_hwTmr_setAttrItem( &tmrHwAttrHandle,\n      CMDS_ARGS(\n          M2MB_HWTMR_SEL_CMD_CB_FUNC, &hwTimerCb,\n          M2MB_HWTMR_SEL_CMD_ARG_CB, argCb,\n          M2MB_HWTMR_SEL_CMD_TIME_DURATION, 2000000, //set timer timeout to 2 secs (time unit is usecs)\n          M2MB_HWTMR_SEL_CMD_PERIODIC, M2MB_HWTMR_ONESHOT_TMR, //timer is oneshot, will run only once\n          M2MB_HWTMR_SEL_CMD_AUTOSTART, M2MB_HWTMR_NOT_START //do not start automatically\n      )\n  );\n\n  if( hwRes!= M2MB_HW_SUCCESS )\n  {\n    AZX_LOG_ERROR(\"Create the timer attributes, error %d\\r\\n\", hwRes);\n    return -1;\n  }\n  else\n  {\n    AZX_LOG_INFO( \"Set the timer attributes structure success.\\r\\n\" );\n  }\n\n  /* Define the timer and pass the parameters structure to it. */\n  hwRes = m2mb_hwTmr_init( &tmrHwHandle, &tmrHwAttrHandle );\n  if( hwRes!= M2MB_HW_SUCCESS )\n  {\n    /* delete the parameters structure */\n    m2mb_hwTmr_setAttrItem( &tmrHwAttrHandle, 1, M2MB_HWTMR_SEL_CMD_DEL_ATTR, NULL );\n    AZX_LOG_ERROR(\"Delete timer attributes, error %d\\r\\n\", hwRes);\n  }\n  else\n  {\n    AZX_LOG_INFO(\"Timer successfully created\\r\\n\" );\n  }\n\n\n  /* Start the timer */\n  hwRes = m2mb_hwTmr_start( tmrHwHandle );\n  if( hwRes!= M2MB_HW_SUCCESS )\n  {\n    AZX_LOG_ERROR(\"Start the timer, error %d\\r\\n\", hwRes);\n  }\n  else\n  {\n    AZX_LOG_DEBUG(\"Start the timer, success.\\r\\n\" );\n  }\n  return 0;\n}\n\n/* Global functions =============================================================================*/\n\n/*-----------------------------------------------------------------------------------------------*/\n\n/***************************************************************************************************\n   \\User Entry Point of Appzone\n\n   \\param [in] Module Id\n\n   \\details Main of the appzone user\n **************************************************************************************************/\nvoid M2MB_main( int argc, char **argv )\n{\n  (void)argc;\n  (void)argv;\n\n  M2MB_OS_RESULT_E        osRes;\n  M2MB_OS_EV_ATTR_HANDLE  evAttrHandle;\n  UINT32                  curEvBits;\n\n\n\n  azx_sleep_ms(5000);\n\n  /*SET output channel */\n  AZX_LOG_INIT();\n  AZX_LOG_INFO(\"Starting Events demo app. This is v%s built on %s %s.\\r\\n\",\n      VERSION, __DATE__, __TIME__);\n\n  /* Init events handler */\n  osRes  = m2mb_os_ev_setAttrItem( &evAttrHandle, CMDS_ARGS(M2MB_OS_EV_SEL_CMD_CREATE_ATTR, NULL, M2MB_OS_EV_SEL_CMD_NAME, \"my_ev\"));\n  osRes = m2mb_os_ev_init( &my_evHandle, &evAttrHandle );\n\n  if ( osRes!= M2MB_OS_SUCCESS )\n  {\n    m2mb_os_ev_setAttrItem( &evAttrHandle, M2MB_OS_EV_SEL_CMD_DEL_ATTR, NULL );\n    AZX_LOG_CRITICAL(\"m2mb_os_ev_init failed!\\r\\n\");\n    return;\n  }\n  else\n  {\n    AZX_LOG_DEBUG(\"m2mb_os_ev_init success\\r\\n\");\n  }\n\n  /*Create the timer and start it*/\n  if(0 == setup_timer())\n  {\n    /* Then, wait for the event to be generated by timer callback */\n    m2mb_os_ev_get(my_evHandle, MY_EVENT1_BIT, M2MB_OS_EV_GET_ANY_AND_CLEAR, &curEvBits, M2MB_OS_WAIT_FOREVER);\n    /* Waiting for the event to be generated in the hw timer callback function, with EVENT_MYEV1_BIT bitmask.\n     * - To react only after ALL events in a mask occur, use M2MB_OS_EV_GET_ALL_AND_CLEAR option.\n     * - To react to any of the set bits, use M2MB_OS_EV_GET_ANY_AND CLEAR\n     * */\n    AZX_LOG_DEBUG(\"event occurred!\\r\\n\");\n  }\n\n}\n\n",
  "/* A Bison parser, made by GNU Bison 3.0.4. */ /* Bison implementation for Yacc-like parsers in C Copyright (C) 1984, 1989-1990, 2000-2015 Free Software Foundation, Inc. This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. */ /* As a special exception, you may create a larger work that contains part or all of the Bison parser skeleton and distribute that work under terms of your choice, so long as that work isn't itself a parser generator using the skeleton or a modified version thereof as a parser skeleton. Alternatively, if you modify or redistribute the parser skeleton itself, you may (at your option) remove this special exception, which will cause the skeleton and the resulting Bison output files to be licensed under the GNU General Public License without this special exception. This special exception was added by the Free Software Foundation in version 2.2 of Bison. */ /* C LALR(1) parser skeleton written by Richard Stallman, by simplifying the original so-called \"semantic\" parser. */ /* All symbols defined below should begin with yy or YY, to avoid infringing on user name space. This should be done even for local variables, as they might otherwise be expanded by user macros. There are some unavoidable exceptions within include files to define necessary library symbols; they are noted \"INFRINGES ON USER NAME SPACE\" below. */ /* Identify Bison output. */ #define YYBISON 1 /* Bison version. */ #define YYBISON_VERSION \"3.0.4\" /* Skeleton name. */ #define YYSKELETON_NAME \"yacc.c\" /* Pure parsers. */ #define YYPURE 0 /* Push parsers. */ #define YYPUSH 0 /* Pull parsers. */ #define YYPULL 1 /* Copy the first part of user declarations. */ #line 1 \"expressoes.y\" /* yacc.c:339 */ #include <string> #include <stdio.h> #include <stdlib.h> #include <iostream> using namespace std; #define YYSTYPE Atributos int linha = 1; int coluna = 1; string variaveis = \"int \"; struct Atributos { string v; string c; int linha; }; int yylex(); int yyparse(); void yyerror(const char *); string geraNomeVar(); string geraGoTo(); int nVar = 0; int nGoTo = 0; #line 97 \"y.tab.c\" /* yacc.c:339 */ # ifndef YY_NULLPTR # if defined __cplusplus && 201103L <= __cplusplus # define YY_NULLPTR nullptr # else # define YY_NULLPTR 0 # endif # endif /* Enabling verbose error messages. */ #ifdef YYERROR_VERBOSE # undef YYERROR_VERBOSE # define YYERROR_VERBOSE 1 #else # define YYERROR_VERBOSE 0 #endif /* Debug traces. */ #ifndef YYDEBUG # define YYDEBUG 0 #endif #if YYDEBUG extern int yydebug; #endif /* Token type. */ #ifndef YYTOKENTYPE # define YYTOKENTYPE enum yytokentype { CINT = 258, CDOUBLE = 259, TK_ID = 260, TK_VAR = 261, TK_CONSOLE = 262, TK_SHIFTR = 263, TK_SHIFTL = 264, TK_FOR = 265, TK_IN = 266, TK_2PT = 267, TK_IF = 268, TK_THEN = 269, TK_ELSE = 270, TK_ENDL = 271, TK_STR = 272, TK_BEGIN = 273, TK_END = 274 }; #endif /* Tokens. */ #define CINT 258 #define CDOUBLE 259 #define TK_ID 260 #define TK_VAR 261 #define TK_CONSOLE 262 #define TK_SHIFTR 263 #define TK_SHIFTL 264 #define TK_FOR 265 #define TK_IN 266 #define TK_2PT 267 #define TK_IF 268 #define TK_THEN 269 #define TK_ELSE 270 #define TK_ENDL 271 #define TK_STR 272 #define TK_BEGIN 273 #define TK_END 274 /* Value type. */ #if! defined YYSTYPE &&! defined YYSTYPE_IS_DECLARED typedef int YYSTYPE; # define YYSTYPE_IS_TRIVIAL 1 # define YYSTYPE_IS_DECLARED 1 #endif extern YYSTYPE yylval; int yyparse (void); /* Copy the second part of user declarations. */ #line 183 \"y.tab.c\" /* yacc.c:358 */ #ifdef short # undef short #endif #ifdef YYTYPE_UINT8 typedef YYTYPE_UINT8 yytype_uint8; #else typedef unsigned char yytype_uint8; #endif #ifdef YYTYPE_INT8 typedef YYTYPE_INT8 yytype_int8; #else typedef signed char yytype_int8; #endif #ifdef YYTYPE_UINT16 typedef YYTYPE_UINT16 yytype_uint16; #else typedef unsigned short int yytype_uint16; #endif #ifdef YYTYPE_INT16 typedef YYTYPE_INT16 yytype_int16; #else typedef short int yytype_int16; #endif #ifndef YYSIZE_T # ifdef __SIZE_TYPE__ # define YYSIZE_T __SIZE_TYPE__ # elif defined size_t # define YYSIZE_T size_t # elif! defined YYSIZE_T # include <stddef.h> /* INFRINGES ON USER NAME SPACE */ # define YYSIZE_T size_t # else # define YYSIZE_T unsigned int # endif #endif #define YYSIZE_MAXIMUM ((YYSIZE_T) -1) #ifndef YY_ # if defined YYENABLE_NLS && YYENABLE_NLS # if ENABLE_NLS # include <libintl.h> /* INFRINGES ON USER NAME SPACE */ # define YY_(Msgid) dgettext (\"bison-runtime\", Msgid) # endif # endif # ifndef YY_ # define YY_(Msgid) Msgid # endif #endif #ifndef YY_ATTRIBUTE # if (defined __GNUC__ \\ && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__))) \\ || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C # define YY_ATTRIBUTE(Spec) __attribute__(Spec) # else # define YY_ATTRIBUTE(Spec) /* empty */ # endif #endif #ifndef YY_ATTRIBUTE_PURE # define YY_ATTRIBUTE_PURE YY_ATTRIBUTE ((__pure__)) #endif #ifndef YY_ATTRIBUTE_UNUSED # define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__)) #endif #if!defined _Noreturn \\ && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112) # if defined _MSC_VER && 1200 <= _MSC_VER # define _Noreturn __declspec (noreturn) # else # define _Noreturn YY_ATTRIBUTE ((__noreturn__)) # endif #endif /* Suppress unused-variable warnings by \"using\" E. */ #if! defined lint || defined __GNUC__ # define YYUSE(E) ((void) (E)) #else # define YYUSE(E) /* empty */ #endif #if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__ /* Suppress an incorrect diagnostic about yylval being uninitialized. */ # define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \\ _Pragma (\"GCC diagnostic push\") \\ _Pragma (\"GCC diagnostic ignored \\\"-Wuninitialized\\\"\")\\ _Pragma (\"GCC diagnostic ignored \\\"-Wmaybe-uninitialized\\\"\") # define YY_IGNORE_MAYBE_UNINITIALIZED_END \\ _Pragma (\"GCC diagnostic pop\") #else # define YY_INITIAL_VALUE(Value) Value #endif #ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN # define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN # define YY_IGNORE_MAYBE_UNINITIALIZED_END #endif #ifndef YY_INITIAL_VALUE # define YY_INITIAL_VALUE(",
  "#!/usr/bin/env python\n\n# This Source Code Form is subject to the terms of the Mozilla Public\n# License, v. 2.0. If a copy of the MPL was not distributed with this\n# file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\nimport re\nfrom unittestzero import Assert\n\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\n\nfrom pages.desktop.base import Base\nfrom pages.desktop.search import SearchResultList\n\n\nclass Personas(Base):\n\n    _page_title = \"Personas :: Add-ons for Firefox\"\n    _personas_locator = (By.CSS_SELECTOR, 'div.persona.persona-small a')\n    _start_exploring_locator = (By.CSS_SELECTOR, \"#featured-addons.personas-home a.more-info\")\n    _featured_addons_locator = (By.CSS_SELECTOR, \"#featured-addons.personas-home\")\n\n    _featured_personas_locator = (By.CSS_SELECTOR, \".personas-featured.persona.persona-small\")\n    _recently_added_locator = (By.CSS_SELECTOR, \"#personas-created.persona-small\")\n    _most_popular_locator = (By.CSS_SELECTOR, \"#personas-popular.persona-small\")\n    _top_rated_locator = (By.CSS_SELECTOR, \"#personas-rating.persona-small\")\n\n    _persona_header_locator = (By.CSS_SELECTOR, \".featured-inner > h2\")\n\n    @property\n    def persona_count(self):\n        \"\"\"Returns the total number of persona links in the page.\"\"\"\n        return len(self.selenium.find_elements(*self._personas_locator))\n\n    def click_persona(self, index):\n        \"\"\"Clicks on the persona with the given index in the page.\"\"\"\n        self.selenium.find_elements(*self._personas_locator)[index].click()\n        persona_detail = PersonasDetail(self.testsetup)\n        WebDriverWait(self.selenium, 10).until(lambda s: persona_detail.is_title_visible)\n        return persona_detail\n\n    def open_persona_detail_page(self, persona_key):\n        self.selenium.get(self.base_url + \"/addon/%s\" % persona_key)\n        return PersonasDetail(self.testsetup)\n\n    def click_start_exploring(self):\n        self.selenium.find_element(*self._start_exploring_locator).click()\n        return PersonasBrowse(self.testsetup)\n\n    @property\n    def is_featured_addons_present(self):\n        return len(self.selenium.find_elements(*self._featured_addons_locator)) > 0\n\n    @property\n    def featured_personas_count(self):\n        return len(self.selenium.find_elements(*self._featured_personas_locator))\n\n    @property\n    def recently_added_count(self):\n        return len(self.selenium.find_elements(*self._recently_added_locator))\n\n    @property\n    def recently_added_dates(self):\n        iso_dates = self._extract_iso_dates(\"Added %B %d, %Y\", *self._recently_added_locator)\n        return iso_dates\n\n    @property\n    def most_popular_count(self):\n        return len(self.selenium.find_elements(*self._most_popular_locator))\n\n    @property\n    def most_popular_downloads(self):\n        pattern = \"(\\d+(?:[,]\\d+)*)\\s+users\"\n        return self._extract_integers(pattern, *self._most_popular_locator)\n\n    @property\n    def top_rated_count(self):\n        return len(self.selenium.find_elements(*self._top_rated_locator))\n\n    @property\n    def top_rated_ratings(self):\n        pattern = \"Rated\\s+(\\d)\\s+.*\"\n        return self._extract_integers(pattern, *self._top_rated_locator)\n\n    @property\n    def persona_header(self):\n        return self.selenium.find_element(*self._persona_header_locator).text\n\n\nclass PersonasDetail(Base):\n\n    _page_title_regex = '.+ :: Add-ons for Firefox'\n\n    _personas_title_locator = (By.CSS_SELECTOR, 'h2.addon')\n\n    @property\n    def is_the_current_page(self):\n        # This overrides the method in the Page super class.\n        actual_page_title = self.page_title\n        Assert.not_none(re.match(self._page_title_regex, actual_page_title), 'Expected the current page to be the personas detail page.\\n Actual title: %s' % actual_page_title)\n        return True\n\n    @property\n    def is_title_visible(self):\n        return self.is_element_visible(*self._personas_title_locator)\n\n    @property\n    def title(self):\n        return self.selenium.find_element(*self._personas_title_locator).text\n\n\nclass PersonasBrowse(Base):\n\n    _selected_sort_by_locator = (By.CSS_SELECTOR, '#addon-list-options li.selected a')\n    _personas_grid_locator = (By.CSS_SELECTOR, '.featured.listing ul.personas-grid')\n\n    @property\n    def is_the_current_page(self):\n        # This overrides the method in the Page super class.\n        Assert.true(self.is_element_present(*self._personas_grid_locator),\n            'Expected the current page to be the personas browse page.')\n        return True\n\n    @property\n    def sort_key(self):\n        \"\"\"Returns the current value of the sort request parameter.\"\"\"\n        url = self.selenium.current_url\n        return re.search(\"[/][?]sort=(.+)[&]?\", url).group(1)\n\n    @property\n    def sort_by(self):\n        \"\"\"Returns the label of the currently selected sort option.\"\"\"\n        return self.selenium.find_element(*self._selected_sort_by_locator).text\n\nclass PersonasSearchResultList(SearchResultList):\n    _results_locator = (By.CSS_SELECTOR, 'ul.personas-grid div.persona-small')\n\n    class SearchResultItem(SearchResultList.SearchResultItem):\n        _name_locator = (By.CSS_SELECTOR, 'h6 > a')\n\n",
  "/*******************************************************************************\n * QBiC Project Wizard enables users to create hierarchical experiments including different study\n * conditions using factorial design. Copyright (C) \"2016\" Andreas Friedrich\n *\n * This program is free software: you can redistribute it and/or modify it under the terms of the\n * GNU General Public License as published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without\n * even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with this program. If\n * not, see <http://www.gnu.org/licenses/>.\n *******************************************************************************/\npackage life.qbic.projectwizard.views;\n\nimport java.io.File;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map;\nimport org.apache.commons.lang3.tuple.ImmutablePair;\nimport org.apache.commons.lang3.tuple.Pair;\nimport org.apache.logging.log4j.LogManager;\nimport org.apache.logging.log4j.Logger;\nimport org.isatools.isacreator.model.Study;\nimport org.vaadin.hene.flexibleoptiongroup.FlexibleOptionGroup;\nimport org.vaadin.hene.flexibleoptiongroup.FlexibleOptionGroupItemComponent;\nimport com.vaadin.data.Item;\nimport com.vaadin.data.Property.ValueChangeEvent;\nimport com.vaadin.data.Property.ValueChangeListener;\nimport com.vaadin.data.util.IndexedContainer;\nimport com.vaadin.server.ExternalResource;\nimport com.vaadin.server.FileDownloader;\nimport com.vaadin.server.FileResource;\nimport com.vaadin.server.FontAwesome;\nimport com.vaadin.server.Resource;\nimport com.vaadin.ui.Button;\nimport com.vaadin.ui.Component;\nimport com.vaadin.ui.HorizontalLayout;\nimport com.vaadin.ui.Image;\nimport com.vaadin.ui.Label;\nimport com.vaadin.ui.Link;\nimport com.vaadin.ui.ProgressBar;\nimport com.vaadin.ui.UI;\nimport com.vaadin.ui.Upload;\nimport com.vaadin.ui.VerticalLayout;\nimport com.vaadin.ui.Window;\nimport com.vaadin.ui.Button.ClickEvent;\nimport com.vaadin.ui.Button.ClickListener;\nimport com.vaadin.ui.ComboBox;\nimport life.qbic.datamodel.samples.ISampleBean;\nimport life.qbic.expdesign.model.ExperimentalDesignType;\nimport life.qbic.expdesign.model.SampleSummaryBean;\nimport life.qbic.expdesign.model.StructuredExperiment;\nimport life.qbic.projectwizard.control.Functions;\nimport life.qbic.projectwizard.uicomponents.ExperimentSummaryTable;\nimport life.qbic.projectwizard.uicomponents.MissingInfoComponent;\nimport life.qbic.projectwizard.uicomponents.ProjectInformationComponent;\nimport life.qbic.portal.Styles;\nimport life.qbic.portal.Styles.NotificationType;\nimport life.qbic.projectwizard.uicomponents.MultiUploadComponent;\nimport life.qbic.portal.portlet.ProjectWizardUI;\nimport life.qbic.portal.samplegraph.GraphPage;\n\npublic class ExperimentImportView extends VerticalLayout implements IRegistrationView {\n\n  /**\n   * \n   */\n  private static final long serialVersionUID = 5358966181721590658L;\n  private Button register;\n  private FlexibleOptionGroup importOptions;\n  private Map<String, Component> optionToInfoComponent;\n  private VerticalLayout isaBox;\n  private Upload upload;\n  private MultiUploadComponent multiUpload;\n  private MissingInfoComponent questionaire;\n  private ExperimentSummaryTable summary;\n  private Button preview;\n  private List<List<ISampleBean>> samples;\n  private Label registerInfo;\n  private ProgressBar bar;\n  private Button downloadTSV;\n  private ComboBox isaStudyBox;\n\n  private static final Logger logger = LogManager.getLogger(ExperimentImportView.class);\n\n  public ExperimentImportView() {\n    setMargin(true);\n    setSpacing(true);\n\n    this.questionaire = new MissingInfoComponent();\n\n    optionToInfoComponent = new HashMap<>();\n    importOptions = new FlexibleOptionGroup();\n    IndexedContainer cont = new IndexedContainer();\n    cont.addContainerProperty(\"caption\", String.class, null);\n    List<Pair<String, ExperimentalDesignType>> designs = new ArrayList<>();\n    designs.add(new ImmutablePair<>(\"openBIS-based Format\", ExperimentalDesignType.QBIC));\n    designs.add(new ImmutablePair<>(\"Standard QBiC Format\", ExperimentalDesignType.Standard));\n    designs.add(new ImmutablePair<>(\"ISA-Tab\", ExperimentalDesignType.ISA));\n    designs\n       .add(new ImmutablePair<>(\"MHC Ligandomics\", ExperimentalDesignType.MHC_Ligands_Finished));\n    designs.add(new ImmutablePair<>(\"Mass Spec Proteomics\",\n        ExperimentalDesignType.Proteomics_MassSpectrometry));\n    designs.add(new ImmutablePair<>(\"Metabolomics\", ExperimentalDesignType.Metabolomics_LCMS));\n\n    importOptions.setItemCaptionPropertyId(\"caption\");\n    for (Pair<String, ExperimentalDesignType> design : designs) {\n      String caption = design.getLeft();\n      Item item = cont.addItem(caption);\n      item.getItemProperty(\"caption\").setValue(caption);\n      optionToInfoComponent.put(caption,\n          Styles.getPopupViewContaining(createTSVDownloadComponent(design.getRight())));\n    }\n\n    importOptions.setContainerDataSource(cont);\n\n    importOptions.addValueChangeListener(new ValueChangeListener() {\n      @Override\n      public void valueChange(ValueChangeEvent event) {\n        for (Object cl : preview.getListeners(ClickEvent.class))\n          preview.removeClickListener((ClickListener) cl);\n        Object value = importOptions.getValue();\n        enableMultiUpload(\"ISA-Tab\".equals(value));\n        preview.setVisible(\"Standard QBiC Format\".equals(value));\n      }\n    });\n  }\n\n  protected void enableMultiUpload(boolean enable) {\n    isaBox.removeAllComponents();\n    if (enable) {\n\n      Window subWindow = new Window(\" Upload ISA-Tab\");\n      subWindow.setWidth(\"400px\");\n\n      VerticalLayout layout = new VerticalLayout();\n      layout.setSpacing(true);\n      layout.setMargin(true);\n      Label info = new Label(\"Please upload all files belonging to the ISA study.\");\n      layout.addComponent(info);\n      layout.addComponent(multiUpload.getUpload());\n\n      Button ok = new Button(\"Ok\");\n\n      ok.addClickListener(new ClickListener() {\n        @Override\n        public void buttonClick(ClickEvent event) {\n          subWindow.close();\n          layout.removeAllComponents();\n        }\n      });\n      layout.addComponent(ok);\n      isaStudyBox.setVisible(true);\n      isaBox.addComponent(isaStudyBox);\n\n      Resource res =\n          new ExternalResource(ProjectWizardUI.getPathToVaadinFolder() + \"img/isatools.png\");\n      Image imNotYourC_Pal = new Image(null, res);\n      layout.addComponent(imNotYourC_Pal);\n\n      subWindow.setContent(layout);\n      // Center it in the browser window\n      subWindow.center();\n      subWindow.setModal(true);\n      subWindow.setIcon(FontAwesome.TABLE);\n      subWindow.setResizable(false);\n      ProjectWizardUI ui = (ProjectWizardUI) UI.getCurrent();\n      ui.addWindow(subWindow);\n    } else {\n      isaStudyBox.setVisible(false);\n      isaBox.addComponent(upload);\n    }\n  }\n\n  public void initView(Upload upload, MultiUploadComponent multiUpload) {\n    HorizontalLayout optionsInfo = new HorizontalLayout();\n    VerticalLayout optionGroupLayout = new VerticalLayout();\n    Label header = new Label(\"Import Format\");\n    \n    optionGroupLayout.addComponent(header);\n    for (Iterator<FlexibleOptionGroupItemComponent> iter =\n        import",
  "int main() {\n    return 100;\n}\n",
  "# Sync Contacts with SendGrid\n\n**Author**: Twilio (**[https://www.twilio.com](https://www.twilio.com)**)\n\n**Description**: Keeps a Firestore collection of contact data synced with a SendGrid Marketing Campaign contacts list\n\n\n\n**Details**: Use this extension to add, update, or remove contacts from your [SendGrid Marketing Campaigns](https://sendgrid.com/solutions/email-marketing/) contact list based on information added to a specified Cloud Firestore collection.\n\nAdding a document triggers this extension to add a contact to the Marketing Campaigns contact list. Updating a document will update the contact's data and deleting the document will trigger its removal from the contact list in SendGrid.\n\nHere's an example document that would trigger this extension:\n\n```js\nadmin.firestore().collection('contacts').add({\n  email:'someone@example.com',\n  first_name: 'Bob',\n  last_name: 'Bobson'\n});\n```\n\nIn the document you can add any of the following fields to your document and they will be applied to your contact:\n\n| Field                   | type                |              |\n| ----------------------- | ------------------- | ------------ |\n| `email`                 | string              | **required** |\n| `alternate_emails`      | Array<string>       |              |\n| `first_name`            | string              |              |\n| `last_name`             | string              |              |\n| `address_line_1`        | string              |              |\n| `address_line_2`        | string              |              |\n| `city`                  | string              |              |\n| `postal_code`           | string              |              |\n| `state_province_region` | string              |              |\n| `country`               | string              |              |\n| `phone_number`          | string              |              |\n| `whatsapp`              | string              |              |\n| `line`                  | string              |              |\n| `facebook`              | string              |              |\n| `unique_name`           | string              |              |\n| `custom_fields`         | Map<string, string> |              |\n\n`custom_fields` must be defined within your SendGrid account and are a map of the custom field's ID to the content.\n\n#### Additional setup\n\nBefore installing this extension, make sure:\n\n* You have [set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project\n* You have [signed up for a Twilio SendGrid Marketing Campaigns account](https://signup.sendgrid.com/)\n* You have created a SendGrid API Key with access to the Marketing APIs\n\n#### Billing\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service\u2019s free tier:\n  - Cloud Firestore\n  - Cloud Functions (Node.js 10+ runtime. [See FAQs](https://firebase.google.com/support/faq#extensions-pricing))\n  - Cloud Secret Manager\n\nUsage of this extension also requires you to have a [Twilio SendGrid account](https://www.sendgrid.com/) and credentials in order to use the Twilio SendGrid API for marketing campaigns. You are responsible for any associated costs with your usage of Twilio SendGrid.\n\n\n\n\n**Configuration Parameters:**\n\n* Cloud Functions location: Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n* SendGrid API Key: What is your SendGrid API key? It needs to have permission to add contacts to the marketing campaign.\n\n* Contacts documents collection: What is the path to the collection that contains the documents with the contacts details?\n\n\n\n**Cloud Functions:**\n\n* **processQueue:** Processes document changes in the specified Cloud Firestore collection, adds contact data to the contacts list in your SendGrid Marketing Campaign\n\n\n\n**Access Required**:\n\n\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Allows this extension to access Cloud Firestore to read and process added message documents.)\n",
  "const _ = require('koa-route')\nconst Koa = require('koa')\nconst app = new Koa()\nconst { getPolyfill, listPolyfills } = require('./middleware')\nconst LRU = require('quick-lru')\nconst cache = new LRU({ maxSize: 24 })\n\napp.use(async (ctx, next) => {\n  const start = Date.now()\n  await next()\n  const ms = Date.now() - start\n  ctx.set('X-Response-Time', `${ms}ms`)\n})\napp.use(require('koa-compress')())\napp.use(require('koa-cash')({\n  hash: (ctx) => ctx.url + ctx.headers[\"user-agent\"],\n  get: (k) => cache.get(k),\n  set: (k, v) => cache.set(k, v)\n}))\napp.use(_.get(\"/polyfill/v3/polyfill.(min.)?js\", async (ctx) => {\n  ctx.set(\"Cache-Control\", \"public, s-maxage=31536000, max-age=604800, stale-while-revalidate=604800, stale-if-error=604800\")\n  if (await ctx.cashed()) return\n  await getPolyfill(ctx)\n}))\napp.use(_.get(\"/_/list\", listPolyfills))\n\napp.listen(8080)\n",
  "<html lang=\"\"><head>\n    <title>Send emailll\n    </title>\n</head>\n    <body>\n    {{$e_message}}\n    </body>\n</html>",
  "/*\n\tCopyright 2011 MCForge\n\t\n\tDual-licensed under the\tEducational Community License, Version 2.0 and\n\tthe GNU General Public License, Version 3 (the \"Licenses\"); you may\n\tnot use this file except in compliance with the Licenses. You may\n\tobtain a copy of the Licenses at\n\t\n\thttp://www.opensource.org/licenses/ecl2.php\n\thttp://www.gnu.org/licenses/gpl-3.0.html\n\t\n\tUnless required by applicable law or agreed to in writing,\n\tsoftware distributed under the Licenses are distributed on an \"AS IS\"\n\tBASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n\tor implied. See the Licenses for the specific language governing\n\tpermissions and limitations under the Licenses.\n*/\nusing System;\nusing System.Net;\n\nnamespace MCForge {\n\t//derp idk just need to edit this so I can commit :/\n\tpublic static class ServerSettings {\n        /// <summary>\n        /// The url MCForge downloads additional URL's from\n        /// </summary>\n\t\tpublic const string UrlsUrl = \"http://server.mcforge.org/urls.txt\";\n\n\t\tprivate static string _RevisionList = \"http://www.update.mcforge.org/revs.txt\";\n\t\tprivate static string _HeartbeatAnnounce = \"http://server.mcforge.org/hbannounce.php\";\n\t\tprivate static string _ArchivePath = \"http://www.update.mcforge.org/archives/exe/\";\n\n\t\tstatic ServerSettings() {\n\t\t\tusing ( var client = new WebClient() ) {\n\t\t\t\tclient.DownloadStringCompleted += new DownloadStringCompletedEventHandler(client_DownloadStringCompleted);\n\t\t\t\tclient.DownloadStringAsync(new Uri(UrlsUrl));\n\t\t\t}\n\t\t}\n\n\t\tstatic void client_DownloadStringCompleted(object sender, DownloadStringCompletedEventArgs e) {\n\t\t\tif ( e.Cancelled || e.Error!= null ) {\n\t\t\t\tServer.s.Log(\"Error getting urls. Using defaults.\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( e.Result.Split('@').Length!= 3 ) {\n\t\t\t\tServer.s.Log(\"Recieved Malformed data from server...\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstring[] lines = e.Result.Split('@');\n\n\t\t\t_RevisionList = lines[0];\n\t\t\t_HeartbeatAnnounce = lines[1];\n\t\t\t_ArchivePath = lines[2];\n\t\t}\n        /// <summary>\n        /// returns the MCForge archives url\n        /// </summary>\n\t\tpublic static string ArchivePath {\n\t\t\tget {\n\t\t\t\treturn _ArchivePath;\n\t\t\t}\n\t\t}\n        /// <summary>\n        /// returns the MCForge heartbeat announce URL\n        /// </summary>\n\t\tpublic static string HeartbeatAnnounce {\n\t\t\tget {\n\t\t\t\treturn _HeartbeatAnnounce;\n\t\t\t}\n\t\t}\n        /// <summary>\n        ///  returns the MCForge revision list URL\n        /// </summary>\n\t\tpublic static string RevisionList {\n\t\t\tget {\n\t\t\t\treturn _RevisionList;\n\t\t\t}\n\t\t}\n\t}\n}\n",
  "/*\n * Copyright (c) 2021, NVIDIA CORPORATION.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n#pragma once\n\n#ifdef TRITON_ENABLE_GPU\n#include <cuda_runtime_api.h>\n#else\n#include <rapids_triton/cpu_only/cuda_runtime_replacement.hpp>\n#endif\n#include <stdint.h>\n#include <triton/backend/backend_input_collector.h>\n#include <triton/backend/backend_output_responder.h>\n#include <algorithm>\n#include <chrono>\n#include <functional>\n#include <iterator>\n#include <memory>\n#include <numeric>\n#include <rapids_triton/build_control.hpp>\n#include <rapids_triton/exceptions.hpp>\n#include <rapids_triton/memory/buffer.hpp>\n#include <rapids_triton/memory/types.hpp>\n#include <rapids_triton/tensor/tensor.hpp>\n#include <rapids_triton/triton/device.hpp>\n#include <rapids_triton/triton/input.hpp>\n#include <rapids_triton/triton/requests.hpp>\n#include <rapids_triton/triton/responses.hpp>\n#include <rapids_triton/triton/statistics.hpp>\n#include <rapids_triton/utils/narrow.hpp>\n#include <string>\n#include <vector>\n\nnamespace triton {\nnamespace backend {\nnamespace rapids {\n/**\n * @brief A representation of all data about a single batch of inference\n * requests\n *\n * Batch objects are the primary interface point between rapids_triton Models\n * and the Triton server itself. By calling the `get_input` and `get_output`\n * methods of a batch, Model implementations can retrieve the input Tensors\n * necessary for prediction and the output Tensors where results can be\n * stored.\n *\n * Batch objects also handle a variety of other tasks necessary for\n * processing a batch in the Triton model. This includes reporting statistics\n * on how long it took to process requests and sending responses to the\n * client via the Triton server once processing is complete.\n *\n * It is not recommended that developers of rapids_triton backends try to\n * construct Batch objects directly. Instead, you should make use of the\n * rapids::triton_api::execute template, which will construct the Batch for\n * you.\n */\nstruct Batch {\n  using size_type = std::size_t;\n\n  Batch(TRITONBACKEND_Request** raw_requests,\n        request_size_t count,\n        TRITONBACKEND_MemoryManager& triton_mem_manager,\n        std::function<std::vector<size_type>(std::string const&, size_type)>&& get_output_shape,\n        std::function<void(TRITONBACKEND_Request*,\n                           time_point const&,\n                           time_point const&,\n                           time_point const&,\n                           time_point const&)>&& report_request_statistics,\n        bool use_pinned_input,\n        bool use_pinned_output,\n        size_type max_batch_size,\n        cudaStream_t stream)\n    : requests_{raw_requests, raw_requests + count},\n      responses_{construct_responses(requests_.begin(), requests_.end())},\n      get_output_shape_{std::move(get_output_shape)},\n      report_statistics_{std::move(report_request_statistics)},\n      collector_(raw_requests, count, &responses_, &triton_mem_manager, use_pinned_input, stream),\n      responder_{std::make_shared<BackendOutputResponder>(raw_requests,\n                                                          count,\n                                                          &responses_,\n                                                          max_batch_size,\n                                                          &triton_mem_manager,\n                                                          use_pinned_output,\n                                                          stream)},\n      stream_{stream},\n      start_time_{std::chrono::steady_clock::now()},\n      compute_start_time_{std::chrono::steady_clock::now()},\n      batch_size_{}\n  {\n  }\n\n  template <typename T>\n  auto get_input_shape(std::string const& name)\n  {\n    auto result = std::vector<size_type>{};\n    if (!requests_.empty()) {\n      result = get_triton_input_shape<T>(std::begin(requests_), std::end(requests_), name);\n\n      auto input_batch_dim = size_type{};\n      if (result.size() > 0) { input_batch_dim = result[0]; }\n\n      if (batch_size_.has_value()) {\n        if (batch_size_.value()!= input_batch_dim) {\n          throw TritonException(Error::Internal,\n                                \"all input tensors must have same batch dimension\");\n        }\n      } else {\n        batch_size_ = input_batch_dim;\n      }\n    }\n    return result;\n  }\n\n  template <typename T>\n  auto get_input(std::string const& name,\n                 std::optional<MemoryType> const& memory_type,\n                 device_id_t device_id,\n                 cudaStream_t stream)\n  {\n    auto shape = get_input_shape<T>(name);\n    auto size_bytes =\n      sizeof(T) * std::reduce(shape.begin(), shape.end(), std::size_t{1}, std::multiplies<>());\n    auto allowed_memory_configs = std::vector<std::pair<MemoryType, int64_t>>{};\n    if (memory_type.has_value()) {\n      allowed_memory_configs.emplace_back(memory_type.value(), device_id);\n    } else {\n      allowed_memory_configs.emplace_back(HostMemory, int64_t{});\n      allowed_memory_configs.emplace_back(DeviceMemory, device_id);\n    }\n\n    auto const* raw_buffer  = static_cast<char*>(nullptr);\n    auto reported_bytes     = std::size_t{};\n    auto reported_mem_type  = MemoryType{};\n    auto reported_device_id = int64_t{};\n\n    triton_check(\n      collector_.ProcessTensor(name.c_str(),\n                               static_cast<char*>(nullptr),  // Return data without copy if possible\n                               size_bytes,\n                               allowed_memory_configs,\n                               &raw_buffer,\n                               &reported_bytes,\n                               &reported_mem_type,\n                               &reported_device_id));\n\n    if(collector_.Finalize()){\n      if constexpr (IS_GPU_BUILD) {\n        cuda_check(cudaStreamSynchronize(stream_));\n      } else {\n        throw TritonException(Error::Internal, \"stream synchronization required in non-GPU build\");\n      }\n    }\n\n    std::for_each(std::begin(responses_), std::end(responses_), [](auto* response) {\n      if (response == nullptr) {\n        throw TritonException(Error::Internal, \"Input collection failed\");\n      }\n    });\n\n    auto buffer = Buffer(reinterpret_cast<T*>(raw_buffer),\n                         reported_bytes / sizeof(T),\n                         reported_mem_type,\n                         reported_device_id,\n                         stream);\n\n    if (memory_type && (reported_mem_type!= memory_type || reported_device_id!= device_id)) {\n      throw TritonException(Error::Internal, \"data collected in wrong location\");\n    }\n\n    // Set start time of batch to time latest input tensor was retrieved\n    compute_start_time_ = std::chrono::steady_clock::now();\n\n    return Tensor(std::move(shape), std::move(buffer));\n  }\n\n  template <typename T>\n  auto get_input(std::string const& name,\n                 std::optional<MemoryType> const&",
  "<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Role;\nuse App\\User;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\DB;\nuse Illuminate\\Support\\Facades\\Hash;\nuse Illuminate\\Support\\Facades\\Log;\nuse App\\Traits\\StorageImageTrait;\n\nclass AdminUserController extends Controller\n{\n    private $user;\n    private $role;\n    use StorageImageTrait;\n    public function __construct(User $user,Role $role)\n    {\n        $this->user = $user;\n        $this->role = $role;\n    }\n\n    public function index()\n    {\n        $users = $this->user->paginate(5);\n        return view('admin.user.index',compact('users'));\n\n    }\n    \n   \n    public function create()\n    {\n        $roles = $this->role->all();\n        return view('admin.user.add',compact('roles'));\n    }\n    public function store(Request $request)\n    {\n        try {\n            DB::beginTransaction();\n            $user = [\n                'name' => $request->name,\n                'username' => $request->username,\n                'password' => md5($request->password)\n            ];\n            $dataUploadFeatureImage = $this->storageTraitUpload($request,'feature_image_path','user');\n            if (!empty($dataUploadFeatureImage)) {\n                //$user['feature_image_name'] = $dataUploadFeatureImage['file_name'];\n                $user['feature_image_path'] = $dataUploadFeatureImage['file_path'];\n            }\n            $user = $this->user->create($user);\n            $user->roles()->attach($request->role_id);\n            DB::commit();\n            return redirect()->route('users.index');\n        } catch (\\Exception $th) {\n            DB::rollBack();\n            Log::error(\"loi: \". $th->getMessage(). \"dong \". $th->getLine());\n        }\n    }\n    \n    public function edit($id){\n        $user = $this->user->find($id);\n        $roles = $this->role->all();\n        $roleOfUser = $user->roles;\n        return view('admin.user.edit', compact('user','roles','roleOfUser'));\n    }\n    \n    public function update($id,Request $request){\n        try {\n            DB::beginTransaction();\n            $user =[\n                'name' => $request->name,\n                'username' => $request->username,\n                'password' => md5($request->password)\n            ];\n            $dataUploadFeatureImage = $this->storageTraitUpload($request,'feature_image_path','product');\n            if (!empty($dataUploadFeatureImage)) {\n                //$dataProductUpdate['feature_image_name'] = $dataUploadFeatureImage['file_name'];\n                $user['feature_image_path'] = $dataUploadFeatureImage['file_path'];\n            }\n\n            \n            $this->user->find($id)->update($user);\n            $user = $this->user->find($id);\n            $user->roles()->sync($request->role_id);\n            DB::commit();\n            return redirect()->route('users.index');\n        } catch (\\Exception $th) {\n            DB::rollBack();\n            Log::error(\"loi: \". $th->getMessage(). \"dong \". $th->getLine());\n        }\n\n    }\n    public function delete($id){\n        try {\n            $this->user->find($id)->delete();\n            return response()->json([\n                'code' => 200,\n               'message' =>'success',\n            ]);\n            \n        } catch (\\Exception $th) {\n            Log::error('Message'.$th->getMessage().'Line: '. $th->getLine());\n            return response()->json([\n                'code' => 500,\n               'message' => 'failed',\n            ]);\n        }\n    }\n}",
  "# localCredit\nRecarga de creditos\n",
  "<?php\n\n/*\n|--------------------------------------------------------------------------\n| Web Routes\n|--------------------------------------------------------------------------\n|\n| Here is where you can register web routes for your application. These\n| routes are loaded by the RouteServiceProvider within a group which\n| contains the \"web\" middleware group. Now create something great!\n|\n*/\n\n//\u30aa\u30ea\u30b8\u30ca\u30eb\nRoute::get('/', function () {\n    return view('welcome');\n});\nRoute::get('/home', 'HomeController@index')->name('home');\nAuth::routes();\n\n//\u30d5\u30ed\u30f3\u30c8\u753b\u9762\nRoute::namespace('Front')->as('front.')->group(function() {\n\t//\u65e5\u5831\n\tRoute::prefix('report')->group(function() {\n\t    Route::get('/', 'ReportController@index')->name('report');\n\t    Route::redirect('/send', 'ReportController@back');\n\t\tRoute::post('/send', 'ReportController@send');\n\t\tRoute::get('/complete', 'ReportController@complete');\n\t});\n});\n\n//\u7ba1\u7406\u753b\u9762\nRoute::prefix('admin')->namespace('Back')->as('back.')->group(function() {\n\t//\u30b7\u30d5\u30c8\u7ba1\u7406\n\tRoute::prefix('shift')->group(function() {\n    \tRoute::get('/', 'ShiftController@index')->name('shift');\n    \tRoute::post('/confirm', 'ShiftController@confirm')->name('shift.confirm');\n    \tRoute::get('/store', 'ShiftController@store')->name('shift.store');\n    });\n});\n\nRoute::get('/test', 'testController@handle');",
  "import { Course } from '../typings/course'\n\nimport { ApiService } from './ApiService'\n\nconst COURSES_ENDPOINT = 'courses'\nconst MOCK_COURSES: Course[] = [\n  {\n    courseCode: 'CZ3001',\n    courseTitle: 'HCI',\n    numStudents: 0,\n    numTutors: 1,\n  },\n  {\n    courseCode: 'LB1423',\n    courseTitle: 'wad',\n    numStudents: 3,\n    numTutors: 1,\n  },\n  {\n    courseCode: 'MH9823',\n    courseTitle:'meth and math',\n    numStudents: 40,\n    numTutors: 1,\n  },\n]\n\nexport const getAllCourses = (): Promise<Course[]> => {\n  return ApiService.post(COURSES_ENDPOINT)\n   .then(({ data }) => data)\n   .catch(() => MOCK_COURSES)\n}\n",
  "/* Copyright 2016 The Chromium OS Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n/* System module ISH (Not implemented) */\n\n#include \"clock.h\"\n#include \"common.h\"\n#include \"console.h\"\n#include \"cpu.h\"\n#include \"gpio.h\"\n#include \"host_command.h\"\n#include \"registers.h\"\n#include \"shared_mem.h\"\n#include \"system.h\"\n#include \"hooks.h\"\n#include \"task.h\"\n#include \"timer.h\"\n#include \"util.h\"\n#include \"spi.h\"\n\n/* Indices for hibernate data registers (RAM backed by VBAT) */\nenum hibdata_index {\n\tHIBDATA_INDEX_SCRATCHPAD = 0,    /* General-purpose scratchpad */\n\tHIBDATA_INDEX_SAVED_RESET_FLAGS  /* Saved reset flags */\n};\n\nint system_is_reboot_warm(void)\n{\n\treturn 0;\n}\n\nvoid system_pre_init(void)\n{\n}\n\nvoid chip_save_reset_flags(int flags)\n{\n}\n\nuint32_t chip_read_reset_flags(void)\n{\n\treturn 0;\n}\n\nvoid _system_reset(int flags, int wake_from_hibernate)\n{\n\t/*\n\t * ISH HW looks at the rising edge of this bit to\n\t * trigger a MIA reset.\n\t */\n\tISH_RST_REG = 0;\n\tISH_RST_REG = 1;\n}\n\nvoid system_reset(int flags)\n{\n\t_system_reset(flags, 0);\n\twhile(1)\n\t\t;\n}\n\nconst char *system_get_chip_vendor(void)\n{\n\treturn \"intel\";\n}\n\nconst char *system_get_chip_name(void)\n{\n\treturn \"intel\";\n}\n\nstatic char to_hex(int x)\n{\n\tif (x >= 0 && x <= 9)\n\t\treturn '0' + x;\n\treturn 'a' + x - 10;\n}\n\nconst char *system_get_chip_revision(void)\n{\n\tstatic char buf[3];\n\tuint8_t rev = 0x86;\n\n\tbuf[0] = to_hex(rev / 16);\n\tbuf[1] = to_hex(rev & 0xf);\n\tbuf[2] = '\\0';\n\treturn buf;\n}\n\nint system_get_bbram(enum system_bbram_idx idx, uint8_t *value)\n{\n\treturn EC_ERROR_UNIMPLEMENTED;\n}\n\nint system_set_bbram(enum system_bbram_idx idx, uint8_t value)\n{\n\treturn EC_ERROR_UNIMPLEMENTED;\n}\n\nint system_set_scratchpad(uint32_t value)\n{\n\treturn EC_SUCCESS;\n}\n\nuint32_t system_get_scratchpad(void)\n{\n\treturn 0;\n}\n\nvoid system_hibernate(uint32_t seconds, uint32_t microseconds)\n{\n}\n\nvoid htimer_interrupt(void)\n{\n\t/* Time to wake up */\n}\n\nenum system_image_copy_t system_get_shrspi_image_copy(void)\n{\n\treturn 0;\n}\n\nuint32_t system_get_lfw_address(void)\n{\n\treturn 0;\n}\n\nvoid system_set_image_copy(enum system_image_copy_t copy)\n{\n}\n",
  "/**\n * Several functions in this file are based off the html-manager in jupyter-widgets project -\n * https://github.com/jupyter-widgets/ipywidgets/blob/master/packages/html-manager/src/libembed-amd.ts\n */\n\nimport * as base from \"@jupyter-widgets/base\";\nimport * as controls from \"@jupyter-widgets/controls\";\n\nconst requireJSMissingErrorMessage = \"Requirejs is needed, please ensure it is loaded on the page. Docs - https://requirejs.org/docs/api.html\";\nlet cdn = \"https://unpkg.com\";\n\n/**\n * Constructs a well formed module URL for requireJS \n * mapping the modulename and version from the base CDN URL\n * @param moduleName Name of the module corresponding to the widget package\n * @param moduleVersion Module version returned from kernel\n */\nfunction moduleNameToCDNUrl(moduleName: string, moduleVersion: string): string {\n  let packageName = moduleName;\n  let fileName = \"index.js\"; // default filename\n  // if a '/' is present, like 'foo/bar', packageName is changed to 'foo', and path to 'bar'\n  // We first find the first '/'\n  let index = moduleName.indexOf('/');\n  if (index!== -1 && moduleName[0] === '@') {\n    // if we have a namespace, it's a different story\n    // @foo/bar/baz should translate to @foo/bar and baz\n    // so we find the 2nd '/'\n    index = moduleName.indexOf('/', index + 1);\n  }\n  if (index!== -1) {\n    fileName = moduleName.substr(index + 1);\n    packageName = moduleName.substr(0, index);\n  }\n  const moduleNameString = moduleVersion? `${packageName}@${moduleVersion}` : packageName;\n  return `${cdn}/${moduleNameString}/dist/${fileName}`;\n}\n\n/**\n * Load a package using requirejs and return a promise\n *\n * @param pkg Package name or names to load\n */\nfunction requirePromise(pkg: string | string[]): Promise<any> {\n  return new Promise((resolve, reject) => {\n    const require = (window as any).requirejs;\n    if (require === undefined) {\n      reject(requireJSMissingErrorMessage);\n    }\n    else {\n      // tslint:disable-next-line: non-literal-require\n      require(pkg, resolve, reject);\n    }\n  });\n};\n\n/**\n * Initialize dependencies that need to be preconfigured for requireJS module loading\n * Here, we define the jupyter-base, controls package that most 3rd party widgets depend on\n */\nexport function initRequireDeps(){\n  // Export the following for `requirejs`.\n  // tslint:disable-next-line: no-any no-function-expression no-empty\n  const define = (window as any).define || function () {};\n  define(\"@jupyter-widgets/controls\", () => controls);\n  define(\"@jupyter-widgets/base\", () => base);\n}\n\n/**\n * Overrides the default CDN base URL by querying the DOM for script tags\n * By default, the CDN service used is unpkg.com. However, this default can be\n * overriden by specifying another URL via the HTML attribute\n * \"data-jupyter-widgets-cdn\" on a script tag of the page.\n */\nexport function overrideCDNBaseURL(){\n  // find the data-cdn for any script tag\n  const scripts = document.getElementsByTagName(\"script\");\n  Array.prototype.forEach.call(scripts, (script: HTMLScriptElement) => {\n    cdn = script.getAttribute(\"data-jupyter-widgets-cdn\") || cdn;\n  });\n  // Remove Single/consecutive trailing slashes from the URL to sanitize it\n  cdn = cdn.replace(/\\/+$/, \"\");\n}\n\n/**\n * Load an amd module from a specified CDN\n *\n * @param moduleName The name of the module to load.\n * @param moduleVersion The semver range for the module, if loaded from a CDN.\n *\n * By default, the CDN service used is unpkg.com. However, this default can be\n * overriden by specifying another URL via the HTML attribute\n * \"data-jupyter-widgets-cdn\" on a script tag of the page.\n *\n * The semver range is only used with the CDN.\n */\nexport function requireLoader(moduleName: string, moduleVersion: string): Promise<any> {\n  const require = (window as any).requirejs;\n  if (require === undefined) {\n    return Promise.reject(new Error(requireJSMissingErrorMessage));\n  }\n  else {\n    const conf: { paths: { [key: string]: string } } = { paths: {} };\n    const moduleCDN = moduleNameToCDNUrl(moduleName, moduleVersion);\n    conf.paths[moduleName] = moduleCDN;\n    require.config(conf);\n    return requirePromise([moduleCDN]);\n  }\n}\n",
  "<?php\n\nnamespace App;\n\nuse Illuminate\\Contracts\\Auth\\MustVerifyEmail;\nuse Illuminate\\Foundation\\Auth\\User as Authenticatable;\nuse Illuminate\\Notifications\\Notifiable;\nuse Illuminate\\Support\\Str;\nuse App\\Models\\Status;\n\nclass User extends Authenticatable\n{\n    use Notifiable;\n\n    //\u6307\u5b9a\u6570\u636e\u5e93\u8868\n    protected $table = 'users';\n\n    //$fillable \u8fc7\u6ee4\u7528\u6237\u63d0\u4ea4\u7684\u5b57\u6bb5\uff0c\u53ea\u6709\u5305\u542b\u5728\u8be5\u5c5e\u6027\u4e2d\u7684\u5b57\u6bb5\u624d\u80fd\u591f\u88ab\u6b63\u5e38\u66f4\u65b0\n    protected $fillable = [\n        'name', 'email', 'password',\n    ];\n\n    //$hidden \u9690\u85cf\u5b57\u6bb5\n    protected $hidden = [\n        'password','remember_token',\n    ];\n\n    //$casts \u5728\u8bbf\u95ee\u65f6\u5c06\u67d0\u5217\u8f6c\u4e3a\u53e6\u4e00\u79cd\u7c7b\u578b\uff0c\u5982\u4e0b\u5c06users\u8868\u683cemail_verified_at\u5217\u7684\u5b57\u6bb5\u8f6c\u4e3adatetime\n    protected $casts = [\n        'email_verified_at' => 'datetime',\n    ];\n\n\n    public function gravatar($size = '100'){\n        //$this->attributes['email'] \u83b7\u53d6\u5230\u7528\u6237\u7684\u90ae\u7bb1\uff1b\n        //\u4f7f\u7528 trim \u65b9\u6cd5\u5254\u9664\u90ae\u7bb1\u7684\u524d\u540e\u7a7a\u767d\u5185\u5bb9\uff1b\n        //\u7528 strtolower \u65b9\u6cd5\u5c06\u90ae\u7bb1\u8f6c\u6362\u4e3a\u5c0f\u5199\n        $hash = md5(strtolower(trim($this->attributes['email'])));\n        return \"http://www.gravatar.com/avatar/$hash?s=$size\";\n    }\n\n    public static function boot(){\n\n        //\u5148\u6267\u884c\u7236\u7c7b\u7684\u4ee3\u7801\uff0c\u540e\u9762\u6267\u884c\u81ea\u5df1\u91cd\u5199\u7684\u4ee3\u7801\n        //parent::\u8c03\u7528\u7236\u7c7b\u65b9\u6cd5; \n        parent::boot();\n\n        //\u76d1\u542c\uff0c\u521b\u5efaactivation_token\n        static::creating(function($user){\n            $user->activation_token = Str::random(10);\n        });\n    }\n\n    public function statuses(){\n        return $this->hasMany(Status::class);\n    }\n\n    public function feed(){\n\n        // return $this->statuses()->orderBy('created_at', 'desc');\n\n        $user_ids = $this->followings->pluck('id')->toArray();\n        array_push($user_ids, $this->id);//\u5c06\u5f53\u524d\u7528\u6237\u7684 id \u52a0\u5165\u5230 user_ids \u6570\u7ec4\u4e2d\n        //with \u65b9\u6cd5\uff0c\u9884\u52a0\u8f7d\u907f\u514d\u4e86 N+1 \u67e5\u627e\u7684\u95ee\u9898\n        return Status::whereIn('user_id', $user_ids)->with('user')->orderBy('created_at', 'desc');\n        \n    }\n\n\n    //user_id \u548c follower_id \u90fd\u662f user \u7684\u4e3b\u952e ID\uff0c\u53ea\u662f\u5728\u903b\u8f91\u4e0a\uff0cuser_id \u8868\u793a\u88ab\u5173\u6ce8\u4eba\uff0cfollower_id \u8868\u793a\u88ab\u5173\u6ce8\u4eba\u7684\u7c89\u4e1d\uff0cfollowers \u8868\u4f5c\u4e3a\u4e2d\u95f4\u8868\u5b58\u50a8\u4e86\u8fd9\u4e2a\u5173\u7cfb\uff0c\u5b83\u7684\u4e24\u4e2a\u5173\u8054\u8868\u6070\u597d\u662f\u540c\u4e00\u4e2a\u8868\uff0c\u5373 user \u8868\n    public function followers(){\n        return $this->belongsTomany(User::class, 'followers', 'user_id', 'follower_id');\n    }\n\n    public function followings(){\n        //\u7b2c\u4e8c\u4e2a\u53c2\u6570\u81ea\u5b9a\u4e49\u5173\u8054\u5173\u7cfb\u8868\u540d\u79f0\uff0c\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u5b9a\u4e49\u5728\u5173\u8054\u4e2d\u7684\u6a21\u578b\u5916\u952e\u540d\uff0c\u800c\u7b2c\u56db\u4e2a\u53c2\u6570\u5219\u662f\u8981\u5408\u5e76\u7684\u6a21\u578b\u5916\u952e\u540d\n        return $this->belongsTomany(User::class, 'followers', 'follower_id', 'user_id');\n    }\n\n    //\u5173\u6ce8\n    public function follow($user_ids){\n        if (! is_array($user_ids)){\n            $user_ids = compact('user_ids');\n        }\n        //$user->followings()\u83b7\u53d6\u7528\u6237\u5173\u6ce8\u4eba\u5217\u8868\n        $this->followings()->sync($user_ids, false);\n    }\n\n    //\u53d6\u6d88\u5173\u6ce8\n    public function unfollow($user_ids){\n        if (! is_array($user_ids)){\n            $user_ids = compact('user_ids');\n        }\n        $this->followings()->detach($user_ids);\n    }\n\n    public function isFollowing($user_id){\n        //$user->followings \u540c\u7b49\u4e8e $user->followings()->get() \u8fd4\u56de\u7684\u662f\u4e00\u4e2a Collection \u7c7b\u7684\u5b9e\u4f8b\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u96c6\u5408\uff0ccontains \u65b9\u6cd5\u662f Collection \u7c7b\u7684\u4e00\u4e2a\u65b9\u6cd5\n        //$user->followings() \u8fd4\u56de\u7684\u662f\u4e00\u4e2a HasMany \u5bf9\u8c61\n        return $this->followings->contains($user_id);\n    }\n\n\n}\n",
  "/*:\n * Address mappings and base address for OMAP5 interconnects\n * and peripherals.\n *\n * Copyright (C) 2012 Texas Instruments\n *\tSantosh Shilimkar <santosh.shilimkar@ti.com>\n *\tSricharan <r.sricharan@ti.com>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 2 as\n * published by the Free Software Foundation.\n */\n#ifndef __ASM_SOC_OMAP54XX_H\n#define __ASM_SOC_OMAP54XX_H\n\n/*\n * Please place only base defines here and put the rest in device\n * specific headers.\n */\n#define L4_54XX_BASE\t\t\t0x4a000000\n#define L4_WK_54XX_BASE\t\t\t0x4ae00000\n#define L4_PER_54XX_BASE\t\t0x48000000\n#define L3_54XX_BASE\t\t\t0x44000000\n#define OMAP54XX_32KSYNCT_BASE\t\t0x4ae04000\n#define OMAP54XX_CM_CORE_AON_BASE\t0x4a004000\n#define OMAP54XX_CM_CORE_BASE\t\t0x4a008000\n#define OMAP54XX_PRM_BASE\t\t0x4ae06000\n#define OMAP54XX_PRCM_MPU_BASE\t\t0x48243000\n#define OMAP54XX_SCM_BASE\t\t0x4a002000\n#define OMAP54XX_CTRL_BASE\t\t0x4a002800\n#define OMAP54XX_SAR_RAM_BASE\t\t0x4ae26000\n\n/* DRA7 specific base addresses */\n#define L3_MAIN_SN_DRA7XX_BASE\t\t0x44000000\n#define L4_PER1_DRA7XX_BASE\t\t0x48000000\n#define L4_CFG_MPU_DRA7XX_BASE\t\t0x48210000\n#define L4_PER2_DRA7XX_BASE\t\t0x48400000\n#define L4_PER3_DRA7XX_BASE\t\t0x48800000\n#define L4_CFG_DRA7XX_BASE\t\t0x4A000000\n#define L4_WKUP_DRA7XX_BASE\t\t0x4ae00000\n#define DRA7XX_CM_CORE_AON_BASE\t\t0x4a005000\n#define DRA7XX_CTRL_BASE\t\t0x4a003400\n#define DRA7XX_TAP_BASE\t\t\t0x4ae0c000\n\n#endif /* __ASM_SOC_OMAP555554XX_H */\n",
  "#include \"stdafx.h\"\n#include \"windows.h\"\n#include \"iostream\"\nusing namespace std;\n\n\n#define BUFF_SIZE\t65536\n\nDWORD WINAPI ThreadProc(PVOID pParam)\n{\n\tPCTSTR* parFiles = (PCTSTR*)pParam;\n\tDWORD   hr = 0;\n\n\tHANDLE hSrcFile = INVALID_HANDLE_VALUE;\n\tHANDLE hDstFile = INVALID_HANDLE_VALUE;\n\n\ttry\n\t{\n\t\thSrcFile = CreateFile\n\t\t(\n\t\t\tparFiles[0], GENERIC_READ, 0, NULL,\n\t\t\tOPEN_EXISTING, 0, NULL\n\t\t);\n\t\tif (hSrcFile == INVALID_HANDLE_VALUE)\n\t\t\tthrow GetLastError();\n\t\tLARGE_INTEGER llSize;\n\t\tGetFileSizeEx(hSrcFile, &llSize);\n\n\t\tHANDLE hDstFile = CreateFile\n\t\t(\n\t\t\tparFiles[1], GENERIC_WRITE, 0, NULL,\n\t\t\tCREATE_ALWAYS, 0, NULL\n\t\t);\n\t\tif (hDstFile == INVALID_HANDLE_VALUE)\n\t\t\tthrow GetLastError();\n\n\t\tPLONG plReason = (PLONG)parFiles[2];\n\t\tBYTE  btBuff[BUFF_SIZE];\n\n\t\tLONGLONG llCopied = 0LL;\n\t\twhile (llCopied < llSize.QuadPart)\n\t\t{\n\t\t\tDWORD dwReadBytes = 0;\n\t\t\tBOOL bIsOK = ReadFile\n\t\t\t(\n\t\t\t\thSrcFile, btBuff, sizeof(btBuff),\n\t\t\t\t&dwReadBytes, NULL\n\t\t\t);\n\t\t\tif (!bIsOK)\n\t\t\t\tthrow GetLastError();\n\n\t\t\tDWORD dwWroteBytes = 0;\n\t\t\tbIsOK = WriteFile\n\t\t\t(\n\t\t\t\thDstFile, btBuff, dwReadBytes,\n\t\t\t\t&dwWroteBytes, NULL\n\t\t\t);\n\t\t\tif (!bIsOK)\n\t\t\t\tthrow GetLastError();\n\t\t\tllCopied += dwWroteBytes;\n\t\t\tint nRate = (int)(llCopied * 100LL / llSize.QuadPart);\n\t\t\tprintf(\"....File %d%% copied: %I64d bytes\\n\", nRate, llCopied);\n\n\t\t\tif (*plReason!= 0)\n\t\t\t\tthrow (DWORD)ERROR_OPERATION_ABORTED;\n\t\t}\n\t}\n\tcatch (DWORD ex)\n\t{\n\t\thr = ex;\n\t}\n\tif (hSrcFile!= INVALID_HANDLE_VALUE)\n\t\tCloseHandle(hSrcFile);\n\tif (hDstFile!= INVALID_HANDLE_VALUE)\n\t\tCloseHandle(hDstFile);\n\n\treturn hr;\n}\n\nvoid _tmain(int argc, _TCHAR* argv[])\n{\n\tif (argc < 3)\n\t{\n\t\tcout << \"Usage : FileCopyThread SourceFile TargetFile\" << endl;\n\t\treturn;\n\t}\n\n\tLONG lReason = 0;\n\tPCTSTR arpArgs[3] = { argv[1], argv[2], (PCTSTR)&lReason };\n\tDWORD dwThrID = 0;\n\tHANDLE hThread = CreateThread(NULL, 0, ThreadProc, arpArgs, 0, &dwThrID);\n\n\tgetchar();\n\tlReason = 1;\n\tWaitForSingleObject(hThread, INFINITE);\n\n\tDWORD hr = 0;\n\tGetExitCodeThread(hThread, &hr);\n\tCloseHandle(hThread);\n\n\tif (hr!= ERROR_SUCCESS)\n\t{\n\t\tif (hr == ERROR_OPERATION_ABORTED)\n\t\t\tcout << \"File copy aboarted by user...\" << endl;\n\t\telse\n\t\t\tcout << \"Error occurred in file copying, code=\" << hr << endl;\n\t}\n\telse\n\t\tcout << endl << \"File copy successfully completed...\" << endl;\n}\n",
  "from __future__ import unicode_literals\n\nfrom django.conf.urls import url\n\nfrom.views import (StartView, MessageSendView, MessageSenderConfirmationSentView, MessageSenderConfirmationView,\n                    MessageSenderConfirmedView, MessageRecipientMessageUpdate, FaqView, ArchiveView, ArchiveLoadMoreView, BlacklistEmailView)\n\nurlpatterns = [\n    url(r'^$', StartView.as_view(), name='start'),\n    url(r'^faq/$', FaqView.as_view(), name='faq'),\n    url(r'^archive/$', ArchiveView.as_view(), name='archive'),\n    url(r'^blacklist-email/(?P<email>[\\w\\.@\\+-]+)/(?P<digest>\\w+)/$', BlacklistEmailView.as_view(), name='blacklist_email'),\n    url(r'^send/$', MessageSendView.as_view(), name='send'),\n    url(r'^send/confirmation-sent/$', MessageSenderConfirmationSentView.as_view(), name='sender_confirmation_sent'),\n    url(r'^send/confirmation/(?P<identifier>[\\w-]+)/(?P<token>[\\w-]+)/$', MessageSenderConfirmationView.as_view(), name='sender_confirm'),\n    url(r'^send/confirmed/$', MessageSenderConfirmedView.as_view(), name='sender_confirmed'),\n    url(r'^recipient/(?P<identifier>[\\w-]+)/(?P<token>[\\w-]+)/$', MessageRecipientMessageUpdate.as_view(), name='recipient_message_update'),\n    url(r'^archive/load-more/$', ArchiveLoadMoreView.as_view(), name='archive_more_content'),\n]\n",
  "package eoscli\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/eolinker/eosc/env\"\n\t\"github.com/urfave/cli/v2\"\n)\n\nfunc Restart() *cli.Command {\n\treturn &cli.Command{\n\t\tName:  \"restart\",\n\t\tUsage: fmt.Sprintf(\"restart %s server\", env.AppName()),\n\n\t\tAction: RestartFunc,\n\t}\n}\n\nfunc RestartFunc(c *cli.Context) error {\n\t// \u5148check\u63d2\u4ef6\u7248\u672c\u662f\u5426\u5b58\u5728\uff0c\u82e5\u4e0d\u5b58\u5728\uff0c\u5219\u5148\u4e0b\u8f7d\u63d2\u4ef6\u540e\u624d\u80fd\u6267\u884crestart\n\n\treturn restartProcess()\n}\n",
  "## \u9898\u76ee\n\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u6570\u7ec4\uff0ca1, a2,..., an, \u548c\u4e00\u4e2a\u76ee\u6807\u6570\uff0cS\u3002\u73b0\u5728\u4f60\u6709\u4e24\u4e2a\u7b26\u53f7 + \u548c -\u3002\u5bf9\u4e8e\u6570\u7ec4\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u6574\u6570\uff0c\u4f60\u90fd\u53ef\u4ee5\u4ece + \u6216 -\u4e2d\u9009\u62e9\u4e00\u4e2a\u7b26\u53f7\u6dfb\u52a0\u5728\u524d\u9762\u3002\n\n\u8fd4\u56de\u53ef\u4ee5\u4f7f\u6700\u7ec8\u6570\u7ec4\u548c\u4e3a\u76ee\u6807\u6570 S \u7684\u6240\u6709\u6dfb\u52a0\u7b26\u53f7\u7684\u65b9\u6cd5\u6570\u3002\n\n**\u793a\u4f8b1**\n```\n\u8f93\u5165: nums: [1, 1, 1, 1, 1], S: 3\n\u8f93\u51fa: 5\n\u89e3\u91ca: \n\n-1+1+1+1+1 = 3\n+1-1+1+1+1 = 3\n+1+1-1+1+1 = 3\n+1+1+1-1+1 = 3\n+1+1+1+1-1 = 3\n\n\u4e00\u5171\u67095\u79cd\u65b9\u6cd5\u8ba9\u6700\u7ec8\u76ee\u6807\u548c\u4e3a3\u3002\n```\n\n**\u8bf4\u660e**\n\n* \u6570\u7ec4\u975e\u7a7a\uff0c\u4e14\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc720\u3002\n* \u521d\u59cb\u7684\u6570\u7ec4\u7684\u548c\u4e0d\u4f1a\u8d85\u8fc71000\u3002\n* \u4fdd\u8bc1\u8fd4\u56de\u7684\u6700\u7ec8\u7ed3\u679c\u80fd\u88ab32\u4f4d\u6574\u6570\u5b58\u4e0b\u3002\n\n## \u4ee3\u7801(dfs)\n```C++\nclass Solution {\npublic:\n    int way = 0;\n    int target = 0;\n    vector<int> data;\n    int findTargetSumWays(vector<int>& nums, int S) {\n        data = vector<int>(1,0);\n        data.insert(data.end(),nums.begin(),nums.end());\n        target = S;\n        findTargetSumWays(1, 0);\n        return way;\n    }\n    void findTargetSumWays(int index, int current) {\n        if(index < data.size()){\n            findTargetSumWays(index+1, current+data[index]);\n            findTargetSumWays(index+1, current-data[index]);\n        }else{\n            if(current == target){\n                way++;\n            }\n        }\n    }\n};\n```\n\n## \u4ee3\u7801(dp)\n```C++\nclass Solution {\npublic:\n    int findTargetSumWays(vector<int>& nums, int S) {\n        int sum = accumulate(nums.begin(),nums.end(),0);\n        if(sum < S || (S + sum) % 2 == 1){\n            return 0;\n        }\n        int p = (S + sum) / 2;\n        vector<int> dp(p+1,0);\n        dp[0] = 1;\n        for(int i = 0;i < nums.size();i++){\n            for(int j = p;j >= nums[i];j--){\n                dp[j] += dp[j - nums[i]];\n            }\n        }\n        return dp[p];\n    }\n\n};\n```\n\n## \u601d\u8def\n\n### \u89e3\u6cd51\n\u8fd9\u9898\u5f88\u81ea\u7136\u7684\u60f3\u6cd5\u5c31\u662fdfs\u66b4\u529b\u8ba1\u7b97\uff0c\u5199\u8d77\u6765\u4e5f\u5f88\u5bb9\u6613\u3002\u53ef\u4ee5\u5728\u6570\u7ec4\u524d\u9762\u6dfb\u52a0\u4e00\u4e2a0\u6765\u6ee1\u8db3\u7b2c\u4e00\u4e2a\u6570\u5b57\u53ef\u4ee5\u4e3a\u6b63\u8d1f\u6570\uff0c\u7136\u540e\u4e5f\u9700\u6ce8\u610fdfs\u6df1\u5ea6\u4e0e\u539f\u6570\u7ec4\u957f\u5ea6\u76f8\u540c\uff0c\u9700\u8981\u5224\u65ad\u4e0b\uff0c\u4f46\u662f\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u6bd4\u8f83\u9ad8\u3002\n\n### \u89e3\u6cd52\n\u4f18\u96c5\u4e00\u4e9b\u7684\u505a\u6cd5\u662f\u4f7f\u7528dp\uff0c\u5177\u4f53\u601d\u8def\u5982\u4e0b\u56fe\u6240\u793a\u3002\n\n![\u56fe\u7247](/static/494_1.png)\n![\u56fe\u7247](/static/494_2.png)\n![\u56fe\u7247](/static/494_3.png)",
  "def extract25ThchestnutnoveltranslationsWordpressCom(item):\n\t'''\n\tParser for '25thchestnutnoveltranslations.wordpress.com'\n\t'''\n\n\tvol, chp, frag, postfix = extractVolChapterFragmentPostfix(item['title'])\n\tif not (chp or vol) or \"preview\" in item['title'].lower():\n\t\treturn None\n\n\ttitlemap = [\n\t\t('I Alone Level-up',            'I Alone Level-up',                'translated'),\n\t\t('Tensei Shoujo no Rirekisho',  'Tensei Shoujo no Rirekisho',      'translated'),\n\t\t('Master of Dungeon',           'Master of Dungeon',               'oel'),\n\t]\n\n\tfor titlecomponent, name, tl_type in titlemap:\n\t\tif titlecomponent.lower() in item['title'].lower():\n\t\t\treturn buildReleaseMessageWithType(item, name, vol, chp, frag=frag, postfix=postfix, tl_type=tl_type)\n\n\n\treturn False",
  "declare namespace BMapGL {\n    /**\n     * \u6b64\u7c7b\u8868\u793aSymbol\u6784\u9020\u51fd\u6570\u7684\u53ef\u9009\u53c2\u6570\u3002\u5b83\u6ca1\u6709\u6784\u9020\u51fd\u6570\uff0c\u4f46\u53ef\u901a\u8fc7\u5bf9\u8c61\u5b57\u9762\u91cf\u5f62\u5f0f\u8868\u793a\u3002\n     */\n    interface SymbolOptions {\n        /**\n         * \u7b26\u53f7\u7684\u4f4d\u7f6e\u504f\u79fb\u503c\n         */\n        anchor: Size\n        /**\n         * \u8bbe\u7f6e\u77e2\u91cf\u56fe\u6807\u7684\u586b\u5145\u989c\u8272\u3002\u652f\u6301\u989c\u8272\u5e38\u91cf\u5b57\u7b26\u4e32\u3001\u5341\u516d\u8fdb\u5236\u3001RGB\u3001RGBA\u7b49\u683c\u5f0f\n         */\n        fillColor: string\n        /**\n         * \u8bbe\u7f6e\u77e2\u91cf\u56fe\u6807\u586b\u5145\u900f\u660e\u5ea6,\u8303\u56f40~1\n         */\n        fillOpacity: number\n        /**\n         * \u8bbe\u7f6e\u77e2\u91cf\u56fe\u6807\u7684\u7f29\u653e\u6bd4\u4f8b\n         */\n        scale: number\n        /**\n         * \u8bbe\u7f6e\u77e2\u91cf\u56fe\u6807\u7684\u65cb\u8f6c\u89d2\u5ea6,\u53c2\u6570\u4e3a\u89d2\u5ea6\n         */\n        rotation: number\n        /**\n         * \u8bbe\u7f6e\u77e2\u91cf\u56fe\u6807\u7684\u7ebf\u586b\u5145\u989c\u8272,\u652f\u6301\u989c\u8272\u5e38\u91cf\u5b57\u7b26\u4e32\u3001\u5341\u516d\u8fdb\u5236\u3001RGB\u3001RGBA\u7b49\u683c\u5f0f\n         */\n        strokeColor: string\n        /**\n         * \u8bbe\u7f6e\u77e2\u91cf\u56fe\u6807\u7ebf\u7684\u900f\u660e\u5ea6,opacity\u8303\u56f40~1\n         */\n        strokeOpacity: number\n        /**\n         * \u65cb\u8bbe\u7f6e\u7ebf\u5bbd\u3002\u5982\u679c\u6b64\u5c5e\u6027\u6ca1\u6709\u6307\u5b9a\uff0c\u5219\u7ebf\u5bbd\u8ddfscale\u6570\u503c\u76f8\u540c\n         */\n        strokeWeight: number\n    }\n    /**\n     * \u6b64\u679a\u4e3e\u7c7b\u578b\u8868\u793a\u77e2\u91cf\u56fe\u6807\u7c7b\u9884\u8bbe\u7684\u56fe\u6807\u6837\u5f0f\u3002\n     */\n    enum SymbolShapeType {\n        /**\n         * \u5706\u5f62\uff0c\u9ed8\u8ba4\u534a\u5f84\u4e3a1px\n         */\n        BMap_Symbol_SHAPE_CIRCLE = 'BMap_Symbol_SHAPE_CIRCLE',\n        /**\n         * \u77e9\u5f62\uff0c\u9ed8\u8ba4\u5bbd\u5ea64px\u3001\u9ad8\u5ea62px\n         */\n        BMap_Symbol_SHAPE_RECTANGLE = 'BMap_Symbol_SHAPE_RECTANGLE',\n        /**\n         * \u83f1\u5f62\uff0c\u9ed8\u8ba4\u5916\u63a5\u5706\u534a\u5f8410px\n         */\n        BMap_Symbol_SHAPE_RHOMBUS = 'BMap_Symbol_SHAPE_RHOMBUS',\n        /**\n         * \u4e94\u89d2\u661f\uff0c\u4e94\u89d2\u661f\u5916\u63a5\u5706\u534a\u5f84\u4e3a10px\n         */\n        BMap_Symbol_SHAPE_STAR = 'BMap_Symbol_SHAPE_STAR',\n        /**\n         * \u7bad\u5934\u65b9\u5411\u5411\u4e0b\u7684\u95ed\u5408\u7bad\u5934\n         */\n        BMap_Symbol_SHAPE_BACKWARD_CLOSED_ARROW = 'BMap_Symbol_SHAPE_BACKWARD_CLOSED_ARROW',\n        /**\n         * \u7bad\u5934\u65b9\u5411\u5411\u4e0a\u7684\u95ed\u5408\u7bad\u5934\n         */\n        BMap_Symbol_SHAPE_FORWARD_CLOSED_ARROW = 'BMap_Symbol_SHAPE_FORWARD_CLOSED_ARROW',\n        /**\n         * \u7bad\u5934\u65b9\u5411\u5411\u4e0b\u7684\u975e\u95ed\u5408\u7bad\u5934\n         */\n        BMap_Symbol_SHAPE_BACKWARD_OPEN_ARROW = 'BMap_Symbol_SHAPE_BACKWARD_OPEN_ARROW',\n        /**\n         * \u7bad\u5934\u65b9\u5411\u5411\u4e0a\u7684\u975e\u95ed\u5408\u7bad\u5934\n         */\n        BMap_Symbol_SHAPE_FORWARD_OPEN_ARROW = 'BMap_Symbol_SHAPE_FORWARD_OPEN_ARROW',\n        /**\n         * \u5b9a\u4f4d\u70b9\u56fe\u6807\n         */\n        BMap_Symbol_SHAPE_POINT = 'BMap_Symbol_SHAPE_POINT',\n        /**\n         * \u9884\u8bbe\u7684\u98de\u673a\u5f62\u72b6\n         */\n        BMap_Symbol_SHAPE_PLANE = 'BMap_Symbol_SHAPE_PLANE',\n        /**\n         * \u9884\u8bbe\u7684\u7167\u76f8\u673a\u5f62\u72b6\n         */\n        BMap_Symbol_SHAPE_CAMERA = 'BMap_Symbol_SHAPE_CAMERA',\n        /**\n         * \u9884\u8bbe\u7684\u8b66\u544a\u7b26\u53f7\n         */\n        BMap_Symbol_SHAPE_WARNING = 'BMap_Symbol_SHAPE_WARNING',\n        /**\n         * \u9884\u8bbe\u7684\u7b11\u8138\u5f62\u72b6\n         */\n        BMap_Symbol_SHAPE_SMILE = 'BMap_Symbol_SHAPE_SMILE',\n        /**\n         * \u9884\u8bbe\u7684\u949f\u8868\u5f62\u72b6\n         */\n        BMap_Symbol_SHAPE_CLOCK = 'BMap_Symbol_SHAPE_CLOCK',\n    }\n\n    /**\n     * \u672a\u77e5\u7684\u5b9a\u4e49 SymbolShape\n     */\n    interface SymbolShape { }\n\n    /**\n     * \u6b64\u7c7b\u8868\u793a\u901a\u8fc7svg\u7684path string\u521b\u5efa\u7684\u77e2\u91cf\u56fe\u6807\u7c7b\u3002\n     */\n    class Symbol {\n        /**\n         * \u521b\u5efa\u4e00\u4e2a\u77e2\u91cf\u56fe\u6807\u5b9e\u4f8b\u3002path\u4e3asvg\u4e2d\u7684path\u5b57\u7b26\u4e32\u6216\u8005\u5df2\u5b9a\u4e49\u7684\u7b26\u53f7\u5e38\u91cf,opts\u4e3a\u77e2\u91cf\u56fe\u6807\u7684\u6837\u5f0f\n         * @param path\n         * @param opts\n         */\n        constructor(path: string | SymbolShapeType, opts: SymbolOptions)\n        /**\n         * \u8bbe\u7f6e\u77e2\u91cf\u56fe\u6807\u7684\u8def\u5f84\n         * @param path\n         */\n        setPath(path: string | SymbolShape): void\n        /**\n         * \u8bbe\u7f6e\u77e2\u91cf\u56fe\u6807\u7684\u5b9a\u4f4d\u70b9,\u8be5\u5b9a\u4f4d\u70b9\u7684\u4f4d\u7f6e\u4ee5\u56fe\u6807\u81ea\u8eab\u4e3a\u57fa\u51c6\n         * @param anchor\n         */\n        setAnchor(anchor: Size): void\n        /**\n         * \u8bbe\u7f6e\u77e2\u91cf\u56fe\u6807\u7684\u65cb\u8f6c\u89d2\u5ea6,\u53c2\u6570\u4e3a\u89d2\u5ea6\n         * @param rotation\n         */\n        setRotation(rotation: number): void\n        /**\n         * \u8bbe\u7f6e\u77e2\u91cf\u56fe\u6807\u7684\u7f29\u653e\u6bd4\u4f8b\n         * @param scale\n         */\n        setScale(scale: number): void\n        /**\n         * \u8bbe\u7f6e\u77e2\u91cf\u56fe\u6807\u7684\u7ebf\u5bbd\n         * @param strokeWeight\n         */\n        setStrokeWeight(strokeWeight: number): void\n        /**\n         * \u8bbe\u7f6e\u77e2\u91cf\u56fe\u6807\u7684\u7ebf\u586b\u5145\u989c\u8272,\u652f\u6301\u989c\u8272\u5e38\u91cf\u5b57\u7b26\u4e32\u3001\u5341\u516d\u8fdb\u5236\u3001RGB\u3001RGBA\u7b49\u683c\u5f0f\n         * @param color\n         */\n        setStrokeColor(color: string): void\n        /**\n         * \u8bbe\u7f6e\u77e2\u91cf\u56fe\u6807\u7ebf\u7684\u900f\u660e\u5ea6,opacity\u8303\u56f40~1\n         * @param opacity\n         */\n        setStrokeOpacity(opacity: number): void\n        /**\n         * \u8bbe\u7f6e\u77e2\u91cf\u56fe\u6807\u586b\u5145\u900f\u660e\u5ea6,opacity\u8303\u56f40~1\n         * @param opacity\n         */\n        setFillOpacity(opacity: number): void\n        /**\n         * \u8bbe\u7f6e\u77e2\u91cf\u56fe\u6807\u7684\u586b\u5145\u989c\u8272\u3002\u652f\u6301\u989c\u8272\u5e38\u91cf\u5b57\u7b26\u4e32\u3001\u5341\u516d\u8fdb\u5236\u3001RGB\u3001RGBA\u7b49\u683c\u5f0f\n         * @param color\n         */\n        setFillColor(color: string): void\n    }\n}",
  "{-# LANGUAGE DeriveDataTypeable #-}\n{-# LANGUAGE DeriveGeneric      #-}\n{-# LANGUAGE OverloadedStrings  #-}\n{-# LANGUAGE RecordWildCards    #-}\n{-# LANGUAGE TypeFamilies       #-}\n\n{-# OPTIONS_GHC -fno-warn-unused-imports #-}\n{-# OPTIONS_GHC -fno-warn-unused-binds   #-}\n{-# OPTIONS_GHC -fno-warn-unused-matches #-}\n\n-- Derived from AWS service descriptions, licensed under Apache 2.0.\n\n-- |\n-- Module      : Network.AWS.Route53.CreateReusableDelegationSet\n-- Copyright   : (c) 2013-2015 Brendan Hay\n-- License     : Mozilla Public License, v. 2.0.\n-- Maintainer  : Brendan Hay <brendan.g.hay@gmail.com>\n-- Stability   : auto-generated\n-- Portability : non-portable (GHC extensions)\n--\n-- This action creates a reusable delegationSet.\n--\n-- To create a new reusable delegationSet, send a 'POST' request to the\n-- '2013-04-01\\/delegationset' resource. The request body must include an\n-- XML document with a 'CreateReusableDelegationSetRequest' element. The\n-- response returns the 'CreateReusableDelegationSetResponse' element that\n-- contains metadata about the delegationSet.\n--\n-- If the optional parameter HostedZoneId is specified, it marks the\n-- delegationSet associated with that particular hosted zone as reusable.\n--\n-- /See:/ <http://docs.aws.amazon.com/Route53/latest/APIReference/API_CreateReusableDelegationSet.html AWS API Reference> for CreateReusableDelegationSet.\nmodule Network.AWS.Route53.CreateReusableDelegationSet\n    (\n    -- * Creating a Request\n      createReusableDelegationSet\n   , CreateReusableDelegationSet\n    -- * Request Lenses\n   , crdsHostedZoneId\n   , crdsCallerReference\n\n    -- * Destructuring the Response\n   , createReusableDelegationSetResponse\n   , CreateReusableDelegationSetResponse\n    -- * Response Lenses\n   , crdsrsResponseStatus\n   , crdsrsDelegationSet\n   , crdsrsLocation\n    ) where\n\nimport           Network.AWS.Prelude\nimport           Network.AWS.Request\nimport           Network.AWS.Response\nimport           Network.AWS.Route53.Types\nimport           Network.AWS.Route53.Types.Product\n\n-- | /See:/ 'createReusableDelegationSet' smart constructor.\ndata CreateReusableDelegationSet = CreateReusableDelegationSet'\n    { _crdsHostedZoneId    ::!(Maybe Text)\n   , _crdsCallerReference ::!Text\n    } deriving (Eq,Read,Show,Data,Typeable,Generic)\n\n-- | Creates a value of 'CreateReusableDelegationSet' with the minimum fields required to make a request.\n--\n-- Use one of the following lenses to modify other fields as desired:\n--\n-- * 'crdsHostedZoneId'\n--\n-- * 'crdsCallerReference'\ncreateReusableDelegationSet\n    :: Text -- ^ 'crdsCallerReference'\n    -> CreateReusableDelegationSet\ncreateReusableDelegationSet pCallerReference_ =\n    CreateReusableDelegationSet'\n    { _crdsHostedZoneId = Nothing\n   , _crdsCallerReference = pCallerReference_\n    }\n\n-- | The ID of the hosted zone whose delegation set you want to mark as\n-- reusable. It is an optional parameter.\ncrdsHostedZoneId :: Lens' CreateReusableDelegationSet (Maybe Text)\ncrdsHostedZoneId = lens _crdsHostedZoneId (\\ s a -> s{_crdsHostedZoneId = a});\n\n-- | A unique string that identifies the request and that allows failed\n-- 'CreateReusableDelegationSet' requests to be retried without the risk of\n-- executing the operation twice. You must use a unique 'CallerReference'\n-- string every time you create a reusable delegation set.\n-- 'CallerReference' can be any unique string; you might choose to use a\n-- string that identifies your project, such as 'DNSMigration_01'.\n--\n-- Valid characters are any Unicode code points that are legal in an XML\n-- 1.0 document. The UTF-8 encoding of the value must be less than 128\n-- bytes.\ncrdsCallerReference :: Lens' CreateReusableDelegationSet Text\ncrdsCallerReference = lens _crdsCallerReference (\\ s a -> s{_crdsCallerReference = a});\n\ninstance AWSRequest CreateReusableDelegationSet where\n        type Rs CreateReusableDelegationSet =\n             CreateReusableDelegationSetResponse\n        request = postXML route53\n        response\n          = receiveXML\n              (\\ s h x ->\n                 CreateReusableDelegationSetResponse' <$>\n                   (pure (fromEnum s)) <*> (x.@ \"DelegationSet\") <*>\n                     (h.# \"Location\"))\n\ninstance ToElement CreateReusableDelegationSet where\n        toElement\n          = mkElement\n              \"{https://route53.amazonaws.com/doc/2013-04-01/}CreateReusableDelegationSetRequest\"\n\ninstance ToHeaders CreateReusableDelegationSet where\n        toHeaders = const mempty\n\ninstance ToPath CreateReusableDelegationSet where\n        toPath = const \"/2013-04-01/delegationset\"\n\ninstance ToQuery CreateReusableDelegationSet where\n        toQuery = const mempty\n\ninstance ToXML CreateReusableDelegationSet where\n        toXML CreateReusableDelegationSet'{..}\n          = mconcat\n              [\"HostedZoneId\" @= _crdsHostedZoneId,\n               \"CallerReference\" @= _crdsCallerReference]\n\n-- | /See:/ 'createReusableDelegationSetResponse' smart constructor.\ndata CreateReusableDelegationSetResponse = CreateReusableDelegationSetResponse'\n    { _crdsrsResponseStatus ::!Int\n   , _crdsrsDelegationSet  ::!DelegationSet\n   , _crdsrsLocation       ::!Text\n    } deriving (Eq,Read,Show,Data,Typeable,Generic)\n\n-- | Creates a value of 'CreateReusableDelegationSetResponse' with the minimum fields required to make a request.\n--\n-- Use one of the following lenses to modify other fields as desired:\n--\n-- * 'crdsrsResponseStatus'\n--\n-- * 'crdsrsDelegationSet'\n--\n-- * 'crdsrsLocation'\ncreateReusableDelegationSetResponse\n    :: Int -- ^ 'crdsrsResponseStatus'\n    -> DelegationSet -- ^ 'crdsrsDelegationSet'\n    -> Text -- ^ 'crdsrsLocation'\n    -> CreateReusableDelegationSetResponse\ncreateReusableDelegationSetResponse pResponseStatus_ pDelegationSet_ pLocation_ =\n    CreateReusableDelegationSetResponse'\n    { _crdsrsResponseStatus = pResponseStatus_\n   , _crdsrsDelegationSet = pDelegationSet_\n   , _crdsrsLocation = pLocation_\n    }\n\n-- | The response status code.\ncrdsrsResponseStatus :: Lens' CreateReusableDelegationSetResponse Int\ncrdsrsResponseStatus = lens _crdsrsResponseStatus (\\ s a -> s{_crdsrsResponseStatus = a});\n\n-- | A complex type that contains name server information.\ncrdsrsDelegationSet :: Lens' CreateReusableDelegationSetResponse DelegationSet\ncrdsrsDelegationSet = lens _crdsrsDelegationSet (\\ s a -> s{_crdsrsDelegationSet = a});\n\n-- | The unique URL representing the new reusbale delegation set.\ncrdsrsLocation :: Lens' CreateReusableDelegationSetResponse Text\ncrdsrsLocation = lens _crdsrsLocation (\\ s a -> s{_crdsrsLocation = a});\n",
  "\"\"\"\nCopyright (c) Facebook, Inc. and its affiliates.\n\nThis source code is licensed under the MIT license found in the\nLICENSE file in the root directory of this source tree.\n\"\"\"\n\nimport math\nimport unittest\nimport gtn\nfrom test_helpers import create_graph_from_text\n\n\nclass FunctionsTestCase(unittest.TestCase):\n    def test_scalar_ops(self):\n        g1 = gtn.scalar_graph(3.0)\n\n        result = gtn.negate(g1)\n        self.assertEqual(result.item(), -3.0)\n\n        g2 = gtn.scalar_graph(4.0)\n\n        result = gtn.add(g1, g2)\n        self.assertEqual(result.item(), 7.0)\n\n        result = gtn.subtract(g2, g1)\n        self.assertEqual(result.item(), 1.0)\n\n    def test_project_clone(self):\n\n        g_str = [\n            \"0 1\",\n            \"3 4\",\n            \"0 1 0 0 2\",\n            \"0 2 1 1 1\",\n            \"1 2 0 0 2\",\n            \"2 3 0 0 1\",\n            \"2 3 1 1 1\",\n            \"1 4 0 0 2\",\n            \"2 4 1 1 3\",\n            \"3 4 0 0 2\",\n        ]\n        graph = create_graph_from_text(g_str)\n\n        # Test clone\n        cloned = gtn.clone(graph)\n        self.assertTrue(gtn.equal(graph, cloned))\n\n        # Test projecting input\n        g_str = [\n            \"0 1\",\n            \"3 4\",\n            \"0 1 0 0 2\",\n            \"0 2 1 1 1\",\n            \"1 2 0 0 2\",\n            \"2 3 0 0 1\",\n            \"2 3 1 1 1\",\n            \"1 4 0 0 2\",\n            \"2 4 1 1 3\",\n            \"3 4 0 0 2\",\n        ]\n        inputExpected = create_graph_from_text(g_str)\n        self.assertTrue(gtn.equal(gtn.project_input(graph), inputExpected))\n\n        # Test projecting output\n        g_str = [\n            \"0 1\",\n            \"3 4\",\n            \"0 1 0 0 2\",\n            \"0 2 1 1 1\",\n            \"1 2 0 0 2\",\n            \"2 3 0 0 1\",\n            \"2 3 1 1 1\",\n            \"1 4 0 0 2\",\n            \"2 4 1 1 3\",\n            \"3 4 0 0 2\",\n        ]\n        outputExpected = create_graph_from_text(g_str)\n        self.assertTrue(gtn.equal(gtn.project_output(graph), outputExpected))\n\n    def test_composition(self):\n        # Compos,ing with an empty graph gives an empty graph\n        g1 = gtn.Graph()\n        g2 = gtn.Graph()\n        self.assertTrue(gtn.equal(gtn.compose(g1, g2), gtn.Graph()))\n\n        g1.add_node(True)\n        g1.add_node()\n        g1.add_arc(0, 1, 0)\n\n        g2.add_node(True)\n        g2.add_node(False, True)\n        g2.add_arc(0, 1, 0)\n        g2.add_arc(0, 1, 0)\n\n        self.assertTrue(gtn.equal(gtn.compose(g1, g2), gtn.Graph()))\n        self.assertTrue(gtn.equal(gtn.compose(g2, g1), gtn.Graph()))\n        self.assertTrue(gtn.equal(gtn.intersect(g2, g1), gtn.Graph()))\n\n        # Check singly sorted version\n        g1.arc_sort(True)\n        self.assertTrue(gtn.equal(gtn.compose(g1, g2), gtn.Graph()))\n\n        # Check doubly sorted version\n        g2.arc_sort()\n        self.assertTrue(gtn.equal(gtn.compose(g1, g2), gtn.Graph()))\n\n        # Self-loop in the composed graph\n        g1 = gtn.Graph()\n        g1.add_node(True)\n        g1.add_node(False, True)\n        g1.add_arc(0, 0, 0)\n        g1.add_arc(0, 1, 1)\n        g1.add_arc(1, 1, 2)\n\n        g2 = gtn.Graph()\n        g2.add_node(True)\n        g2.add_node()\n        g2.add_node(False, True)\n        g2.add_arc(0, 1, 0)\n        g2.add_arc(1, 1, 0)\n        g2.add_arc(1, 2, 1)\n\n        g_str = [\"0\", \"2\", \"0 1 0\", \"1 1 0\", \"1 2 1\"]\n        expected = create_graph_from_text(g_str)\n        self.assertTrue(gtn.isomorphic(gtn.compose(g1, g2), expected))\n        self.assertTrue(gtn.isomorphic(gtn.intersect(g1, g2), expected))\n\n        # Check singly sorted version\n        g1.arc_sort(True)\n        self.assertTrue(gtn.isomorphic(gtn.compose(g1, g2), expected))\n\n        # Check doubly sorted version\n        g2.arc_sort()\n        self.assertTrue(gtn.isomorphic(gtn.compose(g1, g2), expected))\n\n        # Loop in the composed graph\n        g1 = gtn.Graph()\n        g1.add_node(True)\n        g1.add_node(False, True)\n        g1.add_arc(0, 1, 0)\n        g1.add_arc(1, 1, 1)\n        g1.add_arc(1, 0, 0)\n\n        g2 = gtn.Graph()\n        g2.add_node(True)\n        g2.add_node(False, True)\n        g2.add_arc(0, 0, 0)\n        g2.add_arc(0, 1, 1)\n        g2.add_arc(1, 0, 1)\n\n        g_str = [\"0\", \"2\", \"0 1 0\", \"1 0 0\", \"1 2 1\", \"2 1 1\"]\n        expected = create_graph_from_text(g_str)\n        self.assertTrue(gtn.isomorphic(gtn.compose(g1, g2), expected))\n        self.assertTrue(gtn.isomorphic(gtn.intersect(g1, g2), expected))\n\n        # Check singly sorted version\n        g1.arc_sort(True)\n        self.assertTrue(gtn.isomorphic(gtn.compose(g1, g2), expected))\n\n        # Check doubly sorted version\n        g2.arc_sort()\n        self.assertTrue(gtn.isomorphic(gtn.compose(g1, g2), expected))\n\n        g1 = gtn.Graph()\n        g1.add_node(True)\n        g1.add_node()\n        g1.add_node()\n        g1.add_node()\n        g1.add_node(False, True)\n        for i in range(g1.num_nodes() - 1):\n            for j in range(3):\n                g1.add_arc(i, i + 1, j, j, j)\n\n        g2 = gtn.Graph()\n        g2.add_node(True)\n        g2.add_node()\n        g2.add_node(False, True)\n        g2.add_arc(0, 1, 0, 0, 3.5)\n        g2.add_arc(1, 1, 0, 0, 2.5)\n        g2.add_arc(1, 2, 1, 1, 1.5)\n        g2.add_arc(2, 2, 1, 1, 4.5)\n        g_str = [\n            \"0\",\n            \"6\",\n            \"0 1 0 0 3.5\",\n            \"1 2 0 0 2.5\",\n            \"1 4 1 1 2.5\",\n            \"2 3 0 0 2.5\",\n            \"2 5 1 1 2.5\",\n            \"4 5 1 1 5.5\",\n            \"3 6 1 1 2.5\",\n            \"5 6 1 1 5.5\",\n",
  "const Multiaddr = require('multiaddr')\nconst mafmt = require('mafmt')\n\nmodule.exports = {\n  name:'multiaddr',\n  language: {\n    invalid: '{{message}}',\n    fmt:'must be in {{fmt}} format'\n  },\n  pre (value, state, options) {\n    if (value == null) {\n      return this.createError('multiaddr.invalid', { v: value, message: 'addr must be a string, Buffer, or another Multiaddr' }, state, options)\n    }\n\n    let ma\n\n    try {\n      ma = Multiaddr(value)\n    } catch (err) {\n      return this.createError('multiaddr.invalid', { v: value, message: err.message }, state, options)\n    }\n\n    return options.convert? ma : value\n  },\n  rules: Object.keys(mafmt).map(fmt => ({\n    name: fmt,\n    validate (params, value, state, options) {\n      return mafmt[fmt].matches(value)\n       ? value\n        : this.createError(`multiaddr.fmt`, { v: value, fmt }, state, options)\n    }\n  }))\n}\n",
  "#pragma once\n#include \"../base_op.hpp\"\n#include <functional> \nnamespace lol {\n  template<typename T>\n  inline Result<json> PostLolChampSelectLegacyV1SessionTradesByIdAccept(T& _client, const int64_t& id)\n  {\n    try {\n      return ToResult<json>(_client.https.request(\"post\", \"/lol-champ-select-legacy/v1/session/trades/\"+to_string(id)+\"/accept?\" +\n        SimpleWeb::QueryString::create(Args2Headers({  })), \n        \"\",\n        Args2Headers({  \n        {\"Authorization\", _client.auth},  })));\n    } catch(const SimpleWeb::system_error &e) {\n      return ToResult<json>(e.code());\n    }\n  }\n  template<typename T>\n  inline void PostLolChampSelectLegacyV1SessionTradesByIdAccept(T& _client, const int64_t& id, std::function<void(T&, const Result<json>&)> cb)\n  {\n    _client.httpsa.request(\"post\", \"/lol-champ-select-legacy/v1/session/trades/\"+to_string(id)+\"/accept?\" +\n      SimpleWeb::QueryString::create(Args2Headers({  })), \n        \"\",\n        Args2Headers({  \n        {\"Authorization\", _client.auth},  }),[cb,&_client](std::shared_ptr<HttpsClient::Response> response, const SimpleWeb::error_code &e) {\n            if(e)\n              cb(_client, ToResult<json>(e));\n            else\n              cb(_client, ToResult<json>(response));\n        });\n  }\n}",
  "# Jump and Shoot Game engine\n\n[![Go Report Card](https://goreportcard.com/badge/github.com/MuratSs/basic-shotter-game-server)](https://goreportcard.com/report/github.com/MuratSs/basic-shotter-game-server)\n",
  "---\r\npage_type: sample\r\nlanguages:\r\n- csharp\r\nproducts:\r\n- dotnet\r\ndescription: \"This sample shows you how to interact with Azure IoT Central APIs\"\r\nurlFragment: \"update-this-to-unique-url-stub\"\r\n---\r\n\r\n# Azure IoT Central Samples\r\nThis sample shows you how to interact with Azure IoT Central APIs in C#. \r\nIf you have any questions or feature requests, please create new issue with detailed infomation.\r\n\r\n## Contents\r\n\r\n| File/folder       | Description                                |\r\n|-------------------|--|\r\n| `IoTCentral`      | Auto-generate C# REST client from the swagger|\r\n| `IoTCentralApp`   | A guided C# sample script that creates an IoT Central App with Arm templates and device templates |\r\n| `samples`         | Each sample app that interats with single IoT Central API |\r\n| `.gitignore`      | Define what to ignore at commit time.        |\r\n| `README.md`       | This README file.                            |\r\n| `LICENSE`         | The license for the sample.                  |\r\n\r\n## Prerequisites\r\n\r\n- [.NET Core 3.0](https://dotnet.microsoft.com/download)\r\n\r\n## Running the sample in `IoTCentralApp` folder\r\n1. Make sure [Azure CLI](https://docs.microsoft.com/cli/azure/install-azure-cli?view=azure-cli-latest) has been installed on your dev machine.\r\n2. In console window, run below command to login:\r\n\r\n    ```cmd\r\n    az login\r\n    az account get-access-token --resource https://apps.azureiotcentral.com\r\n    ```\r\n\r\n3. In console window, change directory to `src` folder.\r\n4. Type `dotnet run` and press enter.\r\n5. Follow the output in the console window to create your IoT Central App with a connected device. Basically, you will be doing the following things.\r\n    - Login via Azure CLI.\r\n    - Select a subscrption with arrow keys.\r\n    - Create a new resource group or not.\r\n    - Specify your IoT Central app name.\r\n    - After several minutes, you should see an new IoT Central app created. Then specify a device template file. If you leave blank, you will use the device template in `resource` folder.\r\n    - Enter the Component Name (if you use the default one in `resource` folder, please type `Interface` in this step)\r\n    - Enter the Telemetry Name (if you use the default one in `resource` folder, please type `Temperature` in this step)\r\n    - To visit your IoT Central app, you can either view the resource on Azure Portal, or just visit https://[YourIoTCentralAppName].azureiotcentral.com/\r\n\r\n## Running the sample in `samples` folder\r\n\r\n1. Follow the [steps to create an Azure IoT Central application](https://docs.microsoft.com/azure/iot-central/core/quick-deploy-iot-central) or open your existing IoT Central application.\r\n\r\n2. Generate an IoT Central API token.\r\n    - Navigate to **Administration** then **Access Tokens**.\r\n    - Select **Generate Token**.\r\n    - Enter a Token name, select **Next**, and then **Copy**.\r\n    > The token value is only shown once, so it must be copied before closing the dialog. After closing the dialog, it is never shown again.\r\n\r\n3. Navigate to `samples/listApplication` folder in your terminal. This app can list the IoT Central applications you have access to.\r\n\r\n    ```cmd\r\n    cd samples/listApplication\r\n    ```\r\n\r\n4. Update the following placeholders in the sample app.\r\n\r\n    - `[ACCESS_TOKEN]`, replace with the API token you generated from last step.\r\n    - `https://[APP_NAME].azureiotcentral.com/api/preview`, replace the `[APP_NAME]` with the app name in your IoT Central app URL.\r\n\r\n4. In the terminal, type and run `dotnet run`.\r\n\r\n5. Change directory into the sample app you want to run. Repeat step 4 and 5. You might also need to update other placeholders like `deviceID`, `MyDisplayName` and etc. based on the app you selected.\r\n\r\n## Contributing\r\n\r\nThis project welcomes contributions and suggestions.  Most contributions require you to agree to a\r\nContributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us\r\nthe rights to use your contribution. For details, visit https://cla.opensource.microsoft.com.\r\n\r\nWhen you submit a pull request, a CLA bot will automatically determine whether you need to provide\r\na CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions\r\nprovided by the bot. You will only need to do this once across all repos using our CLA.\r\n\r\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\r\nFor more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or\r\ncontact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\r\n",
  "def bits_insertion(n, m, i, j):\n    ones_left = -1 << (j + 1)  # shift 1s over to the left, before position j\n    ones_right = (1 << i) - 1  # place 1s to the right of position i\n    mask = ones_left | ones_right  # encapsulate 0s with the 1s from above\n    cleared = n & mask  # zero bits in positions j through i\n    moved = m << i  # shift m over i places, prepped for n insertion\n    return cleared | moved  # answer is the value after insertion\n\n\ndef bits_insertion_easy_to_understand(n, m, i, j):\n    # do a liner search through the bits of M (from tail to head)\n    # and if you find 1, do a bit insertion to N\n    # if you find 0, clear idxth bit of N using a mask\n    for idx in range(j - i + 1):\n        if (m >> idx) & 1!= 0:\n            # set bit\n            n |= 1 << (idx + i)\n        else:\n            # clear bit\n            mask = ~(1 << (idx + i))\n            n &= mask\n\n    return n\n\n\ntest_cases = [\n    ((int(\"10000000000\", 2), int(\"10011\", 2), 2, 6), int(\"10001001100\", 2)),\n    ((int(\"11111111111\", 2), int(\"10011\", 2), 2, 6), int(\"11111001111\", 2)),\n]\n\ntestable_functions = [bits_insertion, bits_insertion_easy_to_understand]\n\n\ndef test_bits_insertion():\n    for bits_insert in testable_functions:\n        for (n, m, i, j), expected in test_cases:\n            calculated = bits_insert(n, m, i, j)\n            error_msg = f\"{bits_insert.__name__}: {calculated:b}!= {expected:b}\"\n            assert bits_insert(n, m, i, j) == expected, error_msg\n\n\nif __name__ == \"__main__\":\n    test_bits_insertion()\n",
  "[*ACLU Elections API*](https://github.com/aclu-national/elections-api)\n\n# Care and maintenance\n\nThe Elections API is designed to be have its code and data updated while it's running.\n\n## Reindexing the data\n\nWhenever updates are made to the data, PostGIS needs to be reindexed. This can take several minutes, so you'll want to be careful to only reindex machines that are out of the load balancer rotation.\n\n```\n$ cd /usr/local/aclu/elections-api\n$ make\n```\n\nYou can also reindex selected database tables.\n\n```\n$ make elections\n```\n\n## Congress scores\n\nCongressional scorecard data is not part of the public-facing release of the Elections API, so this only applies for the instance run and maintained by ACLU.\n\nIf you want to update the scores, by running `make congress_scores`, make sure to run `make congress_details` first. You can chain these together as one command: `make congress_details && make congress_scores`. The reason for this is that some the aggregate score info (e.g., total votes) is stored in the same table as the `congress_details`.\n\n## Restarting the server\n\nWhen the API server code changes, the application server needs to be restarted after `git pull`ing the changes. Be sure to also create a CloudFront invalidation for the new results to take effect.\n\n```\n$ sudo service elections restart\n```\n\n## Restarting Ubuntu\n\nWhen you ssh into the box and get a message like `*** System restart required ***` just reboot ubuntu\n\n```\n$ sudo reboot\n```\n\n## Load testing the server\n\nHere's how you can use [`siege`](https://www.joedog.org/siege-home/) to simulate 50 concurrent requests using a list of 1,000 random lat/lng lookups within the U.S.A.\n\n```\n$ export SIEGE_SCHEME=\"http\"\n$ export SIEGE_HOST=\"localhost:5000\"\n$ siege -c 50 -t 15S -f server/test_urls.txt -i\n```\n",
  "<?php\n\nnamespace App\\Commands;\n\nuse Illuminate\\Console\\Scheduling\\Schedule;\nuse LaravelZero\\Framework\\Commands\\Command;\nuse App\\Library\\Twitter;\n\nclass WorkCommand extends Command\n{\n    /**\n     * The signature of the command.\n     *\n     * @var string\n     */\n\tprotected $signature = 'process:work\n\t\t\t\t\t\t\t{fuzz=0 : If specified, we\\'ll wait up to this random number of seconds before each follow/unfollow }\n\t\t\t\t\t\t\t{count=1 : The number of follows/unfollows to attempt this time }';\n\n    /**\n     * The description of the command.\n     *\n     * @var string\n     */\n    protected $description = 'Follows random users you want to follow, and unfollows random users who haven\\'t followed back';\n\n    /**\n     * Execute the console command.\n     *\n     * @return mixed\n     */\n    public function handle(Twitter $twitter)\n    {\n\t\tfor($x = 0; $x < ($this->argument('count') * 1); $x++)\n\t\t{\n\t\t\tsleep(rand(0, $this->argument('fuzz') * 1));\n\n\t\t\t$this->line(\\Carbon\\Carbon::now()->format('Y-m-d H:i:s T'). ': Starting work...');\n\n\t\t\ttry\n\t\t\t{\n\t\t\t\t$this->call('process:follow');\n\t\t\t\t$this->call('process:unfollow');\n\t\t\t}\n\t\t\tcatch(\\Exception $e)\n\t\t\t{\n\t\t\t\t$this->error($e->getMessage());\n\t\t\t}\n\n\t\t\t$this->line(\\Carbon\\Carbon::now()->format('Y-m-d H:i:s T'). ': Finished work!');\n\t\t}\n    }\n\n    /**\n     * Define the command's schedule.\n     *\n     * @param  \\Illuminate\\Console\\Scheduling\\Schedule $schedule\n     * @return void\n     */\n    public function schedule(Schedule $schedule): void\n    {\n\t\t/*\n\t\tFor information on how to modify the schedule, see...\n\t\thttps://laravel.com/docs/5.7/scheduling#defining-schedules\n\n\t\tIf you do modify the schedule, be sure to update the '250' below\n\t\tas well. We'll wait a random number of seconds up to this number\n\t\tbefore attempting each follow/unfollow (to add some fuzziness\n\t\tto the schedule).\n\n\t\tFor example, you could schedule this to run up to every minute\n\t\tand set the fuzziness to about 50 seconds. Just make sure the\n\t\tfuzziness is less than the scheduled run time, minus a few seconds\n\t\tto account for how long it might take to access the Twitter API.\n\t\tOtherwise, a run could end up overlapping into the next run. If\n\t\tthis happens, nothing will blow up, but the next run will simply\n\t\tbe skipped.\n\n\t\tTo make it go even faster, schedule it to run every minute, but\n\t\tset the count to something higher than 1, so that multiple\n\t\tfollows/unfollows are attempted every minute.\n\n\t\tNo matter what, we'll always proactively respect Twitter's\n\t\trate limits.\n\t\t*/\n\t\t$schedule->command(static::class, ['250', '1'])\n\t\t\t->withoutOverlapping()\n\t\t\t->appendOutputTo('chirp.log')\n\t\t\t->everyFiveMinutes()\n\t\t\t->weekdays()\n\t\t\t->timezone('US/Central')\n\t\t\t->between('10:00', '16:00')\n\t\t\t;\n    }\n}\n",
  "function ExtractIncreasingSubsequence(arr) {\n\n  let biggestNum = -999999;\n  for (let i = 0; i < arr.length; i++) {\n    let currentNum = arr[i];\n\n    if (currentNum >= biggestNum) {\n      biggestNum = currentNum;\n    } else {\n      arr.splice(i, 1);\n      i--;\n    }\n\n  }\n\n  for (let i = 0; i < arr.length; i++) {\n    console.log(arr[i]);\n  }\n\n}\n\n//ExtractIncreasingSubsequence([1, 3, 8, 4, 10, 12, 3, 2, 24]);",
  "import React, {PropTypes} from'react';\nimport classes from './TargetList.scss';\nimport CheckIcon from'material-ui/svg-icons/action/check-circle';\n\nimport {List, ListItem} from'material-ui';\n\nclass TargetList extends React.Component {\n  static propTypes = {\n    targetDirectories: PropTypes.array.isRequired,\n    targetDirectory: PropTypes.string.isRequired,\n    markTargetDirectory: PropTypes.func.isRequired,\n    isLoading: PropTypes.bool.isRequired\n  };\n\n  onTargetDirectoryClick = (dir) => {\n    return this.props.markTargetDirectory(dir.name);\n  };\n\n  render () {\n    console.log('loading target');\n    return (\n\n      <List>\n        {this.props.targetDirectories.map((dir, index) => {\n          const isMarked = this.props.targetDirectory === dir.name;\n\n          return (\n            <ListItem key={index} className={`${classes.directory} ${isMarked\n               ? classes.directoryIsMarked\n                : ''}`}\n              rightIcon={isMarked? <CheckIcon /> : null}\n              onClick={() => this.onTargetDirectoryClick(dir)}\n              primaryText={dir.name} />\n          );\n        })}\n      </List>\n\n    );\n  }\n}\n\nexport default TargetList;\n",
  "<?php\nclass dog_data\n{\nprivate $dogs_array = array(); //defined as an empty array initially\nprivate $dog_data_xml = \"\";\n\nprivate $change_log_file = \"change.log\";\nfunction __construct() {\n\tlibxml_use_internal_errors(true);\n\t$xmlDoc = new DOMDocument(); \n\tif ( file_exists(\"e5dog_applications.xml\") )\n\t{\n\t$xmlDoc->load( 'e5dog_applications.xml' ); \n\t$searchNode = $xmlDoc->getElementsByTagName( \"type\" ); \n\n\t\tforeach( $searchNode as $searchNode ) \n\t\t{ \n\t\t\t$valueID = $searchNode->getAttribute('ID'); \n    \n\t\t\tif($valueID == \"datastorage\")\n\t\t\t{\n\n\t\t\t\t$xmlLocation = $searchNode->getElementsByTagName( \"location\" ); \n\t\t\t\t$this->dog_data_xml = $xmlLocation->item(0)->nodeValue;\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t}\n\t}\n\telse \n\t{\n\t\tthrow new Exception(\"Dog applications xml file missing or corrupt\");\n\t}\n\t$xmlfile = file_get_contents($this->dog_data_xml);\n\t$xmlstring = simplexml_load_string($xmlfile);\n\t\n\tif ($xmlstring === false) {\n\t\t$errorString = \"Failed loading XML: \";\n\t\tforeach(libxml_get_errors() as $error) {\n\t\t\t$errorString.= $error->message. \" \" ;  }\n\t\tthrow new Exception($errorString); }\n\t$json = json_encode($xmlstring);\t\n\t$this->dogs_array = json_decode($json,TRUE); \n\t\n}\n\nfunction __destruct()\n{\n\n\t$xmlstring = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n   \t $xmlstring.= \"\\n<dogs>\\n\";   \n   \t foreach ($this->dogs_array as $dogs=>$dogs_value) {\t    \n\t\tforeach ($dogs_value as $dog => $dog_value)\n\t\t{\t\t\n\t\t\t$xmlstring.=\"<$dogs>\\n\";\n\t\t\t\tforeach ($dog_value as $column => $column_value)\n\t\t\t\t{\n\t\t\t\t$xmlstring.= \"<$column>\". $dog_value[$column]. \"</$column>\\n\";\n\t\t\t\t}\n\t\t\t$xmlstring.= \"</$dogs>\\n\";\n\t\t}\t\t\n    } \n\t$xmlstring.= \"</dogs>\\n\";\n\t\n$new_valid_data_file = preg_replace('/[0-9]+/', '', $this->dog_data_xml); \n// remove the previous date and time if it exists\n$oldxmldata = date('mdYhis'). $new_valid_data_file;\nif (!rename($this->dog_data_xml, $oldxmldata))\n\t{\n\t   throw new Exception(\"Backup file $oldxmldata could not be created.\");\n\t}\nfile_put_contents($new_valid_data_file,$xmlstring);\n\n}\n\n\nprivate function deleteRecord($recordNumber) \n{\n\tforeach ($this->dogs_array as $dogs=>&$dogs_value) {\n\t\tfor($J=$recordNumber; $J < count($dogs_value) -1; $J++) {\n            \t\t\t\t\n\t\t\tforeach ($dogs_value[$J] as $column => $column_value)\n\t\t\t{\n\t\t\n\t\t\t\t$dogs_value[$J][$column] = $dogs_value[$J + 1][$column];\n\t\t\t}\t\t\t\t\n\t\t\n}\n\tunset ($dogs_value[count($dogs_value) -1]);\n\t}\n\t\n\t$change_string = date('mdYhis'). \" | Delete | \". $recordNumber. \"\\n\";\n\t$chge_log_file = date('mdYhis'). $this->change_log_file;\n\terror_log($change_string,3,$chge_log_file); // might exceed 120 chars\n }\n\nprivate function readRecords($recordNumber) \n {\n\tif($recordNumber === \"ALL\") {\n\t\treturn $this->dogs_array[\"dog\"];\n\t}\n\telse \n\t{\n\t\treturn $this->dogs_array[\"dog\"][$recordNumber];\n\t} \n}\n\nprivate function insertRecords($records_array)\n{\n\t$dogs_array_size = count($this->dogs_array[\"dog\"]);\n\n\tfor($I=0;$I< count($records_array);$I++)\n\t{\n\t\t$this->dogs_array[\"dog\"][$dogs_array_size + $I] = $records_array[$I];\n\t\n\t} \n\t\n\t$change_string = date('mdYhis'). \" | Insert | \". serialize($records_array). \"\\n\";\n\t$chge_log_file = date('mdYhis'). $this->change_log_file;\n\terror_log($change_string,3,$chge_log_file); // might exceed 120 chars\n\n}\n\nprivate function updateRecords($records_array)\n{\n\n$chge_string = \"\";\n\tforeach ($records_array as $records=>$records_value) \n\t{\n       \n\t\t\n            $this->dogs_array[\"dog\"][$records] = $records_array[$records];\n\n\t}\n\n\t$change_string = date('mdYhis'). \" | Update | \". serialize($records_array). \"\\n\";\n\t$chge_log_file = date('mdYhis'). $this->change_log_file;\n\terror_log($change_string,3,$chge_log_file); // might exceed 120 chars\n\n\n}\nfunction setChangeLogFile($value)\n{\n\n\t$this->dog_data_xml = $value;\n\t\n}\nfunction processRecords($change_Type, $records_array)\n{\n\nswitch($change_Type)\n{\n    \n\tcase \"Delete\":\n\t   \n\t\t$this->deleteRecord($records_array);\n\t\tbreak;\n\tcase \"Insert\":\n\t\t$this->insertRecords($records_array);\n\t\tbreak;\n\tcase \"Update\":\n\t\t$this->updateRecords($records_array);\n\t\tbreak;\n\tcase \"Display\":\n\t\treturn $this->readRecords($records_array);\n\t\tbreak;\n\tdefault:\n\t\tthrow new Exception(\"Invalid XML file change type: $change_Type\");\n}\n\n}\n}\n\n?>",
  "{% load static %} {% load widget_tweaks %}\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"{% static 'apple-touch-icon.png' %}\">\r\n    <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"{% static 'favicon-32x32.png' %}\">\r\n    <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"{% static 'favicon-16x16.png' %}\">\r\n    <link rel=\"manifest\" href=\"{% static'site.webmanifest' %}\">\r\n    <title>Sign Up</title>\r\n    <link href=\"{% static 'css/bootstrap.min.css' %}\" rel=\"stylesheet\">\r\n    <style>\r\n       .border-md {\r\n            border-width: 2px;\r\n        }\r\n        \r\n       .btn-facebook {\r\n            background: #405D9D;\r\n            border: none;\r\n        }\r\n        \r\n       .btn-facebook:hover,\r\n       .btn-facebook:focus {\r\n            background: #314879;\r\n        }\r\n        \r\n       .btn-twitter {\r\n            background: #42AEEC;\r\n            border: none;\r\n        }\r\n        \r\n       .btn-twitter:hover,\r\n       .btn-twitter:focus {\r\n            background: #1799e4;\r\n        }\r\n        \r\n        body {\r\n            min-height: 100vh;\r\n        }\r\n        \r\n       .form-control {\r\n            padding: 0.8rem 0.5rem;\r\n        }\r\n        \r\n        select.form-control {\r\n            height: 52px;\r\n            padding-left: 0.5rem;\r\n        }\r\n        \r\n       .form-control::placeholder {\r\n            color: #ccc;\r\n            font-weight: bold;\r\n            font-size: 0.9rem;\r\n        }\r\n        \r\n       .form-control:focus {\r\n            box-shadow: none;\r\n        }\r\n    </style>\r\n    <link rel=\"stylesheet\" href=\"https://pro.fontawesome.com/releases/v5.10.0/css/all.css\" integrity=\"sha384-AYmEC3Yw5cVb3ZcuHtOA93w35dYTsvhLPVnYs9eStHfGJvOvKxVfELGroGkvsg+p\" crossorigin=\"anonymous\"/>\r\n    <!-- <script src=\"https://kit.fontawesome.com/049f05bf2b.js\" crossorigin=\"anonymous\"></script> -->\r\n</head>\r\n\r\n<body>\r\n    <!-- Navbar-->\r\n    <header class=\"header\">\r\n        <nav class=\"navbar navbar-expand-lg navbar-light pt-3 pb-0\">\r\n            <div class=\"container\">\r\n                <!-- Navbar Brand -->\r\n                <a href=\"#\" class=\"navbar-brand\">\r\n                    <h2>Kiwi Optics</h2>\r\n                </a>\r\n            </div>\r\n        </nav>\r\n    </header>\r\n\r\n    <div class=\"container\">\r\n        <div class=\"row py-0 mt-0 align-items-center\">\r\n            <!-- For Demo Purpose -->\r\n            <div class=\"col-md-5 pr-lg-5 mb-5 mb-md-0\">\r\n                <img src=\"{% static 'img/fh_mobile.jpg' %}\" alt=\"\" class=\"img-fluid mb-2 d-none d-md-block\" />\r\n                <h1>Registra tu optica</h1>\r\n                <p class=\"font-italic text-muted mb-0\">\r\n                    Administra las prescripciones de los pacientes de tu Optica desde cualquier lugar del mundo y m\u00e1s\r\n                </p>\r\n            </div>\r\n\r\n            <!-- Registeration Form -->\r\n            <div class=\"col-md-7 col-lg-6 ml-auto\" id=\"registration-form\">\r\n                <form action=\"\" method='POST'>{% csrf_token %}\r\n                    <h4 class=\"text-success\" style=\"display:none\" id=\"message-form\">Registra el nombre de tu \u00f3ptica</h4>\r\n                    <div class=\"row\">\r\n                        {{form.non_field_errors}}\r\n                        <!-- First Name -->\r\n                        <div class=\"input-group col-lg-12 mb-4\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <span class=\"input-group-text bg-white px-3 border-md border-right-0\">\r\n                    <i class=\"fa fa-user text-muted\"></i>\r\n                  </span>\r\n                            </div>\r\n                            {% if form.full_name.errors %} {{form.full_name|attr:\"class:form-control form-control-sm bg-white border-left-0 border-md is-invalid\"}}\r\n                            <div id=\"{{ form.full_name.id_for_label }}\" class=\"invalid-feedback\">\r\n                                {% for error in form.full_name.errors %} {{error}} {% endfor %}\r\n                            </div>\r\n                            {% else %} {{form.full_name|attr:\"class:form-control form-control-sm bg-white border-left-0 border-md\"}} {% endif %}\r\n                        </div>\r\n\r\n\r\n                        <!-- Email Address -->\r\n                        <div class=\"input-group col-lg-12 mb-4\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <span class=\"input-group-text bg-white px-3 border-md border-right-0\">\r\n                    <i class=\"fa fa-envelope text-muted\"></i>\r\n                  </span>\r\n                            </div>\r\n                            {% if form.username.errors %} {{form.username|attr:\"class:form-control form-control-sm bg-white border-left-0 border-md is-invalid\"}}\r\n                            <div id=\"{{ form.username.id_for_label }}\" class=\"invalid-feedback\">\r\n                                {% for error in form.username.errors %} {{error}} {% endfor %}\r\n                            </div>\r\n                            {% else %} {{form.username|attr:\"class:form-control form-control-sm bg-white border-left-0 border-md\"}} {% endif %}\r\n                        </div>\r\n                        <!-- Empresa -->\r\n                        <div class=\"input-group col-lg-6 mb-4\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <span class=\"input-group-text bg-white px-3 border-md border-right-0\">\r\n                    <i class=\"fa fa-eye text-muted\"></i>\r\n                  </span>\r\n                            </div>\r\n                            {% if form.optic_name.errors %} {{form.optic_name|attr:\"class:form-control form-control-sm bg-white border-left-0 border-md is-invalid\"}}\r\n                            <div id=\"{{ form.optic_name.id_for_label }}\" class=\"invalid-feedback\">\r\n                                {% for error in form.optic_name.errors %} {{error}} {% endfor %}\r\n                            </div>\r\n                            {% else %} {{form.optic_name|attr:\"class:form-control form-control-sm bg-white border-left-0 border-md\"}} {% endif %}\r\n                        </div>\r\n\r\n                        <!-- Phone Number -->\r\n                        \r\n                        <div class=\"input-group col-lg-6 mb-4\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <span class=\"input-group-text bg-white px-3 border-md border-right-0\">\r\n                    <i class=\"fa fa-phone-square text-muted\"></i>\r\n                  </span>\r\n                            </div>\r\n                            {% comment %} <select id=\"countryCode\" name=\"countryCode\" style=\"max-width: 80px\" class=\"custom-select form-control form-control-sm bg-white border-left-0 border-md h-100 font-weight-bold text-muted\">\r\n                            <option value=\"\">+12</option>\r\n                            <option value=\"\">+10</option>\r\n                            <option value=\"\">+15</option>\r\n                            <option value=\"\">+18</option>\r\n                        </select> {% endcomment %}\r\n                            {% if form.phone.errors %} {{form.phone|attr:\"class:form-control form-control-sm bg-white border-left-0 border-md is-invalid\"}}\r\n                            <div id=\"{{ form.phone.id_for_label }}",
  "[TOC]\n\n# Git \u6709\u54ea\u4e9b\u5e38\u89c4\u64cd\u4f5c\uff1f\n\n\u6211\u4eec\u7b80\u5355\u8bf4\u8bf4Git\u6709\u54ea\u4e9b\u5e38\u89c4\u64cd\u4f5c\uff0c\u80fd\u591f\u8ba9\u6211\u4eec\u5e94\u4ed8\u7b80\u5355\u7684\u5f00\u53d1\u9700\u6c42\u3002\n\n## \u5e38\u7528\u547d\u4ee4\n\n### \u514b\u9686\u4ee3\u7801\n\n- \u514b\u9686\u8fdc\u7aef\u4ee3\u7801 \n\n`git clone <\u7248\u672c\u5e93\u7684\u7f51\u5740> <\u672c\u5730\u76ee\u5f55\u540d> `\n\n- \u67e5\u770b\u672c\u5730\u7684\u4ee3\u7801\u72b6\u6001\n\n```shell\ngit status\n// \u53ef\u4ee5\u660e\u786e\u7684\u5448\u73b0\u51fa\u672c\u5730\u4ed3\u5e93\u7684\u72b6\u6001\n// \u54ea\u4e9b\u6587\u4ef6\u53d1\u751f\u6539\u52a8\uff0c\u54ea\u4e9b\u6587\u4ef6\u5df2\u7ecf\u63d0\u4ea4\u5230\u672c\u673a\n// \u4ee5\u53ca\u4e00\u4e9b\u64cd\u4f5c\u6307\u793a\u3002\n```\n\n![img](../images/gitstatus.jpg) \n\n-  \u540c\u6b65\u8fdc\u7aef\u5206\u652f\u53d8\u5316\n\n```shell\n// \u62c9\u53d6\u6307\u5b9a\u5206\u652f\u7684\u53d8\u5316\ngit fetch origin master \n// \u62c9\u53d6\u6240\u6709\u5206\u652f\u7684\u53d8\u5316\ngit fetch \n// \u62c9\u53d6\u6240\u6709\u5206\u652f\u7684\u53d8\u5316\uff0c\u5e76\u4e14\u5c06\u8fdc\u7aef\u4e0d\u5b58\u5728\u7684\u5206\u652f\u540c\u6b65\u79fb\u9664\u3010\u63a8\u8350\u3011\ngit fetch -p\n```\n\n- \u540c\u6b65\u8fdc\u7aef\u4ee3\u7801\u53d8\u5316\u3002\n\n```shell\n// \u90fd\u662f\u5148 git fetch\uff0c\u7136\u540e\u6267\u884c\u5408\u5e76\u64cd\u4f5c\n// \u4e0d\u540c\u7684\u662f\uff0cgit pull \u6267\u884c\u7684\u662f git merge\uff0cgit pull -r \u6267\u884c\u7684\u662fgit rebase\ngit pull origin master \ngit pull -r origin master\n```\n\n### \u64cd\u4f5c commit\n\n\u9996\u5148\u6211\u4eec\u8981\u660e\u786e\u4e00\u4e2a\u6982\u5ff5\uff1a\u5c31\u662f\u6bcf\u4e2a commit \u90fd\u662f\u4e00\u4efd\u5b8c\u6574\u7684\u4ee3\u7801\u72b6\u6001\uff0c\u7528\u4e00\u4e2a commitID \u6765\u552f\u4e00\u6807\u5fd7\u3002\n\n\n\n![img](../images/v2-558ec67e1b2501592864cb0eb9f40c09_hd.jpg)\n\n\n\n\u4ece\u67d0\u4e2a\u89d2\u5ea6\u4e0a\u6765\u8bf4\uff0cGit\u7ef4\u62a4\u7684\u5c31\u662f\u4e00\u4e2acommitID\u6811\uff0c\u5206\u522b\u4fdd\u5b58\u7740\u4e0d\u540c\u72b6\u6001\u4e0b\u7684\u4ee3\u7801\u3002 \u6240\u4ee5\u4f60\u5bf9\u4ee3\u7801\u7684\u4efb\u4f55\u4fee\u6539\uff0c\u6700\u7ec8\u90fd\u4f1a\u53cd\u6620\u5230 commit \u4e0a\u9762\u53bb\u3002\n\n#### \u65b0\u589e commit\n\n```shell\n// \u6dfb\u52a0\u6587\u4ef6\u5230\u7f13\u5b58\u533a\uff0c\u7136\u540e\u63d0\u4ea4\u5230\u672c\u5730\u4ed3\u5e93\ngit add files\ngit commit -m '\u63d0\u4ea4\u5907\u6ce8'\n```\n\n`git add` \u547d\u4ee4\u5c06\u5de5\u4f5c\u76ee\u5f55\u4e2d\u7684\u53d8\u5316\u6dfb\u52a0\u5230\u7f13\u5b58\u533a\u3002\u5b83\u544a\u8bc9 Git \u4f60\u5e0c\u671b\u4e0b\u4e00\u4e2a\u63d0\u4ea4\u4e2d\u5305\u542b\u8fd9\u4e2a\u6587\u4ef6\u7684\u66f4\u65b0\u3002\u4e0d\u8fc7\uff0c`git add` \u4e0d\u4f1a\u5b9e\u9645\u4e0a\u5e76\u4e0d\u4f1a\u6539\u53d8\u4f60\u7684\u4ed3\u5e93\u3002\u76f4\u5230\u4f60\u8fd0\u884c `git commit` \uff0c\u66f4\u6539\u90fd\u6ca1\u6709\u771f\u6b63\u88ab\u8bb0\u5f55\u3002\n\n\u4f7f\u7528\u8fd9\u4e9b\u547d\u4ee4\u7684\u540c\u65f6\uff0c\u4f60\u8fd8\u9700\u8981 `git status` \u6765\u67e5\u770b\u5de5\u4f5c\u76ee\u5f55\u548c\u7f13\u5b58\u533a\u7684\u72b6\u6001\u3002\n\n#### \u64a4\u9500 commit\n\n```shell\n// \u4f1a\u5c06\u63d0\u4ea4\u8bb0\u5f55\u56de\u6eda\uff0c\u4ee3\u7801\u4e0d\u56de\u6eda\ngit reset b14bb52\n// \u4f1a\u5c06\u63d0\u4ea4\u8bb0\u5f55\u548c\u4ee3\u7801\u5168\u90e8\u56de\u6eda\ngit reset --hard b14bb52\n// \u5c06\u90e8\u5206\u4ee3\u7801\u6587\u4ef6\u56de\u6eda\ngit checkout -- files\n```\n\n#### \u5408\u5e76 commit \n\u5408\u5e76 commit\uff0c\u672c\u8d28\u4e0a\u5408\u5e76\u4e24\u4efd\u4e0d\u540c\u72b6\u6001\u4e0b\u7684\u4ee3\u7801\u3002\n```shell\n// Git \u63d0\u4f9b\u4e86\u4e24\u79cd\u5408\u5e76 commit \u7684\u65b9\u5f0f\ngit merge master\ngit rebase master\n```\n\n\u90a3\u4e48 git rebase \u548c git merge \u5230\u5e95\u6709\u4ec0\u4e48\u533a\u522b\u5462\uff1f merge\u662f\u4e24\u4e2a\u5206\u652f\u5904\u7406\u51b2\u7a81\u540e\uff0c\u65b0\u589e\u4e00\u4e2a commit \u8ffd\u52a0\u5230master\u4e0a\u3002 rebase\u662f\u5c06someFeature\u5206\u652f\u4e0a\u7684commit\u8bb0\u5f55\u8ffd\u52a0\u5230\u4e3b\u5206\u652f\u4e0a\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e2a\u65f6\u5019commit\u5176\u5b9e\u5df2\u7ecf\u53d1\u751f\u53d8\u5316\u3002\n\n![img](../images/rebasemerge.jpg) \n\n\u76f8\u5bf9\u6765\u8bf4\uff0cgit merge \u5904\u7406\u51b2\u7a81\u66f4\u76f4\u63a5\uff0c\u800cgit rebase \u80fd\u591f\u4fdd\u8bc1\u6e05\u6670\u7684 commit \u8bb0\u5f55\u3002\n\n\u5408\u5e76 commit \u7684\u65f6\u5019\uff0c\u901a\u5e38\u4f1a\u53d1\u751f\u51b2\u7a81\u3002 \u53ef\u4ee5\u5168\u5c40\u641c\u7d22\u7279\u6b8a\u5b57\u7b26\u6bd4\u5982<<<\uff0c\u627e\u5230\u9700\u8981\u5904\u7406\u7684\u4ee3\u7801\u4f4d\u7f6e\uff0c\u7136\u540e\u8ba4\u771f\u5206\u6790\u5e94\u8be5\u4fdd\u7559\u54ea\u4e00\u90e8\u5206\u4ee3\u7801\u3002\n\n![img](https://pic3.zhimg.com/80/v2-08a6f38cb89dbdd9128f2ba13c53a93a_hd.jpg)\n\n\n\u5728\u56e2\u961f\u534f\u4f5c\u7684\u65f6\u5019\uff0c\u5206\u652f\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002\u90a3\u4e48\u5e94\u8be5\u5982\u4f55\u5bf9\u5206\u652f\u8fdb\u884c\u64cd\u4f5c\u5462\uff1f\n\n### \u64cd\u4f5c\u5206\u652f\n\n\u6240\u8c13\u7684\u5206\u652f\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u6307\u5411 commitID \u7684\u6307\u9488\uff0c\u4f60\u53ef\u4ee5\u53bb`cat.git/refs/heads`\u91cc\u53bb\u770b\u770b\u3002\n\n![img](../images/image-20191113170201620.png)\n\n\n\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c**\u6211\u4eec\u5efa\u8bae\u5206\u652f\u81f3\u5c11\u80fd\u591f\u660e\u786e\u7684\u6807\u8bb0\u529f\u80fd\u540d\u79f0\uff0c\u5982\u679c\u80fd\u6807\u8bb0\u7528\u6237\u5c31\u66f4\u597d\u4e86**\uff0c\u6bd4\u5982sunheng/feature\u3002\n\n#### \u67e5\u770b\u5206\u652f\n\n![image-20191119165519991](../images/image-20191119165519991.png)\n\n\u53ef\u4ee5\u540c\u65f6\u770b\u5230\u672c\u5730\u5206\u652f\u548c\u8fdc\u7aef\u5206\u652f\uff0c\u914d\u5408\u4e0a\u524d\u6587\u4ecb\u7ecd\u7684git fetch -p\u53ef\u4ee5\u7b2c\u4e00\u65f6\u95f4\u67e5\u770b\u5230\u6700\u65b0\u7684\u5206\u652f\u4fe1\u606f\u3002\n\n#### \u65b0\u589e\u672c\u5730\u5206\u652f \u5176\u5b9e\u5c31\u662f\u521b\u5efa\u4e00\u4e2a\u6307\u9488\u6307\u5411\u67d0\u4e00\u4e2a commitID\u3002\n\n```shell\n// \u4ece\u5f53\u524d\u5206\u652f\u65b0\u589e\u4e00\u4e2a\u65b0\u7684\u5206\u652fsunheng/feature\n// \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e94\u8be5\u4ecemaster\u6216\u8005\u5176\u4ed6\u7a33\u5b9a\u5206\u652f\u6765\u65b0\u589e\u5206\u652f\ngit branch sunheng/feature  //\u65b0\u5efa\u5206\u652f\ngit checkout sunheng/feature // \u5207\u6362\u5206\u652f\n// \u4ee5\u4e0a\u4e24\u6761\u7b49\u4e8e\u4e0b\u9762\u4e00\u6761\ngit checkout -b sunheng/feature // \u65b0\u5efa\u5e76\u5207\u6362\u5206\u652f\n```\n\n#### \u5207\u6362\u5206\u652f/commit\n\n```shell\ngit checkout sunheng/feature // \u5207\u6362\u5206\u652f\ngit checkout HEAD^ // \u5207\u6362\u5230\u4e0a\u4e00\u6b21\u63d0\u4ea4\ngit checkout HEAD~2 // \u5207\u6362\u5230\u7b2c\u4e8c\u4e2a\u7236\u63d0\u4ea4\ngit checkout 1ab1afe2da9f3f66df34badec37978b07f06bf73 //\u5207\u6362\u52301ab1afe2da9f3f66df34badec37978b07f06bf73\n```\n\n#### \u5220\u9664\u672c\u5730\u5206\u652f \u5176\u5b9e\u5c31\u662f\u79fb\u9664\u4e00\u4e2a\u6307\u5411 commitID \u7684\u6307\u9488\u3002\n\n```shell\n// \u5220\u9664\u672c\u5730\u5206\u652f\uff0c\u5982\u679c\u672c\u5730\u8fd8\u6709\u672a\u5408\u5e76\u7684\u4ee3\u7801\uff0c\u5219\u4e0d\u80fd\u5220\u9664\ngit branch -d sunheng/feature\n// \u5f3a\u5236\u5220\u9664\u672c\u5730\u5206\u652f\ngit branch -D sunheng/feature\n```\n\n####  \u65b0\u589e\u8fdc\u7aef\u5206\u652f \n\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u662f\u65b0\u5efa\u672c\u5730\u5206\u652f\uff0c\u7136\u540e\u66f4\u65b0\u5230\u8fdc\u7aef\u7684\u65b9\u5f0f\u6765\u65b0\u589e\u4e00\u4e2a\u8fdc\u7aef\u5206\u652f\n```shell\ngit push origin sunheng/feature\n```\n\n#### \u5220\u9664\u8fdc\u7aef\u5206\u652f\n\u540c\u6837\uff0c\u6211\u4eec\u4e5f\u662f\u901a\u8fc7\u66f4\u65b0\u5230\u8fdc\u7aef\u7684\u65b9\u5f0f\u6765\u5220\u9664\u4e00\u4e2a\u8fdc\u7aef\u5206\u652f\n\n```shell\n// \u7b49\u540c\u4e8egit push origin -d sunheng/feaure\ngit push origin :sunheng/feature\n```\n\n### \u6807\u8bb0/\u6807\u8bb0(tag)\n\n- \u7528\u4e8e\u6807\u8bb0\u90e8\u7f72\u548c\u53d1\u5e03\u3002\n- \u5e26\u6ce8\u91ca\u7684\u6807\u7b7e\u662fGit\u5386\u53f2\u4e2d\u4e0d\u53ef\u6539\u53d8",
  "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Document</title>\n\n  <script src='../../dist/micro-bridge.min.js'></script>\n</head>\n<body>\n\n</body>\n</html>\n",
  "<?php\n\nnamespace App\\Services\\Filters;\n\n\nabstract class AbstractFilter\n{\n\n    /**\n     * @var\n     */\n    public $builder;\n\n    /**\n     * @param $builder\n     * @param $params\n     * @return mixed\n     */\n    public function apply($builder, $params)\n    {\n        $this->builder = $builder;\n        foreach ($params as $param => $value) {\n            if (method_exists($this, $param) && $value) {\n                $this->$param($value);\n            }\n        }\n\n        return $this->builder;\n    }\n}\n",
  "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Runtime.CompilerServices;\nusing System.Threading;\nusing System.Threading.Tasks;\nusing AdaptiveExpressions.Properties;\nusing Newtonsoft.Json;\nusing Microsoft.Bot.Builder.Dialogs;\nusing Octokit;\nusing System.ComponentModel.DataAnnotations;\n\nnamespace GitHubClient.Issue\n{\n    /// <summary>\n    /// Action to call GitHubClient.Issue.GetAllForRepository() API.\n    /// </summary>\n    public class GetAllForRepository : GitHubAction\n    {\n        /// <summary>\n        /// Class identifier.\n        /// </summary>\n        [JsonProperty(\"$kind\")]\n        public const string Kind = \"GitHub.Issue.GetAllForRepository\";\n\n        /// <summary>\n        /// Initializes a new instance of the <see cref=\"GetAllForRepository\"/> class.\n        /// </summary>\n        /// <param name=\"callerPath\">Optional, source file full path.</param>\n        /// <param name=\"callerLine\">Optional, line number in source file.</param>\n        public GetAllForRepository([CallerFilePath] string callerPath = \"\", [CallerLineNumber] int callerLine = 0)\n        {\n           this.RegisterSourceLocation(callerPath, callerLine);\n        }\n\n        /// <summary>\n        /// (OPTIONAL) Gets or sets the expression for api argument owner.\n        /// </summary>\n        /// <value>\n        /// The value or expression to bind to the value for the argument.\n        /// </value>\n        [JsonProperty(\"owner\")]\n        public StringExpression Owner  { get; set; }\n\n        /// <summary>\n        /// (OPTIONAL) Gets or sets the expression for api argument name.\n        /// </summary>\n        /// <value>\n        /// The value or expression to bind to the value for the argument.\n        /// </value>\n        [JsonProperty(\"name\")]\n        public StringExpression Name  { get; set; }\n\n        /// <summary>\n        /// (OPTIONAL) Gets or sets the expression for api argument request.\n        /// </summary>\n        /// <value>\n        /// The value or expression to bind to the value for the argument.\n        /// </value>\n        [JsonProperty(\"request\")]\n        public ObjectExpression<Octokit.RepositoryIssueRequest> Request  { get; set; }\n\n        /// <summary>\n        /// (OPTIONAL) Gets or sets the expression for api argument options.\n        /// </summary>\n        /// <value>\n        /// The value or expression to bind to the value for the argument.\n        /// </value>\n        [JsonProperty(\"options\")]\n        public ObjectExpression<Octokit.ApiOptions> Options  { get; set; }\n\n        /// <summary>\n        /// (OPTIONAL) Gets or sets the expression for api argument repositoryId.\n        /// </summary>\n        /// <value>\n        /// The value or expression to bind to the value for the argument.\n        /// </value>\n        [JsonProperty(\"repositoryId\")]\n        public IntExpression RepositoryId  { get; set; }\n\n        /// <inheritdoc/>\n        protected override async Task<object> CallGitHubApi(DialogContext dc, Octokit.GitHubClient gitHubClient, CancellationToken cancellationToken = default(CancellationToken))\n        {\n            if (Owner!= null && Name!= null && Request!= null && Options!= null)\n            {\n                var ownerValue = Owner.GetValue(dc.State);\n                var nameValue = Name.GetValue(dc.State);\n                var requestValue = Request.GetValue(dc.State);\n                var optionsValue = Options.GetValue(dc.State);\n                return await gitHubClient.Issue.GetAllForRepository(ownerValue, nameValue, requestValue, optionsValue).ConfigureAwait(false);\n            }\n            if (Owner!= null && Name!= null && Options!= null)\n            {\n                var ownerValue = Owner.GetValue(dc.State);\n                var nameValue = Name.GetValue(dc.State);\n                var optionsValue = Options.GetValue(dc.State);\n                return await gitHubClient.Issue.GetAllForRepository(ownerValue, nameValue, optionsValue).ConfigureAwait(false);\n            }\n            if (Owner!= null && Name!= null && Request!= null)\n            {\n                var ownerValue = Owner.GetValue(dc.State);\n                var nameValue = Name.GetValue(dc.State);\n                var requestValue = Request.GetValue(dc.State);\n                return await gitHubClient.Issue.GetAllForRepository(ownerValue, nameValue, requestValue).ConfigureAwait(false);\n            }\n            if (RepositoryId!= null && Request!= null && Options!= null)\n            {\n                var repositoryIdValue = RepositoryId.GetValue(dc.State);\n                var requestValue = Request.GetValue(dc.State);\n                var optionsValue = Options.GetValue(dc.State);\n                return await gitHubClient.Issue.GetAllForRepository((Int64)repositoryIdValue, requestValue, optionsValue).ConfigureAwait(false);\n            }\n            if (Owner!= null && Name!= null)\n            {\n                var ownerValue = Owner.GetValue(dc.State);\n                var nameValue = Name.GetValue(dc.State);\n                return await gitHubClient.Issue.GetAllForRepository(ownerValue, nameValue).ConfigureAwait(false);\n            }\n            if (RepositoryId!= null && Options!= null)\n            {\n                var repositoryIdValue = RepositoryId.GetValue(dc.State);\n                var optionsValue = Options.GetValue(dc.State);\n                return await gitHubClient.Issue.GetAllForRepository((Int64)repositoryIdValue, optionsValue).ConfigureAwait(false);\n            }\n            if (RepositoryId!= null && Request!= null)\n            {\n                var repositoryIdValue = RepositoryId.GetValue(dc.State);\n                var requestValue = Request.GetValue(dc.State);\n                return await gitHubClient.Issue.GetAllForRepository((Int64)repositoryIdValue, requestValue).ConfigureAwait(false);\n            }\n            if (RepositoryId!= null)\n            {\n                var repositoryIdValue = RepositoryId.GetValue(dc.State);\n                return await gitHubClient.Issue.GetAllForRepository((Int64)repositoryIdValue).ConfigureAwait(false);\n            }\n\n            throw new ArgumentNullException(\"Required [] arguments missing for GitHubClient.Issue.GetAllForRepository\");\n        }\n    }\n}\n",
  "import React from \"react\";\nimport Box from '@material-ui/core/Box'\nimport Grid from '@material-ui/core/Grid'\n\nexport default ({ content, sidebar }) => (\n  <Grid container spacing={0}>\n    <Grid item md={9} xs={12} className=\"main-content\">{content}</Grid>\n    <Grid item md={3} xs={12} className=\"sidebar-content border-left-2\">{sidebar}</Grid>\n  </Grid>\n);\n",
  "{% extends \"base.html\" %}\n\n{% block head %}\n    <title>Task Manager</title>\n{% endblock %}\n\n{% block body %}\n\n    <h1 style=\"margin-top: 50px;\">Login page</h1>\n\n    <form style=\"margin-top: 30px;\" action=\"/login\" method=\"post\">\n        <input maxlength=\"18\" autocomplete=\"off\" autofocus name=\"name\" placeholder=\"Name\" type=\"text\">\n        <br>\n        <input autocomplete=\"off\" style=\"margin-top: 21px;\" type=\"password\" method=\"post\" name=\"pwd\" placeholder=\"Password\" id=\"\">\n        <br>\n        <input style=\"margin-top: 21px;\" type=\"submit\" name=\"submit\" value=\"Log In\">\n    </form>\n\n{% endblock %}\n",
  "<html>\n<body>\n\t{% include \"header.html\" %}\n\t<h1>Catalog of FORTNITE Weapons</h1>\n</br>\n\t{% for weapon in weapons %}\n\t<a href=\"{{url_for('showWeaponList', weapon_name = weapon.name)}}\">{{weapon.name}}</a>\n</br>\n</br>\n\t{% endfor %}\n</body>\n</html>",
  "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\" dir=\"ltr\">\n  <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n\t<!-- headlinks removed -->\n\t<link rel=\"shortcut icon\" href=\"../../../../misc/favicon.ico\"/>\n    <title>Military history of Sparta (disambiguation) - Wikipedia, the free encyclopedia</title>\n    <style type=\"text/css\">/*<![CDATA[*/ @import \"../../../../skins/offline/main.css\"; /*]]>*/</style>\n    <link rel=\"stylesheet\" type=\"text/css\" media=\"print\" href=\"../../../../skins/common/commonPrint.css\" />\n    <!--[if lt IE 5.5000]><style type=\"text/css\">@import \"../../../../skins/monobook/IE50Fixes.css\";</style><![endif]-->\n    <!--[if IE 5.5000]><style type=\"text/css\">@import \"../../../../skins/monobook/IE55Fixes.css\";</style><![endif]-->\n    <!--[if IE 6]><style type=\"text/css\">@import \"../../../../skins/monobook/IE60Fixes.css\";</style><![endif]-->\n    <!--[if IE]><script type=\"text/javascript\" src=\"../../../../skins/common/IEFixes.js\"></script>\n    <meta http-equiv=\"imagetoolbar\" content=\"no\" /><![endif]-->\n    <script type=\"text/javascript\" src=\"../../../../skins/common/wikibits.js\"></script>\n    <script type=\"text/javascript\" src=\"../../../../skins/offline/md5.js\"></script>\n    <script type=\"text/javascript\" src=\"../../../../skins/offline/utf8.js\"></script>\n    <script type=\"text/javascript\" src=\"../../../../skins/offline/lookup.js\"></script>\n    <script type=\"text/javascript\" src=\"../../../../raw/gen.js\"></script>        <style type=\"text/css\">/*<![CDATA[*/\n@import \"../../../../raw/MediaWiki%7ECommon.css\";\n@import \"../../../../raw/MediaWiki%7EMonobook.css\";\n@import \"../../../../raw/gen.css\";\n/*]]>*/</style>          </head>\n  <body\n    class=\"ns-0\">\n    <div id=\"globalWrapper\">\n      <div id=\"column-content\">\n\t<div id=\"content\">\n\t  <a name=\"top\" id=\"contentTop\"></a>\n\t        <h1 class=\"firstHeading\">Military history of Sparta (disambiguation)</h1>\n\t  <div id=\"bodyContent\">\n\t    <h3 id=\"siteSub\">From Wikipedia, the free encyclopedia</h3>\n\t    <div id=\"contentSub\"></div>\n\t    \t    \t    <!-- start content -->\n\t    <p>You may be looking for:</p>\n<p><a href=\"../../../../articles/h/i/s/History_of_Sparta_248e.html\" title=\"History of Sparta\">History of Sparta</a> for historical information<br />\n<a href=\"../../../../articles/s/p/a/Sparta.html\" title=\"Sparta\">Sparta</a> for a look at Sparta in a more geographical sense<br />\n<a href=\"../../../../articles/s/p/a/Spartan_Army_94e3.html\" title=\"Spartan Army\">Spartan Army</a> for the wars and soldiers of Sparta<br /></p>\n<div class=\"notice metadata plainlinks\" id=\"disambig\">\n<table style=\"background:none\">\n<tr>\n<td style=\"vertical-align:middle;\"><a href=\"../../../../articles/d/i/s/Image%7EDisambig_gray.svg_c351.html\" class=\"image\" title=\"Disambiguation notice\"><img alt=\"Disambiguation notice\" src=\"../../../../images/shared/thumb/5/5f/Disambig_gray.svg/30px-Disambig_gray.svg.png\" width=\"30\" height=\"23\" border=\"0\" /></a></td>\n<td style=\"vertical-align:middle;\"><i>This <a href=\"../../../../articles/d/i/s/Wikipedia%7EDisambiguation_78fc.html\" title=\"Wikipedia:Disambiguation\">disambiguation</a> page lists articles associated with the same title. If an <a href=\"http://en.wikipedia.org../../../../articles/w/h/a/Special%7EWhatlinkshere_Military_history_of_Sparta_%28disambiguation%29_8412.html\" class=\"external text\" title=\"http://en.wikipedia.org../../../../articles/w/h/a/Special%7EWhatlinkshere_Military_history_of_Sparta_%28disambiguation%29_8412.html\" rel=\"nofollow\">internal link</a> led you here, you may wish to change the link to point directly to the intended article.</i></td>\n</tr>\n</table>\n</div>\n\n\n<!-- \nNewPP limit report\nPreprocessor node count: 12/1000000\nPost-expand include size: 757/2048000 bytes\nTemplate argument size: 0/2048000 bytes\nExpensive parser function count: 0/500\n-->\n<div class=\"printfooter\">\n</div>\n\t    <div id=\"catlinks\"><div id='catlinks' class='catlinks'><div id=\"mw-normal-catlinks\"><a href=\"../../../../articles/c/a/t/Special%7ECategories_101d.html\" title=\"Special:Categories\">Categories</a>:&#32;<span dir='ltr'><a href=\"../../../../articles/d/i/s/Category%7EDisambiguation_7fff.html\" title=\"Category:Disambiguation\">Disambiguation</a></span></div></div></div>\t    <!-- end content -->\n\t    <div class=\"visualClear\"></div>\n\t  </div>\n\t</div>\n      </div>\n      <div id=\"column-one\">\n\t<div id=\"p-cactions\" class=\"portlet\">\n\t  <h5>Views</h5>\n\t  <ul>\n\t    <li id=\"ca-nstab-main\"\n\t       class=\"selected\"\t       ><a href=\"../../../../articles/m/i/l/Military_history_of_Sparta_%28disambiguation%29_eb0a.html\">Article</a></li><li id=\"ca-talk\"\n\t       class=\"new\"\t       ><a href=\"../../../../articles/m/i/l/Talk%7EMilitary_history_of_Sparta_%28disambiguation%29_848c.html\">Discussion</a></li><li id=\"ca-current\"\n\t       \t       ><a href=\"http://en.wikipedia.org/wiki/Military_history_of_Sparta_%28disambiguation%29\">Current revision</a></li>\t  </ul>\n\t</div>\n\t<div class=\"portlet\" id=\"p-logo\">\n\t  <a style=\"background-image: url(../../../../misc/Wiki.png);\"\n\t    href=\"../../../../index.html\"\n\t    title=\"Main Page\"></a>\n\t</div>\n\t<script type=\"text/javascript\"> if (window.isMSIE55) fixalpha(); </script>\n\t\t<div class='portlet' id='p-navigation'>\n\t  <h5>Navigation</h5>\n\t  <div class='pBody'>\n\t    <ul>\n\t    \t      <li id=\"n-mainpage\"><a href=\"../../../../index.html\">Main Page</a></li>\n\t     \t      <li id=\"n-Contents\"><a href=\"../../../../articles/c/o/n/Portal%7EContents_b878.html\">Contents</a></li>\n\t     \t      <li id=\"n-featuredcontent\"><a href=\"../../../../articles/f/e/a/Portal%7EFeatured_content_5442.html\">Featured content</a></li>\n\t     \t      <li id=\"n-currentevents\"><a href=\"../../../../articles/c/u/r/Portal%7ECurrent_events_bb60.html\">Current events</a></li>\n\t     \t    </ul>\n\t  </div>\n\t</div>\n\t\t<div class='portlet' id='p-interaction'>\n\t  <h5>Interaction</h5>\n\t  <div class='pBody'>\n\t    <ul>\n\t    \t      <li id=\"n-aboutsite\"><a href=\"../../../../articles/a/b/o/Wikipedia%7EAbout_8d82.html\">About Wikipedia</a></li",
  "const assert = require('assert');\nconst configAuth = require('./config.auth');\n\nconst harvest = configAuth.harvest;\n\ndescribe('Invoice Payments API', () => {\n  describe('Create Invoice Payments', () => {\n    it('should implement create an Invoice Payment method', (done) => {\n      assert.equal(typeof harvest.invoicePayments.create, 'function');\n      done();\n    });\n  });\n\n  describe('List All Invoice Payments', () => {\n    it('should implement return all Invoice Payments method', (done) => {\n      assert.equal(typeof harvest.invoicePayments.list, 'function');\n      done();\n    });\n\n    it('should implement ListBy Invoice Payments method', (done) => {\n      assert.equal(typeof harvest.invoicePayments.listBy, 'function');\n      done();\n    });\n  });\n\n  describe('Delete Invoice Payments', () => {\n    it('should implement Delete an Invoice Payment method', (done) => {\n      assert.equal(typeof harvest.invoicePayments.delete, 'function');\n      done();\n    });\n  });\n});\n",
  "<?php\n\nnamespace App\\Http\\Controllers\\API;\n\nuse App\\Http\\Requests\\API\\CreateCountryAPIRequest;\nuse App\\Http\\Requests\\API\\UpdateCountryAPIRequest;\nuse App\\Models\\Country;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Str;\n\nuse App\\Http\\Controllers\\AppBaseController;\nuse Response;\n\n/**\n * Class CountryController\n * @package App\\Http\\Controllers\\API\n */\n\nclass CountryAPIController extends AppBaseController\n{\n\n    public function index(Request $request)\n    {\n        $query = Country::query();\n\n        if ($request->get('skip')) {\n            $query->skip($request->get('skip'));\n        }\n        if ($request->get('limit')) {\n            $query->limit($request->get('limit'));\n        }\n\n        $countries = $query->with('provinces')->get();\n\n        return $this->sendResponse($countries->toArray(), 'Countries retrieved successfully');\n    }\n\n\n    public function store(CreateCountryAPIRequest $request)\n    {\n        $input = $request->all();\n\n        /** @var Country $country */\n        $input['slug'] = Str::slug($request->name);\n        $country = Country::create($input);\n\n        return $this->sendResponse($country->toArray(), 'Country saved successfully');\n    }\n\n    \n    public function show($id)\n    {\n        /** @var Country $country */\n        $country = Country::find($id);\n\n        if (empty($country)) {\n            return $this->sendError('Country not found');\n        }\n\n        return $this->sendResponse($country->toArray(), 'Country retrieved successfully');\n    }\n\n  \n    public function update($id, UpdateCountryAPIRequest $request)\n    {\n        /** @var Country $country */\n        $country = Country::find($id);\n\n        if (empty($country)) {\n            return $this->sendError('Country not found');\n        }\n\n        $country->fill($request->all());\n        $country->slug = Str::slug($request->name);\n        $country->save();\n\n        return $this->sendResponse($country->toArray(), 'Country updated successfully');\n    }\n\n  \n    public function destroy($id)\n    {\n        /** @var Country $country */\n        $country = Country::find($id);\n\n        if (empty($country)) {\n            return $this->sendError('Country not found');\n        }\n\n        $country->delete();\n\n        return $this->sendSuccess('Country deleted successfully');\n    }\n}\n",
  "from django.conf import settings\nfrom django.utils.translation import ugettext_lazy as _\nfrom corehq.apps.commtrack.const import RequisitionActions\nfrom corehq.apps.domain.models import Domain\nfrom corehq.apps.commtrack import const\nfrom corehq.apps.sms.api import send_sms_to_verified_number\nfrom corehq import toggles\nfrom lxml import etree\nimport logging\nfrom dimagi.utils.couch.loosechange import map_reduce\nfrom dimagi.utils.parsing import json_format_datetime\nfrom datetime import datetime\nfrom corehq.apps.commtrack.util import get_supply_point\nfrom corehq.apps.commtrack.xmlutil import XML\nfrom corehq.apps.commtrack.models import CommtrackConfig, StockTransaction, RequisitionTransaction, RequisitionCase\nfrom corehq.apps.products.models import Product\nfrom corehq.apps.users.models import CouchUser\nfrom corehq.apps.receiverwrapper import submit_form_locally\nfrom corehq.apps.locations.models import Location\nfrom xml.etree import ElementTree\nfrom casexml.apps.case.mock import CaseBlock\nfrom casexml.apps.case.xml import V2\nfrom corehq.apps.commtrack.exceptions import (\n    NoDefaultLocationException,\n    NotAUserClassError,\n)\nimport uuid\nimport re\n\nlogger = logging.getLogger('commtrack.sms')\n\n\nclass SMSError(RuntimeError):\n    pass\n\n\ndef handle(verified_contact, text, msg=None):\n    \"\"\"top-level handler for incoming stock report messages\"\"\"\n    domain = Domain.get_by_name(verified_contact.domain)\n    if not domain.commtrack_enabled:\n        return False\n\n    try:\n        if toggles.STOCK_AND_RECEIPT_SMS_HANDLER.enabled(domain):\n            # handle special stock parser for custom domain logic\n            data = StockAndReceiptParser(domain, verified_contact).parse(text.lower())\n        else:\n            # default report parser\n            data = StockReportParser(domain, verified_contact).parse(text.lower())\n        if not data:\n            return False\n    except NotAUserClassError:\n        return False\n    except Exception, e: # todo: should we only trap SMSErrors?\n        if settings.UNIT_TESTING or settings.DEBUG:\n            raise\n        send_sms_to_verified_number(verified_contact, 'problem with stock report: %s' % str(e))\n        return True\n\n    process(domain.name, data)\n    send_confirmation(verified_contact, data)\n    return True\n\n\ndef process(domain, data):\n    import pprint\n    logger.debug(pprint.pformat(data))\n\n    xml = to_instance(data)\n\n    logger.debug(xml)\n\n    submit_form_locally(\n        instance=xml,\n        domain=domain,\n    )\n\n\nclass StockReportParser(object):\n    \"\"\"a helper object for parsing raw stock report texts\"\"\"\n\n    def __init__(self, domain, v):\n        self.domain = domain\n        self.v = v\n\n        self.location = None\n        u = v.owner\n\n        if domain.commtrack_enabled:\n            # if user is not actually a user, we let someone else process\n            if not isinstance(u, CouchUser):\n                raise NotAUserClassError\n\n            # currently only support one location on the UI\n            linked_loc = u.location\n            if linked_loc:\n                self.location = get_supply_point(self.domain.name, loc=linked_loc)\n\n        self.C = domain.commtrack_settings\n\n    def get_req_id(self):\n        reqs = RequisitionCase.open_for_location(\n            self.location['location'].domain,\n            self.location['location']._id\n        )\n        if reqs:\n            # only support one open requisition per location\n            assert(len(reqs) == 1)\n            return reqs[0]\n        else:\n            return uuid.uuid4().hex\n\n    def parse(self, text):\n        \"\"\"take in a text and return the parsed stock transactions\"\"\"\n        args = text.split()\n\n        if len(args) == 0:\n            # we'll allow blank messages to propagate further in case some\n            # other handler cares about them.\n            return None\n\n        action_keyword = args[0]\n        args = args[1:]\n        if not self.location:\n            if len(args) == 0:\n                # todo: this will change when users are tied to locations\n                # though need to make sure that PACK and APPROVE still require location code\n                # (since they refer to locations different from the sender's loc)\n                raise SMSError(\"must specify a location code\")\n            self.location = self.location_from_code(args[0])\n            args = args[1:]\n\n        action = self.C.action_by_keyword(action_keyword)\n        if action and action.type =='stock':\n            # TODO: support single-action by product, as well as by action?\n            if not self.location.get('case'):\n                raise NoDefaultLocationException(\n                    _(\"You have not been registered with a default location yet.\"\n                      \"  Please register a default location for this user.\")\n                )\n            self.case_id = self.location['case']._id\n            _tx = self.single_action_transactions(action, args, self.transaction_factory(StockTransaction))\n        elif action and action.action in [\n            RequisitionActions.REQUEST,\n            RequisitionActions.FULFILL,\n            RequisitionActions.RECEIPTS\n        ]:\n            self.case_id = self.get_req_id()\n            _tx = self.single_action_transactions(\n                action,\n                args,\n                self.transaction_factory(RequisitionTransaction)\n            )\n        elif self.C.multiaction_enabled and action_keyword == self.C.multiaction_keyword:\n            # multiple action stock report\n            _tx = self.multiple_action_transactions(args, self.transaction_factory(StockTransaction))\n        else:\n            # initial keyword not recognized; delegate to another handler\n            return None\n\n        tx = list(_tx)\n        if not tx:\n            raise SMSError(\"stock report doesn't have any transactions\")\n\n        return {\n            'timestamp': datetime.utcnow(),\n            'user': self.v.owner,\n            'phone': self.v.phone_number,\n            'location': self.location['location'],\n            'transactions': tx,\n        }\n\n    def single_action_transactions(self, action, args, make_tx):\n        # special case to handle immediate stock-out reports\n        if action.action == const.StockActions.STOCKOUT:\n            if all(self.looks_like_prod_code(arg) for arg in args):\n                for prod_code in args:\n                    yield make_tx(\n                        product=self.product_from_code(prod_code),\n                        action_def=action,\n                        quantity=0,\n                    )\n\n                return\n            else:\n                raise SMSError(\"can't include a quantity for stock-out action\")\n\n        products = []\n        for arg in args:\n            if self.looks_like_prod_code(arg):\n                products.append(self.product_from_code(arg))\n            else:\n                if not products:\n                    raise SMSError('quantity \"%s\" doesn\\'t have a product' % arg)\n                if len(products) > 1:\n                    raise SMSError('missing quantity for product \"%s\"' % products[-1].code)\n\n                try:\n                    value = int(arg)\n                except:\n                    raise SMSError('could not understand product quantity \"%s\"' % arg)\n\n                for p in products:\n                    yield make_tx(product=p, action_def=action, quantity=value)\n                products = []\n        if products:\n            raise SMSError('missing quantity for product \"%s\"' % products[-1].code)\n\n    def multiple_action_transactions(self, args, make_tx):\n        action = None\n        product = None\n\n        # TODO: catch that we don't mix in requisiton and stock report keywords in the same multi-action message?\n\n        _args = iter(args)\n        def next():\n            return _args.next()\n\n        found_product_for_action = True\n        while True:\n            try:\n                keyword = next()\n            except StopIteration:\n                if not found_",
  "# SPDX-License-Identifier: GPL-2.0+\n\nobj-y\t:= tao3530.o\n",
  "// <auto-generated>\n//     Generated by the protocol buffer compiler.  DO NOT EDIT!\n//     source: org/curioswitch/cafemap/api/cafe-map-service.proto\n// </auto-generated>\n#pragma warning disable 1591, 0612, 3021\n#region Designer generated code\n\nusing pb = global::Google.Protobuf;\nusing pbc = global::Google.Protobuf.Collections;\nusing pbr = global::Google.Protobuf.Reflection;\nusing scg = global::System.Collections.Generic;\nnamespace Org.Curioswitch.Cafemap.Api {\n\n  /// <summary>Holder for reflection information generated from org/curioswitch/cafemap/api/cafe-map-service.proto</summary>\n  public static partial class CafeMapServiceReflection {\n\n    #region Descriptor\n    /// <summary>File descriptor for org/curioswitch/cafemap/api/cafe-map-service.proto</summary>\n    public static pbr::FileDescriptor Descriptor {\n      get { return descriptor; }\n    }\n    private static pbr::FileDescriptor descriptor;\n\n    static CafeMapServiceReflection() {\n      byte[] descriptorData = global::System.Convert.FromBase64String(\n          string.Concat(\n            \"CjJvcmcvY3VyaW9zd2l0Y2gvY2FmZW1hcC9hcGkvY2FmZS1tYXAtc2Vydmlj\",\n            \"ZS5wcm90bxIbb3JnLmN1cmlvc3dpdGNoLmNhZmVtYXAuYXBpIi0KBkxhdExu\",\n            \"ZxIQCghsYXRpdHVkZRgBIAEoARIRCglsb25naXR1ZGUYAiABKAEigAEKDExh\",\n            \"dExuZ0JvdW5kcxI3Cgpzb3V0aF93ZXN0GAEgASgLMiMub3JnLmN1cmlvc3dp\",\n            \"dGNoLmNhZmVtYXAuYXBpLkxhdExuZxI3Cgpub3J0aF9lYXN0GAIgASgLMiMu\",\n            \"b3JnLmN1cmlvc3dpdGNoLmNhZmVtYXAuYXBpLkxhdExuZyJPChBHZXRQbGFj\",\n            \"ZXNSZXF1ZXN0EjsKCHZpZXdwb3J0GAEgASgLMikub3JnLmN1cmlvc3dpdGNo\",\n            \"LmNhZmVtYXAuYXBpLkxhdExuZ0JvdW5kcyKHAQoFUGxhY2USCgoCaWQYASAB\",\n            \"KAkSNQoIcG9zaXRpb24YAiABKAsyIy5vcmcuY3VyaW9zd2l0Y2guY2FmZW1h\",\n            \"cC5hcGkuTGF0TG5nEgwKBG5hbWUYAyABKAkSFAoMaW5zdGFncmFtX2lkGAQg\",\n            \"ASgJEhcKD2dvb2dsZV9wbGFjZV9pZBgFIAEoCSJGChFHZXRQbGFjZXNSZXNw\",\n            \"b25zZRIxCgVwbGFjZRgBIAMoCzIiLm9yZy5jdXJpb3N3aXRjaC5jYWZlbWFw\",\n            \"LmFwaS5QbGFjZSIdCg9HZXRQbGFjZVJlcXVlc3QSCgoCaWQYASABKAkiRQoQ\",\n            \"R2V0UGxhY2VSZXNwb25zZRIxCgVwbGFjZRgBIAEoCzIiLm9yZy5jdXJpb3N3\",\n            \"aXRjaC5jYWZlbWFwLmFwaS5QbGFjZSLcAQoITGFuZG1hcmsSCgoCaWQYASAB\",\n            \"KAkSFwoPZ29vZ2xlX3BsYWNlX2lkGAIgASgJEhIKCnMyX2NlbGxfaWQYAyAB\",\n            \"KAQSOAoEdHlwZRgEIAEoDjIqLm9yZy5jdXJpb3N3aXRjaC5jYWZlbWFwLmFw\",\n            \"aS5MYW5kbWFyay5UeXBlIl0KBFR5cGUSCwoHVU5LTk9XThAAEhAKDEJFQVVU\",\n            \"WV9TQUxPThABEg8KC0dBU19TVEFUSU9OEAISCAoEUEFSSxADEg8KC1BPU1Rf\",\n            \"T0ZGSUNFEAQSCgoGU0NIT09MEAUiUwoUTGlzdExhbmRtYXJrc1JlcXVlc3QS\",\n            \"OwoIdmlld3BvcnQYASABKAsyKS5vcmcuY3VyaW9zd2l0Y2guY2FmZW1hcC5h\",\n            \"cGkuTGF0TG5nQm91bmRzIlAKFUxpc3RMYW5kbWFya3NSZXNwb25zZRI3Cghs\",\n            \"YW5kbWFyaxgBIAMoCzIlLm9yZy5jdXJpb3N3aXRjaC5jYWZlbWFwLmFwaS5M\",\n            \"YW5kbWFyazLdAgoOQ2FmZU1hcFNlcnZpY2USagoJR2V0UGxhY2VzEi0ub3Jn\",\n            \"LmN1cmlvc3dpdGNoLmNhZmVtYXAuYXBpLkdldFBsYWNlc1JlcXVlc3QaLi5v\",\n            \"cmcuY3VyaW9zd2l0Y2guY2FmZW1hcC5hcGkuR2V0UGxhY2VzUmVzcG9uc2US\",\n            \"ZwoIR2V0UGxhY2USLC5vcmcuY3VyaW9zd2l0Y2guY2FmZW1hcC5hcGkuR2V0\",\n            \"UGxhY2VSZXF1ZXN0Gi0ub3JnLmN1cmlvc3dpdGNoLmNhZmVtYXAuYXBpLkdl\",\n            \"dFBsYWNlUmVzcG9uc2USdgoNTGlzdExhbmRtYXJrcxIxLm9yZy5jdXJpb3N3\",\n            \"aXRjaC5jYWZlbWFwLmFwaS5MaXN0TGFuZG1hcmtzUmVxdWVzdBoyLm9yZy5j\",\n            \"dXJpb3N3aXRjaC5jYWZlbWFwLmFwaS5MaXN0TGFuZG1hcmtzUmVzcG9uc2VC\",\n            \"Hwobb3JnLmN1cmlvc3dpdGNoLmNhZmVtYXAuYXBpUAFiBnByb3RvMw==\"));\n      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,\n          new pbr::FileDescriptor[] { },\n          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {\n            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Curioswitch.Cafemap.Api.LatLng), global::Org.Curioswitch.Cafemap.Api.LatLng.Parser, new[]{ \"Latitude\", \"Longitude\" }, null, null, null),\n            new pbr::GeneratedClrTypeInfo(typeof(global::Org.Curioswitch.Cafemap.Api.LatLngBounds), global::Org.Curioswitch.Cafemap.",
  "# Credit_Risk_Analysis\n\n\n## Overview \n\nThe purpose of the project is to create and evaluate algorithms to predict credit risk.  Six models will be created and compared to determine if any are worthy of recommendation for future use.  The exercise will also demonstrate aspects of dealing with unbalanced classification. \n\n\n## Results\n\nWe created and evaluated six algorithms:\n\n1. Oversampling\n2. SMOTE Oversampling\n3. Undersampling\n4. Combination (Over and Under) Sampling\n5. Balanced Random Forest Classifier\n6. Easy Ensemble AdaBoost Classifier\n\nPrecision is a measure of how likely a classification by the algorithm is accurate.  The first observation, as expected, is that the precision score is meaningless for comparing the models as the data is significantly unbalanced.  As such, Low_risk received a score of 1.00 for all models. High_risk received scores of 0.01 to 0.07, with the Easy Ensemble AdaBoost Classifier model achieving the highest score.  Solely based on this metric, it is difficult to tell the models apart or assess their strength other than to say Easy Ensemble AdaBoost Classifier did the best.\n\nBalanced accuracy is a metric that one can use when evaluating how good a binary classifier is.  It is especially useful when the classes are imbalanced, as in the case of credit risk, where good loans easily outnumber risky loans.  For the first four models, the balanced accuracy scores were mediocre, although better than random.  Oversampling performed best of the four.\n\n1. Oversampling \u2013 0.65139 \n2. SMOTE Oversampling \u2013 0.62669 \n3. Undersampling \u2013 0.52927 (worst)\n4. Combination (Over and Under) Sampling \u2013 0.63108\n\nWhen ensemble models were employed, balanced accuracy scores improved notably.  Easy Ensemble AdaBoost Classifier\u2019s score was the best of all six algorithms. \n\n5. Balanced Random Forest Classifier \u2013 0.79600\n6. Easy Ensemble AdaBoost Classifier \u2013 0.92525 (best)\n\n\nRecall, or sensitivity, measures how many loans were correctly classified.  Recall scores followed the path of improvement demonstrated by the balanced accuracy scores for the six models.  For the first four, Undersampling had the worst recall scores, just as it had the worst balanced accuracy score.  The ensemble models again performed the best, showing recall scores approaching 1.00.\n\n5. Balanced Random Forest Classifier \u2013 0.91 (average)\n6. Easy Ensemble AdaBoost Classifier \u2013 0.94 (average)\n\nThe Easy Ensemble AdaBoost Classifier showed the best recall scores.  Furthermore, of all the models, this model resulted in the best balance between the high_risk (0.91) and low_risk (0.94) scores, meaning the classifications were almost equally accurate for the two groups.\n\n<p align=\"center\">\n <img src=\"https://github.com/honoruru/Credit_Risk_Analysis/blob/main/images/Picture1.png\" width=\"700\" height=\"250\" />\n</p>\n \n\n## Summary\n\nBased on the metrics discussed above, one would feel justified recommending the Easy Ensemble AdaBoost Classifier be selected for future use.  The obvious second choice would be the Balanced Random Forest Classifier model.  When one reviews the respective confusion matrices, it becomes evident that the ensemble models outperform the others with Easy Ensemble AdaBoost Classifier being the clear choice.\n\nWhen looking at credit risk decisions, it helps to view the confusion matrix as below:\n\n<p align=\"center\">\n <img src=\"https://github.com/honoruru/Credit_Risk_Analysis/blob/main/images/Picture2.png\" width=\"600\" height=\"200\" />\n</p>\n\nWhen classifying loans by risk, one wants to maximize the True Lows and True Highs.  Further, one wants to minimize, if not eliminate False Lows.  False Highs are also undesirable, however, they are not as penalizing as False Lows.  False Highs represent lost opportunities for Low_risk loans that were incorrectly classified as High and therefore likely not to be made.  Comparing the confusion matrices of the worst (Undersampling) to the best (Easy Ensemble AdaBoost Classifier) illustrates the range of difference in performance. \n\nUndersampling\n<p>\n <img src=\"https://github.com/honoruru/Credit_Risk_Analysis/blob/main/images/Picture3.png\" width=\"250\" height=\"80\" />\n</p>\n\nEasy Ensemble AdaBoost Classifier\n<p>\n <img src=\"https://github.com/honoruru/Credit_Risk_Analysis/blob/main/images/Picture4.png\" width=\"250\" height=\"80\" />\n</p>\n\nCompared to all models, Easy Ensemble AdaBoost Classifier has maximized the True Lows and True Highs, and minimized False Lows and False Highs. \n\n",
  "\"\"\"\r\n52 Football - https://codeforces.com/problemset/problem/96/A\r\n\"\"\"\r\nstring = input()\r\nif \"1111111\" in string or \"0000000\" in string:\r\n    print(\"YES\")\r\nelse:\r\n    print(\"NO\")",
  "@component('mail::message')\n# Subscription successful!\n\nThank you for subscribing to KM4AANR.PH. You can now receive the latest updates and browse all AANR-related S&T outputs from different Philipine research institutions, agencies, and state colleges using this knowledge management portal. By subscribing to this portal, you will be given weekly digests on everything you need to know about agriculture, aquatic and natural resources sector straight from the source.\n\n@component('mail::button', ['url' => ''])\nVisit KM4AANR\n@endcomponent\n\nThanks,<br>\n{{ config('app.name') }}\n@endcomponent\n",
  "{% extends \"base.html\" %}\n\n{% block content %}\n\t<h2>Categories</h2>\n\n\t<ul>\n{% for category, articles in categories|sort %}\n\t\t<li><a href=\"{{ SITEURL }}/{{ category.url }}\">{{ category }}</a>\n\t\t\t({{ articles|count }})\n{% endfor %}\n\t</ul>\n\n{% endblock %}\n\n\n",
  "// +build!ignore_autogenerated\n\n// This file was autogenerated by openapi-gen. Do not edit it manually!\n\npackage v1alpha1\n\nimport (\n\tspec \"github.com/go-openapi/spec\"\n\tcommon \"k8s.io/kube-openapi/pkg/common\"\n)\n\nfunc GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {\n\treturn map[string]common.OpenAPIDefinition{\n\t\t\"github.com/openshift/openshift-pipelines-operator/pkg/apis/operator/v1alpha1.Config\":          schema_pkg_apis_operator_v1alpha1_Config(ref),\n\t\t\"github.com/openshift/openshift-pipelines-operator/pkg/apis/operator/v1alpha1.ConfigCondition\": schema_pkg_apis_operator_v1alpha1_ConfigCondition(ref),\n\t\t\"github.com/openshift/openshift-pipelines-operator/pkg/apis/operator/v1alpha1.ConfigSpec\":      schema_pkg_apis_operator_v1alpha1_ConfigSpec(ref),\n\t\t\"github.com/openshift/openshift-pipelines-operator/pkg/apis/operator/v1alpha1.ConfigStatus\":    schema_pkg_apis_operator_v1alpha1_ConfigStatus(ref),\n\t}\n}\n\nfunc schema_pkg_apis_operator_v1alpha1_Config(ref common.ReferenceCallback) common.OpenAPIDefinition {\n\treturn common.OpenAPIDefinition{\n\t\tSchema: spec.Schema{\n\t\t\tSchemaProps: spec.SchemaProps{\n\t\t\t\tDescription: \"Config is the Schema for the configs API\",\n\t\t\t\tType:        []string{\"object\"},\n\t\t\t\tProperties: map[string]spec.Schema{\n\t\t\t\t\t\"kind\": {\n\t\t\t\t\t\tSchemaProps: spec.SchemaProps{\n\t\t\t\t\t\t\tDescription: \"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\n\t\t\t\t\t\t\tType:        []string{\"string\"},\n\t\t\t\t\t\t\tFormat:      \"\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t\"apiVersion\": {\n\t\t\t\t\t\tSchemaProps: spec.SchemaProps{\n\t\t\t\t\t\t\tDescription: \"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\n\t\t\t\t\t\t\tType:        []string{\"string\"},\n\t\t\t\t\t\t\tFormat:      \"\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t\"metadata\": {\n\t\t\t\t\t\tSchemaProps: spec.SchemaProps{\n\t\t\t\t\t\t\tRef: ref(\"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t\"spec\": {\n\t\t\t\t\t\tSchemaProps: spec.SchemaProps{\n\t\t\t\t\t\t\tRef: ref(\"github.com/openshift/openshift-pipelines-operator/pkg/apis/operator/v1alpha1.ConfigSpec\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t\"status\": {\n\t\t\t\t\t\tSchemaProps: spec.SchemaProps{\n\t\t\t\t\t\t\tRef: ref(\"github.com/openshift/openshift-pipelines-operator/pkg/apis/operator/v1alpha1.ConfigStatus\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tDependencies: []string{\n\t\t\t\"github.com/openshift/openshift-pipelines-operator/pkg/apis/operator/v1alpha1.ConfigSpec\", \"github.com/openshift/openshift-pipelines-operator/pkg/apis/operator/v1alpha1.ConfigStatus\", \"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta\"},\n\t}\n}\n\nfunc schema_pkg_apis_operator_v1alpha1_ConfigCondition(ref common.ReferenceCallback) common.OpenAPIDefinition {\n\treturn common.OpenAPIDefinition{\n\t\tSchema: spec.Schema{\n\t\t\tSchemaProps: spec.SchemaProps{\n\t\t\t\tDescription: \"ConfigCondition defines the observed state of installation at a point in time\",\n\t\t\t\tType:        []string{\"object\"},\n\t\t\t\tProperties: map[string]spec.Schema{\n\t\t\t\t\t\"code\": {\n\t\t\t\t\t\tSchemaProps: spec.SchemaProps{\n\t\t\t\t\t\t\tDescription: \"Code indicates the status of installation of pipeline resources Valid values are:\\n  - \\\"error\\\"\\n  - \\\"installing\\\"\\n  - \\\"installed\\\"\",\n\t\t\t\t\t\t\tType:        []string{\"string\"},\n\t\t\t\t\t\t\tFormat:      \"\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t\"details\": {\n\t\t\t\t\t\tSchemaProps: spec.SchemaProps{\n\t\t\t\t\t\t\tDescription: \"Additional details about the Code\",\n\t\t\t\t\t\t\tType:        []string{\"string\"},\n\t\t\t\t\t\t\tFormat:      \"\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t\"version\": {\n\t\t\t\t\t\tSchemaProps: spec.SchemaProps{\n\t\t\t\t\t\t\tDescription: \"The version of OpenShift pipelines operator\",\n\t\t\t\t\t\t\tType:        []string{\"string\"},\n\t\t\t\t\t\t\tFormat:      \"\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t\"pipelineVersion\": {\n\t\t\t\t\t\tSchemaProps: spec.SchemaProps{\n\t\t\t\t\t\t\tDescription: \"The version of OpenShift pipelines\",\n\t\t\t\t\t\t\tType:        []string{\"string\"},\n\t\t\t\t\t\t\tFormat:      \"\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t\"triggersVersion\": {\n\t\t\t\t\t\tSchemaProps: spec.SchemaProps{\n\t\t\t\t\t\t\tDescription: \"The version of OpenShift triggers\",\n\t\t\t\t\t\t\tType:        []string{\"string\"},\n\t\t\t\t\t\t\tFormat:      \"\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tRequired: []string{\"code\", \"version\"},\n\t\t\t},\n\t\t},\n\t}\n}\n\nfunc schema_pkg_apis_operator_v1alpha1_ConfigSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {\n\treturn common.OpenAPIDefinition{\n\t\tSchema: spec.Schema{\n\t\t\tSchemaProps: spec.SchemaProps{\n\t\t\t\tDescription: \"ConfigSpec defines the desired state of Config\",\n\t\t\t\tType:        []string{\"object\"},\n\t\t\t\tProperties: map[string]spec.Schema{\n\t\t\t\t\t\"targetNamespace\": {\n\t\t\t\t\t\tSchemaProps: spec.SchemaProps{\n\t\t\t\t\t\t\tDescription: \"namespace where OpenShift pipelines will be installed\",\n\t\t\t\t\t\t\tType:        []string{\"string\"},\n\t\t\t\t\t\t\tFormat:      \"\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tRequired: []string{\"targetNamespace\"},\n\t\t\t},\n\t\t},\n\t}\n}\n\nfunc schema_pkg_apis_operator_v1alpha1_ConfigStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {\n\treturn common.OpenAPIDefinition{\n\t\tSchema: spec.Schema{\n\t\t\tSchemaProps: spec.SchemaProps{\n\t\t\t\tDescription: \"ConfigStatus defines the observed state of Config\",\n\t\t\t\tType:        []string{\"object\"},\n\t\t\t\tProperties: map[string]spec.Schema{\n\t\t\t\t\t\"operatorUUID\": {\n\t\t\t\t\t\tSchemaProps: spec.SchemaProps{\n\t\t\t\t\t\t\tDescription: \"OperatorUUID is the  uuid (auto-generated) of the operator that installed the pipeline\",\n\t\t\t\t\t\t\tType:        []string{\"string\"},\n\t\t\t\t\t\t\tFormat:      \"\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t\"conditions\": {\n\t\t\t\t\t\tSchemaProps: spec.SchemaProps{\n\t\t\t\t\t\t\tDescription: \"installation status sorted in reverse chronological order\",\n\t\t\t\t\t\t\tType:        []string{\"array\"},\n\t\t\t\t\t\t\tItems: &spec.SchemaOrArray{\n\t\t\t\t\t\t\t\tSchema: &spec.Schema{\n\t\t\t\t\t\t\t\t\tSchemaProps: spec.SchemaProps{\n\t\t\t\t\t\t\t\t\t\tRef: ref(\"github.com/openshift/openshift-pipelines-operator/pkg/apis/operator/v1alpha1.ConfigCondition\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tDependencies: []string{\n\t\t\t\"github.com/openshift/openshift-pipelines-operator/pkg/apis/operator/v1alpha1.ConfigCondition\"},\n\t}\n}\n",
  "# SqlSyntax.Render method\n\nRenders SQL as text and parameters.\n\n```csharp\npublic (string Text, DbParameters Parameters) Render(Sql sql)\n```\n\n## See Also\n\n* struct\u00a0[DbParameters](../../Faithlife.Data/DbParameters.md)\n* class\u00a0[Sql](../Sql.md)\n* class\u00a0[SqlSyntax](../SqlSyntax.md)\n* namespace\u00a0[Faithlife.Data.SqlFormatting](../../Faithlife.Data.md)\n\n<!-- DO NOT EDIT: generated by xmldocmd for Faithlife.Data.dll -->\n",
  "package br.com.zupacademy.vinicius.casadocodigo.estadoepais;\n\nimport java.util.Optional;\n\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.data.jpa.repository.Query;\nimport org.springframework.data.repository.query.Param;\nimport org.springframework.stereotype.Repository;\n\n\npublic interface EstadoRepository extends JpaRepository<Estado, Long>{\n\t\n\t//Poderia ter usado findByIdandNome s\u00f3 que aprendi depois.\n\t@Query(value = \"Select * from estado WHERE pais_id = :id and nome = :nome\", nativeQuery = true)\n\tOptional<Estado> jaExisteEstadoNestePais(@Param(\"id\") long id, @Param(\"nome\") String nome);\n\t\n\tOptional<Estado> findByIdAndPaisId(Long id, Long idPais);\n\n}\n",
  "package org.pipecraft.pipes;\n\nimport static org.junit.jupiter.api.Assertions.assertArrayEquals;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertNull;\nimport static org.junit.jupiter.api.Assertions.assertThrows;\n\nimport java.util.Map;\n\nimport org.junit.jupiter.api.Test;\n\nimport org.pipecraft.infra.concurrent.FailableFunction;\nimport org.pipecraft.pipes.exceptions.PipeException;\nimport org.pipecraft.pipes.exceptions.ValidationPipeException;\nimport org.pipecraft.pipes.sync.inter.CSVMapperPipe;\nimport org.pipecraft.pipes.sync.source.CollectionReaderPipe;\nimport org.pipecraft.pipes.sync.source.EmptyPipe;\n\n/**\n * Tests {@link CSVMapperPipe}, which binds csv lines to objects\n * \n * @author Eyal Schneider\n */\npublic class CSVMapperPipeTest {\n  \n  @Test\n  public void testHeaderOnly() throws Exception {\n    try (\n        CollectionReaderPipe<String> inPipe = new CollectionReaderPipe<>(\"name,height, weight\", \"Ben,178,68\", \"Guy, 185, 90\");\n        CSVMapperPipe<Person> csvPipe = new CSVMapperPipe<>(inPipe, new PersonRowParser(\"name\", \"height\", \"weight\"));\n    ) {\n      csvPipe.start();\n      Person p1 = csvPipe.next();\n      assertEquals(\"Ben\", p1.name);\n      assertEquals(178, p1.height);\n      assertEquals(68, p1.weight);\n      Person p2 = csvPipe.next();\n      assertEquals(\"Guy\", p2.name);\n      assertEquals(185, p2.height);\n      assertEquals(90, p2.weight);\n      assertNull(csvPipe.next());\n      assertArrayEquals(new String[] {\"name\",\"height\",\"weight\"}, csvPipe.getColumnNames());\n    }\n  }\n  \n  @Test\n  public void testHeaderAndColumnNames() throws Exception {\n    try (\n        CollectionReaderPipe<String> inPipe = new CollectionReaderPipe<>(\"name,height, weight\", \"Ben,178,68\", \"Guy, 185, 90\");\n        CSVMapperPipe<Person> csvPipe = new CSVMapperPipe<>(inPipe, true, new String[] {\"Name\", \"H\", \"W\"}, new PersonRowParser(\"Name\", \"H\", \"W\"));\n    ) {\n      csvPipe.start();\n      Person p1 = csvPipe.next();\n      assertEquals(\"Ben\", p1.name);\n      assertEquals(178, p1.height);\n      assertEquals(68, p1.weight);\n      Person p2 = csvPipe.next();\n      assertEquals(\"Guy\", p2.name);\n      assertEquals(185, p2.height);\n      assertEquals(90, p2.weight);\n      assertNull(csvPipe.next());\n      assertArrayEquals(new String[] {\"Name\",\"H\",\"W\"}, csvPipe.getColumnNames());\n    }    \n  }\n\n  @Test\n  public void testNonDefaultDelimiter() throws Exception {\n    try (\n        CollectionReaderPipe<String> inPipe = new CollectionReaderPipe<>(\"name;height; weight\", \"Ben;178;68\", \"Guy; 185 ; 90\");\n        CSVMapperPipe<Person> csvPipe = new CSVMapperPipe<>(inPipe, ';', true, null, new PersonRowParser(\"name\", \"height\", \"weight\"));\n    ) {\n      csvPipe.start();\n      Person p1 = csvPipe.next();\n      assertEquals(\"Ben\", p1.name);\n      assertEquals(178, p1.height);\n      assertEquals(68, p1.weight);\n      Person p2 = csvPipe.next();\n      assertEquals(\"Guy\", p2.name);\n      assertEquals(185, p2.height);\n      assertEquals(90, p2.weight);\n      assertNull(csvPipe.next());\n    }    \n  }\n\n  @Test\n  public void testSpecialChars() throws Exception {\n    try (\n        CollectionReaderPipe<String> inPipe = new CollectionReaderPipe<>(\"name;height; weight\", \"Ben the \\\\\\\"king\\\\\\\" ;178;68\", \"\\\"Guy, the best\\\"; 185 ; 90\");\n        CSVMapperPipe<Person> csvPipe = new CSVMapperPipe<>(inPipe, ';', true, null, new PersonRowParser(\"name\", \"height\", \"weight\"));\n    ) {\n      csvPipe.start();\n      Person p1 = csvPipe.next();\n      assertEquals(\"Ben the \\\"king\\\"\", p1.name);\n      assertEquals(178, p1.height);\n      assertEquals(68, p1.weight);\n      Person p2 = csvPipe.next();\n      assertEquals(\"Guy, the best\", p2.name);\n      assertEquals(185, p2.height);\n      assertEquals(90, p2.weight);\n      assertNull(csvPipe.next());\n    }    \n  }\n\n  @Test\n  public void testErrorNoColumnData() throws Exception {\n    assertThrows(IllegalArgumentException.class, () -> {\n      try (\n          CSVMapperPipe<Person> csvPipe = new CSVMapperPipe<>(EmptyPipe.instance(), ';', false, null, new PersonRowParser(\"name\", \"height\", \"weight\"));\n      ) {\n        csvPipe.start();\n      }    \n    });\n  }\n\n  @Test\n  public void testErrorNonMatchingHeader() throws Exception {\n    assertThrows(ValidationPipeException.class, () -> {\n      try (\n          CollectionReaderPipe<String> inPipe = new CollectionReaderPipe<>(\"name;height; weight\", \"Ben;178;68\", \"Guy; 185 ; 90\");\n          CSVMapperPipe<Person> csvPipe = new CSVMapperPipe<>(inPipe, ';', true, new String[] {\"Name\", \"W\"}, new PersonRowParser(\"name\", \"height\", \"weight\"));\n      ) {\n        csvPipe.start();\n      }\n    });\n  }\n\n  @Test\n  public void testErrorRowParsing() throws Exception {\n    assertThrows(ValidationPipeException.class, () -> {\n      try (\n          CollectionReaderPipe<String> inPipe = new CollectionReaderPipe<>(\"name,height, weight\", \"Ben,178,68X\");\n          CSVMapperPipe<Person> csvPipe = new CSVMapperPipe<>(inPipe, new PersonRowParser(\"name\", \"height\", \"weight\"));\n      ) {\n        csvPipe.start();\n        csvPipe.next();\n      }\n    });\n  }\n\n  @Test\n  public void testErrorDuplicateColumn() throws Exception {\n    assertThrows(ValidationPipeException.class, () -> {\n      try (\n          CollectionReaderPipe<String> inPipe = new CollectionReaderPipe<>(\"name;height; weight; Height\", \"Ben;178;68\", \"Guy; 185 ; 90\");\n          CSVMapperPipe<Person> csvPipe = new CSVMapperPipe<>(inPipe, ';', true, null, new PersonRowParser(\"name\", \"height\", \"weight\"));\n      ) {\n        csvPipe.start();\n      }\n    });\n  }\n\n  private static class Person {\n    private final String name;\n    private final int height;\n    private final int weight;\n    \n    public Person(String name, int height, int weight) {\n      this.name = name;\n      this.height = height;\n      this.weight = weight;\n    }\n  }\n\n  private static class PersonRowParser implements FailableFunction<Map<String, String>, Person, PipeException> {\n    private final String nameField;\n    private final String heightField;\n    private final String weightField;\n\n    public PersonRowParser(String nameField, String heightField, String weightField) {\n      this.nameField = nameField;\n      this.heightField = heightField;\n      this.weightField = weightField;\n    }\n    \n    @Override\n    public Person apply(Map<String, String> row) throws PipeException {\n      try {\n        return new Person(row.get(nameField), Integer.parseInt(row.get(heightField)), Integer.parseInt(row.get(weightField)));\n      } catch (NumberFormatException e) {\n        throw new ValidationPipeException(\"Illegal height or weight",
  "(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[25],{\n\n/***/ \"./src/api/bpm/form.js\":\n/*!*****************************!*\\\n !***./src/api/bpm/form.js ***!\n  \\*****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nvar _interopRequireDefault = __webpack_require__(/*!./node_modules/@babel/runtime/helpers/interopRequireDefault.js */ \\\"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\\\").default;\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createForm = createForm;\\nexports.deleteForm = deleteForm;\\nexports.getForm = getForm;\\nexports.getFormPage = getFormPage;\\nexports.getSimpleForms = getSimpleForms;\\nexports.updateForm = updateForm;\\n\\nvar _request = _interopRequireDefault(__webpack_require__(/*! @/utils/request */ \\\"./src/utils/request.js\\\"));\\n\\n// \u521b\u5efa\u5de5\u4f5c\u6d41\u7684\u8868\u5355\u5b9a\u4e49\\nfunction createForm(data) {\\n  return (0, _request.default)({\\n    url: '/bpm/form/create',\\n    method: 'post',\\n    data: data\\n  });\\n} // \u66f4\u65b0\u5de5\u4f5c\u6d41\u7684\u8868\u5355\u5b9a\u4e49\\n\\n\\nfunction updateForm(data) {\\n  return (0, _request.default)({\\n    url: '/bpm/form/update',\\n    method: 'put',\\n    data: data\\n  });\\n} // \u5220\u9664\u5de5\u4f5c\u6d41\u7684\u8868\u5355\u5b9a\u4e49\\n\\n\\nfunction deleteForm(id) {\\n  return (0, _request.default)({\\n    url: '/bpm/form/delete?id=' + id,\\n    method: 'delete'\\n  });\\n} // \u83b7\u5f97\u5de5\u4f5c\u6d41\u7684\u8868\u5355\u5b9a\u4e49\\n\\n\\nfunction getForm(id) {\\n  return (0, _request.default)({\\n    url: '/bpm/form/get?id=' + id,\\n    method: 'get'\\n  });\\n} // \u83b7\u5f97\u5de5\u4f5c\u6d41\u7684\u8868\u5355\u5b9a\u4e49\u5206\u9875\\n\\n\\nfunction getFormPage(query) {\\n  return (0, _request.default)({\\n    url: '/bpm/form/page',\\n    method: 'get',\\n    params: query\\n  });\\n} // \u83b7\u5f97\u52a8\u6001\u8868\u5355\u7684\u7cbe\u7b80\u5217\u8868\\n\\n\\nfunction getSimpleForms() {\\n  return (0, _request.default)({\\n    url: '/bpm/form/list-all-simple',\\n    method: 'get'\\n  });\\n}\\n\\n//# sourceURL=webpack:///./src/api/bpm/form.js?\");\n\n/***/ }),\n\n/***/ \"./src/api/system/user.js\":\n/*!********************************!*\\\n !***./src/api/system/user.js ***!\n  \\********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nvar _interopRequireDefault = __webpack_require__(/*!./node_modules/@babel/runtime/helpers/interopRequireDefault.js */ \\\"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\\\").default;\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.addUser = addUser;\\nexports.changeUserStatus = changeUserStatus;\\nexports.delUser = delUser;\\nexports.exportUser = exportUser;\\nexports.getUser = getUser;\\nexports.getUserProfile = getUserProfile;\\nexports.importTemplate = importTemplate;\\nexports.listSimpleUsers = listSimpleUsers;\\nexports.listUser = listUser;\\nexports.resetUserPwd = resetUserPwd;\\nexports.updateUser = updateUser;\\nexports.updateUserProfile = updateUserProfile;\\nexports.updateUserPwd = updateUserPwd;\\nexports.uploadAvatar = uploadAvatar;\\n\\nvar _request = _interopRequireDefault(__webpack_require__(/*! @/utils/request */ \\\"./src/utils/request.js\\\"));\\n\\nvar _ruoyi = __webpack_require__(/*! @/utils/ruoyi */ \\\"./src/utils/ruoyi.js\\\");\\n\\n// \u67e5\u8be2\u7528\u6237\u5217\u8868\\nfunction listUser(query) {\\n  return (0, _request.default)({\\n    url: '/system/user/page',\\n    method: 'get',\\n    params: query\\n  });\\n} // \u83b7\u53d6\u7528\u6237\u7cbe\u7b80\u4fe1\u606f\u5217\u8868\\n\\n\\nfunction listSimpleUsers() {\\n  return (0, _request.default)({\\n    url: '/system/user/list-all-simple',\\n    method: 'get'\\n  });\\n} // \u67e5\u8be2\u7528\u6237\u8be6\u7ec6\\n\\n\\nfunction getUser(userId) {\\n  return (0, _request.default)({\\n    url: '/system/user/get?id=' + (0, _ruoyi.praseStrEmpty)(userId),\\n    method: 'get'\\n  });\\n} // \u65b0\u589e\u7528\u6237\\n\\n\\nfunction addUser(data) {\\n  return (0, _request.default)({\\n    url: '/system/user/create',\\n    method: 'post',\\n    data: data\\n  });\\n} // \u4fee\u6539\u7528\u6237\\n\\n\\nfunction updateUser(data) {\\n  return (0, _request.default)({\\n    url: '/system/user/update',\\n    method: 'put',\\n    data: data\\n  });\\n} // \u5220\u9664\u7528\u6237\\n\\n\\nfunction delUser(userId) {\\n  return (0, _request.default)({\\n    url: '/system/user/delete?id=' + userId,\\n    method: 'delete'\\n  });\\n} // \u5bfc\u51fa\u7528\u6237\\n\\n\\nfunction exportUser(query) {\\n  return (0, _request.default)({\\n    url: '/system/user/export',\\n    method: 'get',\\n    params: query,\\n    responseType: 'blob'\\n  });\\n} // \u7528\u6237\u5bc6\u7801\u91cd\u7f6e\\n\\n\\nfunction resetUserPwd(id, password) {\\n  var data = {\\n    id: id,\\n    password: password\\n  };\\n  return (0, _request.default)({\\n    url: '/system/user/update-password',\\n    method: 'put',\\n    data: data\\n  });\\n} // \u7528\u6237\u72b6\u6001\u4fee\u6539\\n\\n\\nfunction changeUserStatus(id, status) {\\n  var data = {\\n    id: id,\\n    status: status\\n  };\\n  return (0, _request.default)({\\n    url: '/system/user/update-status',\\n    method: 'put',\\n    data: data\\n  });\\n} // \u67e5\u8be2\u7528\u6237\u4e2a\u4eba\u4fe1\u606f\\n\\n\\nfunction getUserProfile() {\\n  return (0, _request.default)({\\n    url: '/system/user/profile/get',\\n    method: 'get'\\n  });\\n} // \u4fee\u6539\u7528\u6237\u4e2a\u4eba\u4fe1\u606f\\n\\n\\nfunction updateUserProfile(data) {\\n  return (0, _request.default)({\\n    url: '/system/user/profile/update',\\n    method: 'put',\\n    data: data\\n  });\\n} // \u7528\u6237\u5bc6\u7801\u91cd\u7f6e\\n\\n\\nfunction updateUserPwd(oldPassword, newPassword) {\\n  var data = {\\n    oldPassword: oldPassword,\\n    newPassword: newPassword\\n  };\\n  return (0, _request.default)({\\n    url: '/system/user/profile/update-password',\\n    method: 'put',\\n    data: data\\n  });\\n} // \u7528\u6237\u5934\u50cf\u4e0a\u4f20\\n\\n\\nfunction uploadAvatar(data) {\\n  return (0, _request.default)({\\n    url: '/system/user/profile/update-avatar',\\n    method: 'put',\\n    data: data\\",
  "package tech.glasgowneuro.attysecg;\n\nimport android.content.Context;\nimport android.graphics.Canvas;\nimport android.graphics.Color;\nimport android.graphics.Paint;\nimport android.graphics.PorterDuff;\nimport android.graphics.PorterDuffXfermode;\nimport android.graphics.RadialGradient;\nimport android.graphics.Rect;\nimport android.graphics.Shader;\nimport android.util.AttributeSet;\nimport android.util.Log;\nimport android.view.View;\n\nimport java.util.ArrayList;\nimport java.util.ListIterator;\nimport java.util.Locale;\n\nimport uk.me.berndporr.iirj.Butterworth;\n\npublic class HRVView extends View {\n    final String TAG = \"HRVView\";\n\n    private final int MAXSAMPLES = 400, INNERCIRCLEWIDTH = 40;\n    private float heartRate = 60, maxHR = 100, minHR = 40;\n    private float txtSizeMult = (float) 1.4;\n    private ArrayList<Float> HRVValues = null;\n    private int[] ringsColours;\n    private float[] ringsStops;\n    private int alphas[];\n    private float maxCircleRadius;\n    private final float HRVDecayConst = 1.0F;\n\n    private Paint paintClear = null;\n    private Paint paintWhite = null;\n    private Paint paintBlack = null;\n    private Paint paintTxt = null;\n    private Paint paintRings = null;\n\n    Butterworth smoothFilter = null;\n\n    public HRVView(Context context) {\n        super(context);\n        init();\n    }\n\n    public HRVView(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        init();\n    }\n\n    public HRVView(Context context, AttributeSet attrs, int defStyle) {\n        super(context, attrs, defStyle);\n        init();\n    }\n\n    private void init() {\n        paintWhite = new Paint();\n        paintWhite.setColor(Color.WHITE);\n        paintBlack = new Paint();\n        paintBlack.setColor(Color.BLACK);\n        paintClear = new Paint();\n        paintClear.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.CLEAR));\n        HRVValues = new ArrayList<>();\n        paintTxt = new Paint();\n        paintTxt.setColor(Color.argb(255, 255, 255, 0));\n        paintRings = new Paint();\n        HRVValues = new ArrayList<>();\n\n        maxCircleRadius = Math.min(getHeight(), getWidth()) / 2F;\n        maxCircleRadius = 1000F;\n\n        ringsColours = new int[MAXSAMPLES];\n        ringsStops = new float[MAXSAMPLES];\n        alphas = new int[MAXSAMPLES];\n\n        for (int i = 0; i < MAXSAMPLES; i++) {\n            ringsStops[i] = i / (float) MAXSAMPLES;\n            alphas[i] = (int) (220F - (220F * ringsStops[i] * ringsStops[i]));\n            HRVValues.add(heartRate);\n        }\n        smoothFilter = new Butterworth();\n        smoothFilter.lowPass(2, 1, 0.05);\n\n    }\n\n    public void reset() {\n        if ((heartRate > 30) && (heartRate<200)) {\n            maxHR = heartRate + 10;\n            minHR = heartRate - 10;\n        } else {\n            heartRate = 60;\n            maxHR = 100;\n            minHR = 40;\n        }\n        init();\n    }\n\n    @Override\n    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n\n\n        canvas.drawPaint(paintClear);\n\n        String hrvTxt = String.format(Locale.US, \"%d\", (int) heartRate);\n        int centreX = getWidth() / 2;\n        int centreY = getHeight() / 2;\n        paintTxt.setTextSize((float) INNERCIRCLEWIDTH * txtSizeMult);\n        Rect bounds = new Rect();\n        paintTxt.getTextBounds(hrvTxt, 0, hrvTxt.length(), bounds);\n\n        int i = MAXSAMPLES - 1;\n        for (Float hrvValue : HRVValues) {\n            float hr = (float) hrvValue;\n            hr = (float) smoothFilter.filter(hr);\n            ringsColours[i] = heartRateToColour(hr, i);\n            i--;\n        }\n        paintRings.setShader(new RadialGradient(\n                centreX,\n                centreY,\n                maxCircleRadius,\n                ringsColours,\n                ringsStops,\n                Shader.TileMode.CLAMP));\n        canvas.drawCircle(centreX, centreY, maxCircleRadius, paintRings);\n        canvas.drawText(hrvTxt,\n                centreX - (float)bounds.width() / 2,\n                centreY + (float)bounds.height() / 2,\n                paintTxt);\n    }\n\n\n    private int heartRateToColour(final float _HR, final int index) {\n\n        // normalise HR\n        float HR = 5F + 250F * (_HR - minHR) / (maxHR - minHR);\n        HR = Math.max(HR, 0F);\n        HR = Math.min(HR, 255F);\n\n        return Color.argb(alphas[index], (int) (HR / 1.8), (int) (HR / 1.5), (int) (HR / 1.01));\n    }\n\n    public synchronized void animate(float _heartRate, float samplingRate) {\n        heartRate = _heartRate;\n        if (_heartRate>30) {\n            HRVValues.add(_heartRate);\n        }\n\n        if (HRVValues.size() > MAXSAMPLES) {\n            HRVValues.remove(0);\n        }\n\n        float maxTmp = 0;\n        float minTmp = 1000;\n        for (Float hrvValue : HRVValues) {\n            float hr = (float) hrvValue;\n            if (hr > maxTmp) maxTmp = hr;\n            if (hr < minTmp) minTmp = hr;\n        }\n\n        maxHR = maxHR + HRVDecayConst * (maxTmp-maxHR) / samplingRate;\n        minHR = minHR + HRVDecayConst * (minTmp-minHR) / samplingRate;\n\n        invalidate();\n        if (Log.isLoggable(TAG, Log.VERBOSE)) {\n            Log.v(TAG, \"minHR: \" + minHR + \" maxHR: \" + maxHR);\n        }\n    }\n\n\n}\n",
  "{% extends \"!layout.html\" %}\n{% block extrahead %}\n<link href=\"{{ pathto(\"_static/css/rasa_theme.css\", True) }}\" rel=\"stylesheet\" type=\"text/css\">\n{% endblock %}\n\n{% block footer %}\n{{ super() }}\n<!-- Global Site Tag (gtag.js) - Google Analytics -->\n<script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-87333416-1\"></script>\n<script>\nwindow.dataLayer = window.dataLayer || [];\nfunction gtag(){dataLayer.push(arguments)};\ngtag('js', new Date());\n\ngtag('config', 'UA-87333416-1');\n</script>\n<script type=\"text/javascript\" src=\"//script.crazyegg.com/pages/scripts/0074/3851.js\" async=\"async\"></script>\n{% endblock %}\n",
  "from typing import Optional\n\nfrom pydantic import BaseModel\n\nfrom ultron8.api.models.base import BaseDataModel\n\n\n# Shared properties\nclass UserBase(BaseDataModel):\n    email: Optional[str] = None\n    is_active: Optional[bool] = True\n    is_superuser: Optional[bool] = False\n    full_name: Optional[str] = None\n\n    class Config:\n        orm_mode = True\n\n\nclass UserBaseInDB(UserBase):\n    id: Optional[int] = None\n\n    class Config:\n        orm_mode = True\n\n\n# Properties to receive via API on creation\nclass UserCreate(UserBaseInDB):\n    email: str\n    password: str\n\n    class Config:\n        orm_mode = True\n\n\n# Properties to receive via API on update\nclass UserUpdate(UserBaseInDB):\n    password: Optional[str] = None\n\n    class Config:\n        orm_mode = True\n\n\n# Additional properties to return via API\nclass User(UserBaseInDB):\n    pass\n\n\n# Additional properties stored in DB\nclass UserInDB(UserBaseInDB):\n    salt: Optional[str] = None\n    hashed_password: str\n\n    class Config:\n        orm_mode = True\n\n    # TODO: Enable this so we can securely story password salt+hash. See https://github.com/bossjones/ultron8/issues/63\n    # def check_password(self, password: str) -> bool:\n    #     return security.verify_password(self.salt + password, self.hashed_password)\n\n    # def change_password(self, password: str) -> None:\n    #     self.salt = security.generate_salt()\n    #     self.hashed_password = security.get_password_hash(self.salt + password)\n",
  "// Copyright 2018 PingCAP, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\npackage executor_test\n\nimport (\n\t. \"github.com/pingcap/check\"\n\t\"github.com/pingcap/tidb/util/testkit\"\n)\n\nfunc (s *testSuite1) TestTraceExec(c *C) {\n\ttk := testkit.NewTestKit(c, s.store)\n\ttk.MustExec(\"use test\")\n\ttestSQL := `create table trace (id int PRIMARY KEY AUTO_INCREMENT, c1 int, c2 int, c3 int default 1);`\n\ttk.MustExec(testSQL)\n\ttk.MustExec(\"trace insert into trace (c1, c2, c3) values (1, 2, 3)\")\n\trows := tk.MustQuery(\"trace select * from trace where id = 0;\").Rows()\n\tc.Assert(len(rows), GreaterEqual, 1)\n\n\t// +---------------------------+-----------------+------------+\n\t// | operation                 | startTS         | duration   |\n\t// +---------------------------+-----------------+------------+\n\t// | session.getTxnFuture      | 22:08:38.247834 | 78.909\u00b5s   |\n\t// |   \u251c\u2500session.Execute       | 22:08:38.247829 | 1.478487ms |\n\t// |   \u251c\u2500session.ParseSQL      | 22:08:38.248457 | 71.159\u00b5s   |\n\t// |   \u251c\u2500executor.Compile      | 22:08:38.248578 | 45.329\u00b5s   |\n\t// |   \u251c\u2500session.runStmt       | 22:08:38.248661 | 75.13\u00b5s    |\n\t// |   \u251c\u2500session.CommitTxn     | 22:08:38.248699 | 13.213\u00b5s   |\n\t// |   \u2514\u2500recordSet.Next        | 22:08:38.249340 | 155.317\u00b5s  |\n\t// +---------------------------+-----------------+------------+\n\trows = tk.MustQuery(\"trace format='row' select * from trace where id = 0;\").Rows()\n\tc.Assert(len(rows) > 1, IsTrue)\n\tc.Assert(rowsOrdered(rows), IsTrue)\n\n\trows = tk.MustQuery(\"trace format='row' delete from trace where id = 0\").Rows()\n\tc.Assert(len(rows) > 1, IsTrue)\n\tc.Assert(rowsOrdered(rows), IsTrue)\n\n\ttk.MustExec(\"trace format='log' insert into trace (c1, c2, c3) values (1, 2, 3)\")\n\trows = tk.MustQuery(\"trace format='log' select * from trace where id = 0;\").Rows()\n\tc.Assert(len(rows), GreaterEqual, 1)\n}\n\nfunc rowsOrdered(rows [][]interface{}) bool {\n\tfor idx := range rows {\n\t\tif _, ok := rows[idx][1].(string);!ok {\n\t\t\treturn false\n\t\t}\n\t\tif idx == 0 {\n\t\t\tcontinue\n\t\t}\n\t\tif rows[idx-1][1].(string) > rows[idx][1].(string) {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n",
  "<?php\n/**\n * PHP CLient for Kubernetes API \n *\n * Copyright 2014 binarygoo Inc. All rights reserved.\n *\n * @author Faruk brbovic <fbrbovic@devstub.com>\n * @link http://www.devstub.com/\n * @copyright 2014 binarygoo / devstub.com\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nnamespace DevStub\\KubernetesAPIClient\\Entity\\v1beta1;\n\n\nuse DevStub\\KubernetesAPIClient\\Entity\\BaseEntity;\n\nclass ContainerStateTerminated extends BaseEntity implements \\JsonSerializable {\n\n    protected $exitCode;\n\n    protected $signal;\n\n    protected $reason;\n\n    protected $startedAt;\n\n    protected $finishedAt;\n\n    /**\n     * @return int\n     */\n    public function getExitCode() {\n        return $this->exitCode;\n    }\n\n    /**\n     * @param int $exitCode\n     *\n     * @return $this\n     */\n    public function setExitCode($exitCode) {\n        $this->exitCode = $exitCode;\n        return $this;\n    }\n\n    /**\n     * @return string\n     */\n    public function getFinishedAt() {\n        return $this->finishedAt;\n    }\n\n    /**\n     * @param string $finishedAt\n     *\n     * @return $this\n     */\n    public function setFinishedAt($finishedAt) {\n        $this->finishedAt = $finishedAt;\n        return $this;\n    }\n\n    /**\n     * @return string\n     */\n    public function getReason() {\n        return $this->reason;\n    }\n\n    /**\n     * @param string $reason\n     *\n     * @return $this\n     */\n    public function setReason($reason) {\n        $this->reason = $reason;\n        return $this;\n    }\n\n    /**\n     * @return int\n     */\n    public function getSignal() {\n        return $this->signal;\n    }\n\n    /**\n     * @param int $signal\n     *\n     * @return $this\n     */\n    public function setSignal($signal) {\n        $this->signal = $signal;\n        return $this;\n    }\n\n    /**\n     * @return int\n     */\n    public function getStartedAt() {\n        return $this->startedAt;\n    }\n\n    /**\n     * @param int $startedAt\n     *\n     * @return $this\n     */\n    public function setStartedAt($startedAt) {\n        $this->startedAt = $startedAt;\n        return $this;\n    }\n\n\n\n} ",
  "/*\n * SPEAr platform shared irq layer source file\n *\n * Copyright (C) 2009-2012 ST Microelectronics\n * Viresh Kumar <viresh.linux@gmail.com>\n *\n * Copyright (C) 2012 ST Microelectronics\n * Shiraz Hashim <shiraz.linux.kernel@gmail.com>\n *\n * This file is licensed under the terms of the GNU General Public\n * License version 2. This program is licensed \"as is\" without any\n * warranty of any kind, whether express or implied.\n */\n#define pr_fmt(fmt) KBUILD_MODNAME \": \" fmt\n\n#include <linux/err.h>\n#include <linux/export.h>\n#include <linux/interrupt.h>\n#include <linux/io.h>\n#include <linux/irq.h>\n#include <linux/irqdomain.h>\n#include <linux/irqchip/spear-shirq.h>\n#include <linux/of.h>\n#include <linux/of_address.h>\n#include <linux/of_irq.h>\n#include <linux/spinlock.h>\n\n#include \"irqchip.h\"\n\nstatic DEFINE_SPINLOCK(lock);\n\n/* spear300 shared irq registers offsets and masks */\n#define SPEAR300_INT_ENB_MASK_REG\t0x54\n#define SPEAR300_INT_STS_MASK_REG\t0x58\n\nstatic struct spear_shirq spear300_shirq_ras1 = {\n\t.irq_nr = 9,\n\t.irq_bit_off = 0,\n\t.regs = {\n\t\t.enb_reg = SPEAR300_INT_ENB_MASK_REG,\n\t\t.status_reg = SPEAR300_INT_STS_MASK_REG,\n\t\t.clear_reg = -1,\n\t},\n};\n\nstatic struct spear_shirq *spear300_shirq_blocks[] = {\n\t&spear300_shirq_ras1,\n};\n\n/* spear310 shared irq registers offsets and masks */\n#define SPEAR310_INT_STS_MASK_REG\t0x04\n\nstatic struct spear_shirq spear310_shirq_ras1 = {\n\t.irq_nr = 8,\n\t.irq_bit_off = 0,\n\t.regs = {\n\t\t.enb_reg = -1,\n\t\t.status_reg = SPEAR310_INT_STS_MASK_REG,\n\t\t.clear_reg = -1,\n\t},\n};\n\nstatic struct spear_shirq spear310_shirq_ras2 = {\n\t.irq_nr = 5,\n\t.irq_bit_off = 8,\n\t.regs = {\n\t\t.enb_reg = -1,\n\t\t.status_reg = SPEAR310_INT_STS_MASK_REG,\n\t\t.clear_reg = -1,\n\t},\n};\n\nstatic struct spear_shirq spear310_shirq_ras3 = {\n\t.irq_nr = 1,\n\t.irq_bit_off = 13,\n\t.regs = {\n\t\t.enb_reg = -1,\n\t\t.status_reg = SPEAR310_INT_STS_MASK_REG,\n\t\t.clear_reg = -1,\n\t},\n};\n\nstatic struct spear_shirq spear310_shirq_intrcomm_ras = {\n\t.irq_nr = 3,\n\t.irq_bit_off = 14,\n\t.regs = {\n\t\t.enb_reg = -1,\n\t\t.status_reg = SPEAR310_INT_STS_MASK_REG,\n\t\t.clear_reg = -1,\n\t},\n};\n\nstatic struct spear_shirq *spear310_shirq_blocks[] = {\n\t&spear310_shirq_ras1,\n\t&spear310_shirq_ras2,\n\t&spear310_shirq_ras3,\n\t&spear310_shirq_intrcomm_ras,\n};\n\n/* spear320 shared irq registers offsets and masks */\n#define SPEAR320_INT_STS_MASK_REG\t\t0x04\n#define SPEAR320_INT_CLR_MASK_REG\t\t0x04\n#define SPEAR320_INT_ENB_MASK_REG\t\t0x08\n\nstatic struct spear_shirq spear320_shirq_ras1 = {\n\t.irq_nr = 3,\n\t.irq_bit_off = 7,\n\t.regs = {\n\t\t.enb_reg = -1,\n\t\t.status_reg = SPEAR320_INT_STS_MASK_REG,\n\t\t.clear_reg = SPEAR320_INT_CLR_MASK_REG,\n\t\t.reset_to_clear = 1,\n\t},\n};\n\nstatic struct spear_shirq spear320_shirq_ras2 = {\n\t.irq_nr = 1,\n\t.irq_bit_off = 10,\n\t.regs = {\n\t\t.enb_reg = -1,\n\t\t.status_reg = SPEAR320_INT_STS_MASK_REG,\n\t\t.clear_reg = SPEAR320_INT_CLR_MASK_REG,\n\t\t.reset_to_clear = 1,\n\t},\n};\n\nstatic struct spear_shirq spear320_shirq_ras3 = {\n\t.irq_nr = 7,\n\t.irq_bit_off = 0,\n\t.invalid_irq = 1,\n\t.regs = {\n\t\t.enb_reg = SPEAR320_INT_ENB_MASK_REG,\n\t\t.reset_to_enb = 1,\n\t\t.status_reg = SPEAR320_INT_STS_MASK_REG,\n\t\t.clear_reg = SPEAR320_INT_CLR_MASK_REG,\n\t\t.reset_to_clear = 1,\n\t},\n};\n\nstatic struct spear_shirq spear320_shirq_intrcomm_ras = {\n\t.irq_nr = 11,\n\t.irq_bit_off = 11,\n\t.regs = {\n\t\t.enb_reg = -1,\n\t\t.status_reg = SPEAR320_INT_STS_MASK_REG,\n\t\t.clear_reg = SPEAR320_INT_CLR_MASK_REG,\n\t\t.reset_to_clear = 1,\n\t},\n};\n\nstatic struct spear_shirq *spear320_shirq_blocks[] = {\n\t&spear320_shirq_ras3,\n\t&spear320_shirq_ras1,\n\t&spear320_shirq_ras2,\n\t&spear320_shirq_intrcomm_ras,\n};\n\nstatic void shirq_irq_mask_unmask(struct irq_data *d, bool mask)\n{\n\tstruct spear_shirq *shirq = irq_data_get_irq_chip_data(d);\n\tu32 val, offset = d->irq - shirq->irq_base;\n\tunsigned long flags;\n\n\tif (shirq->regs.enb_reg == -1)\n\t\treturn;\n\n\tspin_lock_irqsave(&lock, flags);\n\tval = readl(shirq->base + shirq->regs.enb_reg);\n\n\tif (mask ^ shirq->regs.reset_to_enb)\n\t\tval &= ~(0x1 << shirq->irq_bit_off << offset);\n\telse\n\t\tval |= 0x1 << shirq->irq_bit_off << offset;\n\n\twritel(val, shirq->base + shirq->regs.enb_reg);\n\tspin_unlock_irqrestore(&lock, flags);\n\n}\n\nstatic void shirq_irq_mask(struct irq_data *d)\n{\n\tshirq_irq_mask_unmask(d, 1);\n}\n\nstatic void shirq_irq_unmask(struct irq_data *d)\n{\n\tshirq_irq_mask_unmask(d, 0);\n}\n\nstatic struct irq_chip shirq_chip = {\n\t.name\t\t= \"spear-shirq\",\n\t.irq_ack\t= shirq_irq_mask,\n\t.irq_mask\t= shirq_irq_mask,\n\t.irq_unmask\t= shirq_irq_unmask,\n};\n\nstatic void shirq_handler(unsigned irq, struct irq_desc *desc)\n{\n\tu32 i, j, val, mask, tmp;\n\tstruct irq_chip *chip;\n\tstruct spear_shirq *shirq = irq_get_handler_data(irq);\n\n\tchip = irq_get_chip(irq);\n\tchip->irq_ack(&desc->irq_data);\n\n\tmask = ((0x1",
  "/*\n * Copyright (c) 2021 VMware, Inc. or its affiliates, All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage reactor.netty.examples.documentation.http.server.multipart.custom;\n\nimport reactor.core.publisher.Mono;\nimport reactor.netty.DisposableServer;\nimport reactor.netty.http.server.HttpServer;\n\npublic class Application {\n\n\tpublic static void main(String[] args) {\n\t\tDisposableServer server =\n\t\t\t\tHttpServer.create()\n\t\t\t\t         .httpFormDecoder(builder -> builder.maxInMemorySize(0))                  //<1>\n\t\t\t\t         .route(routes ->\n\t\t\t\t              routes.post(\"/multipart\", (request, response) -> response.sendString(\n\t\t\t\t                      request.receiveForm(builder -> builder.maxInMemorySize(256)) //<2>\n\t\t\t\t                            .flatMap(data -> Mono.just('[' + data.getName() + ']')))))\n\t\t\t\t         .bindNow();\n\n\t\tserver.onDispose()\n\t\t     .block();\n\t}\n}",
  "@import \"tailwindcss/base\";\n\n@import \"tailwindcss/components\";\n\n@import \"tailwindcss/utilities\";\n\n/*\n.background-image \n{\n    background-image: url('https://cdn.pixabay.com/photo/2018/05/14/16/54/cyber-3400789_1280.jpg');\n    background-position: center center;\n    background-repeat: no-repeat;\n    background-attachment: fixed;\n    background-size: cover;\n    height: 600px;\n}\n*/",
  "describe('Unit: myApp.module.Registration.Register.Controller', function() {\n\n    beforeEach(module('myApp.module.Registration.Register.Controller'));\n\n        var RegisterController,\n        scope;\n\n        beforeEach(inject(function ($rootScope, $controller) {\n            scope = $rootScope.$new();\n            RegisterController = $controller('RegisterController', {\n                $scope: scope\n            });\n        }));\n    \n    \n        it('Testing scope.message message is \"This is the Register page message from the controller\"', function () {\n            expect(scope.message).toEqual(\"This is the Register page message from the controller\");\n        });\n    \n    \n        it('Testing the Route Information in the about Module',\n        inject(function ($route) {\n\n          expect($route.routes['/register'].controller).toBe('RegisterController');\n          expect($route.routes['/register'].templateUrl).toEqual('com/modules/Registration/views/register.html');\n          expect($route.routes['/register'].hideMenus).toBe(true);\n          expect($route.routes['/register'].protectedArea).toBe(false);\n          expect($route.routes['/register'].title).toBe('Register on Our Site');\n          expect($route.routes['/register'].description).toBe('This is the Description of the Register page');\n          expect($route.routes['/register'].keywords).toBe('Register, Registration');\n\n        }));\n\n});",
  "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { MultiStepProgressbar2Component } from './multi-step-progressbar2.component';\n\ndescribe('MultiStepProgressbar2Component', () => {\n  let component: MultiStepProgressbar2Component;\n  let fixture: ComponentFixture<MultiStepProgressbar2Component>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ MultiStepProgressbar2Component ]\n    })\n   .compileComponents();\n  });\n\n  beforeEach(() => {\n    fixture = TestBed.createComponent(MultiStepProgressbar2Component);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n",
  "---\ntitle: LsU872\npermalink: LsU872\nlayout: post\ndate: 2019-06-24 19:04:10\ncategory: ellipses\n---\n\n```latex\n% Dans le pr\u00e9ambule\n% -----------------\n\\usepackage[explicit]{titlesec}\n\\titleformat{\\section}[hang]\n {\\flushright\\sffamily\\bfseries\\scshape}\n {}{2em}\n {#1\\quad\\rule[-0.5em]{1.5pt}{2em}\n  \\rlap{\\qquad\\Huge \\thesection}\n}\n% -----------------\n\n\\section{Introduction}\nLorem ipsum...\n\n\\section{Compl\u00e9ments}\nEst pellentesque....\n```",
  "\ufeff// <auto-generated />\nusing System;\nusing HansKindberg.IdentityServer.Data;\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.EntityFrameworkCore.Infrastructure;\nusing Microsoft.EntityFrameworkCore.Metadata;\nusing Microsoft.EntityFrameworkCore.Storage.ValueConversion;\n\nnamespace HansKindberg.IdentityServer.Data.Migrations.Configuration.SqlServer\n{\n    [DbContext(typeof(SqlServerConfiguration))]\n    partial class SqlServerConfigurationModelSnapshot : ModelSnapshot\n    {\n        protected override void BuildModel(ModelBuilder modelBuilder)\n        {\n#pragma warning disable 612, 618\n            modelBuilder\n               .HasAnnotation(\"Relational:MaxIdentifierLength\", 128)\n               .HasAnnotation(\"ProductVersion\", \"5.0.6\")\n               .HasAnnotation(\"SqlServer:ValueGenerationStrategy\", SqlServerValueGenerationStrategy.IdentityColumn);\n\n            modelBuilder.Entity(\"Duende.IdentityServer.EntityFramework.Entities.ApiResource\", b =>\n                {\n                    b.Property<int>(\"Id\")\n                       .ValueGeneratedOnAdd()\n                       .HasColumnType(\"int\")\n                       .HasAnnotation(\"SqlServer:ValueGenerationStrategy\", SqlServerValueGenerationStrategy.IdentityColumn);\n\n                    b.Property<string>(\"AllowedAccessTokenSigningAlgorithms\")\n                       .HasMaxLength(100)\n                       .HasColumnType(\"nvarchar(100)\");\n\n                    b.Property<DateTime>(\"Created\")\n                       .HasColumnType(\"datetime2\");\n\n                    b.Property<string>(\"Description\")\n                       .HasMaxLength(1000)\n                       .HasColumnType(\"nvarchar(1000)\");\n\n                    b.Property<string>(\"DisplayName\")\n                       .HasMaxLength(200)\n                       .HasColumnType(\"nvarchar(200)\");\n\n                    b.Property<bool>(\"Enabled\")\n                       .HasColumnType(\"bit\");\n\n                    b.Property<DateTime?>(\"LastAccessed\")\n                       .HasColumnType(\"datetime2\");\n\n                    b.Property<string>(\"Name\")\n                       .IsRequired()\n                       .HasMaxLength(200)\n                       .HasColumnType(\"nvarchar(200)\");\n\n                    b.Property<bool>(\"NonEditable\")\n                       .HasColumnType(\"bit\");\n\n                    b.Property<bool>(\"RequireResourceIndicator\")\n                       .HasColumnType(\"bit\");\n\n                    b.Property<bool>(\"ShowInDiscoveryDocument\")\n                       .HasColumnType(\"bit\");\n\n                    b.Property<DateTime?>(\"Updated\")\n                       .HasColumnType(\"datetime2\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"Name\")\n                       .IsUnique();\n\n                    b.ToTable(\"ApiResources\");\n                });\n\n            modelBuilder.Entity(\"Duende.IdentityServer.EntityFramework.Entities.ApiResourceClaim\", b =>\n                {\n                    b.Property<int>(\"Id\")\n                       .ValueGeneratedOnAdd()\n                       .HasColumnType(\"int\")\n                       .HasAnnotation(\"SqlServer:ValueGenerationStrategy\", SqlServerValueGenerationStrategy.IdentityColumn);\n\n                    b.Property<int>(\"ApiResourceId\")\n                       .HasColumnType(\"int\");\n\n                    b.Property<string>(\"Type\")\n                       .IsRequired()\n                       .HasMaxLength(200)\n                       .HasColumnType(\"nvarchar(200)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"ApiResourceId\");\n\n                    b.ToTable(\"ApiResourceClaims\");\n                });\n\n            modelBuilder.Entity(\"Duende.IdentityServer.EntityFramework.Entities.ApiResourceProperty\", b =>\n                {\n                    b.Property<int>(\"Id\")\n                       .ValueGeneratedOnAdd()\n                       .HasColumnType(\"int\")\n                       .HasAnnotation(\"SqlServer:ValueGenerationStrategy\", SqlServerValueGenerationStrategy.IdentityColumn);\n\n                    b.Property<int>(\"ApiResourceId\")\n                       .HasColumnType(\"int\");\n\n                    b.Property<string>(\"Key\")\n                       .IsRequired()\n                       .HasMaxLength(250)\n                       .HasColumnType(\"nvarchar(250)\");\n\n                    b.Property<string>(\"Value\")\n                       .IsRequired()\n                       .HasMaxLength(2000)\n                       .HasColumnType(\"nvarchar(2000)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"ApiResourceId\");\n\n                    b.ToTable(\"ApiResourceProperties\");\n                });\n\n            modelBuilder.Entity(\"Duende.IdentityServer.EntityFramework.Entities.ApiResourceScope\", b =>\n                {\n                    b.Property<int>(\"Id\")\n                       .ValueGeneratedOnAdd()\n                       .HasColumnType(\"int\")\n                       .HasAnnotation(\"SqlServer:ValueGenerationStrategy\", SqlServerValueGenerationStrategy.IdentityColumn);\n\n                    b.Property<int>(\"ApiResourceId\")\n                       .HasColumnType(\"int\");\n\n                    b.Property<string>(\"Scope\")\n                       .IsRequired()\n                       .HasMaxLength(200)\n                       .HasColumnType(\"nvarchar(200)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"ApiResourceId\");\n\n                    b.ToTable(\"ApiResourceScopes\");\n                });\n\n            modelBuilder.Entity(\"Duende.IdentityServer.EntityFramework.Entities.ApiResourceSecret\", b =>\n                {\n                    b.Property<int>(\"Id\")\n                       .ValueGeneratedOnAdd()\n                       .HasColumnType(\"int\")\n                       .HasAnnotation(\"SqlServer:ValueGenerationStrategy\", SqlServerValueGenerationStrategy.IdentityColumn);\n\n                    b.Property<int>(\"ApiResourceId\")\n                       .HasColumnType(\"int\");\n\n                    b.Property<DateTime>(\"Created\")\n                       .HasColumnType(\"datetime2\");\n\n                    b.Property<string>(\"Description\")\n                       .HasMaxLength(1000)\n                       .HasColumnType(\"nvarchar(1000)\");\n\n                    b.Property<DateTime?>(\"Expiration\")\n                       .HasColumnType(\"datetime2\");\n\n                    b.Property<string>(\"Type\")\n                       .IsRequired()\n                       .HasMaxLength(250)\n                       .HasColumnType(\"nvarchar(250)\");\n\n                    b.Property<string>(\"Value\")\n                       .IsRequired()\n                       .HasMaxLength(4000)\n                       .HasColumnType(\"nvarchar(4000)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"ApiResourceId\");\n\n                    b.ToTable(\"ApiResourceSecrets\");\n                });\n\n            modelBuilder.Entity(\"Duende.IdentityServer.EntityFramework.Entities.ApiScope\", b =>\n                {\n                    b.Property<int>(\"Id\")\n                       .ValueGeneratedOnAdd()\n                       .HasColumnType(\"int\")\n                       .HasAnnotation(\"SqlServer:ValueGenerationStrategy\", SqlServerValueGenerationStrategy.IdentityColumn);\n\n                    b.Property<string>(\"Description\")\n                       .HasMaxLength(1000)\n                       .HasColumnType(\"nvarchar(1000)\");\n\n                    b.Property<string>(\"DisplayName\")\n                       .HasMaxLength(200)\n                       .HasColumnType(\"nvarchar(200)\");\n\n                    b.Property<bool>(\"Emphasize\")\n                       .HasColumnType(\"bit\");\n\n                    b.Property<bool>(\"Enabled\")\n                       .HasColumnType(\"bit\");\n\n                    b.Property<string>(\"Name\")\n                       .IsRequired()\n                       .HasMaxLength(200)\n                       .HasColumnType(\"nvarchar(200)\");\n\n                    b.Property<bool>(\"Required\")\n                       .HasColumnType(\"bit\");\n\n                    b.Property<bool>(\"ShowInDiscoveryDocument\")\n                       .HasColumnType(\"bit\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"Name\")\n                       .IsUnique();\n\n                    b.ToTable(\"ApiScopes\");\n                });\n\n            modelBuilder.Entity(\"Duende.IdentityServer.EntityFramework.Entities.ApiScopeClaim\", b =>\n                {\n                    b.Property<int>(\"Id\")\n                       .ValueGeneratedOnAdd()\n                       .HasColumnType(\"int\")\n                       .HasAnnotation(\"SqlServer:ValueGenerationStrategy\", SqlServerValueGenerationStrategy.IdentityColumn);\n\n                    b.Property<int>(\"ScopeId\")\n                       .HasColumnType(\"int\");\n\n                    b.Property<string>(\"Type\")\n                       .IsRequired()\n                       .HasMaxLength(200)\n                       .HasColumnType(\"nvarchar(200)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"ScopeId\");\n\n                    b.ToTable(\"ApiScopeClaims\");\n                });\n\n            modelBuilder.Entity(\"Duende.IdentityServer.EntityFramework.Entities.ApiScopeProperty\", b =>\n                {\n                    b.Property<int>(\"Id\")\n                       .ValueGeneratedOnAdd()\n                       .HasColumnType(\"int\")\n                       .HasAnnotation(\"SqlServer:ValueGenerationStrategy\", SqlServerValueGenerationStrategy.IdentityColumn);\n\n                    b.Property<string>(\"Key\")\n                       .IsRequired",
  "<!DOCTYPE html>\n<html>\n    <head>\n        <title>Pokemon</title>\n        <link rel=\"stylesheet\" href=\"./assets/styles.css\">\n        <script src='https://kit.fontawesome.com/a076d05399.js'></script>\n\n    </head>\n    <body>\n        <header>\n            <div class=\"img_div\">\n                <img src=\"./images/logo.png\" alt=\"logo\">\n            </div>\n            <nav>\n                <img src=\"./images/flag.png\" alt=\"Indian_flag\">\n\n                <select name=\"pokedex\">\n                    <option value=\"pokedex\">Pokedex</option>\n                    <option value=\"pokedex\">Pokedex</option>\n                    <option value=\"pokedex\">Pokedex</option>\n                    <option value=\"pokedex\">Pokedex</option>\n                </select>\n                <select name=\"videogames\">\n                    <option value=\"Video_games\">Video games</option>\n                    <option value=\"Video_games\">Video games</option>\n                    <option value=\"Video_games\">Video games</option>\n                    <option value=\"Video_games\">Video games</option>\n                </select>\n                <a href=\"#\">ECard games</a>\n                <a href=\"#\">Pokemon TV</a>\n                <a href=\"#\">Pokemon Events</a>\n                <select name=\"about_us\">\n                    <option value=\"about_us\">About us</option>\n                    <option value=\"about_us\">About us</option>\n                    <option value=\"about_us\">About us</option>\n                    <option value=\"about_us\">About us</option>\n                </select>\n                <button>Apply</button>\n            </nav>\n        </header>\n\n        <main>\n            <div class=\"bg_img\">\n                <div>\n                    <h1>WELCOME TO EDYST LEARN CODING</h1>\n                    <h3>Let's learn web developtment in a fun way.</h3>\n                    <button class=\"bg_blue\">Apply Here</button><br>\n                    <button class=\"bg_transparent\">Register for course</button>\n                    <p>Here you can learn to build beautiful websites <a href=\"#\">Learn more <i class=\"fas fa-chevron-right\"></i></a></p>\n                </div>\n            </div>\n\n            <div class=\"pocket_monster\">\n                <div class=\"qna\">\n                    <h2 class=\"white_txt\">What are Pocket Monsters?</h2>\n                    <p>\n                        Pok\u00e9mon is a series of video games developed by Game Freak and published by Nintendo and The Pok\u00e9mon Company as part of the Pok\u00e9mon media franchise. Created by Satoshi Tajiri with assistance from Ken Sugimori,the first games released in 1996 in Japan for the Game Boy, and the main series of role-playing video games (RPGs), also referred as the \"core series\" by their developers\n                    </p>\n                </div>\n                \n                <div class=\"pokemon_types flex_div\">\n                    <p>Let us know some pokemon types.</p>\n                    <div class=\"types\">\n                        <i class=\"fas fa-water\"></i>\n                        <h3>Water</h3>\n                        <p>\n                            Water is one of the three basic elemental types along with Fire and Grass, which constitute the three starter Pok\u00e9mon. This creates a simple triangle to explain the type concept easily to new players. Water is the most common type with over 100 Pok\u00e9mon, which are based on a wide variety of fish and other sea-dwelling creatures.\n                        </p>\n                    </div>\n                    <div class=\"types\">\n                        <i class=\"fas fa-fire\"></i>\n                        <h3>Fire</h3>\n                        <p>\n                            Fire is one of the three basic elemental types along with Water and Grass, which constitute the three starter Pok\u00e9mon. This creates a simple triangle to explain the type concept easily to new players. Fire types are notoriously rare in the early stages of the games so choosing the Fire variation starter is often a plus.\n                        </p>\n                    </div>\n                    <div class=\"types\">\n                        <i class=\"fas fa-leaf\"></i>\n                        <h3>Grass</h3>\n                        <p>\n                            Grass is one of the three basic elemental types along with Fire and Water, which constitute the three starter Pok\u00e9mon. This creates a simple triangle to explain the type concept easily to new players.Grass is one of the weakest types statistically, with 5 defensive weaknesses and 7 types that are resistant to Grass moves.\n                        </p>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"stat_div\">\n                <h2>Statistics on Pokemon Go</h2>\n                <div class=\"stat_info flex_div\">\n                    <div class=\"weight_loss\">\n                        <h4>Statistics of weight loss</h4>\n                        <p>The AR game's potential for weight loss was a big part of that discussion. In the process of getting out their doors and visiting parks, players found they were losing weight almost in spite of themselves. A Reddit Pok\u00e9mon Go fan won acclaim for reporting that he'd lost 65 pounds between July and December.\n                        </p>\n                        <img srcset=\"./images/weight_loss.jpg, https://i.imgur.com/ahNXCUo.jpg?1\" alt=\"stat_weight_img\">\n                    </div>\n                    <div class=\"app_downloads\">\n                        <h4>Statistics of app downloads\n                        </h4>\n                        <p>Pok\u00e9mon GO is one of the most successful mobile games of all time, breaking records like fastest to earn $100 million and most-downloaded in its first month of release. To date, it has grossed almost $2 billion in revenue and been downloaded 800 million times. Although no longer the global phenomenon it was in 2016, the game remains incredibly popular.\n                        </p>\n                        <img srcset=\"./images/app_download.png,https://i.imgur.com/qC8jyDE.png\" alt=\"stat_app_downloads\">\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"potyr_2020\">\n                <h2>2020 Pok\u00e9mon of the Year Revealed</h2>\n                <div>\n                    <div>\n                        <div>\n                            <img src=\"./images/grininja.png\" alt=\"pokemon_img\">\n                        </div>\n                        <div class=\"name_div\">\n                            <h4>Greninja</h4>\n                            <h6>Water/Dark</h6>\n                            <img src=\"./images/pokemon.png\" alt=\"pokemon_logo\">\n                        </div>\n                        <div class=\"pokemon_desc\">\n                            <p>\"Greninja is the final evolution of Pok\u00e9mon X and Y water-type starter Froakie. It has the ability to take on an appearance resembling its trainer. Pokedex says: Greninja creates throwing stars out of compressed water. When it spins them and throws them at high speed, these stars can split metal in two.\"\n                            </p>\n                        </div>\n                    </div>\n                \n                    <div>\n                        <div>\n                            <img src=\"./images/Lucario.png\" alt=\"pokemon_img\">\n                        </div>\n                        <div class=\"name_div\">\n                            <h4>Lucario\n                            </h4>\n                            <h6>Fighting, Steelr\n                            </h6>\n                            <img src=\"./images/pokemon.png\" alt=\"pokemon_logo\">\n                        </div>\n                        <div class=\"pokemon_desc\">\n                            <p>\"Lucario is a bipedal, wolf-like Pok\u00e9mon with blue, cream, and black fur. It is considered to be prideful and loyal to its trainer. Pokedex says: By catching the aura emanating from others, Lucario can read their thoughts and movements.\"\n                            </p>\n                        </div>\n                    </div>\n                    <div>\n                        <div>\n                            <img src=\"./images/mimikyu.jpeg\" alt=\"pokemon_img\">\n                        </div>\n                        <div class=\"name_div\">\n                            <h4>Mimikyu</h4>\n                            <h6>Ghost\u200e \u200eFairy\n                            </h6>\n                            <img src=\"./images/pokemon.png\" alt=\"pokemon_logo\">\n                        </div>\n                        <div class=\"pokemon_desc\">\n                            <p>\"Mimikyu caused quite a stir for its peculiar looks and sad backstory when it was originally announced for Pok\u00e9mon Sun",
  "namespace OmniSharp.Extensions.LanguageServer.Protocol.Models\n{\n    public class TextDocument\n    {\n        public static Container<string> Eol = new string[] { \"\\n\", \"\\r\\n\", \"\\r\" };\n    }\n}",
  "import { Box, Typography } from \"@material-ui/core\";\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport { LayoutContext } from \"../../App/LayoutContext\";\r\nimport { IChallengeProps } from \"../../Challenge/IChallengeProps\";\r\nimport fcaLogo from \"../../Images/fca_logo.png\";\r\nimport { BlockReorderingService } from \"./BlockReorderingService\";\r\nimport useStyles from \"./styles\";\r\n\r\n\r\n\r\n\r\nconst BlockReordering = (props: IChallengeProps) => {\r\n  const classes = useStyles();\r\n  const layoutContext = useContext(LayoutContext);\r\n\r\n  useEffect(() => {\r\n    layoutContext.setLoading(true);\r\n    BlockReorderingService.createAnonymousSessionIfNeeded().then(() => {\r\n      BlockReorderingService.isAdmin().then((res) => {\r\n\r\n        props.setFlag(res.flag);\r\n        layoutContext.setLoading(false);\r\n\r\n      }).catch(() => layoutContext.setLoading(false));\r\n    }).catch(() => layoutContext.setLoading(false));\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <Box >\r\n      <Box className={classes.mainContainer}>\r\n        <Box className={classes.manifesto}>\r\n          <Box>\r\n            <Typography variant=\"h4\">[This site has been siezed]</Typography>\r\n            <img alt=\"Fake Crypto Agency Logo\" className={classes.logo} src={fcaLogo} />\r\n\r\n          </Box>\r\n\r\n          <Typography variant=\"h6\">\r\n            This website has been siezed as part of a fake law enforcement operation by the Fake Crypto Agency.\r\n        </Typography>\r\n          <Typography>\r\n            In according with the law of Fake State and a protective order obtained by the Fake Faker Office of the Fakering Fake.\r\n        </Typography>\r\n        </Box>\r\n\r\n\r\n        <Box className={classes.technicalInfo}>\r\n          <Typography>\r\n            This has been possible due to a flaw in the source code of the website, discovered upon carefull code review of its open source repository.\r\n          </Typography>\r\n          <Typography>\r\n            The Fake Crypto Agency managed to find an encrypted token being sent to the webpage with the following structure:\r\n          </Typography>\r\n          <pre className={classes.tokenExample}>\r\n            username=[USERNAME];isAdmin=false;aat=[DATE]\r\n          </pre>\r\n          <Typography>\r\n            Where date is in GMT format.\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n    </Box >\r\n  );\r\n};\r\n\r\nexport default BlockReordering;",
  "# Changelog\nAll notable changes to this project will be documented in this file.\n\n## Unreleased\n\n### Improvements\n - Add the \"Last Duration\" field in the \"My Checks\" page (#257)\n - Add \"last_duration\" attribute to the Check API resource (#257)\n\n\n## 1.9.0 - 2019-09-03\n\n### Improvements\n- Show the number of downtimes and total downtime minutes in monthly reports (#104)\n- Show the number of downtimes and total downtime minutes in \"Check Details\" page\n- Add the `pruneflips` management command\n- Add Mattermost integration (#276)\n- Three choices in timezone switcher (UTC / check's timezone / browser's timezone) (#278)\n- After adding a new check redirect to the \"Check Details\" page\n\n## Bug Fixes\n- Fix javascript code to construct correct URLs when running from a subdirectory (#273)\n- Don't show the \"Sign Up\" link in the login page if registration is closed (#280)\n\n## 1.8.0 - 2019-07-08\n\n### Improvements\n- Add the `prunetokenbucket` management command\n- Show check counts in JSON \"badges\" (#251)\n- Webhooks support HTTP PUT (#249)\n- Webhooks can use different req. bodies and headers for \"up\" and \"down\" events (#249)\n- Show check's code instead of full URL on 992px - 1200px wide screens (#253)\n- Add WhatsApp integration (uses Twilio same as the SMS integration)\n- Webhooks support the $TAGS placeholder\n- Don't include ping URLs in API responses when the read-only key is used\n\n### Bug Fixes\n- Fix badges for tags containing special characters (#240, #237)\n- Fix the \"Integrations\" page for when the user has no active project\n- Prevent email clients from opening the one-time login links (#255)\n- Fix `prunepings` and `prunepingsslow`, they got broken when adding Projects (#264)\n\n\n## 1.7.0 - 2019-05-02\n\n### Improvements\n- Add the EMAIL_USE_VERIFICATION configuration setting (#232)\n- Show \"Badges\" and \"Settings\" in top navigation (#234)\n- Upgrade to Django 2.2\n- Can configure the email integration to only report the \"down\" events (#231)\n- Add \"Test!\" function in the Integrations page (#207)\n- Rate limiting for the log in attempts\n- Password strength meter and length check in the \"Set Password\" form\n- Show the Description section even if the description is missing. (#246)\n- Include the description in email alerts. (#247)\n\n## 1.6.0 - 2019-04-01\n\n### Improvements\n- Add the \"desc\" field (check's description) to API responses\n- Add maxlength attribute to HTML input=text elements\n- Improved logic for displaying job execution times in log (#219)\n- Add Matrix integration\n- Add Pager Team integration\n- Add a management command for sending inactive account notifications\n\n### Bug Fixes\n- Fix refreshing of the checks page filtered by tags (#221)\n- Escape asterisks in Slack messages (#223)\n- Fix a \"invalid time format\" in front.views.status_single on Windows hosts\n\n\n## 1.5.0 - 2019-02-04\n\n### Improvements\n- Database schema: add uniqueness constraint to Check.code\n- Database schema: add Ping.kind field. Remove \"start\" and \"fail\" fields\n- Add \"Email Settings...\" dialog and \"Subject Must Contain\" setting\n- Database schema: add the Project model\n- Move project-specific settings to a new \"Project Settings\" page\n- Add a \"Transfer to Another Project...\" dialog\n- Add the \"My Projects\" page\n\n\n## 1.4.0 - 2018-12-25\n\n### Improvements\n- Set Pushover alert priorities for \"down\" and \"up\" events separately\n- Additional python usage examples\n- Allow simultaneous access to checks from different teams\n- Add CORS support to API endpoints\n- Flip model, for tracking status changes of the Check objects\n- Add `/ping/<code>/start` API endpoint\n- When using the `/start` endpoint, show elapsed times in ping log\n\n### Bug Fixes\n- Fix after-login redirects (the \"?next=\" query parameter)\n- Update Check.status field when user edits timeout & grace settings\n- Use timezone-aware datetimes with croniter, avoid ambiguities around DST\n- Validate and reject cron schedules with six components\n\n\n## 1.3.0 - 2018-11-21\n\n### Improvements\n- Load settings from environment variables\n- Add \"List-Unsubscribe\" header to alert and report emails\n- Don't send monthly reports to inactive accounts (no pings in 6 months)\n- Add search box in the \"My Checks\" page\n- Add read-only API key support\n- Remove Profile.bill_to field (obsolete)\n- Show a warning when running with DEBUG=True\n- Add \"channels\" attribute to the Check API resource\n- Can specify channel codes when updating a check via API\n- Add a workaround for email agents automatically opening \"Unsubscribe\" links\n- Add Channel.name field, users can now name integrations\n- Add \"Get a List of Existing Integrations\" API call\n\n### Bug Fixes\n- During DST transition, handle ambiguous dates as pre-transition\n\n\n## 1.2.0 - 2018-10-20\n\n### Improvements\n- Content updates in the \"Welcome\" page.\n- Added \"Docs > Third-Party Resources\" page.\n- Improved  layout and styling in \"Login\" page.\n- Separate \"Sign Up\" and \"Log In\" forms.\n- \"My Checks\" page: support filtering checks by query string parameters.\n- Added Trello integration\n\n### Bug Fixes\n- Timezones were missing in the \"Change Schedule\" dialog, fixed.\n- Fix hamburger menu button in \"Login\" page.\n\n\n## 1.1.0 - 2018-08-20\n\n### Improvements\n- A new \"Check Details\" page.\n- Updated django-compressor, psycopg2, pytz, requests package versions.\n- C# usage example.\n- Checks have a \"Description\" field.\n",
  "import os\r\n\r\nimport numpy as np\r\nimport pandas as pd\r\nimport torch\r\nfrom skimage import io\r\nfrom torch.utils.data import Dataset\r\nfrom torchvision import transforms\r\n\r\n\r\nclass TripletBirdDataset(Dataset):\r\n\r\n    def __init__(self, root_dir, csv_name, num_triplets, transform=None):\r\n\r\n        self.root_dir = root_dir\r\n        self.df = pd.read_csv(csv_name)\r\n        self.num_triplets = num_triplets\r\n        self.transform = transform\r\n        self.training_triplets = self.generate_triplets(self.df, self.num_triplets)\r\n\r\n    @staticmethod\r\n    def generate_triplets(df, num_triplets):\r\n\r\n        def make_dictionary_for_bird_class(df):\r\n\r\n            '''\r\n              - bird_classes = {'class0': [class0_id0,...], 'class1': [class1_id0,...],...}\r\n            '''\r\n            bird_classes = dict()\r\n            for idx, label in enumerate(df['class']):\r\n                if label not in bird_classes:\r\n                    bird_classes[label] = []\r\n                bird_classes[label].append((df.iloc[idx]['id'], df.iloc[idx]['ext']))\r\n            return bird_classes\r\n\r\n        triplets = []\r\n        classes = df['class'].unique()\r\n        bird_classes = make_dictionary_for_bird_class(df)\r\n\r\n        for _ in range(num_triplets):\r\n\r\n            '''\r\n              - memilih acak gambar anchor, positif dan negatif untuk triplet loss\r\n              - gambar anchor dan positif di pos_class\r\n              - gambar negatif di neg_class\r\n              - setidaknya memerlukan 2 gambar anchor dan positif di pos_class\r\n              - gambar negatif harus memiliki kelas yang berbeda sebagai gambar anchor dan positif menurut definisi\r\n            '''\r\n\r\n            pos_class = np.random.choice(classes)\r\n            neg_class = np.random.choice(classes)\r\n            while len(bird_classes[pos_class]) < 2:\r\n                pos_class = np.random.choice(classes)\r\n            while pos_class == neg_class:\r\n                neg_class = np.random.choice(classes)\r\n\r\n            pos_name = df.loc[df['class'] == pos_class, 'name'].values[0]\r\n            neg_name = df.loc[df['class'] == neg_class, 'name'].values[0]\r\n\r\n            if len(bird_classes[pos_class]) == 2:\r\n                ianc, ipos = np.random.choice(2, size=2, replace=False)\r\n            else:\r\n                ianc = np.random.randint(0, len(bird_classes[pos_class]))\r\n                ipos = np.random.randint(0, len(bird_classes[pos_class]))\r\n                while ianc == ipos:\r\n                    ipos = np.random.randint(0, len(bird_classes[pos_class]))\r\n            ineg = np.random.randint(0, len(bird_classes[neg_class]))\r\n\r\n            anc_id = bird_classes[pos_class][ianc][0]\r\n            anc_ext = bird_classes[pos_class][ianc][1]\r\n            pos_id = bird_classes[pos_class][ipos][0]\r\n            pos_ext = bird_classes[pos_class][ipos][1]\r\n            neg_id = bird_classes[neg_class][ineg][0]\r\n            neg_ext = bird_classes[neg_class][ineg][1]\r\n\r\n            triplets.append(\r\n                [anc_id, pos_id, neg_id, pos_class, neg_class, pos_name, neg_name, anc_ext, pos_ext, neg_ext])\r\n\r\n        return triplets\r\n\r\n    def __getitem__(self, idx):\r\n\r\n        anc_id, pos_id, neg_id, pos_class, neg_class, pos_name, neg_name, anc_ext, pos_ext, neg_ext = \\\r\n            self.training_triplets[idx]\r\n\r\n        anc_img = os.path.join(self.root_dir, str(pos_name), str(anc_id) + f'.{anc_ext}')\r\n        pos_img = os.path.join(self.root_dir, str(pos_name), str(pos_id) + f'.{pos_ext}')\r\n        neg_img = os.path.join(self.root_dir, str(neg_name), str(neg_id) + f'.{neg_ext}')\r\n\r\n        anc_img = io.imread(anc_img)\r\n        pos_img = io.imread(pos_img)\r\n        neg_img = io.imread(neg_img)\r\n\r\n        pos_class = torch.from_numpy(np.array([pos_class]).astype('long'))\r\n        neg_class = torch.from_numpy(np.array([neg_class]).astype('long'))\r\n\r\n        sample = {'anc_img': anc_img, 'pos_img': pos_img, 'neg_img': neg_img, 'pos_class': pos_class,\r\n                  'neg_class': neg_class}\r\n\r\n        if self.transform:\r\n            sample['anc_img'] = self.transform(sample['anc_img'])\r\n            sample['pos_img'] = self.transform(sample['pos_img'])\r\n            sample['neg_img'] = self.transform(sample['neg_img'])\r\n\r\n        return sample\r\n\r\n    def __len__(self):\r\n        return len(self.training_triplets)\r\n\r\n\r\ndef get_dataloader(train_root_dir, valid_root_dir,\r\n                   train_csv_name, valid_csv_name,\r\n                   num_train_triplets, num_valid_triplets,\r\n                   batch_size, num_workers):\r\n    data_transforms = {\r\n        'train': transforms.Compose([\r\n            transforms.ToPILImage(),\r\n            transforms.RandomRotation(15),\r\n            transforms.RandomResizedCrop(224),\r\n            transforms.RandomHorizontalFlip(),\r\n            transforms.ToTensor(),\r\n            transforms.Normalize(mean=[0.485, 0.456, 0.406],\r\n                                 std=[0.229, 0.224, 0.225])]),\r\n        'valid': transforms.Compose([\r\n            transforms.ToPILImage(),\r\n            transforms.Resize(224),\r\n            transforms.CenterCrop(224),\r\n            transforms.ToTensor(),\r\n            transforms.Normalize(mean=[0.485, 0.456, 0.406],\r\n                                 std=[0.229, 0.224, 0.225])])}\r\n\r\n    bird_dataset = {\r\n        'train': TripletBirdDataset(root_dir=train_root_dir,\r\n                                    csv_name=train_csv_name,\r\n                                    num_triplets=num_train_triplets,\r\n                                    transform=data_transforms['train']),\r\n        'valid': TripletBirdDataset(root_dir=valid_root_dir,\r\n                                    csv_name=valid_csv_name,\r\n                                    num_triplets=num_valid_triplets,\r\n                                    transform=data_transforms['valid'])}\r\n\r\n    dataloaders = {\r\n        x: torch.utils.data.DataLoader(bird_dataset[x], batch_size=batch_size, shuffle=False, num_workers=num_workers)\r\n        for x in ['train', 'valid']}\r\n\r\n    data_size = {x: len(bird_dataset[x]) for x in ['train', 'valid']}\r\n\r\n    return dataloaders, data_size",
  "This cop checks for the use of local variable names from an outer scope\nin block arguments or block-local variables. This mirrors the warning\ngiven by `ruby -cw` prior to Ruby 2.6:\n\"shadowing outer local variable - foo\".\n\nNOTE: Shadowing of variables in block passed to `Ractor.new` is allowed\nbecause `Ractor` should not access outer variables.\neg. following syle is encouraged:\n\n    worker_id, pipe = env\n    Ractor.new(worker_id, pipe) do |worker_id, pipe|\n    end\n\n### Example:\n\n    # bad\n\n    def some_method\n      foo = 1\n\n      2.times do |foo| # shadowing outer `foo`\n        do_something(foo)\n      end\n    end\n\n### Example:\n\n    # good\n\n    def some_method\n      foo = 1\n\n      2.times do |bar|\n        do_something(bar)\n      end\n    end",
  "\ufeff// Copyright (c) 2010-2014 SharpDX - Alexandre Mutel\n// \n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nusing System;\n\nnamespace SharpDX.Direct2D1\n{\n    public partial class DeviceContext1\n    {\n        /// <summary>\n        /// Initializes a new instance of the <see cref=\"DeviceContext1\"/> class using an existing <see cref=\"Device1\"/>.\n        /// </summary>\n        /// <param name=\"device\">The device.</param>\n        /// <param name=\"options\">The options to be applied to the created device context.</param>\n        /// <remarks>\n        /// The new device context will not have a  selected target bitmap. The caller must create and select a bitmap as the target surface of the context.\n        /// </remarks>\n        /// <unmanaged>HRESULT ID2D1Device1::CreateDeviceContext([In] D2D1_DEVICE_CONTEXT_OPTIONS options,[Out] ID2D1DeviceContext1** deviceContext1)</unmanaged>\n        public DeviceContext1(Device1 device, DeviceContextOptions options)\n            : base(IntPtr.Zero)\n        {\n            device.CreateDeviceContext(options, this);\n        }\n    }\n}",
  "option (ENABLE_BLAS    \"Enable openblas for fast neural network processing [default: OFF]\" OFF)\n\nIF(ENABLE_BLAS MATCHES \"ON\")\n    ProcessPackage(BLAS OPTIONAL_INCLUDE LIBRARY openblas blas blis\n            INCLUDE cblas.h INCLUDE_SUFFIXES include/openblas\n            include/blas\n            include/blis\n            ROOT ${BLAS_ROOT_DIR}\n            LIB_OUTPUT BLAS_REQUIRED_LIBRARIES)\n    ProcessPackage(BLAS_LAPACK OPTIONAL_INCLUDE LIBRARY lapack\n            INCLUDE cblas.h INCLUDE_SUFFIXES include/openblas\n            include/blas\n            include/blis\n            ROOT ${BLAS_ROOT_DIR}\n            LIB_OUTPUT BLAS_REQUIRED_LIBRARIES)\nENDIF()\n\nIF(WITH_BLAS)\n    MESSAGE(STATUS \"Use openblas to accelerate kann\")\n    IF(NOT BLAS_INCLUDE)\n        FIND_FILE(HAVE_CBLAS_H HINTS \"${RSPAMD_SEARCH_PATH}\"\n                NAMES cblas.h\n                DOC \"Path to cblas.h header\")\n        IF(NOT HAVE_CBLAS_H)\n            MESSAGE(STATUS \"Blas header cblas.h has not been found, use internal workaround\")\n        ELSE()\n            SET(HAVE_CBLAS_H 1)\n        ENDIF()\n    ELSE()\n        SET(HAVE_CBLAS_H 1)\n    ENDIF()\n    file(WRITE \"${CMAKE_CURRENT_BINARY_DIR}/sgemm.c\" \"\n#include <stddef.h>\nenum CBLAS_ORDER {CblasRowMajor=101, CblasColMajor=102 };\nenum CBLAS_TRANSPOSE {CblasNoTrans=111, CblasTrans=112 };\nextern void cblas_sgemm(const enum CBLAS_ORDER Order,\n                const enum CBLAS_TRANSPOSE TA,\n                const enum CBLAS_TRANSPOSE TB,\n                const int M, const int N, const int K,\n                const float  alpha, const float *A, const int lda,\n                const float *B, const int ldb, const float  beta,\n                float *C, const int ldc);\nint main(int argc, char **argv)\n{\n    cblas_sgemm(CblasRowMajor, CblasNoTrans, CblasNoTrans, 0, 0, 0, 0, NULL, 0,\n        NULL, 0, 0, NULL, 0);\n    return 0;\n}\n\")\n    try_compile(HAVE_CBLAS_SGEMM\n            ${CMAKE_CURRENT_BINARY_DIR}\n            \"${CMAKE_CURRENT_BINARY_DIR}/sgemm.c\"\n            COMPILE_DEFINITIONS ${CMAKE_REQUIRED_DEFINITIONS}\n            LINK_LIBRARIES ${BLAS_REQUIRED_LIBRARIES}\n            OUTPUT_VARIABLE SGEMM_ERR)\n    file(WRITE \"${CMAKE_CURRENT_BINARY_DIR}/saxpy.c\" \"\n#include <stddef.h>\nextern void cblas_saxpy(const int __N,\n    const float __alpha, const float *__X, const int __incX, float *__Y, const int __incY);\nint main(int argc, char **argv)\n{\n    cblas_saxpy(0, 0, NULL, 0, NULL, 0);\n    return 0;\n}\n\")\n    try_compile(HAVE_CBLAS_SAXPY\n            ${CMAKE_CURRENT_BINARY_DIR}\n            \"${CMAKE_CURRENT_BINARY_DIR}/saxpy.c\"\n            COMPILE_DEFINITIONS ${CMAKE_REQUIRED_DEFINITIONS}\n            LINK_LIBRARIES ${BLAS_REQUIRED_LIBRARIES}\n            OUTPUT_VARIABLE SAXPY_ERR)\n\n    file(WRITE \"${CMAKE_CURRENT_BINARY_DIR}/openblas_set_num_threads.c\" \"\n#include <stddef.h>\nextern void openblas_set_num_threads(int num_threads);\nint main(int argc, char **argv)\n{\n    openblas_set_num_threads(1);\n    return 0;\n}\n\")\n    try_compile(HAVE_OPENBLAS_SET_NUM_THREADS\n            ${CMAKE_CURRENT_BINARY_DIR}\n            \"${CMAKE_CURRENT_BINARY_DIR}/openblas_set_num_threads.c\"\n            COMPILE_DEFINITIONS ${CMAKE_REQUIRED_DEFINITIONS}\n            LINK_LIBRARIES ${BLAS_REQUIRED_LIBRARIES}\n            OUTPUT_VARIABLE OPENBLAS_SET_NUM_THREADS_ERR)\n\n    file(WRITE \"${CMAKE_CURRENT_BINARY_DIR}/bli_thread_set_num_threads.c\" \"\n#include <stddef.h>\nextern void bli_thread_set_num_threads(int num_threads);\nint main(int argc, char **argv)\n{\n    bli_thread_set_num_threads(1);\n    return 0;\n}\n\")\n    try_compile(HAVE_BLI_THREAD_SET_NUM_THREADS\n            ${CMAKE_CURRENT_BINARY_DIR}\n            \"${CMAKE_CURRENT_BINARY_DIR}/bli_thread_set_num_threads.c\"\n            COMPILE_DEFINITIONS ${CMAKE_REQUIRED_DEFINITIONS}\n            LINK_LIBRARIES ${BLAS_REQUIRED_LIBRARIES}\n            OUTPUT_VARIABLE BLI_SET_NUM_THREADS_ERR)\n    # Cmake is just brain damaged\n    #CHECK_LIBRARY_EXISTS(${BLAS_REQUIRED_LIBRARIES} cblas_sgemm \"\" HAVE_CBLAS_SGEMM)\n    if(HAVE_CBLAS_SGEMM)\n        MESSAGE(STATUS \"Blas has CBLAS sgemm\")\n    else()\n        MESSAGE(STATUS \"Blas has -NOT- CBLAS sgemm, use internal workaround: ${SGEMM_ERR}\")\n    endif()\n    if(HAVE_CBLAS_SAXPY)\n        MESSAGE(STATUS \"Blas has CBLAS saxpy\")\n    else()\n        MESSAGE(STATUS \"Blas has -NOT- CBLAS saxpy, use internal workaround: ${SAXPY_ERR}\")\n    endif()\n    SET(HAVE_CBLAS 1)\nENDIF(WITH_BLAS)\n\nCONFIGURE_FILE(\"${CMAKE_SOURCE_DIR}/blas-config.h.in\" \"${CMAKE_BINARY_DIR}/src/blas-config.h\")",
  "const router = require('express').Router();\nconst { Category, Product } = require('../../models');\n\n//get all categories\nrouter.get('/', async (req, res) => {\ntry {\n  const categoryData = await Category.findAll({\n    attributes: ['id', 'category_name'],\n    include: [\n      {\n        model: Product,\n        attributes: ['product_name', 'price','stock', 'category_id']\n      }\n    ]\n  });\n  if (!categoryData) {\n    res.status(404).json({ message: 'No category found with that id!' });\n    return;\n  }\n  res.status(200).json(categoryData)\n} catch (err) {\n  res.status(500).json(err)\n}\n})\n\n//get one category\nrouter.get('/:id', async (req, res) => {\n  try {\n    const categoryData = await Product.findOne({\n      where: {\n        id: req.params.id\n      },\n      attributes: ['id', 'product_name', 'price','stock', 'category_id'],\n      include: [\n        {\n          model: Product,\n          attributes: ['category_id,', 'id', 'product_name','stock', 'price']\n        },\n      ]\n    });\n  \n    if (!categoryData) {\n      res.status(404).json({ message: 'No category found with that id!' })\n      return;\n    }\n    res.status(200).json(categoryData);\n  } catch (err) {\n    res.status(500).json(err)\n  }\n});\n\nrouter.post('/', (req, res) => {\nCategory.create(req.body.category_name)\n  \n   .then((categoryData) => \n      res.status(200).json(categoryData))\n   .catch((err) => {\n      console.log(err);\n      res.status(400).json(err);\n    });\n});\n\nrouter.put('/:id', (req, res) => {\n  Category.update(req.body, {\n    where: {\n    id: req.params.id\n    },\n  })\n .then((categoryData) => res.status(200).json(categoryData))\n   .catch((err) => {\n      console.log(err);\n      res.status(400).json(err);\n    });\n})\n\n\nrouter.delete('/:id', async (req, res) => {\n  try {\n    const categoryData = await Category.destroy({\n      where: {\n        id: req.params.id\n      }\n    });\n\n    if (!categoryData) {\n      res.status(404).json({ message: 'No category found with that id' });\n      return;\n    }\n    res.status(200).json(categoryData);\n  } catch (err) {\n    res.status(500).jason(err);\n  }\n});\n\nmodule.exports = router;\n",
  "# Generated by Django 2.2.1 on 2019-05-19 02:57\n\nimport django.core.validators\nfrom django.db import migrations, models\n\n\nclass Migration(migrations.Migration):\n\n    initial = True\n\n    dependencies = [\n    ]\n\n    operations = [\n        migrations.CreateModel(\n            name='Collection',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=250)),\n            ],\n        ),\n        migrations.CreateModel(\n            name='Card',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('first_name', models.CharField(max_length=150)),\n                ('last_name', models.CharField(max_length=150)),\n                ('team', models.CharField(max_length=100)),\n                ('year', models.PositiveIntegerField(help_text='Use the following format: <YYYY>', validators=[django.core.validators.MinValueValidator(1887), django.core.validators.MaxValueValidator(2019)])),\n                ('company', models.CharField(max_length=250)),\n                ('value', models.DecimalField(decimal_places=2, default=0, max_digits=50)),\n                ('collection', models.ManyToManyField(to='card.Collection')),\n            ],\n        ),\n    ]\n",
  "{{-- <link rel=\"icon\" type=\"image/png\" href=\"images/icons/favicon.ico\"/> --}}\n<!--===============================================================================================-->\n\t{{-- <link rel=\"stylesheet\" type=\"text/css\" href=\"{{ asset('newDesign/vendor/bootstrap/css/bootstrap.min.css') }}\"> --}}\n<!--===============================================================================================-->\n\t{{-- <link rel=\"stylesheet\" type=\"text/css\" href=\"fonts/font-awesome-4.7.0/css/font-awesome.min.css\"> --}}\n<!--===============================================================================================-->\n<link rel=\"stylesheet\" type=\"text/css\" href=\"{{ asset('newDesign/fonts/Linearicons-Free-v1.0.0/icon-font.min.css') }}\">\n<!--===============================================================================================-->\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"{{ asset('newDesign/vendor/animate/animate.css') }}\">\n<!--===============================================================================================-->\t\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"{{ asset('newDesign/vendor/css-hamburgers/hamburgers.min.css') }}\">\n<!--===============================================================================================-->\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"{{ asset('newDesign/vendor/animsition/css/animsition.min.css') }}\">\n<!--===============================================================================================-->\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"{{ asset('newDesign/vendor/select2/select2.min.css') }}\">\n<!--===============================================================================================-->\t\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"{{ asset('newDesign/vendor/daterangepicker/daterangepicker.css') }}\">\n<!--===============================================================================================-->\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"{{ asset('newDesign/css/util.css') }}\">\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"{{ asset('newDesign/css/main.css') }}\">\n<!--===============================================================================================-->\n\n<style>\n   .login100-form-title {\n    text-align: right;\n\n}\n.btn-show-pass {\n    left: 12px!important;\n    right: auto;\n}\n\n.input100 {\n    font-size: 15px;\n}\n.txt1 {\n    font-size: 15px;\n\n}\n</style>",
  "package cn.nicolite.huthelper.network.api;\n\nimport java.util.List;\n\nimport cn.nicolite.huthelper.model.bean.TimeAxis;\nimport io.reactivex.Observable;\nimport retrofit2.http.GET;\n\n/**\n * \u4e3b\u9875\u65f6\u95f4\u8f74\n * Created by nicolite on 17-7-16.\n */\n\npublic interface TimeAxisAPI {\n    @GET(\"/api/v3/Get/calendar\")\n    Observable<List<TimeAxis>> getTimeAxis();\n}\n",
  "# Generate Java project based on C++ CMake\n\nmessage(\"Generate Java pom.xml at ${CMAKE_CURRENT_BINARY_DIR}/pom.xml\")\nmessage(\">> SOURCE_DIR: ${SOURCE_DIR}\")\nmessage(\">> SOURCE_BINDINGS_DIR: ${SOURCE_BINDINGS_DIR}\")\nmessage(\">> CRND_LIBRARY_PATH: ${CRND_LIBRARY_PATH}\")\n\nconfigure_file(${SOURCE_DIR}/pom.xml.template ${CMAKE_CURRENT_BINARY_DIR}/pom.xml @ONLY)\n",
  "{-+\nThe various auxiliary operations required by the extensible type checker\nare defined here.\n-}\nmodule TiPropInstances where\nimport List(partition)\nimport Maybe(isJust)\n--import Maybe(mapMaybe)\n\nimport HasBaseStruct\nimport PropSyntax\nimport TI hiding (Subst,Qual(..))\n--import TiD(DeclInfo(..),HasMethodSigs(..))\n--import TiHsName\n--import TiBaseStruct(pApp)\nimport TiBase()\n--import TiPrelude(pt)\nimport HsPropStruct\nimport MUtils\nimport DefinedNamesProp()\nimport FreeNamesProp()\nimport Substitute\nimport SubstituteProp\n\ninstance HasId i (HsExpI i) where\n  ident = base. ident\n  isId = isId @@ basestruct\n\n--instance HasLit (HsExpI i) where lit = hsLit loc0\n----instance HasLit (HsPatI i) where lit = hsPLit\n\ninstance HasCoreSyntax i (HsExpI i) where\n  app e1 e2 = hsApp e1 e2\n  tuple = hsTuple\n  list = hsList\n\ninstance HasAbstr i (HsExpI i) where\n  abstract = hsLambda. map var\n{-\ninstance HasId i (HsPatI i) where\n  ident = base. ident\n  isId = isId @@ basestruct\n\ninstance HasCoreSyntax i (HsPatI i) where\n  app (Pat (Base p1)) p2 = base $ pApp p1 p2 -- hmm\n  tuple = hsPTuple\n  list = hsPList\n-}\n\ninstance HasAbstr i (HsDeclI i) where\n  abstract is = mapRec (mapProp (abstract is) id) --!!\n\ninstance HasAbstr i pa => HasAbstr i (PD i pa pp) where\n  abstract is pd =\n    case pd of\n      HsAssertion s optn pa -> HsAssertion s optn (abstract is pa)\n      HsPropDecl s n ns pp -> HsPropDecl s n (map HsVar is++ns) pp\n\n--instance HasAbstr i (AssertionI i) where\n--  abstract is pa = foldr propLambda pa is\n\ninstance Eq i => HasLocalDef i (HsExpI i) (HsDeclI i) where\n  letvar xt e = mapRec (mapProp (letvar xt e) id) --!!\n\ninstance (FreeNames i pa,MapExp e pa,HasAbstr i pa,\n\t  HasLocalDef i e pa,\n\t  FreeNames i pp,MapExp e pp,\n\t  HasId i e,Subst i e)\n      => HasLocalDef i e (PD i pa pp) where\n  letvar xt@(i:>:t) e pd =\n    case pd of\n      HsPropDecl s n ns pp ->\n\t  if HsVar i `elem` freeVars pp\n          then if isJust (isId e)\n\t       then HsPropDecl s n ns (esubst1 var e i pp)\n\t       else --pd -- hmm!!\n                    HsPropDecl s n ns (esubst1 var e i pp) --code duplication...\n                    \n\t  else pd\n      HsAssertion s optn pa -> \n\t  if HsVar i `elem` freeVars pa\n          then if isJust (isId e)\n\t       then HsAssertion s optn (esubst1 var e i pa)\n\t       else HsAssertion s optn (letvar xt e pa)\n\t  else pd\n\ninstance AddDeclsType i [HsDeclI i]\n\ninstance HasDef [HsDeclI i] (HsDeclI i) where\n  nullDef = null\n  noDef = []\n  consDef = (:)\n  appendDef = (++)\n  toDefs = id\n  filterDefs = filter\n\ninstance (ValueId i,TypeVar i) => DeclInfo i (HsDeclI i) where\n  explicitlyTyped kenv tinfo ctx =\n      recprop (explicitlyTyped kenv tinfo ctx) (explicitlyTyped kenv tinfo ctx)\n  --isTypeDecl = isBase isTypeDecl. struct\n  isUnrestricted expl = recprop (isUnrestricted expl) (isUnrestricted expl)\n  keepAmbigTypes = recprop keepAmbigTypes keepAmbigTypes\n\ninstance DeclInfo i (PD i pa pp) where\n  explicitlyTyped _ _ _ pd =\n    case pd of\n      --HsAssertion s (Just n) pa -> ([],[HsCon n:>:mono (pt \"Prop\")])\n      _ -> ([],[]) -- no explitit type info here...\n  isUnrestricted _ _ = True\n  keepAmbigTypes pd =\n    case pd of\n      HsAssertion {} -> True\n      _ -> False\n\n\n--- Dummy instances ---\n-- Need something sensible when decorating the syntax tree with types...\ninstance TypeVar i => Types i (HsDeclI i)    where tmap f = id; tv d = []\ninstance TypeVar i => Types i (AssertionI i) where tmap f = id; tv d = []\ninstance TypeVar i => Types i (PredicateI i) where tmap f = id; tv d = []\n\ninstance HasTypeApp i (HsExpI i) where spec x _ ts = ident x\n--instance HasTypeApp i (HsPatI i) where spec x _ ts = ident x\n\ninstance HasTypeAnnot i (HsExpI i)\n\ninstance HasMethodSigs [HsDeclI i] where\n  splitMethodSigs = partition isSig\n    where\n      isSig (Dec (Base (HsTypeSig {}))) = True\n      --isSig (Dec (Prop (HsAssertion _ (Just _) _))) = True\n      isSig _                           = False\n{-\ninstance GetSigs i [Pred i] (Type i) [HsDeclI i] where\n  getSigs = mapMaybe getSig\n    where\n      getSig (Dec (Base (HsTypeSig s is c tp))) = Just (s,is,c,tp)\n      getSig _                                  = Nothing\n-}\n",
  "package com.egoveris.ffdd.base.repository;\n\nimport java.util.List;\n\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.data.jpa.repository.Query;\nimport org.springframework.data.repository.query.Param;\n\nimport com.egoveris.ffdd.base.model.DynamicComponentField;\nimport com.egoveris.ffdd.base.model.Item;\n\npublic interface DynamicComponenteRepository extends JpaRepository<DynamicComponentField, Integer>{\n\n\t@Query(\"SELECT d FROM Item d WHERE d.componente.nombre = :componentName ORDER BY d.orden\")\n\tList<Item> findMultivaloresComponente(@Param(\"componentName\") final String componentName);\n}\n\n\n",
  "package models\n\nimport com.google.inject.ImplementedBy\nimport enumeratum._\nimport enumeratum.values._\nimport enumeratum.EnumEntry._\nimport java.net.URI\nimport util.Try\nimport javax.inject.{Inject, Singleton}\nimport play.api.Configuration\n\n@ImplementedBy(classOf[DefaultApplicationConfiguration])\ntrait ApplicationConfiguration extends WithLogger {\n\n   def prefix: String\n\n   def configuration: Configuration\n\n   lazy val rootConfig = configuration.get[Configuration](prefix)\n\n   def missingConfiguration(property: String) = throw new IllegalStateException(s\"No configuration for $property\")\n\n   def findConfig(property: String): Option[Configuration] =\n      rootConfig.getOptional[Configuration](property)\n\n   def findString(property: String): Option[String] =\n      rootConfig.getOptional[String](property)\n\n   def findInt(property: String): Option[Int] =\n      rootConfig.getOptional[Int](property)\n\n   def findBoolean(property: String): Option[Boolean] =\n      rootConfig.getOptional[Boolean](property)\n\n   def getConfig(property: String): Configuration =\n      findConfig(property)\n        .getOrElse(missingConfiguration(property))\n\n   def getString(property: String): String =\n      findString(property)\n        .getOrElse(missingConfiguration(property))\n\n   def getInt(property: String): Int =\n      findInt(property)\n        .getOrElse(missingConfiguration(property))\n\n   def getBoolean(property: String): Boolean =\n      findBoolean(property)\n        .getOrElse(missingConfiguration(property))\n\n   def isEnabled(property: String, default: Boolean = false): Boolean =\n      findBoolean(s\"${property}.enabled\")\n        .fold( default )( maybe => maybe )\n\n   def findSubKeys(property: String): Set[String] =\n      findConfig(property).fold[Set[String]](Set())(_.subKeys)\n\n}\n\n@Singleton\nclass DefaultApplicationConfiguration @Inject() (val configuration: Configuration) extends ApplicationConfiguration {\n   override val prefix = \"com.flurdy.valuta\"\n}\n\n\n@ImplementedBy(classOf[DefaultDatabaseConfiguration])\ntrait DatabaseConfiguration extends ApplicationConfiguration {\n\n   def redisUrl: Option[URI] =\n      findString(\"redis.url\").flatMap { urlFound =>\n         Try {\n            new URI(urlFound)\n         }.toOption\n      }\n\n   def redisHost: String =\n      redisUrl.map( _.getHost )\n              .orElse( findString(\"redis.host\") )\n              .getOrElse( throw new IllegalStateException(\"No redis host configured\"))\n\n   def redisPort: Int =\n      redisUrl.map( _.getPort )\n              .orElse( findInt(\"redis.port\") )\n              .getOrElse( throw new IllegalStateException(\"No redis port configured\"))\n\n   private def redisUrlAuth(uri: URI): Option[(String,String)] =\n      Option(uri.getUserInfo)\n        .flatMap{ userInfo =>\n            userInfo.split(\":\").toList match {\n               case user :: pw :: _ => Some(user,pw)\n               case _ => None\n            }\n         }\n\n   def redisUser: Option[String] =\n      redisUrl.fold{\n            findString(\"redis.user\")\n         }( redisUrlAuth(_).map(_._1) )\n\n   def redisPassword: Option[String] =\n      redisUrl.fold{\n            findString(\"redis.password\")\n         }( redisUrlAuth(_).map(_._2) )\n}\n\n\n@Singleton\nclass DefaultDatabaseConfiguration @Inject() (val configuration: Configuration)\nextends DatabaseConfiguration {\n   override val prefix = \"database\"\n}\n\n\n@ImplementedBy(classOf[DefaultApiProviderConfiguration])\ntrait ApiProviderConfiguration extends WithLogger {\n\n   def appConfig: ApplicationConfiguration\n\n   lazy val providerConfig: ApplicationConfiguration =\n      if( appConfig.isEnabled(\"provider.cryptowatch\") )\n         new ApplicationConfiguration {\n            val prefix = \"provider.cryptowatch.pair\"\n            val configuration = appConfig.rootConfig\n         }\n      else\n         throw new IllegalStateException(\n            s\"Configuration missing or disabled for provider.cryptowatch\")\n\n   def fixerIoApiKey: Option[String] = appConfig.findString(\"provider.fixerio.apikey\")\n\n   private def toDividenProperty(dividen: Currency) = s\"${dividen.entryName.toLowerCase}\"\n\n   private def toPairProperty(pair: RatePair) =\n       s\"${toDividenProperty(pair.dividen)}.${pair.divisor.entryName.toLowerCase}\"\n\n   private def toSourceProperty(pair: RatePair, source: RateSource) =\n       s\"${toPairProperty(pair)}.source.${source.entryName.toLowerCase}\"\n\n   private def isDividenEnabled(dividen: Currency) =\n      providerConfig.isEnabled(toDividenProperty(dividen))\n\n   private def isPairEnabled(pair: RatePair) = providerConfig.isEnabled(toPairProperty(pair))\n\n   private def isSourceEnabled(pair: RatePair, source: RateSource) =\n      providerConfig.isEnabled(toSourceProperty(pair, source))\n\n   def findSources(pair: RatePair): List[RateSource] =\n      providerConfig.findSubKeys(s\"${toPairProperty(pair)}.source\")\n                   .toList\n                   .map( source => RateSource.withNameOption(source.toLowerCase) )\n                   .flatten\n                   .filter( source => isSourceEnabled(pair, source) )\n\n   private def hasSources(pair: RatePair) =! findSources(pair).isEmpty\n\n   def findRateUrl(pair: RatePair): Option[RatePairSource] =\n      if( isDividenEnabled(pair.dividen)\n         && isPairEnabled(pair)\n            && hasSources(pair) ){\n               val source = findSources(pair).head\n               providerConfig.findString(s\"${toSourceProperty(pair, source)}.url\")\n                            .map( RatePairSource( source, pair, _) )\n     } else None\n\n   def findDivisors(dividen: Currency): List[Currency] = {\n      if( isDividenEnabled(dividen) ){\n         providerConfig.findSubKeys(toDividenProperty(dividen))\n              .toList\n              .filter( _!= \"enabled\" )\n              .map( divisor => Currency.withNameOption(divisor.toUpperCase) )\n              .flatten\n              .filter( divisor => isPairEnabled(RatePair(dividen,divisor)) )\n      } else {\n         // logger.warn(s\"No dividen config or disabled for $dividen\")\n         List()\n      }\n   }\n\n   def findDivisorsWithSources(dividen: Currency): List[Currency] =\n      findDivisors(dividen)\n        .filter(divisor =>\n            hasSources( RatePair(dividen, divisor) ) )\n\n}\n\n@Singleton\nclass DefaultApiProviderConfiguration @Inject() (val appConfig: ApplicationConfiguration) extends ApiProviderConfiguration\n\n\nsealed abstract class FeatureToggle extends EnumEntry with Lowercase\n\ncase object FeatureToggle extends PlayEnum[FeatureToggle]{\n   val values = findValues\n   case object EnterRate extends FeatureToggle\n}\n\n@ImplementedBy(classOf[DefaultFeatureToggles])\ntrait FeatureToggles {\n\n   def appConfig: ApplicationConfiguration\n\n   def isEnabled(feature: FeatureToggle) = appConfig.isEnabled(s\"feature.${feature.entryName.toLowerCase}\")\n\n}\n\n@Singleton\nclass DefaultFeatureToggles @Inject() (val appConfig: ApplicationConfiguration) extends FeatureToggles\n",
  "# BombSquad\nA penny-arcade bomb-defusal game inspired by Keep Talking and Nobody Explodes for Elecanisms 2018\n",
  "/****************************************************/\r\n/* breeze Engine Scene Module  (c) Tobias Zirr 2011 */\r\n/****************************************************/\r\n\r\n#pragma once\r\n#ifndef BE_SCENE_RENDERABLE_EFFECT_DRIVER_CACHE\r\n#define BE_SCENE_RENDERABLE_EFFECT_DRIVER_CACHE\r\n\r\n#include \"beScene.h\"\r\n#include \"beGenericEffectDriverCache.h\"\r\n#include \"beAbstractRenderableEffectDriver.h\"\r\n\r\nnamespace beScene\r\n{\r\n\r\n// Prototypes\r\nclass RenderingPipeline;\r\nclass PerspectiveEffectBinderPool;\r\n\r\n/// Effect binder cache implementation.\r\nclass RenderableEffectDriverCache : public DefaultEffectDriverCache<AbstractRenderableEffectDriver>\r\n{\r\nprotected:\r\n\tRenderingPipeline *const m_pipeline;\t\t///< Rendering pipeline.\r\n\tPerspectiveEffectBinderPool *const m_pool;\t///< Effect binder pool.\r\n\r\n\t/// Creates an effect binder from the given effect.\r\n\tBE_SCENE_API lean::resource_ptr<EffectDriver, lean::critical_ref> CreateEffectBinder(const beGraphics::Technique &technique, uint4 flags) const;\r\n\r\npublic:\r\n\t/// Constructor.\r\n\tBE_SCENE_API RenderableEffectDriverCache(RenderingPipeline *pipeline, PerspectiveEffectBinderPool *pool)\r\n\t\t: m_pipeline( LEAN_ASSERT_NOT_NULL(pipeline) ),\r\n\t\tm_pool( LEAN_ASSERT_NOT_NULL(pool) ) { }\r\n\t/// Destructor.\r\n\tBE_SCENE_API ~RenderableEffectDriverCache() { }\r\n};\r\n\r\n} // namespace\r\n\r\n#endif",
  "<?php\n\ndeclare(strict_types=1);\n\nnamespace Spiral\\RoadRunnerBridge\\Queue;\n\nuse Psr\\Container\\ContainerExceptionInterface;\nuse Psr\\Container\\ContainerInterface;\nuse Spiral\\Boot\\DispatcherInterface;\nuse Spiral\\Boot\\FinalizerInterface;\nuse Spiral\\Queue\\HandlerRegistryInterface;\nuse Spiral\\RoadRunner\\Environment\\Mode;\nuse Spiral\\RoadRunner\\EnvironmentInterface;\nuse Spiral\\RoadRunner\\Jobs\\ConsumerInterface;\nuse Spiral\\RoadRunner\\Jobs\\Task\\ReceivedTaskInterface;\nuse Spiral\\Queue\\Failed\\FailedJobHandlerInterface;\n\nfinal class Dispatcher implements DispatcherInterface\n{\n    private EnvironmentInterface $env;\n    private ContainerInterface $container;\n    private FinalizerInterface $finalizer;\n\n    public function __construct(\n        ContainerInterface $container,\n        FinalizerInterface $finalizer,\n        EnvironmentInterface $env\n    ) {\n        $this->env = $env;\n        $this->container = $container;\n        $this->finalizer = $finalizer;\n    }\n\n    public function canServe(): bool\n    {\n        return \\PHP_SAPI == 'cli' && $this->env->getMode() === Mode::MODE_JOBS;\n    }\n\n    /**\n     * @throws \\Spiral\\RoadRunner\\Jobs\\Exception\\JobsException\n     */\n    public function serve()\n    {\n        /** @var ConsumerInterface $consumer */\n        $consumer = $this->container->get(ConsumerInterface::class);\n\n        /** @var HandlerRegistryInterface $handlerRegistry */\n        $handlerRegistry = $this->container->get(HandlerRegistryInterface::class);\n\n        while ($task = $consumer->waitTask()) {\n            try {\n                $instance = $handlerRegistry->getHandler($task->getName());\n\n                $instance->handle($task->getName(), $task->getId(), $task->getPayload());\n                $task->complete();\n            } catch (\\Throwable $e) {\n                $this->handleException($task, $e);\n                $task->fail($e);\n            }\n\n            $this->finalizer->finalize(false);\n        }\n    }\n\n    protected function handleException(?ReceivedTaskInterface $task, \\Throwable $e): void\n    {\n        try {\n            $this->container->get(FailedJobHandlerInterface::class)->handle(\n                'roadrunner',\n                $task->getQueue(),\n                $task->getName(),\n                $task->getPayload(),\n                $e\n            );\n        } catch (\\Throwable|ContainerExceptionInterface $se) {\n            // no need to notify when unable to register an exception\n        }\n    }\n}\n",
  "package com.example.android.sunshine.app.test;\n\nimport junit.framework.TestCase;\n\n/**\n * Created by rmcg2 on 26/08/2016.\n */\npublic class WeatherDataParserTest extends TestCase {\n\n    public void setUp() throws Exception {\n        super.setUp();\n\n    }\n\n    public void tearDown() throws Exception {\n\n    }\n\n    public void testGetMaxTemperatureForDay() throws Exception {\n\n    }\n}",
  "FROM centos:7.3.1611\n\nRUN yum update -y && \\\n    yum install -y openssh-server && \\\n    yum install -y wget && \\\n    yum install -y rsyslog && \\\n    yum install -y make && \\\n    yum install -y gcc && \\\n    yum install -y pam-devel\n\nWORKDIR /tmp\n\nRUN wget https://storage.googleapis.com/golang/go1.8.1.linux-amd64.tar.gz && \\\n    tar -C /usr/local -xzf go1.8.1.linux-amd64.tar.gz && \\\n    ln -s /usr/local/go/bin/go /usr/sbin/go\n\nRUN /usr/bin/ssh-keygen -A\n\nCOPY src/ /tmp/pam-src/\n\nWORKDIR /tmp/pam-src\n\nRUN make -f /tmp/pam-src/Makefile && \\\n    cp pam_custom.so /lib64/security/pam_custom.so && \\\n    chmod 755 /lib64/security/pam_custom.so && \\\n    cp /etc/pam.d/sshd /etc/pam.d/sshd.BAK\n\nCOPY pamd/sshd_centos /etc/pam.d/sshd\n\nEXPOSE 22\n\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n",
  "<?php\n/**\n * PHP class to add an OAI-PMH provider interface to a Solr web endpoint.\n *\n * OAI-PMH requests are translated to SOLR queries. It makes use of the SOLR\n * XSLT Response Writer in combination with the metadataPRefix to retrieve\n * the records in the correct format.\n *\n * @version 0.2\n * @author Wim Muskee <wimmuskee@gmail.com>\n *\n * This class does not support sets.\n * \n *\n * Copyright 2014-2015 Stichting Kennisnet\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n*/\n\ndate_default_timezone_set('UTC');\n\nclass SolrOai {\n\t# request\n\tprivate $verb = \"\";\n\tprivate $metadataprefix = \"\";\n\tprivate $from = \"\";\n\tprivate $fromts = \"\";\n\tprivate $identifier = \"\";\n\n\t# config\n\tprivate $scriptpath = \"\";\n\tprivate $solrurl = \"\";\n\tprivate $identify = \"\";\n\tprivate $metadataprefixes = array();\n\tprivate $debug = true;\n\tprivate $pagesize = 0;\n\n\t# error during process\n\tprivate $error = false;\n\t# actual responsedate\n\tprivate $responsedate = \"\";\n\t# server response simplexml document\n\tprivate $xml = \"\";\n\t# amount of records in response\n\tprivate $recordcount = 0;\n\t# position in response\n\tprivate $cursor = 0;\n\n\n\tpublic function __construct() {\n\t\theader('Content-type: text/xml');\n\t\t$this->setConfig();\n\t\t$this->responsedate = date(\"Y-m-d\\TH:i:s\\Z\");\n\n\t\t# catch input\n\t\tif ( array_key_exists( \"verb\", $_GET ) ) {\n\t\t\t$this->verb = $_GET[\"verb\"];\n\t\t}\n\t\telse {\n\t\t\t$this->error(\"badArgument\");\n\t\t}\n\n\t\t# setting from, cursor and prefix,\n\t\t# either from resumptiontoken or first explicit request\n\t\tif ( array_key_exists( \"resumptionToken\", $_GET) ) {\n\t\t\tif ( substr_count( $_GET[\"resumptionToken\"], \"|\")!= 2 ) {\n\t\t\t\t$this->error(\"badResumptionToken\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$tokenarr = explode( \"|\", $_GET[\"resumptionToken\"] );\n\t\t\t\t$this->cursor = $tokenarr[0];\n\t\t\t\t$this->metadataprefix = $tokenarr[1];\n\t\t\t\t$this->fromts = $tokenarr[2];\n\t\t\t\t$date = date_parse_from_format( \"Y-m-d\\TH:i:s\\Z\", $this->fromts );\n\t\t\t\t$this->from = mktime( $date[\"hour\"], $date[\"minute\"], $date[\"second\"], $date[\"month\"], $date[\"day\"], $date[\"year\"] );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif ( array_key_exists( \"metadataPrefix\", $_GET) ) {\n\t\t\t\tif ( array_key_exists( $_GET[\"metadataPrefix\"], $this->metadataprefixes ) ) {\n\t\t\t\t\t$this->metadataprefix = $_GET[\"metadataPrefix\"];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$this->error(\"cannotDisseminateFormat\");\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t# handle two types of from request, always send out a long request to solr\n\t\t\tif ( array_key_exists( \"from\", $_GET ) ) {\n\t\t\t\tif ( strlen( $_GET[\"from\"] ) == 10 ) {\n\t\t\t\t\t$datetime = date_parse_from_format( \"Y-m-d\", $_GET[\"from\"] );\n\t\t\t\t\tif ( $datetime[\"warning_count\"] > 0 || $datetime[\"error_count\"] > 0 ) {\n\t\t\t\t\t\t$this->error(\"badArgument\");\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$this->from = $_GET[\"from\"].\"T00:00:00Z\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telseif ( strlen( $_GET[\"from\"] ) == 20 ) {\n\t\t\t\t\t$datetime = date_parse_from_format( \"Y-m-d\\TH:i:s\\Z\", $_GET[\"from\"] );\n\t\t\t\t\tif ( $datetime[\"warning_count\"] > 0 || $datetime[\"error_count\"] > 0 ) {\n\t\t\t\t\t\t$this->error(\"badArgument\");\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$this->from = $_GET[\"from\"];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$this->error(\"badArgument\");\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif ( array_key_exists( \"identifier\", $_GET ) ) {\n\t\t\t\t$this->identifier = $_GET[\"identifier\"];\n\t\t\t}\n\t\t\t\n\t\t\tif ( array_key_exists( \"set\", $_GET ) ) {\n\t\t\t\t$this->error(\"noSetHierarchy\");\n\t\t\t}\n\t\t}\n\n\t\tswitch ( $this->verb ) {\n\t\t\tcase \"Identify\": $this->Identify(); break;\n\t\t\tcase \"ListRecords\": $this->ListRecords(); break;\n\t\t\tcase \"ListIdentifiers\": $this->ListIdentifiers(); break;\n\t\t\tcase \"GetRecord\": $this->GetRecord(); break;\n\t\t\tcase \"ListMetadataFormats\": $this->ListMetadataFormats(); break;\n\t\t\tcase \"ListSets\": $this->ListSets(); break;\n\t\t\tdefault:\n\t\t\t\t$this->error(\"badVerb\");\n\t\t}\n\t}\n\t\n\tprivate function Identify() {\n\t\t$this->oaiHeader();\n\t\techo \"<oai:Identify>\";\n\t\techo \"<oai:repositoryName>\".$this->identify[\"name\"].\"</oai:repositoryName>\";\n\t\techo \"<oai:baseURL>\".$this->scriptpath.\"</oai:baseURL>\";\n\t\techo \"<oai:protocolVersion>2.0</oai:protocolVersion>\";\n\t\techo \"<oai:adminEmail>\".$this->identify[\"email\"].\"</oai:adminEmail>\";\n\t\techo \"<oai:earliestDatestamp>\".$this->identify[\"datestamp\"].\"</oai:earliestDatestamp>\";\n\t\techo \"<oai:deletedRecord>\".$this->identify[\"deleted\"].\"</oai:deletedRecord>\";\n\t\techo \"<oai:granularity>\".$this->identify[\"granularity\"].\"</oai:granularity>\";\n\t\techo \"</oai:Identify>\";\n\t\t$this->oaiFooter();\n\t}\n\t\n\tprivate function ListRecords() {\n\t\tif ( empty( $this->metadataprefix ) ) {\n\t\t\t$this->error(\"badArgument\");\n\t\t}\n\n\t\t# change query depending on data\n\t\tif (!empty( $this->from ) ) {\n\t\t\t$this->solrurl = $this->solrurl.\"%20+%20changed:[\".$this->from.\"%20TO%20*]\";\n\t\t}\n\n\t\t# set correct xslt from metadataprefix\n\t\t$this->solrurl = $this->solrurl.\"&wt=xslt&tr=\".$this->metadataprefixes[$this->metadataprefix][\"xslt\"];\n\t\t$this->solrurl = $this->solrurl.\"&start=\".$this->cursor;\n\t\t\n\t\t$this->setXml();\n\t\t$this->setResponseData();\n\t\t\n\t\tif ( $this->recordcount == 0 ) {\n\t\t\t$this->error(\"noRecordsMatch\");\n\t\t}\n\t\t\n\t\t# print response\n\t\t$this->oaiHeader();\n\t\techo \"<oai:ListRecords>\";\n\n\t\tforeach ( $this->getRecordHeaderData() as $key => $header ) {\n\t\t\techo \"<oai:record>\";\n\t\t\techo \"<oai:header>\";\n\t\t\techo \"<oai:identifier>\".$header[0].\"</oai:identifier>\";\n\t\t\techo \"<oai:datestamp>\".$header[1",
  "from rest_framework.permissions import IsAuthenticated\nfrom rest_framework.views import APIView\nfrom rest_framework import filters, viewsets\nfrom rest_framework import generics\nfrom rest_framework import status\nfrom rest_framework.decorators import api_view, permission_classes\nfrom.serializers import RecordWorkProgramSerializer, RecordAcademicPlanSerializer, WorkProgramSerializerForStatistic, \\\n    WorkProgramInFieldOfStudySerializerForStatistic, StructuralUnitWithWpSerializer\n\nfrom rest_framework.response import Response\nfrom rest_framework.permissions import IsAuthenticatedOrReadOnly\nfrom django.db.models.aggregates import Count\nfrom rest_framework.decorators import api_view, permission_classes\nfrom rest_framework.permissions import AllowAny\nfrom rest_framework.response import Response\nfrom dataprocessing.models import User\nfrom workprogramsapp.expertise.models import Expertise\nfrom workprogramsapp.models import WorkProgram, EducationalProgram, WorkProgramInFieldOfStudy, AcademicPlan, \\\n    DisciplineBlock, \\\n    DisciplineBlockModule, WorkProgramChangeInDisciplineBlockModule, ImplementationAcademicPlan, FieldOfStudy, \\\n    \u0421ertificationEvaluationTool\nfrom.serializers import WorkProgramInFieldOfStudySerializerForStatistic, \\\n    WorkProgramSerializerForStatistic, SuperShortWorkProgramSerializer, WorkProgramSerializerForStatisticExtended, \\\n    ShortStructuralUnitSerializer, ShortAcademicPlan, AcademicPlansDescriptionWpSerializer\nfrom workprogramsapp.workprogram_additions.models import StructuralUnit\n\n\n@api_view(['GET'])\n@permission_classes((AllowAny,))\ndef StructuralUnits(request):\n    \"\"\"\n    API-\u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u043d\u044b\u0445 \u043f\u043e\u0434\u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u0439\n    \"\"\"\n    su = StructuralUnit.objects.all()\n\n    results = []\n    for i in su:\n        results.append({'value': i.id, 'label': i.title})\n\n    return Response(results)\n\n\n@api_view(['GET'])\n@permission_classes((AllowAny,))\ndef AcademicPlans(request):\n    \"\"\"\n    API-\u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0423\u041f\n    \"\"\"\n\n    ap = AcademicPlan.objects.all()\n\n    results = []\n    for i in ap:\n        results.append({'value': i.id, 'label': i.educational_profile + \" \" + i.year})\n\n    return Response(results)\n\n\nclass OneAcademicPlanWithDescriptionWp(generics.RetrieveAPIView):\n    \"\"\"\n    \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u0443\u0447\u0435\u0431\u043d\u043e\u0433\u043e \u043f\u043b\u0430\u043d\u0430 \u043f\u043e \u0435\u0433\u043e id \u0441\u043e \u0432\u0441\u0435\u043c\u0438 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f\u043c\u0438 \u0420\u041f\u0414\n    \"\"\"\n    queryset = AcademicPlan.objects.all()\n    serializer_class = AcademicPlansDescriptionWpSerializer\n    permission_classes = [AllowAny]\n\n\nclass RecordOfWorkProgram(APIView):\n    # \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0430\u0431\u043e\u0447\u0438\u0445 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c \u043f\u043e \u043a\u0432\u0430\u043b\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438\n    permission_classes = [AllowAny]\n\n    def get(self, request, qualification):\n        queryset = WorkProgram.objects.all()\n        if qualification!= 'all_q':\n            queryset = queryset.filter(qualification=qualification)\n        return Response({\"quantity\": len(queryset)})\n\n\nclass RecordOfWorkProgramQuality(APIView):\n    \"\"\"\n    \u0421\u043a\u043e\u043b\u044c\u043a\u043e \u0420\u041f\u0414 \u0438\u043c\u0435\u044e\u0442 \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440\u043e\u0432, \u0432 \u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0420\u041f\u0414 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u044b \u0440\u0430\u0437\u0434\u0435\u043b\u044b, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0420\u041f\u0414 \u0431\u0435\u0437 \u043f\u0440\u0435\u0440\u0435\u043a\u0432\u0438\u0437\u0438\u0442\u043e\u0432.\n    \u0421\u043a\u043e\u043b\u044c\u043a\u043e \u0420\u041f\u0414 \u043d\u0435 \u043f\u0440\u0438\u0432\u044f\u0437\u0430\u043d\u044b \u043a \u0443\u0447\u0435\u0431\u043d\u043e\u043c\u0443 \u043f\u043b\u0430\u043d\u0443, \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d \u044f\u0437\u044b\u043a \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438, \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u043d\u043e\u0435 \u043f\u043e\u0434\u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u0435\n    \"\"\"\n    permission_classes = [AllowAny]\n\n    def get(self, request):\n        queryset = WorkProgram.objects.all()\n        without_language = queryset.filter(language=None)\n        without_editors = queryset.filter(editors=None)\n        without_structural_unit = queryset.filter(structural_unit=None)\n        without_prerequisites = queryset.filter(prerequisites=None)\n        without_discipline_sections = queryset.filter(discipline_sections=None)\n        without_academic_plan = queryset.filter(work_program_in_change_block=None)\n        without_outcomes = queryset.filter(outcomes=None)\n        # serializer = RecordWorkProgramSerializer(queryset, many=True)\n\n        return Response({\"all\": len(queryset),\n                         \"without_language\": len(without_language),\n                         \"without_editors\": len(without_editors),\n                         \"without_structural_unit\": len(without_structural_unit),\n                         \"without_prerequisites\": len(without_prerequisites),\n                         \"without_discipline_sections\": len(without_discipline_sections),\n                         \"without_academic_plan\": len(without_academic_plan),\n                         \"without_outcomes\": len(without_outcomes)})\n\n\nclass RecordOfAcademicPlan(APIView):\n    # \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u0447\u0435\u0431\u043d\u044b\u0445 \u043f\u043b\u0430\u043d\u043e\u0432 \u043f\u043e \u043a\u0432\u0430\u043b\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0438 \u0433\u043e\u0434\u0443\n    permission_classes = [AllowAny]\n\n    def get(self, request, qualification, year):\n        queryset = AcademicPlan.objects.all()\n        if qualification!= 'all_q':\n            queryset = queryset.filter(qualification=qualification)\n        if year!= 'all_years':\n            queryset = queryset.filter(year=year)\n        return Response({\"quantity\": len(queryset)})\n\n\n@api_view(['GET'])\n@permission_classes((AllowAny,))\ndef EmptyStringWp(request):\n    \"\"\"\n    API-\u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0420\u041f\u0414, \u0431\u0435\u0437 id \u0441\u0442\u0440\u043e\u043a\u0438\n    \"\"\"\n    empty_wp = (WorkProgramInFieldOfStudy.objects.filter(work_program__editors__isnull=False,\n                                                         id_str_up__isnull=True)).distinct()\n    serializer = WorkProgramInFieldOfStudySerializerForStatistic(empty_wp, many=True)\n    return Response(serializer.data)\n\n\n@api_view(['GET'])\n@permission_classes((AllowAny,))\ndef WpWithoutAP(request):\n    \"\"\"\n    API-\u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0420\u041f\u0414, \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435\u0442\u0443 \u0432 \u0423\u041f\n    \"\"\"\n    empty_wp = (WorkProgram.objects.filter(zuns_for_wp=None,\n                                           editors__isnull=False)).distinct()\n    serializer = WorkProgramSerializerForStatistic(empty_wp, many=True)\n    return Response(serializer.data)\n\n\n@api_view(['GET'])\n@permission_classes((AllowAny,))\ndef WpWithSimilarCode(request):\n    \"\"\"\n    API-\u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0420\u041f\u0414 \u0441 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u043c \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d \u043a\u043e\u0434\u043e\u043c\n    \"\"\"\n    wp_counter_code = WorkProgram.objects.all().values('discipline_code').annotate(\n        total=Count('discipline_code')).filter(total__gt=1)\n    print(wp_counter_code)\n    similar_codes = []\n    for wp in wp_counter_code:\n        similar_codes.append(wp['discipline_code'])\n    similar_wp = WorkProgram.objects.filter(discipline_code__in=similar_codes).order_by(\"discipline_code\")\n    serializer = WorkProgramSerializerForStatistic(similar_wp, many=True)\n    return Response(serializer.data)\n\n\n@api_view(['GET'])\n@permission_classes((AllowAny,))\ndef SimpleStatistic(request):\n    \"\"\"\n    API-\u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u043e\u0439 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438 \u043f\u043e \u0420\u041f\u0414 \u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\n    \"\"\"\n    registered_users = User.objects.count()\n    rpd_users = User.objects.filter(editors__isnull=False).distinct().count()\n    on_expertise = Expertise.objects.filter(expertise_status=\"EX\").count()\n    approved = Expertise.objects.filter(expertise_status=\"AC\").count()\n    in_work = Expertise.objects.filter(expertise_status=\"WK\").count() + WorkProgram.objects.filter(\n        expertise_with_rpd__isnull=True).distinct().count()\n    editors_rpd = WorkProgram.objects.filter(editors__isnull=",
  "dofile(\"hello.lua\")\n\n--https://pt.stackoverflow.com/q/165286/101\n",
  "<?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Auth\\Authenticatable;\nuse Illuminate\\Contracts\\Auth\\Access\\Authorizable as AuthorizableContract;\nuse Illuminate\\Contracts\\Auth\\Authenticatable as AuthenticatableContract;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Illuminate\\Database\\Eloquent\\SoftDeletes;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Laravel\\Lumen\\Auth\\Authorizable;\n\nclass Sala extends Model implements AuthenticatableContract, AuthorizableContract\n{\n    use Authenticatable, Authorizable, HasFactory,SoftDeletes;\n\n    /**\n     * The attributes that are mass assignable.\n     *\n     * @var array\n     */\n    protected $fillable = [\n        'nombresala','sedeid','direccionip'\n    ];  \n\n    /**\n     * The attributes excluded from the model's JSON form.\n     *\n     * @var array\n     */\n    protected $hidden = [\n        '',\n    ];\n\n    \n}\n",
  "# Copyright 2015 Pants project contributors (see CONTRIBUTORS.md).\n# Licensed under the Apache License, Version 2.0 (see LICENSE).\n\nimport logging\nimport os\nimport warnings\nfrom dataclasses import dataclass\nfrom typing import List, Mapping\n\nfrom pants.base.exception_sink import ExceptionSink\nfrom pants.base.exiter import ExitCode\nfrom pants.bin.remote_pants_runner import RemotePantsRunner\nfrom pants.init.logging import setup_logging\nfrom pants.init.util import init_workdir\nfrom pants.option.option_value_container import OptionValueContainer\nfrom pants.option.options_bootstrapper import OptionsBootstrapper\n\nlogger = logging.getLogger(__name__)\n\n\n@dataclass(frozen=True)\nclass PantsRunner:\n    \"\"\"A higher-level runner that delegates runs to either a LocalPantsRunner or\n    RemotePantsRunner.\"\"\"\n\n    args: List[str]\n    env: Mapping[str, str]\n\n    # This could be a bootstrap option, but it's preferable to keep these very limited to make it\n    # easier to make the daemon the default use case. Once the daemon lifecycle is stable enough we\n    # should be able to avoid needing to kill it at all.\n    def will_terminate_pantsd(self) -> bool:\n        _DAEMON_KILLING_GOALS = frozenset([\"kill-pantsd\", \"clean-all\"])\n        return not frozenset(self.args).isdisjoint(_DAEMON_KILLING_GOALS)\n\n    def _should_run_with_pantsd(self, global_bootstrap_options: OptionValueContainer) -> bool:\n        terminate_pantsd = self.will_terminate_pantsd()\n\n        if terminate_pantsd:\n            logger.debug(f\"Pantsd terminating goal detected: {self.args}\")\n\n        # If we want concurrent pants runs, we can't have pantsd enabled.\n        return (\n            global_bootstrap_options.pantsd\n            and not terminate_pantsd\n            and not global_bootstrap_options.concurrent\n        )\n\n    @staticmethod\n    def scrub_pythonpath() -> None:\n        # Do not propagate any PYTHONPATH that happens to have been set in our environment\n        # to our subprocesses.\n        # Note that don't warn (but still scrub) if RUNNING_PANTS_FROM_SOURCES is set. This allows\n        # scripts that run pants directly from sources, and therefore must set PYTHONPATH, to mute\n        # this warning.\n        pythonpath = os.environ.pop(\"PYTHONPATH\", None)\n        if pythonpath and not os.environ.pop(\"RUNNING_PANTS_FROM_SOURCES\", None):\n            logger.debug(f\"Scrubbed PYTHONPATH={pythonpath} from the environment.\")\n\n    def run(self, start_time: float) -> ExitCode:\n        self.scrub_pythonpath()\n\n        options_bootstrapper = OptionsBootstrapper.create(\n            env=self.env, args=self.args, allow_pantsrc=True\n        )\n        with warnings.catch_warnings(record=True):\n            bootstrap_options = options_bootstrapper.bootstrap_options\n            global_bootstrap_options = bootstrap_options.for_global_scope()\n\n        # We enable logging here, and everything before it will be routed through regular\n        # Python logging.\n        setup_logging(global_bootstrap_options, stderr_logging=True)\n\n        if self._should_run_with_pantsd(global_bootstrap_options):\n            try:\n                remote_runner = RemotePantsRunner(self.args, self.env, options_bootstrapper)\n                return remote_runner.run()\n            except RemotePantsRunner.Fallback as e:\n                logger.warning(f\"Client exception: {e!r}, falling back to non-daemon mode\")\n\n        # N.B. Inlining this import speeds up the python thin client run by about 100ms.\n        from pants.bin.local_pants_runner import LocalPantsRunner\n\n        # We only install signal handling via ExceptionSink if the run will execute in this process.\n        ExceptionSink.install(\n            log_location=init_workdir(global_bootstrap_options), pantsd_instance=False\n        )\n        runner = LocalPantsRunner.create(env=self.env, options_bootstrapper=options_bootstrapper)\n        return runner.run(start_time)\n",
  "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nuse app_units::Au;\nuse std::sync::Arc;\nuse style::custom_properties::ComputedValuesMap;\nuse style::logical_geometry::WritingMode;\nuse style::properties::{CascadePropertyFn, ServoComputedValues, TComputedValues};\nuse style::properties::longhands;\nuse style::properties::style_struct_traits::*;\n\n#[derive(Clone)]\npub struct GeckoComputedValues {\n    % for style_struct in STYLE_STRUCTS:\n    ${style_struct.ident}: Arc<Gecko${style_struct.name}>,\n    % endfor\n\n    custom_properties: Option<Arc<ComputedValuesMap>>,\n    shareable: bool,\n    pub writing_mode: WritingMode,\n    pub root_font_size: Au,\n}\n\nimpl TComputedValues for GeckoComputedValues {\n% for style_struct in STYLE_STRUCTS:\n    type Concrete${style_struct.name} = Gecko${style_struct.name};\n% endfor\n\n    // These will go away, and we will never implement them.\n    fn as_servo<'a>(&'a self) -> &'a ServoComputedValues { unimplemented!() }\n    fn as_servo_mut<'a>(&'a mut self) -> &'a mut ServoComputedValues { unimplemented!() }\n\n    fn new(custom_properties: Option<Arc<ComputedValuesMap>>,\n           shareable: bool,\n           writing_mode: WritingMode,\n           root_font_size: Au,\n            % for style_struct in STYLE_STRUCTS:\n           ${style_struct.ident}: Arc<Gecko${style_struct.name}>,\n            % endfor\n    ) -> Self {\n        GeckoComputedValues {\n            custom_properties: custom_properties,\n            shareable: shareable,\n            writing_mode: writing_mode,\n            root_font_size: root_font_size,\n            % for style_struct in STYLE_STRUCTS:\n            ${style_struct.ident}: ${style_struct.ident},\n            % endfor\n        }\n    }\n\n    fn initial_values() -> &'static Self { unimplemented!() }\n\n    fn do_cascade_property<F: FnOnce(&Vec<Option<CascadePropertyFn<Self>>>)>(_: F) {\n        unimplemented!()\n    }\n\n    % for style_struct in STYLE_STRUCTS:\n    #[inline]\n    fn clone_${style_struct.name.lower()}(&self) -> Arc<Self::Concrete${style_struct.name}> {\n        self.${style_struct.ident}.clone()\n    }\n    #[inline]\n    fn get_${style_struct.name.lower()}<'a>(&'a self) -> &'a Self::Concrete${style_struct.name} {\n        &self.${style_struct.ident}\n    }\n    #[inline]\n    fn mutate_${style_struct.name.lower()}<'a>(&'a mut self) -> &'a mut Self::Concrete${style_struct.name} {\n        Arc::make_mut(&mut self.${style_struct.ident})\n    }\n    % endfor\n\n    fn custom_properties(&self) -> Option<Arc<ComputedValuesMap>> { self.custom_properties.as_ref().map(|x| x.clone())}\n    fn root_font_size(&self) -> Au { self.root_font_size }\n    fn set_root_font_size(&mut self, s: Au) { self.root_font_size = s; }\n    fn set_writing_mode(&mut self, mode: WritingMode) { self.writing_mode = mode; }\n\n    #[inline]\n    fn is_multicol(&self) -> bool { unimplemented!() }\n}\n\n% for style_struct in STYLE_STRUCTS:\n#[derive(PartialEq, Clone, HeapSizeOf, Debug)]\npub struct Gecko${style_struct.name};\nimpl T${style_struct.name} for Gecko${style_struct.name} {\n    % for longhand in style_struct.longhands:\n    fn set_${longhand.ident}(&mut self, _: longhands::${longhand.ident}::computed_value::T) {\n        unimplemented!()\n    }\n    fn copy_${longhand.ident}_from(&mut self, _: &Self) {\n        unimplemented!()\n    }\n    % endfor\n    % if style_struct.name == \"Animation\":\n    fn transition_count(&self) -> usize {\n        unimplemented!()\n    }\n    % elif style_struct.name == \"Border\":\n    % for side in [\"top\", \"right\", \"bottom\", \"left\"]:\n    fn border_${side}_is_none_or_hidden_and_has_nonzero_width(&self) -> bool {\n        unimplemented!()\n    }\n    % endfor\n    % elif style_struct.name == \"Box\":\n    fn clone_display(&self) -> longhands::display::computed_value::T {\n        unimplemented!()\n    }\n    fn clone_position(&self) -> longhands::position::computed_value::T {\n        unimplemented!()\n    }\n    fn is_floated(&self) -> bool {\n        unimplemented!()\n    }\n    fn overflow_x_is_visible(&self) -> bool {\n        unimplemented!()\n    }\n    fn overflow_y_is_visible(&self) -> bool {\n        unimplemented!()\n    }\n    % elif style_struct.name == \"Color\":\n    fn clone_color(&self) -> longhands::color::computed_value::T {\n        unimplemented!()\n    }\n    % elif style_struct.name == \"Font\":\n    fn clone_font_size(&self) -> longhands::font_size::computed_value::T {\n        unimplemented!()\n    }\n    fn clone_font_weight(&self) -> longhands::font_weight::computed_value::T {\n        unimplemented!()\n    }\n    fn compute_font_hash(&mut self) {\n        unimplemented!()\n    }\n    % elif style_struct.name == \"InheritedBox\":\n    fn clone_direction(&self) -> longhands::direction::computed_value::T {\n        unimplemented!()\n    }\n    fn clone_writing_mode(&self) -> longhands::writing_mode::computed_value::T {\n        unimplemented!()\n    }\n    fn clone_text_orientation(&self) -> longhands::text_orientation::computed_value::T {\n        unimplemented!()\n    }\n    % elif style_struct.name == \"InheritedText\":\n    fn clone__servo_text_decorations_in_effect(&self) ->\n        longhands::_servo_text_decorations_in_effect::computed_value::T {\n        unimplemented!()\n    }\n    % elif style_struct.name == \"Outline\":\n    fn outline_is_none_or_hidden_and_has_nonzero_width(&self) -> bool {\n        unimplemented!()\n    }\n    % elif style_struct.name == \"Text\":\n    fn has_underline(&self) -> bool {\n        unimplemented!()\n    }\n    fn has_overline(&self) -> bool {\n        unimplemented!()\n    }\n    fn has_line_through(&self) -> bool {\n        unimplemented!()\n    }\n    % endif\n\n}\n\n% endfor\n",
  "import asyncio\nimport discord\nimport discord.ext.commands\nfrom typing import Optional, Awaitable, Protocol, cast\nimport discord_client\nimport plugins\nimport plugins.cogs\nimport util.discord\nimport util.db.kv\nimport util.asyncio\n\nclass KeepvanityConf(Protocol, Awaitable[None]):\n    guild: int\n    vanity: Optional[str]\n\nconf: KeepvanityConf\n\n@plugins.init\nasync def init() -> None:\n    global conf\n    conf = cast(KeepvanityConf, await util.db.kv.load(__name__))\n\n    conf.guild = int(conf.guild)\n    await conf\n\nasync def check_guild_vanity(guild: discord.Guild) -> None:\n    if guild.id!= conf.guild:\n        return\n    try:\n        await guild.vanity_invite()\n    except discord.NotFound:\n        if conf.vanity is not None:\n            await guild.edit(vanity_code=conf.vanity)\n\n@plugins.cogs.cog\nclass KeepVanity(discord.ext.commands.Cog):\n    \"\"\"Restores the guild vanity URL as soon as enough boosts are available\"\"\"\n    @discord.ext.commands.Cog.listener()\n    async def on_ready(self) -> None:\n        for guild in discord_client.client.guilds:\n            await check_guild_vanity(guild)\n\n    @discord.ext.commands.Cog.listener()\n    async def on_message(self, msg: discord.Message) -> None:\n        if msg.type!= discord.MessageType.premium_guild_tier_3:\n            return\n        if msg.guild is None:\n            return\n        await check_guild_vanity(msg.guild)\n\n@plugins.init\nasync def init_check_task() -> None:\n    for guild in discord_client.client.guilds:\n        try:\n            await check_guild_vanity(guild)\n        except (discord.NotFound, discord.Forbidden):\n            pass\n",
  "<?php\n\nnamespace backend\\models\\search;\n\nuse Yii;\nuse yii\\base\\Model;\nuse yii\\data\\ActiveDataProvider;\nuse common\\models\\Currencies;\n\n/**\n * CurrenciesSearch represents the model behind the search form about `common\\models\\Currencies`.\n */\nclass CurrenciesSearch extends Currencies\n{\n    /**\n     * @inheritdoc\n     */\n    public function rules()\n    {\n        return [\n            [['id','status', 'created_at', 'updated_at', 'created_by', 'updated_by'], 'integer'],\n            [['code', 'html_entitry', 'name'],'safe'],\n        ];\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public function scenarios()\n    {\n        // bypass scenarios() implementation in the parent class\n        return Model::scenarios();\n    }\n\n    /**\n     * Creates data provider instance with search query applied\n     *\n     * @param array $params\n     *\n     * @return ActiveDataProvider\n     */\n    public function search($params)\n    {\n        $query = Currencies::find();\n\n        $dataProvider = new ActiveDataProvider([\n            'query' => $query,\n        ]);\n\n        if (!($this->load($params) && $this->validate())) {\n            return $dataProvider;\n        }\n\n        $query->andFilterWhere([\n            'id' => $this->id,\n           'status' => $this->status,\n            'created_at' => $this->created_at,\n            'updated_at' => $this->updated_at,\n            'created_by' => $this->created_by,\n            'updated_by' => $this->updated_by,\n        ]);\n\n        $query->andFilterWhere(['like', 'code', $this->code])\n            ->andFilterWhere(['like', 'html_entitry', $this->html_entitry])\n            ->andFilterWhere(['like', 'name', $this->name]);\n\n        return $dataProvider;\n    }\n}\n",
  "import { TestBed } from '@angular/core/testing';\n\nimport { StaffMustNotBeLoggedInGuard } from './staff-must-not-be-logged-in.guard';\n\ndescribe('StaffMustNotBeLoggedInGuard', () => {\n  let guard: StaffMustNotBeLoggedInGuard;\n\n  beforeEach(() => {\n    TestBed.configureTestingModule({});\n    guard = TestBed.inject(StaffMustNotBeLoggedInGuard);\n  });\n\n  it('should be created', () => {\n    expect(guard).toBeTruthy();\n  });\n});\n"
]
